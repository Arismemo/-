{
  "version": "1",
  "pip_version": "23.1.2",
  "installed": [
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "Babel",
        "version": "2.12.1",
        "summary": "Internationalization utilities",
        "home_page": "https://babel.pocoo.org/",
        "author": "Armin Ronacher",
        "author_email": "armin.ronacher@active-4.com",
        "maintainer": "Aarni Koskela",
        "maintainer_email": "akx@iki.fi",
        "license": "BSD",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Environment :: Web Environment",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: BSD License",
          "Operating System :: OS Independent",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3 :: Only",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Programming Language :: Python :: Implementation :: CPython",
          "Programming Language :: Python :: Implementation :: PyPy",
          "Topic :: Software Development :: Libraries :: Python Modules"
        ],
        "requires_dist": [
          "pytz (>=2015.7) ; python_version < \"3.9\""
        ],
        "requires_python": ">=3.7",
        "project_url": [
          "Source, https://github.com/python-babel/babel"
        ],
        "description": "A collection of tools for internationalizing Python applications.\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/Babel-2.12.1.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "Brotli",
        "version": "1.0.9",
        "platform": [
          "Posix",
          "MacOS X",
          "Windows"
        ],
        "summary": "Python bindings for the Brotli compression library",
        "home_page": "https://github.com/google/brotli",
        "author": "The Brotli Authors",
        "author_email": "UNKNOWN",
        "license": "MIT",
        "classifier": [
          "Development Status :: 4 - Beta",
          "Environment :: Console",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: MIT License",
          "Operating System :: MacOS :: MacOS X",
          "Operating System :: Microsoft :: Windows",
          "Operating System :: POSIX :: Linux",
          "Programming Language :: C",
          "Programming Language :: C++",
          "Programming Language :: Python",
          "Programming Language :: Python :: 2",
          "Programming Language :: Python :: 2.7",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.3",
          "Programming Language :: Python :: 3.4",
          "Programming Language :: Python :: 3.5",
          "Programming Language :: Unix Shell",
          "Topic :: Software Development :: Libraries",
          "Topic :: Software Development :: Libraries :: Python Modules",
          "Topic :: System :: Archiving",
          "Topic :: System :: Archiving :: Compression",
          "Topic :: Text Processing :: Fonts",
          "Topic :: Utilities"
        ],
        "description": "UNKNOWN\n\n\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/Brotli-1.0.9.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "Flask",
        "version": "2.3.2",
        "summary": "A simple framework for building complex web applications.",
        "description_content_type": "text/x-rst",
        "author_email": "Armin Ronacher <armin.ronacher@active-4.com>",
        "maintainer_email": "Pallets <contact@palletsprojects.com>",
        "license": "BSD-3-Clause",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Environment :: Web Environment",
          "Framework :: Flask",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: BSD License",
          "Operating System :: OS Independent",
          "Programming Language :: Python",
          "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
          "Topic :: Internet :: WWW/HTTP :: WSGI",
          "Topic :: Internet :: WWW/HTTP :: WSGI :: Application",
          "Topic :: Software Development :: Libraries :: Application Frameworks"
        ],
        "requires_dist": [
          "Werkzeug (>=2.3.3)",
          "Jinja2 (>=3.1.2)",
          "itsdangerous (>=2.1.2)",
          "click (>=8.1.3)",
          "blinker (>=1.6.2)",
          "importlib-metadata (>=3.6.0) ; python_version < \"3.10\"",
          "asgiref (>=3.2) ; extra == 'async'",
          "python-dotenv ; extra == 'dotenv'"
        ],
        "requires_python": ">=3.8",
        "project_url": [
          "Donate, https://palletsprojects.com/donate",
          "Documentation, https://flask.palletsprojects.com/",
          "Changes, https://flask.palletsprojects.com/changes/",
          "Source Code, https://github.com/pallets/flask/",
          "Issue Tracker, https://github.com/pallets/flask/issues/",
          "Chat, https://discord.gg/pallets"
        ],
        "provides_extra": [
          "async",
          "dotenv"
        ],
        "description": "Flask\n=====\n\nFlask is a lightweight `WSGI`_ web application framework. It is designed\nto make getting started quick and easy, with the ability to scale up to\ncomplex applications. It began as a simple wrapper around `Werkzeug`_\nand `Jinja`_ and has become one of the most popular Python web\napplication frameworks.\n\nFlask offers suggestions, but doesn't enforce any dependencies or\nproject layout. It is up to the developer to choose the tools and\nlibraries they want to use. There are many extensions provided by the\ncommunity that make adding new functionality easy.\n\n.. _WSGI: https://wsgi.readthedocs.io/\n.. _Werkzeug: https://werkzeug.palletsprojects.com/\n.. _Jinja: https://jinja.palletsprojects.com/\n\n\nInstalling\n----------\n\nInstall and update using `pip`_:\n\n.. code-block:: text\n\n    $ pip install -U Flask\n\n.. _pip: https://pip.pypa.io/en/stable/getting-started/\n\n\nA Simple Example\n----------------\n\n.. code-block:: python\n\n    # save this as app.py\n    from flask import Flask\n\n    app = Flask(__name__)\n\n    @app.route(\"/\")\n    def hello():\n        return \"Hello, World!\"\n\n.. code-block:: text\n\n    $ flask run\n      * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)\n\n\nContributing\n------------\n\nFor guidance on setting up a development environment and how to make a\ncontribution to Flask, see the `contributing guidelines`_.\n\n.. _contributing guidelines: https://github.com/pallets/flask/blob/main/CONTRIBUTING.rst\n\n\nDonate\n------\n\nThe Pallets organization develops and supports Flask and the libraries\nit uses. In order to grow the community of contributors and users, and\nallow the maintainers to devote more time to the projects, `please\ndonate today`_.\n\n.. _please donate today: https://palletsprojects.com/donate\n\n\nLinks\n-----\n\n-   Documentation: https://flask.palletsprojects.com/\n-   Changes: https://flask.palletsprojects.com/changes/\n-   PyPI Releases: https://pypi.org/project/Flask/\n-   Source Code: https://github.com/pallets/flask/\n-   Issue Tracker: https://github.com/pallets/flask/issues/\n-   Chat: https://discord.gg/pallets\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/Flask-2.3.2.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "GitPython",
        "version": "3.1.31",
        "platform": [
          "UNKNOWN"
        ],
        "summary": "GitPython is a Python library used to interact with Git repositories",
        "description_content_type": "text/markdown",
        "home_page": "https://github.com/gitpython-developers/GitPython",
        "author": "Sebastian Thiel, Michael Trier",
        "author_email": "byronimo@gmail.com, mtrier@gmail.com",
        "license": "BSD",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Environment :: Console",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: BSD License",
          "Operating System :: OS Independent",
          "Operating System :: POSIX",
          "Operating System :: Microsoft :: Windows",
          "Operating System :: MacOS :: MacOS X",
          "Typing :: Typed",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11"
        ],
        "requires_dist": [
          "gitdb (<5,>=4.0.1)",
          "typing-extensions (>=3.7.4.3) ; python_version < \"3.8\""
        ],
        "requires_python": ">=3.7",
        "description": "GitPython is a Python library used to interact with Git repositories\n\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/GitPython-3.1.31.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "Jinja2",
        "version": "3.1.2",
        "platform": [
          "UNKNOWN"
        ],
        "summary": "A very fast and expressive template engine.",
        "description_content_type": "text/x-rst",
        "home_page": "https://palletsprojects.com/p/jinja/",
        "author": "Armin Ronacher",
        "author_email": "armin.ronacher@active-4.com",
        "maintainer": "Pallets",
        "maintainer_email": "contact@palletsprojects.com",
        "license": "BSD-3-Clause",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Environment :: Web Environment",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: BSD License",
          "Operating System :: OS Independent",
          "Programming Language :: Python",
          "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
          "Topic :: Text Processing :: Markup :: HTML"
        ],
        "requires_dist": [
          "MarkupSafe (>=2.0)",
          "Babel (>=2.7) ; extra == 'i18n'"
        ],
        "requires_python": ">=3.7",
        "project_url": [
          "Donate, https://palletsprojects.com/donate",
          "Documentation, https://jinja.palletsprojects.com/",
          "Changes, https://jinja.palletsprojects.com/changes/",
          "Source Code, https://github.com/pallets/jinja/",
          "Issue Tracker, https://github.com/pallets/jinja/issues/",
          "Twitter, https://twitter.com/PalletsTeam",
          "Chat, https://discord.gg/pallets"
        ],
        "provides_extra": [
          "i18n"
        ],
        "description": "Jinja\n=====\n\nJinja is a fast, expressive, extensible templating engine. Special\nplaceholders in the template allow writing code similar to Python\nsyntax. Then the template is passed data to render the final document.\n\nIt includes:\n\n-   Template inheritance and inclusion.\n-   Define and import macros within templates.\n-   HTML templates can use autoescaping to prevent XSS from untrusted\n    user input.\n-   A sandboxed environment can safely render untrusted templates.\n-   AsyncIO support for generating templates and calling async\n    functions.\n-   I18N support with Babel.\n-   Templates are compiled to optimized Python code just-in-time and\n    cached, or can be compiled ahead-of-time.\n-   Exceptions point to the correct line in templates to make debugging\n    easier.\n-   Extensible filters, tests, functions, and even syntax.\n\nJinja's philosophy is that while application logic belongs in Python if\npossible, it shouldn't make the template designer's job difficult by\nrestricting functionality too much.\n\n\nInstalling\n----------\n\nInstall and update using `pip`_:\n\n.. code-block:: text\n\n    $ pip install -U Jinja2\n\n.. _pip: https://pip.pypa.io/en/stable/getting-started/\n\n\nIn A Nutshell\n-------------\n\n.. code-block:: jinja\n\n    {% extends \"base.html\" %}\n    {% block title %}Members{% endblock %}\n    {% block content %}\n      <ul>\n      {% for user in users %}\n        <li><a href=\"{{ user.url }}\">{{ user.username }}</a></li>\n      {% endfor %}\n      </ul>\n    {% endblock %}\n\n\nDonate\n------\n\nThe Pallets organization develops and supports Jinja and other popular\npackages. In order to grow the community of contributors and users, and\nallow the maintainers to devote more time to the projects, `please\ndonate today`_.\n\n.. _please donate today: https://palletsprojects.com/donate\n\n\nLinks\n-----\n\n-   Documentation: https://jinja.palletsprojects.com/\n-   Changes: https://jinja.palletsprojects.com/changes/\n-   PyPI Releases: https://pypi.org/project/Jinja2/\n-   Source Code: https://github.com/pallets/jinja/\n-   Issue Tracker: https://github.com/pallets/jinja/issues/\n-   Website: https://palletsprojects.com/p/jinja/\n-   Twitter: https://twitter.com/PalletsTeam\n-   Chat: https://discord.gg/pallets\n\n\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/Jinja2-3.1.2.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "Markdown",
        "version": "3.4.3",
        "summary": "Python implementation of John Gruber's Markdown.",
        "description_content_type": "text/markdown",
        "keywords": [
          "markdown",
          "markdown-parser",
          "python-markdown",
          "markdown-to-html"
        ],
        "author": "Manfred Stienstra, Yuri Takhteyev",
        "author_email": "Waylan limberg <python.markdown@gmail.com>",
        "maintainer": "Isaac Muse",
        "maintainer_email": "Waylan Limberg <python.markdown@gmail.com>",
        "license": "Copyright 2007, 2008 The Python Markdown Project (v. 1.7 and later)\n        Copyright 2004, 2005, 2006 Yuri Takhteyev (v. 0.2-1.6b)\n        Copyright 2004 Manfred Stienstra (the original version)\n        \n        All rights reserved.\n        \n        Redistribution and use in source and binary forms, with or without\n        modification, are permitted provided that the following conditions are met:\n        \n        * Redistributions of source code must retain the above copyright\n          notice, this list of conditions and the following disclaimer.\n        * Redistributions in binary form must reproduce the above copyright\n          notice, this list of conditions and the following disclaimer in the\n          documentation and/or other materials provided with the distribution.\n        * Neither the name of the Python Markdown Project nor the\n          names of its contributors may be used to endorse or promote products\n          derived from this software without specific prior written permission.\n        \n        THIS SOFTWARE IS PROVIDED BY THE PYTHON MARKDOWN PROJECT ''AS IS'' AND ANY\n        EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n        WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n        DISCLAIMED. IN NO EVENT SHALL ANY CONTRIBUTORS TO THE PYTHON MARKDOWN PROJECT\n        BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n        CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n        SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n        INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n        CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n        ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n        POSSIBILITY OF SUCH DAMAGE.\n        ",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "License :: OSI Approved :: BSD License",
          "Operating System :: OS Independent",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Programming Language :: Python :: 3 :: Only",
          "Programming Language :: Python :: Implementation :: CPython",
          "Programming Language :: Python :: Implementation :: PyPy",
          "Topic :: Communications :: Email :: Filters",
          "Topic :: Internet :: WWW/HTTP :: Dynamic Content :: CGI Tools/Libraries",
          "Topic :: Internet :: WWW/HTTP :: Site Management",
          "Topic :: Software Development :: Documentation",
          "Topic :: Software Development :: Libraries :: Python Modules",
          "Topic :: Text Processing :: Filters",
          "Topic :: Text Processing :: Markup :: HTML",
          "Topic :: Text Processing :: Markup :: Markdown"
        ],
        "requires_dist": [
          "importlib-metadata (>=4.4) ; python_version < \"3.10\"",
          "coverage ; extra == 'testing'",
          "pyyaml ; extra == 'testing'"
        ],
        "requires_python": ">=3.7",
        "project_url": [
          "Homepage, https://Python-Markdown.github.io/",
          "Documentation, https://Python-Markdown.github.io/",
          "Repository, https://github.com/Python-Markdown/markdown",
          "Issue Tracker, https://github.com/Python-Markdown/markdown/issues",
          "Changelog, https://github.com/Python-Markdown/markdown/blob/master/docs/change_log/index.md"
        ],
        "provides_extra": [
          "testing"
        ],
        "description": "[Python-Markdown][]\n===================\n\n[![Build Status][build-button]][build]\n[![Coverage Status][codecov-button]][codecov]\n[![Latest Version][mdversion-button]][md-pypi]\n[![Python Versions][pyversion-button]][md-pypi]\n[![BSD License][bsdlicense-button]][bsdlicense]\n[![Code of Conduct][codeofconduct-button]][Code of Conduct]\n\n[build-button]: https://github.com/Python-Markdown/markdown/workflows/CI/badge.svg?event=push\n[build]: https://github.com/Python-Markdown/markdown/actions?query=workflow%3ACI+event%3Apush\n[codecov-button]: https://codecov.io/gh/Python-Markdown/markdown/branch/master/graph/badge.svg\n[codecov]: https://codecov.io/gh/Python-Markdown/markdown\n[mdversion-button]: https://img.shields.io/pypi/v/Markdown.svg\n[md-pypi]: https://pypi.org/project/Markdown/\n[pyversion-button]: https://img.shields.io/pypi/pyversions/Markdown.svg\n[bsdlicense-button]: https://img.shields.io/badge/license-BSD-yellow.svg\n[bsdlicense]: https://opensource.org/licenses/BSD-3-Clause\n[codeofconduct-button]: https://img.shields.io/badge/code%20of%20conduct-contributor%20covenant-green.svg?style=flat-square\n[Code of Conduct]: https://github.com/Python-Markdown/markdown/blob/master/CODE_OF_CONDUCT.md\n\nThis is a Python implementation of John Gruber's [Markdown][].\nIt is almost completely compliant with the reference implementation,\nthough there are a few known issues. See [Features][] for information\non what exactly is supported and what is not. Additional features are\nsupported by the [Available Extensions][].\n\n[Python-Markdown]: https://Python-Markdown.github.io/\n[Markdown]: https://daringfireball.net/projects/markdown/\n[Features]: https://Python-Markdown.github.io#Features\n[Available Extensions]: https://Python-Markdown.github.io/extensions\n\nDocumentation\n-------------\n\n```bash\npip install markdown\n```\n```python\nimport markdown\nhtml = markdown.markdown(your_text_string)\n```\n\nFor more advanced [installation] and [usage] documentation, see the `docs/` directory\nof the distribution or the project website at <https://Python-Markdown.github.io/>.\n\n[installation]: https://python-markdown.github.io/install/\n[usage]: https://python-markdown.github.io/reference/\n\nSee the change log at <https://Python-Markdown.github.io/change_log>.\n\nSupport\n-------\n\nYou may report bugs, ask for help, and discuss various other issues on the [bug tracker][].\n\n[bug tracker]: https://github.com/Python-Markdown/markdown/issues\n\nCode of Conduct\n---------------\n\nEveryone interacting in the Python-Markdown project's code bases, issue trackers,\nand mailing lists is expected to follow the [Code of Conduct].\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/Markdown-3.4.3.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "MarkupSafe",
        "version": "2.1.2",
        "summary": "Safely add untrusted strings to HTML/XML markup.",
        "description_content_type": "text/x-rst",
        "home_page": "https://palletsprojects.com/p/markupsafe/",
        "author": "Armin Ronacher",
        "author_email": "armin.ronacher@active-4.com",
        "maintainer": "Pallets",
        "maintainer_email": "contact@palletsprojects.com",
        "license": "BSD-3-Clause",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Environment :: Web Environment",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: BSD License",
          "Operating System :: OS Independent",
          "Programming Language :: Python",
          "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
          "Topic :: Text Processing :: Markup :: HTML"
        ],
        "requires_python": ">=3.7",
        "project_url": [
          "Donate, https://palletsprojects.com/donate",
          "Documentation, https://markupsafe.palletsprojects.com/",
          "Changes, https://markupsafe.palletsprojects.com/changes/",
          "Source Code, https://github.com/pallets/markupsafe/",
          "Issue Tracker, https://github.com/pallets/markupsafe/issues/",
          "Twitter, https://twitter.com/PalletsTeam",
          "Chat, https://discord.gg/pallets"
        ],
        "description": "MarkupSafe\n==========\n\nMarkupSafe implements a text object that escapes characters so it is\nsafe to use in HTML and XML. Characters that have special meanings are\nreplaced so that they display as the actual characters. This mitigates\ninjection attacks, meaning untrusted user input can safely be displayed\non a page.\n\n\nInstalling\n----------\n\nInstall and update using `pip`_:\n\n.. code-block:: text\n\n    pip install -U MarkupSafe\n\n.. _pip: https://pip.pypa.io/en/stable/getting-started/\n\n\nExamples\n--------\n\n.. code-block:: pycon\n\n    >>> from markupsafe import Markup, escape\n\n    >>> # escape replaces special characters and wraps in Markup\n    >>> escape(\"<script>alert(document.cookie);</script>\")\n    Markup('&lt;script&gt;alert(document.cookie);&lt;/script&gt;')\n\n    >>> # wrap in Markup to mark text \"safe\" and prevent escaping\n    >>> Markup(\"<strong>Hello</strong>\")\n    Markup('<strong>hello</strong>')\n\n    >>> escape(Markup(\"<strong>Hello</strong>\"))\n    Markup('<strong>hello</strong>')\n\n    >>> # Markup is a str subclass\n    >>> # methods and operators escape their arguments\n    >>> template = Markup(\"Hello <em>{name}</em>\")\n    >>> template.format(name='\"World\"')\n    Markup('Hello <em>&#34;World&#34;</em>')\n\n\nDonate\n------\n\nThe Pallets organization develops and supports MarkupSafe and other\npopular packages. In order to grow the community of contributors and\nusers, and allow the maintainers to devote more time to the projects,\n`please donate today`_.\n\n.. _please donate today: https://palletsprojects.com/donate\n\n\nLinks\n-----\n\n-   Documentation: https://markupsafe.palletsprojects.com/\n-   Changes: https://markupsafe.palletsprojects.com/changes/\n-   PyPI Releases: https://pypi.org/project/MarkupSafe/\n-   Source Code: https://github.com/pallets/markupsafe/\n-   Issue Tracker: https://github.com/pallets/markupsafe/issues/\n-   Website: https://palletsprojects.com/p/markupsafe/\n-   Twitter: https://twitter.com/PalletsTeam\n-   Chat: https://discord.gg/pallets\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/MarkupSafe-2.1.2.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "Pillow",
        "version": "9.5.0",
        "summary": "Python Imaging Library (Fork)",
        "description_content_type": "text/markdown",
        "keywords": [
          "Imaging"
        ],
        "home_page": "https://python-pillow.org",
        "author": "Jeffrey A. Clark (Alex)",
        "author_email": "aclark@aclark.net",
        "license": "HPND",
        "classifier": [
          "Development Status :: 6 - Mature",
          "License :: OSI Approved :: Historical Permission Notice and Disclaimer (HPND)",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3 :: Only",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Programming Language :: Python :: Implementation :: CPython",
          "Programming Language :: Python :: Implementation :: PyPy",
          "Topic :: Multimedia :: Graphics",
          "Topic :: Multimedia :: Graphics :: Capture :: Digital Camera",
          "Topic :: Multimedia :: Graphics :: Capture :: Screen Capture",
          "Topic :: Multimedia :: Graphics :: Graphics Conversion",
          "Topic :: Multimedia :: Graphics :: Viewers"
        ],
        "requires_dist": [
          "furo ; extra == 'docs'",
          "olefile ; extra == 'docs'",
          "sphinx (>=2.4) ; extra == 'docs'",
          "sphinx-copybutton ; extra == 'docs'",
          "sphinx-inline-tabs ; extra == 'docs'",
          "sphinx-removed-in ; extra == 'docs'",
          "sphinxext-opengraph ; extra == 'docs'",
          "check-manifest ; extra == 'tests'",
          "coverage ; extra == 'tests'",
          "defusedxml ; extra == 'tests'",
          "markdown2 ; extra == 'tests'",
          "olefile ; extra == 'tests'",
          "packaging ; extra == 'tests'",
          "pyroma ; extra == 'tests'",
          "pytest ; extra == 'tests'",
          "pytest-cov ; extra == 'tests'",
          "pytest-timeout ; extra == 'tests'"
        ],
        "requires_python": ">=3.7",
        "project_url": [
          "Documentation, https://pillow.readthedocs.io",
          "Source, https://github.com/python-pillow/Pillow",
          "Funding, https://tidelift.com/subscription/pkg/pypi-pillow?utm_source=pypi-pillow&utm_medium=pypi",
          "Release notes, https://pillow.readthedocs.io/en/stable/releasenotes/index.html",
          "Changelog, https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst",
          "Twitter, https://twitter.com/PythonPillow",
          "Mastodon, https://fosstodon.org/@pillow"
        ],
        "provides_extra": [
          "docs",
          "tests"
        ],
        "description": "<p align=\"center\">\n    <img width=\"248\" height=\"250\" src=\"https://raw.githubusercontent.com/python-pillow/pillow-logo/main/pillow-logo-248x250.png\" alt=\"Pillow logo\">\n</p>\n\n# Pillow\n\n## Python Imaging Library (Fork)\n\nPillow is the friendly PIL fork by [Jeffrey A. Clark (Alex) and\ncontributors](https://github.com/python-pillow/Pillow/graphs/contributors).\nPIL is the Python Imaging Library by Fredrik Lundh and Contributors.\nAs of 2019, Pillow development is\n[supported by Tidelift](https://tidelift.com/subscription/pkg/pypi-pillow?utm_source=pypi-pillow&utm_medium=readme&utm_campaign=enterprise).\n\n<table>\n    <tr>\n        <th>docs</th>\n        <td>\n            <a href=\"https://pillow.readthedocs.io/?badge=latest\"><img\n                alt=\"Documentation Status\"\n                src=\"https://readthedocs.org/projects/pillow/badge/?version=latest\"></a>\n        </td>\n    </tr>\n    <tr>\n        <th>tests</th>\n        <td>\n            <a href=\"https://github.com/python-pillow/Pillow/actions/workflows/lint.yml\"><img\n                alt=\"GitHub Actions build status (Lint)\"\n                src=\"https://github.com/python-pillow/Pillow/workflows/Lint/badge.svg\"></a>\n            <a href=\"https://github.com/python-pillow/Pillow/actions/workflows/test.yml\"><img\n                alt=\"GitHub Actions build status (Test Linux and macOS)\"\n                src=\"https://github.com/python-pillow/Pillow/workflows/Test/badge.svg\"></a>\n            <a href=\"https://github.com/python-pillow/Pillow/actions/workflows/test-windows.yml\"><img\n                alt=\"GitHub Actions build status (Test Windows)\"\n                src=\"https://github.com/python-pillow/Pillow/workflows/Test%20Windows/badge.svg\"></a>\n            <a href=\"https://github.com/python-pillow/Pillow/actions/workflows/test-mingw.yml\"><img\n                alt=\"GitHub Actions build status (Test MinGW)\"\n                src=\"https://github.com/python-pillow/Pillow/workflows/Test%20MinGW/badge.svg\"></a>\n            <a href=\"https://github.com/python-pillow/Pillow/actions/workflows/test-cygwin.yml\"><img\n                alt=\"GitHub Actions build status (Test Cygwin)\"\n                src=\"https://github.com/python-pillow/Pillow/workflows/Test%20Cygwin/badge.svg\"></a>\n            <a href=\"https://github.com/python-pillow/Pillow/actions/workflows/test-docker.yml\"><img\n                alt=\"GitHub Actions build status (Test Docker)\"\n                src=\"https://github.com/python-pillow/Pillow/workflows/Test%20Docker/badge.svg\"></a>\n            <a href=\"https://ci.appveyor.com/project/python-pillow/Pillow\"><img\n                alt=\"AppVeyor CI build status (Windows)\"\n                src=\"https://img.shields.io/appveyor/build/python-pillow/Pillow/main.svg?label=Windows%20build\"></a>\n            <a href=\"https://github.com/python-pillow/pillow-wheels/actions\"><img\n                alt=\"GitHub Actions wheels build status (Wheels)\"\n                src=\"https://github.com/python-pillow/pillow-wheels/workflows/Wheels/badge.svg\"></a>\n            <a href=\"https://app.travis-ci.com/github/python-pillow/pillow-wheels\"><img\n                alt=\"Travis CI wheels build status (aarch64)\"\n                src=\"https://img.shields.io/travis/com/python-pillow/pillow-wheels/main.svg?label=aarch64%20wheels\"></a>\n            <a href=\"https://app.codecov.io/gh/python-pillow/Pillow\"><img\n                alt=\"Code coverage\"\n                src=\"https://codecov.io/gh/python-pillow/Pillow/branch/main/graph/badge.svg\"></a>\n            <a href=\"https://bugs.chromium.org/p/oss-fuzz/issues/list?sort=-opened&can=1&q=proj:pillow\"><img\n                alt=\"Fuzzing Status\"\n                src=\"https://oss-fuzz-build-logs.storage.googleapis.com/badges/pillow.svg\"></a>\n        </td>\n    </tr>\n    <tr>\n        <th>package</th>\n        <td>\n            <a href=\"https://zenodo.org/badge/latestdoi/17549/python-pillow/Pillow\"><img\n                alt=\"Zenodo\"\n                src=\"https://zenodo.org/badge/17549/python-pillow/Pillow.svg\"></a>\n            <a href=\"https://tidelift.com/subscription/pkg/pypi-pillow?utm_source=pypi-pillow&utm_medium=badge\"><img\n                alt=\"Tidelift\"\n                src=\"https://tidelift.com/badges/package/pypi/Pillow?style=flat\"></a>\n            <a href=\"https://pypi.org/project/Pillow/\"><img\n                alt=\"Newest PyPI version\"\n                src=\"https://img.shields.io/pypi/v/pillow.svg\"></a>\n            <a href=\"https://pypi.org/project/Pillow/\"><img\n                alt=\"Number of PyPI downloads\"\n                src=\"https://img.shields.io/pypi/dm/pillow.svg\"></a>\n            <a href=\"https://bestpractices.coreinfrastructure.org/projects/6331\"><img\n                alt=\"OpenSSF Best Practices\"\n                src=\"https://bestpractices.coreinfrastructure.org/projects/6331/badge\"></a>\n        </td>\n    </tr>\n    <tr>\n        <th>social</th>\n        <td>\n            <a href=\"https://gitter.im/python-pillow/Pillow?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge\"><img\n                alt=\"Join the chat at https://gitter.im/python-pillow/Pillow\"\n                src=\"https://badges.gitter.im/python-pillow/Pillow.svg\"></a>\n            <a href=\"https://twitter.com/PythonPillow\"><img\n                alt=\"Follow on https://twitter.com/PythonPillow\"\n                src=\"https://img.shields.io/badge/tweet-on%20Twitter-00aced.svg\"></a>\n            <a href=\"https://fosstodon.org/@pillow\"><img\n                alt=\"Follow on https://fosstodon.org/@pillow\"\n                src=\"https://img.shields.io/badge/publish-on%20Mastodon-595aff.svg\"\n                rel=\"me\"></a>\n        </td>\n    </tr>\n</table>\n\n## Overview\n\nThe Python Imaging Library adds image processing capabilities to your Python interpreter.\n\nThis library provides extensive file format support, an efficient internal representation, and fairly powerful image processing capabilities.\n\nThe core image library is designed for fast access to data stored in a few basic pixel formats. It should provide a solid foundation for a general image processing tool.\n\n## More Information\n\n- [Documentation](https://pillow.readthedocs.io/)\n  - [Installation](https://pillow.readthedocs.io/en/latest/installation.html)\n  - [Handbook](https://pillow.readthedocs.io/en/latest/handbook/index.html)\n- [Contribute](https://github.com/python-pillow/Pillow/blob/main/.github/CONTRIBUTING.md)\n  - [Issues](https://github.com/python-pillow/Pillow/issues)\n  - [Pull requests](https://github.com/python-pillow/Pillow/pulls)\n- [Release notes](https://pillow.readthedocs.io/en/stable/releasenotes/index.html)\n- [Changelog](https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst)\n  - [Pre-fork](https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst#pre-fork)\n\n## Report a Vulnerability\n\nTo report a security vulnerability, please follow the procedure described in the [Tidelift security policy](https://tidelift.com/docs/security).\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/Pillow-9.5.0.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "PyNaCl",
        "version": "1.5.0",
        "platform": [
          "UNKNOWN"
        ],
        "summary": "Python binding to the Networking and Cryptography (NaCl) library",
        "home_page": "https://github.com/pyca/pynacl/",
        "author": "The PyNaCl developers",
        "author_email": "cryptography-dev@python.org",
        "license": "Apache License 2.0",
        "classifier": [
          "Programming Language :: Python :: Implementation :: CPython",
          "Programming Language :: Python :: Implementation :: PyPy",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10"
        ],
        "requires_dist": [
          "cffi (>=1.4.1)",
          "sphinx (>=1.6.5) ; extra == 'docs'",
          "sphinx-rtd-theme ; extra == 'docs'",
          "pytest (!=3.3.0,>=3.2.1) ; extra == 'tests'",
          "hypothesis (>=3.27.0) ; extra == 'tests'"
        ],
        "requires_python": ">=3.6",
        "provides_extra": [
          "docs",
          "tests"
        ],
        "description": "===============================================\nPyNaCl: Python binding to the libsodium library\n===============================================\n\n.. image:: https://img.shields.io/pypi/v/pynacl.svg\n    :target: https://pypi.org/project/PyNaCl/\n    :alt: Latest Version\n\n.. image:: https://codecov.io/github/pyca/pynacl/coverage.svg?branch=main\n    :target: https://codecov.io/github/pyca/pynacl?branch=main\n\n.. image:: https://img.shields.io/pypi/pyversions/pynacl.svg\n    :target: https://pypi.org/project/PyNaCl/\n    :alt: Compatible Python Versions\n\nPyNaCl is a Python binding to `libsodium`_, which is a fork of the\n`Networking and Cryptography library`_. These libraries have a stated goal of\nimproving usability, security and speed. It supports Python 3.6+ as well as\nPyPy 3.\n\n.. _libsodium: https://github.com/jedisct1/libsodium\n.. _Networking and Cryptography library: https://nacl.cr.yp.to/\n\nFeatures\n--------\n\n* Digital signatures\n* Secret-key encryption\n* Public-key encryption\n* Hashing and message authentication\n* Password based key derivation and password hashing\n\n`Changelog`_\n------------\n\n.. _Changelog: https://pynacl.readthedocs.io/en/stable/changelog/\n\nInstallation\n============\n\nBinary wheel install\n--------------------\n\nPyNaCl ships as a binary wheel on macOS, Windows and Linux ``manylinux1`` [#many]_ ,\nso all dependencies are included. Make sure you have an up-to-date pip\nand run:\n\n.. code-block:: console\n\n    $ pip install pynacl\n\nFaster wheel build\n------------------\n\nYou can define the environment variable ``LIBSODIUM_MAKE_ARGS`` to pass arguments to ``make``\nand enable `parallelization`_:\n\n.. code-block:: console\n\n    $ LIBSODIUM_MAKE_ARGS=-j4 pip install pynacl\n\nLinux source build\n------------------\n\nPyNaCl relies on `libsodium`_, a portable C library. A copy is bundled\nwith PyNaCl so to install you can run:\n\n.. code-block:: console\n\n    $ pip install pynacl\n\nIf you'd prefer to use the version of ``libsodium`` provided by your\ndistribution, you can disable the bundled copy during install by running:\n\n.. code-block:: console\n\n    $ SODIUM_INSTALL=system pip install pynacl\n\n.. warning:: Usage of the legacy ``easy_install`` command provided by setuptools\n   is generally discouraged, and is completely unsupported in PyNaCl's case.\n\n.. _parallelization: https://www.gnu.org/software/make/manual/html_node/Parallel.html\n\n.. _libsodium: https://github.com/jedisct1/libsodium\n\n.. [#many] `manylinux1 wheels <https://www.python.org/dev/peps/pep-0513/>`_\n    are built on a baseline linux environment based on Centos 5.11\n    and should work on most x86 and x86_64 glibc based linux environments.\n\nChangelog\n=========\n\n1.5.0 (2022-01-07)\n------------------\n\n* **BACKWARDS INCOMPATIBLE:** Removed support for Python 2.7 and Python 3.5.\n* **BACKWARDS INCOMPATIBLE:** We no longer distribute ``manylinux1``\n  wheels.\n* Added ``manylinux2014``, ``manylinux_2_24``, ``musllinux``, and macOS\n  ``universal2`` wheels (the latter supports macOS ``arm64``).\n* Update ``libsodium`` to 1.0.18-stable (July 25, 2021 release).\n* Add inline type hints.\n\n1.4.0 (2020-05-25)\n------------------\n\n* Update ``libsodium`` to 1.0.18.\n* **BACKWARDS INCOMPATIBLE:** We no longer distribute 32-bit ``manylinux1``\n  wheels. Continuing to produce them was a maintenance burden.\n* Added support for Python 3.8, and removed support for Python 3.4.\n* Add low level bindings for extracting the seed and the public key\n  from crypto_sign_ed25519 secret key\n* Add low level bindings for deterministic random generation.\n* Add ``wheel`` and ``setuptools`` setup_requirements in ``setup.py`` (#485)\n* Fix checks on very slow builders (#481, #495)\n* Add low-level bindings to ed25519 arithmetic functions\n* Update low-level blake2b state implementation\n* Fix wrong short-input behavior of SealedBox.decrypt() (#517)\n* Raise CryptPrefixError exception instead of InvalidkeyError when trying\n  to check a password against a verifier stored in a unknown format (#519)\n* Add support for minimal builds of libsodium. Trying to call functions\n  not available in a minimal build will raise an UnavailableError\n  exception. To compile a minimal build of the bundled libsodium, set\n  the SODIUM_INSTALL_MINIMAL environment variable to any non-empty\n  string (e.g. ``SODIUM_INSTALL_MINIMAL=1``) for setup.\n\n1.3.0 2018-09-26\n----------------\n\n* Added support for Python 3.7.\n* Update ``libsodium`` to 1.0.16.\n* Run and test all code examples in PyNaCl docs through sphinx's\n  doctest builder.\n* Add low-level bindings for chacha20-poly1305 AEAD constructions.\n* Add low-level bindings for the chacha20-poly1305 secretstream constructions.\n* Add low-level bindings for ed25519ph pre-hashed signing construction.\n* Add low-level bindings for constant-time increment and addition\n  on fixed-precision big integers represented as little-endian\n  byte sequences.\n* Add low-level bindings for the ISO/IEC 7816-4 compatible padding API.\n* Add low-level bindings for libsodium's crypto_kx... key exchange\n  construction.\n* Set hypothesis deadline to None in tests/test_pwhash.py to avoid\n  incorrect test failures on slower processor architectures.  GitHub\n  issue #370\n\n1.2.1 - 2017-12-04\n------------------\n\n* Update hypothesis minimum allowed version.\n* Infrastructure: add proper configuration for readthedocs builder\n  runtime environment.\n\n1.2.0 - 2017-11-01\n------------------\n\n* Update ``libsodium`` to 1.0.15.\n* Infrastructure: add jenkins support for automatic build of\n  ``manylinux1`` binary wheels\n* Added support for ``SealedBox`` construction.\n* Added support for ``argon2i`` and ``argon2id`` password hashing constructs\n  and restructured high-level password hashing implementation to expose\n  the same interface for all hashers.\n* Added support for 128 bit ``siphashx24`` variant of ``siphash24``.\n* Added support for ``from_seed`` APIs for X25519 keypair generation.\n* Dropped support for Python 3.3.\n\n1.1.2 - 2017-03-31\n------------------\n\n* reorder link time library search path when using bundled\n  libsodium\n\n1.1.1 - 2017-03-15\n------------------\n\n* Fixed a circular import bug in ``nacl.utils``.\n\n1.1.0 - 2017-03-14\n------------------\n\n* Dropped support for Python 2.6.\n* Added ``shared_key()`` method on ``Box``.\n* You can now pass ``None`` to ``nonce`` when encrypting with ``Box`` or\n  ``SecretBox`` and it will automatically generate a random nonce.\n* Added support for ``siphash24``.\n* Added support for ``blake2b``.\n* Added support for ``scrypt``.\n* Update ``libsodium`` to 1.0.11.\n* Default to the bundled ``libsodium`` when compiling.\n* All raised exceptions are defined mixing-in\n  ``nacl.exceptions.CryptoError``\n\n1.0.1 - 2016-01-24\n------------------\n\n* Fix an issue with absolute paths that prevented the creation of wheels.\n\n1.0 - 2016-01-23\n----------------\n\n* PyNaCl has been ported to use the new APIs available in cffi 1.0+.\n  Due to this change we no longer support PyPy releases older than 2.6.\n* Python 3.2 support has been dropped.\n* Functions to convert between Ed25519 and Curve25519 keys have been added.\n\n0.3.0 - 2015-03-04\n------------------\n\n* The low-level API (`nacl.c.*`) has been changed to match the\n  upstream NaCl C/C++ conventions (as well as those of other NaCl bindings).\n  The order of arguments and return values has changed significantly. To\n  avoid silent failures, `nacl.c` has been removed, and replaced with\n  `nacl.bindings` (with the new argument ordering). If you have code which\n  calls these functions (e.g. `nacl.c.crypto_box_keypair()`), you must review\n  the new docstrings and update your code/imports to match the new\n  conventions.\n\n\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/PyNaCl-1.5.0.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "Pygments",
        "version": "2.15.1",
        "summary": "Pygments is a syntax highlighting package written in Python.",
        "description_content_type": "text/x-rst",
        "keywords": [
          "syntax",
          "highlighting"
        ],
        "author_email": "Georg Brandl <georg@python.org>",
        "maintainer": "Matthäus G. Chajdas",
        "maintainer_email": "Georg Brandl <georg@python.org>, Jean Abou Samra <jean@abou-samra.fr>",
        "license": "BSD-2-Clause",
        "classifier": [
          "Development Status :: 6 - Mature",
          "Intended Audience :: Developers",
          "Intended Audience :: End Users/Desktop",
          "Intended Audience :: System Administrators",
          "License :: OSI Approved :: BSD License",
          "Operating System :: OS Independent",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Programming Language :: Python :: Implementation :: CPython",
          "Programming Language :: Python :: Implementation :: PyPy",
          "Topic :: Text Processing :: Filters",
          "Topic :: Utilities"
        ],
        "requires_dist": [
          "importlib-metadata ; (python_version < \"3.8\") and extra == 'plugins'"
        ],
        "requires_python": ">=3.7",
        "project_url": [
          "Homepage, https://pygments.org",
          "Documentation, https://pygments.org/docs",
          "Source, https://github.com/pygments/pygments",
          "Bug Tracker, https://github.com/pygments/pygments/issues",
          "Changelog, https://github.com/pygments/pygments/blob/master/CHANGES"
        ],
        "provides_extra": [
          "plugins"
        ],
        "description": "Pygments\n~~~~~~~~\n\nPygments is a syntax highlighting package written in Python.\n\nIt is a generic syntax highlighter suitable for use in code hosting, forums,\nwikis or other applications that need to prettify source code.  Highlights\nare:\n\n* a wide range of over 500 languages and other text formats is supported\n* special attention is paid to details, increasing quality by a fair amount\n* support for new languages and formats are added easily\n* a number of output formats, presently HTML, LaTeX, RTF, SVG, all image\n  formats that PIL supports and ANSI sequences\n* it is usable as a command-line tool and as a library\n\nCopyright 2006-2023 by the Pygments team, see ``AUTHORS``.\nLicensed under the BSD, see ``LICENSE`` for details.\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/Pygments-2.15.1.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "Pympler",
        "version": "1.0.1",
        "platform": [
          "any"
        ],
        "summary": "A development tool to measure, monitor and analyze the memory behavior of Python objects.",
        "description_content_type": "text/markdown",
        "home_page": "https://github.com/pympler/pympler",
        "author": "Jean Brouwers, Ludwig Haehne, Robert Schuppenies",
        "license": "Apache License, Version 2.0",
        "classifier": [
          "Development Status :: 4 - Beta",
          "Environment :: Console",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: Apache Software License",
          "Operating System :: OS Independent",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Topic :: Software Development :: Bug Tracking"
        ],
        "requires_python": ">=3.6",
        "description": "README for pympler\n==================\n\nPympler is a development tool to measure, monitor and analyze the memory\nbehavior of Python objects in a running Python application.\n\nBy pympling a Python application, detailed insight in the size and the lifetime\nof Python objects can be obtained.  Undesirable or unexpected runtime behavior\nlike memory bloat and other \"pymples\" can easily be identified.\n\nPympler integrates three previously separate projects into a single,\ncomprehensive profiling tool. Asizeof provides basic size information for one\nor several Python objects, muppy is used for on-line monitoring of a Python\napplication and the class tracker provides off-line analysis of the lifetime of\nselected Python objects. A web profiling frontend exposes process statistics,\ngarbage visualisation and class tracker statistics.\n\nPympler is written entirely in Python, with no dependencies to external\nlibraries. It has been tested with Python 3.6, 3.7, 3.8, 3.9, 3.10 on Linux,\nWindows and MacOS X.\n\n\nInstallation from PyPI\n----------------------\n\nTo install the latest version of Pympler from the Python package index run:\n\n    pip install Pympler\n\n\nInstallation from source\n------------------------\n\nBefore installing Pympler, try it with your Python version:\n\n    python setup.py try\n\nIf any errors are reported, check whether your Python version is supported.\nPympler is written entirely in Python, with no dependencies other than standard\nPython modules and libraries. Pympler works with Python 3.6, 3.7, 3.8, 3.9 and\n3.10.\n\nFor a system-wide installation from source run:\n\n    pip install .\n\nTest the installed Pympler package:\n\n    python setup.py test\n\n\nUsage\n-----\n\nThe usage of pympler is described in the documentation.  It is\navailable either in this distribution at *doc/index.html* or\nyou can [read it online](https://pympler.readthedocs.io/en/latest/).\n\n\nContributing\n------------\n\nYou can post wishes, bug reports or patches at our\n[issue tracker](https://github.com/pympler/pympler/issues) or\nwrite an email to *pympler-dev@googlegroups.com*.\n\n[![Latest Version](https://img.shields.io/pypi/v/pympler.svg)](https://pypi.org/project/Pympler/)\n[![License](https://img.shields.io/pypi/l/pympler.svg)](https://pypi.org/project/Pympler/)\n[![Coverage Status](https://coveralls.io/repos/pympler/pympler/badge.svg?branch=master)](https://coveralls.io/r/pympler/pympler?branch=master)\n\n\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/Pympler-1.0.1.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "Twisted",
        "version": "22.10.0",
        "summary": "An asynchronous networking framework written in Python",
        "description_content_type": "text/x-rst",
        "home_page": "https://twistedmatrix.com/",
        "author": "Twisted Matrix Laboratories",
        "author_email": "twisted-python@twistedmatrix.com",
        "maintainer": "Glyph Lefkowitz",
        "maintainer_email": "glyph@twistedmatrix.com",
        "license": "MIT",
        "classifier": [
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3 :: Only",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10"
        ],
        "requires_dist": [
          "zope.interface (>=4.4.2)",
          "constantly (>=15.1)",
          "incremental (>=21.3.0)",
          "Automat (>=0.8.0)",
          "hyperlink (>=17.1.1)",
          "attrs (>=19.2.0)",
          "typing-extensions (>=3.6.5)",
          "twisted-iocpsupport (<2,>=1.0.2) ; platform_system == \"Windows\"",
          "cython-test-exception-raiser (<2,>=1.0.2) ; extra == 'all_non_platform'",
          "PyHamcrest (>=1.9.0) ; extra == 'all_non_platform'",
          "hypothesis (~=6.0) ; extra == 'all_non_platform'",
          "pyopenssl (>=21.0.0) ; extra == 'all_non_platform'",
          "service-identity (>=18.1.0) ; extra == 'all_non_platform'",
          "idna (>=2.4) ; extra == 'all_non_platform'",
          "pyasn1 ; extra == 'all_non_platform'",
          "cryptography (>=2.6) ; extra == 'all_non_platform'",
          "appdirs (>=1.4.0) ; extra == 'all_non_platform'",
          "bcrypt (>=3.0.0) ; extra == 'all_non_platform'",
          "pyserial (>=3.0) ; extra == 'all_non_platform'",
          "h2 (<5.0,>=3.0) ; extra == 'all_non_platform'",
          "priority (<2.0,>=1.1.0) ; extra == 'all_non_platform'",
          "pywin32 (!=226) ; (platform_system == \"Windows\") and extra == 'all_non_platform'",
          "contextvars (<3,>=2.4) ; (python_version < \"3.7\") and extra == 'all_non_platform'",
          "pyasn1 ; extra == 'conch'",
          "cryptography (>=2.6) ; extra == 'conch'",
          "appdirs (>=1.4.0) ; extra == 'conch'",
          "bcrypt (>=3.0.0) ; extra == 'conch'",
          "pyasn1 ; extra == 'conch_nacl'",
          "cryptography (>=2.6) ; extra == 'conch_nacl'",
          "appdirs (>=1.4.0) ; extra == 'conch_nacl'",
          "bcrypt (>=3.0.0) ; extra == 'conch_nacl'",
          "PyNaCl ; extra == 'conch_nacl'",
          "contextvars (<3,>=2.4) ; (python_version < \"3.7\") and extra == 'contextvars'",
          "towncrier (~=22.8) ; extra == 'dev'",
          "pydoctor (~=22.9.0) ; extra == 'dev'",
          "sphinx-rtd-theme (~=1.0) ; extra == 'dev'",
          "readthedocs-sphinx-ext (~=2.1) ; extra == 'dev'",
          "sphinx (<6,>=5.0) ; extra == 'dev'",
          "pyflakes (~=2.2) ; extra == 'dev'",
          "twistedchecker (~=0.7) ; extra == 'dev'",
          "coverage (<7,>=6b1) ; extra == 'dev'",
          "python-subunit (~=1.4) ; (python_version < \"3.10\") and extra == 'dev'",
          "towncrier (~=22.8) ; extra == 'dev_release'",
          "pydoctor (~=22.9.0) ; extra == 'dev_release'",
          "sphinx-rtd-theme (~=1.0) ; extra == 'dev_release'",
          "readthedocs-sphinx-ext (~=2.1) ; extra == 'dev_release'",
          "sphinx (<6,>=5.0) ; extra == 'dev_release'",
          "pygobject ; extra == 'gtk_platform'",
          "cython-test-exception-raiser (<2,>=1.0.2) ; extra == 'gtk_platform'",
          "PyHamcrest (>=1.9.0) ; extra == 'gtk_platform'",
          "hypothesis (~=6.0) ; extra == 'gtk_platform'",
          "pyopenssl (>=21.0.0) ; extra == 'gtk_platform'",
          "service-identity (>=18.1.0) ; extra == 'gtk_platform'",
          "idna (>=2.4) ; extra == 'gtk_platform'",
          "pyasn1 ; extra == 'gtk_platform'",
          "cryptography (>=2.6) ; extra == 'gtk_platform'",
          "appdirs (>=1.4.0) ; extra == 'gtk_platform'",
          "bcrypt (>=3.0.0) ; extra == 'gtk_platform'",
          "pyserial (>=3.0) ; extra == 'gtk_platform'",
          "h2 (<5.0,>=3.0) ; extra == 'gtk_platform'",
          "priority (<2.0,>=1.1.0) ; extra == 'gtk_platform'",
          "pywin32 (!=226) ; (platform_system == \"Windows\") and extra == 'gtk_platform'",
          "contextvars (<3,>=2.4) ; (python_version < \"3.7\") and extra == 'gtk_platform'",
          "h2 (<5.0,>=3.0) ; extra == 'http2'",
          "priority (<2.0,>=1.1.0) ; extra == 'http2'",
          "pyobjc-core ; extra == 'macos_platform'",
          "pyobjc-framework-CFNetwork ; extra == 'macos_platform'",
          "pyobjc-framework-Cocoa ; extra == 'macos_platform'",
          "cython-test-exception-raiser (<2,>=1.0.2) ; extra == 'macos_platform'",
          "PyHamcrest (>=1.9.0) ; extra == 'macos_platform'",
          "hypothesis (~=6.0) ; extra == 'macos_platform'",
          "pyopenssl (>=21.0.0) ; extra == 'macos_platform'",
          "service-identity (>=18.1.0) ; extra == 'macos_platform'",
          "idna (>=2.4) ; extra == 'macos_platform'",
          "pyasn1 ; extra == 'macos_platform'",
          "cryptography (>=2.6) ; extra == 'macos_platform'",
          "appdirs (>=1.4.0) ; extra == 'macos_platform'",
          "bcrypt (>=3.0.0) ; extra == 'macos_platform'",
          "pyserial (>=3.0) ; extra == 'macos_platform'",
          "h2 (<5.0,>=3.0) ; extra == 'macos_platform'",
          "priority (<2.0,>=1.1.0) ; extra == 'macos_platform'",
          "pywin32 (!=226) ; (platform_system == \"Windows\") and extra == 'macos_platform'",
          "contextvars (<3,>=2.4) ; (python_version < \"3.7\") and extra == 'macos_platform'",
          "mypy (==0.930) ; extra == 'mypy'",
          "mypy-zope (==0.3.4) ; extra == 'mypy'",
          "types-setuptools ; extra == 'mypy'",
          "types-pyOpenSSL ; extra == 'mypy'",
          "towncrier (~=22.8) ; extra == 'mypy'",
          "pydoctor (~=22.9.0) ; extra == 'mypy'",
          "sphinx-rtd-theme (~=1.0) ; extra == 'mypy'",
          "readthedocs-sphinx-ext (~=2.1) ; extra == 'mypy'",
          "sphinx (<6,>=5.0) ; extra == 'mypy'",
          "pyflakes (~=2.2) ; extra == 'mypy'",
          "twistedchecker (~=0.7) ; extra == 'mypy'",
          "coverage (<7,>=6b1) ; extra == 'mypy'",
          "cython-test-exception-raiser (<2,>=1.0.2) ; extra == 'mypy'",
          "PyHamcrest (>=1.9.0) ; extra == 'mypy'",
          "hypothesis (~=6.0) ; extra == 'mypy'",
          "pyopenssl (>=21.0.0) ; extra == 'mypy'",
          "service-identity (>=18.1.0) ; extra == 'mypy'",
          "idna (>=2.4) ; extra == 'mypy'",
          "pyasn1 ; extra == 'mypy'",
          "cryptography (>=2.6) ; extra == 'mypy'",
          "appdirs (>=1.4.0) ; extra == 'mypy'",
          "bcrypt (>=3.0.0) ; extra == 'mypy'",
          "pyserial (>=3.0) ; extra == 'mypy'",
          "h2 (<5.0,>=3.0) ; extra == 'mypy'",
          "priority (<2.0,>=1.1.0) ; extra == 'mypy'",
          "PyNaCl ; extra == 'mypy'",
          "pywin32 (!=226) ; (platform_system == \"Windows\") and extra == 'mypy'",
          "python-subunit (~=1.4) ; (python_version < \"3.10\") and extra == 'mypy'",
          "contextvars (<3,>=2.4) ; (python_version < \"3.7\") and extra == 'mypy'",
          "pyobjc-core ; extra == 'osx_platform'",
          "pyobjc-framework-CFNetwork ; extra == 'osx_platform'",
          "pyobjc-framework-Cocoa ; extra == 'osx_platform'",
          "cython-test-exception-raiser (<2,>=1.0.2) ; extra == 'osx_platform'",
          "PyHamcrest (>=1.9.0) ; extra == 'osx_platform'",
          "hypothesis (~=6.0) ; extra == 'osx_platform'",
          "pyopenssl (>=21.0.0) ; extra == 'osx_platform'",
          "service-identity (>=18.1.0) ; extra == 'osx_platform'",
          "idna (>=2.4) ; extra == 'osx_platform'",
          "pyasn1 ; extra == 'osx_platform'",
          "cryptography (>=2.6) ; extra == 'osx_platform'",
          "appdirs (>=1.4.0) ; extra == 'osx_platform'",
          "bcrypt (>=3.0.0) ; extra == 'osx_platform'",
          "pyserial (>=3.0) ; extra == 'osx_platform'",
          "h2 (<5.0,>=3.0) ; extra == 'osx_platform'",
          "priority (<2.0,>=1.1.0) ; extra == 'osx_platform'",
          "pywin32 (!=226) ; (platform_system == \"Windows\") and extra == 'osx_platform'",
          "contextvars (<3,>=2.4) ; (python_version < \"3.7\") and extra == 'osx_platform'",
          "pyserial (>=3.0) ; extra == 'serial'",
          "pywin32 (!=226) ; (platform_system == \"Windows\") and extra == 'serial'",
          "cython-test-exception-raiser (<2,>=1.0.2) ; extra == 'test'",
          "PyHamcrest (>=1.9.0) ; extra == 'test'",
          "hypothesis (~=6.0) ; extra == 'test'",
          "pyopenssl (>=21.0.0) ; extra == 'tls'",
          "service-identity (>=18.1.0) ; extra == 'tls'",
          "idna (>=2.4) ; extra == 'tls'",
          "pywin32 (!=226) ; extra == 'windows_platform'",
          "cython-test-exception-raiser (<2,>=1.0.2) ; extra == 'windows_platform'",
          "PyHamcrest (>=1.9.0) ; extra == 'windows_platform'",
          "hypothesis (~=6.0) ; extra == 'windows_platform'",
          "pyopenssl (>=21.0.0) ; extra == 'windows_platform'",
          "service-identity (>=18.1.0) ; extra == 'windows_platform'",
          "idna (>=2.4) ; extra == 'windows_platform'",
          "pyasn1 ; extra == 'windows_platform'",
          "cryptography (>=2.6) ; extra == 'windows_platform'",
          "appdirs (>=1.4.0) ; extra == 'windows_platform'",
          "bcrypt (>=3.0.0) ; extra == 'windows_platform'",
          "pyserial (>=3.0) ; extra == 'windows_platform'",
          "h2 (<5.0,>=3.0) ; extra == 'windows_platform'",
          "priority (<2.0,>=1.1.0) ; extra == 'windows_platform'",
          "pywin32 (!=226) ; (platform_system == \"Windows\") and extra == 'windows_platform'",
          "contextvars (<3,>=2.4) ; (python_version < \"3.7\") and extra == 'windows_platform'"
        ],
        "requires_python": ">=3.7.1",
        "project_url": [
          "Documentation, https://docs.twistedmatrix.com/",
          "Source, https://github.com/twisted/twisted",
          "Issues, https://twistedmatrix.com/trac/report",
          "Twitter, https://twitter.com/twistedmatrix",
          "Changelog, https://github.com/twisted/twisted/blob/HEAD/NEWS.rst"
        ],
        "provides_extra": [
          "all_non_platform",
          "conch",
          "conch_nacl",
          "contextvars",
          "dev",
          "dev_release",
          "gtk_platform",
          "http2",
          "macos_platform",
          "mypy",
          "osx_platform",
          "serial",
          "test",
          "tls",
          "windows_platform"
        ],
        "description": "Twisted\n=======\n\n|gitter|_\n|rtd|_\n|pypi|_\n|mypy|_\n\nFor information on changes in this release, see the `NEWS <https://github.com/twisted/twisted/blob/trunk/NEWS.rst>`_ file.\n\n\nWhat is this?\n-------------\n\nTwisted is an event-based framework for internet applications, supporting Python 3.6+.\nIt includes modules for many different purposes, including the following:\n\n- ``twisted.web``: HTTP clients and servers, HTML templating, and a WSGI server\n- ``twisted.conch``: SSHv2 and Telnet clients and servers and terminal emulators\n- ``twisted.words``: Clients and servers for IRC, XMPP, and other IM protocols\n- ``twisted.mail``: IMAPv4, POP3, SMTP clients and servers\n- ``twisted.positioning``: Tools for communicating with NMEA-compatible GPS receivers\n- ``twisted.names``: DNS client and tools for making your own DNS servers\n- ``twisted.trial``: A unit testing framework that integrates well with Twisted-based code.\n\nTwisted supports all major system event loops -- ``select`` (all platforms), ``poll`` (most POSIX platforms), ``epoll`` (Linux), ``kqueue`` (FreeBSD, macOS), IOCP (Windows), and various GUI event loops (GTK+2/3, Qt, wxWidgets).\nThird-party reactors can plug into Twisted, and provide support for additional event loops.\n\n\nInstalling\n----------\n\nTo install the latest version of Twisted using pip::\n\n  $ pip install twisted\n\nAdditional instructions for installing this software are in `the installation instructions <https://github.com/twisted/twisted/blob/trunk/INSTALL.rst>`_.\n\n\nDocumentation and Support\n-------------------------\n\nTwisted's documentation is available from the `Twisted Matrix website <https://twistedmatrix.com/documents/current/>`_.\nThis documentation contains how-tos, code examples, and an API reference.\n\nHelp is also available on the `Twisted mailing list <https://mail.python.org/mailman3/lists/twisted.python.org/>`_.\n\nThere is also an IRC channel, ``#twisted``,\non the `Libera.Chat <https://libera.chat/>`_ network.\nA web client is available at `web.libera.chat <https://web.libera.chat/>`_.\n\n\nUnit Tests\n----------\n\nTwisted has a comprehensive test suite, which can be run by ``tox``::\n\n  $ tox -l                       # to view all test environments\n  $ tox -e nocov                 # to run all the tests without coverage\n  $ tox -e withcov               # to run all the tests with coverage\n  $ tox -e alldeps-withcov-posix # install all dependencies, run tests with coverage on POSIX platform\n\n\nYou can test running the test suite under the different reactors with the ``TWISTED_REACTOR`` environment variable::\n\n  $ env TWISTED_REACTOR=epoll tox -e alldeps-withcov-posix\n\nSome of these tests may fail if you:\n\n* don't have the dependencies required for a particular subsystem installed,\n* have a firewall blocking some ports (or things like Multicast, which Linux NAT has shown itself to do), or\n* run them as root.\n\n\nStatic Code Checkers\n--------------------\n\nYou can ensure that code complies to Twisted `coding standards <https://twistedmatrix.com/documents/current/core/development/policy/coding-standard.html>`_::\n\n  $ tox -e lint   # run pre-commit to check coding stanards\n  $ tox -e mypy   # run MyPy static type checker to check for type errors\n\nOr, for speed, use pre-commit directly::\n\n  $ pipx run pre-commit run\n\n\nCopyright\n---------\n\nAll of the code in this distribution is Copyright (c) 2001-2022 Twisted Matrix Laboratories.\n\nTwisted is made available under the MIT license.\nThe included `LICENSE <https://github.com/twisted/twisted/blob/trunk/LICENSE>`_ file describes this in detail.\n\n\nWarranty\n--------\n\n  THIS SOFTWARE IS PROVIDED \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER\n  EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n  OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\n  TO THE USE OF THIS SOFTWARE IS WITH YOU.\n\n  IN NO EVENT WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY\n  AND/OR REDISTRIBUTE THE LIBRARY, BE LIABLE TO YOU FOR ANY DAMAGES, EVEN IF\n  SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH\n  DAMAGES.\n\nAgain, see the included `LICENSE <https://github.com/twisted/twisted/blob/trunk/LICENSE>`_ file for specific legal details.\n\n\n.. |pypi| image:: https://img.shields.io/pypi/v/twisted.svg\n.. _pypi: https://pypi.python.org/pypi/twisted\n\n.. |gitter| image:: https://img.shields.io/gitter/room/twisted/twisted.svg\n.. _gitter: https://gitter.im/twisted/twisted\n\n.. |mypy| image:: https://github.com/twisted/twisted/workflows/mypy/badge.svg\n.. _mypy: https://github.com/twisted/twisted\n\n.. |rtd| image:: https://readthedocs.org/projects/twisted/badge/?version=latest&style=flat\n.. _rtd: https://docs.twistedmatrix.com\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/Twisted-22.10.0.dist-info",
      "installer": "pip",
      "requested": true
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "Werkzeug",
        "version": "2.3.3",
        "summary": "The comprehensive WSGI web application library.",
        "description_content_type": "text/x-rst",
        "author_email": "Armin Ronacher <armin.ronacher@active-4.com>",
        "maintainer_email": "Pallets <contact@palletsprojects.com>",
        "license": "BSD-3-Clause",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Environment :: Web Environment",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: BSD License",
          "Operating System :: OS Independent",
          "Programming Language :: Python",
          "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
          "Topic :: Internet :: WWW/HTTP :: WSGI",
          "Topic :: Internet :: WWW/HTTP :: WSGI :: Application",
          "Topic :: Internet :: WWW/HTTP :: WSGI :: Middleware",
          "Topic :: Software Development :: Libraries :: Application Frameworks"
        ],
        "requires_dist": [
          "MarkupSafe (>=2.1.1)",
          "watchdog (>=2.3) ; extra == 'watchdog'"
        ],
        "requires_python": ">=3.8",
        "project_url": [
          "Donate, https://palletsprojects.com/donate",
          "Documentation, https://werkzeug.palletsprojects.com/",
          "Changes, https://werkzeug.palletsprojects.com/changes/",
          "Source Code, https://github.com/pallets/werkzeug/",
          "Issue Tracker, https://github.com/pallets/werkzeug/issues/",
          "Chat, https://discord.gg/pallets"
        ],
        "provides_extra": [
          "watchdog"
        ],
        "description": "Werkzeug\n========\n\n*werkzeug* German noun: \"tool\". Etymology: *werk* (\"work\"), *zeug* (\"stuff\")\n\nWerkzeug is a comprehensive `WSGI`_ web application library. It began as\na simple collection of various utilities for WSGI applications and has\nbecome one of the most advanced WSGI utility libraries.\n\nIt includes:\n\n-   An interactive debugger that allows inspecting stack traces and\n    source code in the browser with an interactive interpreter for any\n    frame in the stack.\n-   A full-featured request object with objects to interact with\n    headers, query args, form data, files, and cookies.\n-   A response object that can wrap other WSGI applications and handle\n    streaming data.\n-   A routing system for matching URLs to endpoints and generating URLs\n    for endpoints, with an extensible system for capturing variables\n    from URLs.\n-   HTTP utilities to handle entity tags, cache control, dates, user\n    agents, cookies, files, and more.\n-   A threaded WSGI server for use while developing applications\n    locally.\n-   A test client for simulating HTTP requests during testing without\n    requiring running a server.\n\nWerkzeug doesn't enforce any dependencies. It is up to the developer to\nchoose a template engine, database adapter, and even how to handle\nrequests. It can be used to build all sorts of end user applications\nsuch as blogs, wikis, or bulletin boards.\n\n`Flask`_ wraps Werkzeug, using it to handle the details of WSGI while\nproviding more structure and patterns for defining powerful\napplications.\n\n.. _WSGI: https://wsgi.readthedocs.io/en/latest/\n.. _Flask: https://www.palletsprojects.com/p/flask/\n\n\nInstalling\n----------\n\nInstall and update using `pip`_:\n\n.. code-block:: text\n\n    pip install -U Werkzeug\n\n.. _pip: https://pip.pypa.io/en/stable/getting-started/\n\n\nA Simple Example\n----------------\n\n.. code-block:: python\n\n    from werkzeug.wrappers import Request, Response\n\n    @Request.application\n    def application(request):\n        return Response('Hello, World!')\n\n    if __name__ == '__main__':\n        from werkzeug.serving import run_simple\n        run_simple('localhost', 4000, application)\n\n\nDonate\n------\n\nThe Pallets organization develops and supports Werkzeug and other\npopular packages. In order to grow the community of contributors and\nusers, and allow the maintainers to devote more time to the projects,\n`please donate today`_.\n\n.. _please donate today: https://palletsprojects.com/donate\n\n\nLinks\n-----\n\n-   Documentation: https://werkzeug.palletsprojects.com/\n-   Changes: https://werkzeug.palletsprojects.com/changes/\n-   PyPI Releases: https://pypi.org/project/Werkzeug/\n-   Source Code: https://github.com/pallets/werkzeug/\n-   Issue Tracker: https://github.com/pallets/werkzeug/issues/\n-   Chat: https://discord.gg/pallets\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/Werkzeug-2.3.3.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "absl-py",
        "version": "1.4.0",
        "platform": [
          "UNKNOWN"
        ],
        "summary": "Abseil Python Common Libraries, see https://github.com/abseil/abseil-py.",
        "description_content_type": "text/markdown",
        "home_page": "https://github.com/abseil/abseil-py",
        "author": "The Abseil Authors",
        "license": "Apache 2.0",
        "classifier": [
          "Programming Language :: Python",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Intended Audience :: Developers",
          "Topic :: Software Development :: Libraries :: Python Modules",
          "License :: OSI Approved :: Apache Software License",
          "Operating System :: OS Independent"
        ],
        "requires_python": ">=3.6",
        "description": "# Abseil Python Common Libraries\n\nThis repository is a collection of Python library code for building Python\napplications. The code is collected from Google's own Python code base, and has\nbeen extensively tested and used in production.\n\n## Features\n\n* Simple application startup\n* Distributed commandline flags system\n* Custom logging module with additional features\n* Testing utilities\n\n## Getting Started\n\n### Installation\n\nTo install the package, simply run:\n\n```bash\npip install absl-py\n```\n\nOr install from source:\n\n```bash\npython setup.py install\n```\n\n### Running Tests\n\nTo run Abseil tests, you can clone the git repo and run\n[bazel](https://bazel.build/):\n\n```bash\ngit clone https://github.com/abseil/abseil-py.git\ncd abseil-py\nbazel test absl/...\n```\n\n### Example Code\n\nPlease refer to\n[smoke_tests/sample_app.py](https://github.com/abseil/abseil-py/blob/main/smoke_tests/sample_app.py)\nas an example to get started.\n\n## Documentation\n\nSee the [Abseil Python Developer Guide](https://abseil.io/docs/python/).\n\n## Future Releases\n\nThe current repository includes an initial set of libraries for early adoption.\nMore components and interoperability with Abseil C++ Common Libraries\nwill come in future releases.\n\n## License\n\nThe Abseil Python library is licensed under the terms of the Apache\nlicense. See [LICENSE](LICENSE) for more information.\n\n\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/absl_py-1.4.0.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "aiohttp",
        "version": "3.8.4",
        "summary": "Async http client/server framework (asyncio)",
        "description_content_type": "text/x-rst",
        "home_page": "https://github.com/aio-libs/aiohttp",
        "maintainer": "aiohttp team <team@aiohttp.org>",
        "maintainer_email": "team@aiohttp.org",
        "license": "Apache 2",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Framework :: AsyncIO",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: Apache Software License",
          "Operating System :: POSIX",
          "Operating System :: MacOS :: MacOS X",
          "Operating System :: Microsoft :: Windows",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Topic :: Internet :: WWW/HTTP"
        ],
        "requires_dist": [
          "attrs (>=17.3.0)",
          "charset-normalizer (<4.0,>=2.0)",
          "multidict (<7.0,>=4.5)",
          "async-timeout (<5.0,>=4.0.0a3)",
          "yarl (<2.0,>=1.0)",
          "frozenlist (>=1.1.1)",
          "aiosignal (>=1.1.2)",
          "idna-ssl (>=1.0) ; python_version < \"3.7\"",
          "asynctest (==0.13.0) ; python_version < \"3.8\"",
          "typing-extensions (>=3.7.4) ; python_version < \"3.8\"",
          "aiodns ; extra == 'speedups'",
          "Brotli ; extra == 'speedups'",
          "cchardet ; (python_version < \"3.10\") and extra == 'speedups'"
        ],
        "requires_python": ">=3.6",
        "project_url": [
          "Chat: Gitter, https://gitter.im/aio-libs/Lobby",
          "CI: GitHub Actions, https://github.com/aio-libs/aiohttp/actions?query=workflow%3ACI",
          "Coverage: codecov, https://codecov.io/github/aio-libs/aiohttp",
          "Docs: Changelog, https://docs.aiohttp.org/en/stable/changes.html",
          "Docs: RTD, https://docs.aiohttp.org",
          "GitHub: issues, https://github.com/aio-libs/aiohttp/issues",
          "GitHub: repo, https://github.com/aio-libs/aiohttp"
        ],
        "provides_extra": [
          "speedups"
        ],
        "description": "==================================\nAsync http client/server framework\n==================================\n\n.. image:: https://raw.githubusercontent.com/aio-libs/aiohttp/master/docs/aiohttp-plain.svg\n   :height: 64px\n   :width: 64px\n   :alt: aiohttp logo\n\n|\n\n.. image:: https://github.com/aio-libs/aiohttp/workflows/CI/badge.svg\n   :target: https://github.com/aio-libs/aiohttp/actions?query=workflow%3ACI\n   :alt: GitHub Actions status for master branch\n\n.. image:: https://codecov.io/gh/aio-libs/aiohttp/branch/master/graph/badge.svg\n   :target: https://codecov.io/gh/aio-libs/aiohttp\n   :alt: codecov.io status for master branch\n\n.. image:: https://badge.fury.io/py/aiohttp.svg\n   :target: https://pypi.org/project/aiohttp\n   :alt: Latest PyPI package version\n\n.. image:: https://readthedocs.org/projects/aiohttp/badge/?version=latest\n   :target: https://docs.aiohttp.org/\n   :alt: Latest Read The Docs\n\n.. image:: https://img.shields.io/discourse/status?server=https%3A%2F%2Faio-libs.discourse.group\n   :target: https://aio-libs.discourse.group\n   :alt: Discourse status\n\n.. image:: https://badges.gitter.im/Join%20Chat.svg\n   :target: https://gitter.im/aio-libs/Lobby\n   :alt: Chat on Gitter\n\n\nKey Features\n============\n\n- Supports both client and server side of HTTP protocol.\n- Supports both client and server Web-Sockets out-of-the-box and avoids\n  Callback Hell.\n- Provides Web-server with middlewares and plugable routing.\n\n\nGetting started\n===============\n\nClient\n------\n\nTo get something from the web:\n\n.. code-block:: python\n\n  import aiohttp\n  import asyncio\n\n  async def main():\n\n      async with aiohttp.ClientSession() as session:\n          async with session.get('http://python.org') as response:\n\n              print(\"Status:\", response.status)\n              print(\"Content-type:\", response.headers['content-type'])\n\n              html = await response.text()\n              print(\"Body:\", html[:15], \"...\")\n\n    asyncio.run(main())\n\nThis prints:\n\n.. code-block::\n\n    Status: 200\n    Content-type: text/html; charset=utf-8\n    Body: <!doctype html> ...\n\nComing from `requests <https://requests.readthedocs.io/>`_ ? Read `why we need so many lines <https://aiohttp.readthedocs.io/en/latest/http_request_lifecycle.html>`_.\n\nServer\n------\n\nAn example using a simple server:\n\n.. code-block:: python\n\n    # examples/server_simple.py\n    from aiohttp import web\n\n    async def handle(request):\n        name = request.match_info.get('name', \"Anonymous\")\n        text = \"Hello, \" + name\n        return web.Response(text=text)\n\n    async def wshandle(request):\n        ws = web.WebSocketResponse()\n        await ws.prepare(request)\n\n        async for msg in ws:\n            if msg.type == web.WSMsgType.text:\n                await ws.send_str(\"Hello, {}\".format(msg.data))\n            elif msg.type == web.WSMsgType.binary:\n                await ws.send_bytes(msg.data)\n            elif msg.type == web.WSMsgType.close:\n                break\n\n        return ws\n\n\n    app = web.Application()\n    app.add_routes([web.get('/', handle),\n                    web.get('/echo', wshandle),\n                    web.get('/{name}', handle)])\n\n    if __name__ == '__main__':\n        web.run_app(app)\n\n\nDocumentation\n=============\n\nhttps://aiohttp.readthedocs.io/\n\n\nDemos\n=====\n\nhttps://github.com/aio-libs/aiohttp-demos\n\n\nExternal links\n==============\n\n* `Third party libraries\n  <http://aiohttp.readthedocs.io/en/latest/third_party.html>`_\n* `Built with aiohttp\n  <http://aiohttp.readthedocs.io/en/latest/built_with.html>`_\n* `Powered by aiohttp\n  <http://aiohttp.readthedocs.io/en/latest/powered_by.html>`_\n\nFeel free to make a Pull Request for adding your link to these pages!\n\n\nCommunication channels\n======================\n\n*aio-libs discourse group*: https://aio-libs.discourse.group\n\n*gitter chat* https://gitter.im/aio-libs/Lobby\n\nWe support `Stack Overflow\n<https://stackoverflow.com/questions/tagged/aiohttp>`_.\nPlease add *aiohttp* tag to your question there.\n\nRequirements\n============\n\n- Python >= 3.6\n- async-timeout_\n- attrs_\n- charset-normalizer_\n- multidict_\n- yarl_\n- frozenlist_\n\nOptionally you may install the cChardet_ and aiodns_ libraries (highly\nrecommended for sake of speed).\n\n.. _charset-normalizer: https://pypi.org/project/charset-normalizer\n.. _aiodns: https://pypi.python.org/pypi/aiodns\n.. _attrs: https://github.com/python-attrs/attrs\n.. _multidict: https://pypi.python.org/pypi/multidict\n.. _frozenlist: https://pypi.org/project/frozenlist/\n.. _yarl: https://pypi.python.org/pypi/yarl\n.. _async-timeout: https://pypi.python.org/pypi/async_timeout\n.. _cChardet: https://pypi.python.org/pypi/cchardet\n\nLicense\n=======\n\n``aiohttp`` is offered under the Apache 2 license.\n\n\nKeepsafe\n========\n\nThe aiohttp community would like to thank Keepsafe\n(https://www.getkeepsafe.com) for its support in the early days of\nthe project.\n\n\nSource code\n===========\n\nThe latest developer version is available in a GitHub repository:\nhttps://github.com/aio-libs/aiohttp\n\nBenchmarks\n==========\n\nIf you are interested in efficiency, the AsyncIO community maintains a\nlist of benchmarks on the official wiki:\nhttps://github.com/python/asyncio/wiki/Benchmarks\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/aiohttp-3.8.4.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "aiosignal",
        "version": "1.3.1",
        "summary": "aiosignal: a list of registered asynchronous callbacks",
        "description_content_type": "text/x-rst",
        "home_page": "https://github.com/aio-libs/aiosignal",
        "maintainer": "aiohttp team <team@aiohttp.org>",
        "maintainer_email": "team@aiohttp.org",
        "license": "Apache 2.0",
        "classifier": [
          "License :: OSI Approved :: Apache Software License",
          "Intended Audience :: Developers",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3 :: Only",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Development Status :: 5 - Production/Stable",
          "Operating System :: POSIX",
          "Operating System :: MacOS :: MacOS X",
          "Operating System :: Microsoft :: Windows",
          "Framework :: AsyncIO"
        ],
        "requires_dist": [
          "frozenlist (>=1.1.0)"
        ],
        "requires_python": ">=3.7",
        "project_url": [
          "Chat: Gitter, https://gitter.im/aio-libs/Lobby",
          "CI: GitHub Actions, https://github.com/aio-libs/aiosignal/actions",
          "Coverage: codecov, https://codecov.io/github/aio-libs/aiosignal",
          "Docs: RTD, https://docs.aiosignal.org",
          "GitHub: issues, https://github.com/aio-libs/aiosignal/issues",
          "GitHub: repo, https://github.com/aio-libs/aiosignal"
        ],
        "description": "=========\naiosignal\n=========\n\n.. image:: https://github.com/aio-libs/aiosignal/workflows/CI/badge.svg\n   :target: https://github.com/aio-libs/aiosignal/actions?query=workflow%3ACI\n   :alt: GitHub status for master branch\n\n.. image:: https://codecov.io/gh/aio-libs/aiosignal/branch/master/graph/badge.svg\n   :target: https://codecov.io/gh/aio-libs/aiosignal\n   :alt: codecov.io status for master branch\n\n.. image:: https://badge.fury.io/py/aiosignal.svg\n   :target: https://pypi.org/project/aiosignal\n   :alt: Latest PyPI package version\n\n.. image:: https://readthedocs.org/projects/aiosignal/badge/?version=latest\n   :target: https://aiosignal.readthedocs.io/\n   :alt: Latest Read The Docs\n\n.. image:: https://img.shields.io/discourse/topics?server=https%3A%2F%2Faio-libs.discourse.group%2F\n   :target: https://aio-libs.discourse.group/\n   :alt: Discourse group for io-libs\n\n.. image:: https://badges.gitter.im/Join%20Chat.svg\n   :target: https://gitter.im/aio-libs/Lobby\n   :alt: Chat on Gitter\n\nIntroduction\n============\n\nA project to manage callbacks in `asyncio` projects.\n\n``Signal`` is a list of registered asynchronous callbacks.\n\nThe signal's life-cycle has two stages: after creation its content\ncould be filled by using standard list operations: ``sig.append()``\netc.\n\nAfter you call ``sig.freeze()`` the signal is *frozen*: adding, removing\nand dropping callbacks is forbidden.\n\nThe only available operation is calling the previously registered\ncallbacks by using ``await sig.send(data)``.\n\nFor concrete usage examples see the `Signals\n<https://docs.aiohttp.org/en/stable/web_advanced.html#aiohttp-web-signals>\nsection of the `Web Server Advanced\n<https://docs.aiohttp.org/en/stable/web_advanced.html>` chapter of the `aiohttp\ndocumentation`_.\n\n\nInstallation\n------------\n\n::\n\n   $ pip install aiosignal\n\nThe library requires Python 3.6 or newer.\n\n\nDocumentation\n=============\n\nhttps://aiosignal.readthedocs.io/\n\nCommunication channels\n======================\n\n*gitter chat* https://gitter.im/aio-libs/Lobby\n\nRequirements\n============\n\n- Python >= 3.6\n- frozenlist >= 1.0.0\n\nLicense\n=======\n\n``aiosignal`` is offered under the Apache 2 license.\n\nSource code\n===========\n\nThe project is hosted on GitHub_\n\nPlease file an issue in the `bug tracker\n<https://github.com/aio-libs/aiosignal/issues>`_ if you have found a bug\nor have some suggestions to improve the library.\n\n.. _GitHub: https://github.com/aio-libs/aiosignal\n.. _aiohttp documentation: https://docs.aiohttp.org/\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/aiosignal-1.3.1.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "altair",
        "version": "4.2.2",
        "summary": "Altair: A declarative statistical visualization library for Python.",
        "description_content_type": "text/markdown",
        "home_page": "http://altair-viz.github.io",
        "download_url": "http://github.com/altair-viz/altair/",
        "author": "Brian E. Granger / Jake VanderPlas",
        "author_email": "jakevdp@gmail.com",
        "license": "BSD 3-clause",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Environment :: Console",
          "Intended Audience :: Science/Research",
          "License :: OSI Approved :: BSD License",
          "Natural Language :: English",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10"
        ],
        "requires_dist": [
          "entrypoints",
          "jinja2",
          "jsonschema (>=3.0)",
          "numpy",
          "pandas (>=0.18)",
          "toolz",
          "black ; extra == 'dev'",
          "docutils ; extra == 'dev'",
          "ipython ; extra == 'dev'",
          "flake8 ; extra == 'dev'",
          "pytest ; extra == 'dev'",
          "sphinx ; extra == 'dev'",
          "mistune (<2.0.0) ; extra == 'dev'",
          "m2r ; extra == 'dev'",
          "vega-datasets ; extra == 'dev'",
          "recommonmark ; extra == 'dev'"
        ],
        "requires_python": ">=3.7",
        "provides_extra": [
          "dev"
        ],
        "description": "# Altair <a href=\"https://altair-viz.github.io/\"><img align=\"right\" src=\"https://altair-viz.github.io/_static/altair-logo-light.png\" height=\"50\"></img></a>\n\n[![build status](https://img.shields.io/travis/altair-viz/altair/master.svg?style=flat)](https://travis-ci.org/altair-viz/altair)\n[![github actions](https://github.com/altair-viz/altair/workflows/build/badge.svg)](https://github.com/altair-viz/altair/actions?query=workflow%3Abuild)\n[![code style black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n[![JOSS Paper](https://joss.theoj.org/papers/10.21105/joss.01057/status.svg)](https://joss.theoj.org/papers/10.21105/joss.01057)\n[![PyPI - Downloads](https://img.shields.io/pypi/dm/altair)](https://pypi.org/project/altair)\n[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/altair-viz/altair_notebooks/master?urlpath=lab/tree/notebooks/Index.ipynb)\n[![Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/altair-viz/altair_notebooks/blob/master/notebooks/Index.ipynb)\n\n[https://altair-viz.github.io](https://altair-viz.github.io)\n\n**Altair** is a declarative statistical visualization library for Python. With Altair, you can spend more time understanding your data and its meaning. Altair's\nAPI is simple, friendly and consistent and built on top of the powerful\n[Vega-Lite](https://github.com/vega/vega-lite) JSON specification. This elegant\nsimplicity produces beautiful and effective visualizations with a minimal amount of code. *Altair is developed by [Jake Vanderplas](https://github.com/jakevdp) and [Brian\nGranger](https://github.com/ellisonbg) in close collaboration with the [UW\nInteractive Data Lab](https://idl.cs.washington.edu/).*\n\n## Altair Documentation\n\nSee [Altair's Documentation Site](https://altair-viz.github.io),\nas well as Altair's [Tutorial Notebooks](https://github.com/altair-viz/altair_notebooks).\n\n## Example\n\nHere is an example using Altair to quickly visualize and display a dataset with the native Vega-Lite renderer in the JupyterLab:\n\n```python\nimport altair as alt\n\n# load a simple dataset as a pandas DataFrame\nfrom vega_datasets import data\ncars = data.cars()\n\nalt.Chart(cars).mark_point().encode(\n    x='Horsepower',\n    y='Miles_per_Gallon',\n    color='Origin',\n)\n```\n\n![Altair Visualization](https://raw.githubusercontent.com/altair-viz/altair/master/images/cars.png)\n\nOne of the unique features of Altair, inherited from Vega-Lite, is a declarative grammar of not just visualization, but _interaction_. \nWith a few modifications to the example above we can create a linked histogram that is filtered based on a selection of the scatter plot.\n\n```python \nimport altair as alt\nfrom vega_datasets import data\n\nsource = data.cars()\n\nbrush = alt.selection(type='interval')\n\npoints = alt.Chart(source).mark_point().encode(\n    x='Horsepower',\n    y='Miles_per_Gallon',\n    color=alt.condition(brush, 'Origin', alt.value('lightgray'))\n).add_selection(\n    brush\n)\n\nbars = alt.Chart(source).mark_bar().encode(\n    y='Origin',\n    color='Origin',\n    x='count(Origin)'\n).transform_filter(\n    brush\n)\n\npoints & bars\n```\n\n![Altair Visualization Gif](https://raw.githubusercontent.com/altair-viz/altair/master/images/cars_scatter_bar.gif)\n\n\n## Getting your Questions Answered\n\nIf you have a question that is not addressed in the documentation, there are several ways to ask:\n\n- open a [Github Issue](https://github.com/altair-viz/altair/issues)\n- post a [StackOverflow Question](https://stackoverflow.com/questions/tagged/altair) (be sure to use the `altair` tag)\n- ask on the [Altair Google Group](https://groups.google.com/forum/#!forum/altair-viz)\n\nWe'll do our best to get your question answered\n\n## A Python API for statistical visualizations\n\nAltair provides a Python API for building statistical visualizations in a declarative\nmanner. By statistical visualization we mean:\n\n* The **data source** is a `DataFrame` that consists of columns of different data types (quantitative, ordinal, nominal and date/time).\n* The `DataFrame` is in a [tidy format](https://vita.had.co.nz/papers/tidy-data.pdf)\n  where the rows correspond to samples and the columns correspond to the observed variables.\n* The data is mapped to the **visual properties** (position, color, size, shape,\n  faceting, etc.) using the group-by data transformation.\n\nThe Altair API contains no actual visualization rendering code but instead\nemits JSON data structures following the\n[Vega-Lite](https://github.com/vega/vega-lite) specification. The resulting\nVega-Lite JSON data can be rendered in the following user-interfaces:\n\n* [Jupyter Notebook](https://github.com/jupyter/notebook) (by installing [ipyvega](https://github.com/vega/ipyvega)).\n* [JupyterLab](https://github.com/jupyterlab/jupyterlab) (no additional dependencies needed).\n* [nteract](https://github.com/nteract/nteract) (no additional dependencies needed).\n\n## Features\n\n* Carefully-designed, declarative Python API based on\n  [traitlets](https://github.com/ipython/traitlets).\n* Auto-generated internal Python API that guarantees visualizations are type-checked and\n  in full conformance with the [Vega-Lite](https://github.com/vega/vega-lite)\n  specification.\n* Auto-generate Altair Python code from a Vega-Lite JSON spec.\n* Display visualizations in the live Jupyter Notebook, JupyterLab, nteract, on GitHub and\n  [nbviewer](https://nbviewer.jupyter.org/).\n* Export visualizations to PNG/SVG images, stand-alone HTML pages and the\n[Online Vega-Lite Editor](https://vega.github.io/editor/#/).\n* Serialize visualizations as JSON files.\n* Explore Altair with dozens of examples in the [Example Gallery](https://altair-viz.github.io/gallery/index.html)\n\n## Installation\n\nTo use Altair for visualization, you need to install two sets of tools\n\n1. The core Altair Package and its dependencies\n\n2. The renderer for the frontend you wish to use (i.e. `Jupyter Notebook`,\n   `JupyterLab`, or `nteract`)\n\nAltair can be installed with either ``pip`` or with ``conda``.\nFor full installation instructions, please see\nhttps://altair-viz.github.io/getting_started/installation.html\n\n## Example and tutorial notebooks\n\nWe maintain a separate Github repository of Jupyter Notebooks that contain an\ninteractive tutorial and examples:\n\nhttps://github.com/altair-viz/altair_notebooks\n\nTo launch a live notebook server with those notebook using [binder](https://mybinder.org/) or\n[Colab](https://colab.research.google.com), click on one of the following badges:\n\n[![Binder](https://beta.mybinder.org/badge.svg)](https://beta.mybinder.org/v2/gh/altair-viz/altair_notebooks/master)\n[![Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/altair-viz/altair_notebooks/blob/master/notebooks/Index.ipynb)\n\n## Project philosophy\n\nMany excellent plotting libraries exist in Python, including the main ones:\n\n* [Matplotlib](https://matplotlib.org/)\n* [Bokeh](https://bokeh.pydata.org/en/latest/)\n* [Seaborn](https://seaborn.pydata.org/)\n* [Lightning](https://github.com/lightning-viz/lightning)\n* [Plotly](https://plot.ly/)\n* [Pandas built-in plotting](https://pandas.pydata.org/pandas-docs/stable/visualization.html)\n* [HoloViews](https://holoviews.org)\n* [VisPy](https://vispy.org/)\n* [pygg](https://www.github.com/sirrice/pygg)\n\nEach library does a particular set of things well.\n\n### User challenges\n\nHowever, such a proliferation of options creates great difficulty for users\nas they have to wade through all of these APIs to find which of them is the\nbest for the task at hand. None of these libraries are optimized for\nhigh-level statistical visualization, so users have to assemble their own\nusing a mishmash of APIs. For individuals just learning data science, this\nforces them to focus on learning APIs rather than exploring their data.\n\nAnother challenge is current plotting APIs require the user to write code,\neven for incidental details of a visualization. This results in an unfortunate\nand unnecessary cognitive burden as the visualization type (histogram,\nscatterplot, etc.) can often be inferred using basic information such as the\ncolumns of interest and the data types of those columns.\n\nFor example, if you are interested in the visualization of two numerical\ncolumns, a scatterplot is almost certainly a good starting point. If you add\na categorical column to that, you probably want to encode that column using\ncolors or facets. If inferring the visualization proves difficult at times, a\nsimple user interface can construct a visualization without any coding.\n[Tableau](https://www.tableau.com/) and the [Interactive Data\nLab's](https://idl.cs.washington.edu/)\n[Polestar](https://github.com/vega/polestar) and\n[Voyager](https://github.com/vega/voyager) are excellent examples of such UIs.\n\n### Design approach and solution\n\nWe believe that these challenges can be addressed without the creation of yet\nanother visualization library that has a programmatic API and built-in\nrendering. Altair's approach to building visualizations uses a layered design\nthat leverages the full capabilities of existing visualization libraries:\n\n1. Create a constrained, simple Python API (Altair) that is purely declarative\n2. Use the API (Altair) to emit JSON output that follows the Vega-Lite spec\n3. Render that spec using existing visualization libraries\n\nThis approach enables users to perform exploratory visualizations with a much\nsimpler API initially, pick an appropriate renderer for their usage case, and\nthen leverage the full capabilities of that renderer for more advanced plot\ncustomization.\n\nWe realize that a declarative API will necessarily be limited compared to the\nfull programmatic APIs of Matplotlib, Bokeh, etc. That is a deliberate design\nchoice we feel is needed to simplify the user experience of exploratory\nvisualization.\n\n## Development install\n\nAltair requires the following dependencies:\n\n* [pandas](https://pandas.pydata.org/)\n* [traitlets](https://github.com/ipython/traitlets)\n* [IPython](https://github.com/ipython/ipython)\n\nIf you have cloned the repository, run the following command from the root of the repository:\n\n```\npip install -e .[dev]\n```\n\nIf you do not wish to clone the repository, you can install using:\n\n```\npip install git+https://github.com/altair-viz/altair\n```\n\n## Testing\n\nTo run the test suite you must have [py.test](https://pytest.org/latest/) installed.\nTo run the tests, use\n\n```\npy.test --pyargs altair\n```\n(you can omit the `--pyargs` flag if you are running the tests from a source checkout).\n\n## Feedback and Contribution\n\nSee [`CONTRIBUTING.md`](https://github.com/altair-viz/altair/blob/master/CONTRIBUTING.md)\n\n## Citing Altair\n\n[![JOSS Paper](https://joss.theoj.org/papers/10.21105/joss.01057/status.svg)](https://joss.theoj.org/papers/10.21105/joss.01057)\n\nIf you use Altair in academic work, please consider citing https://joss.theoj.org/papers/10.21105/joss.01057 as\n\n```bib\n@article{VanderPlas2018,\n    doi = {10.21105/joss.01057},\n    url = {https://doi.org/10.21105/joss.01057},\n    year = {2018},\n    publisher = {The Open Journal},\n    volume = {3},\n    number = {32},\n    pages = {1057},\n    author = {Jacob VanderPlas and Brian Granger and Jeffrey Heer and Dominik Moritz and Kanit Wongsuphasawat and Arvind Satyanarayan and Eitan Lees and Ilia Timofeev and Ben Welsh and Scott Sievert},\n    title = {Altair: Interactive Statistical Visualizations for Python},\n    journal = {Journal of Open Source Software}\n}\n```\nPlease additionally consider citing the [vega-lite](https://vega.github.io/vega-lite/) project, which Altair is based on: https://dl.acm.org/doi/10.1109/TVCG.2016.2599030\n```bib\n@article{Satyanarayan2017,\n    author={Satyanarayan, Arvind and Moritz, Dominik and Wongsuphasawat, Kanit and Heer, Jeffrey},\n    title={Vega-Lite: A Grammar of Interactive Graphics},\n    journal={IEEE transactions on visualization and computer graphics},\n    year={2017},\n    volume={23},\n    number={1},\n    pages={341-350},\n    publisher={IEEE}\n} \n```\n\n## Whence Altair?\n\nAltair is the [brightest star](https://en.wikipedia.org/wiki/Altair) in the constellation Aquila, and along with Deneb and Vega forms the northern-hemisphere asterism known as the [Summer Triangle](https://en.wikipedia.org/wiki/Summer_Triangle).\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/altair-4.2.2.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "anyio",
        "version": "3.6.2",
        "summary": "High level compatibility layer for multiple asynchronous event loop implementations",
        "author": "Alex Grönholm",
        "author_email": "alex.gronholm@nextday.fi",
        "license": "MIT",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: MIT License",
          "Framework :: AnyIO",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10"
        ],
        "requires_dist": [
          "idna (>=2.8)",
          "sniffio (>=1.1)",
          "contextvars ; python_version < \"3.7\"",
          "dataclasses ; python_version < \"3.7\"",
          "typing-extensions ; python_version < \"3.8\"",
          "packaging ; extra == 'doc'",
          "sphinx-rtd-theme ; extra == 'doc'",
          "sphinx-autodoc-typehints (>=1.2.0) ; extra == 'doc'",
          "coverage[toml] (>=4.5) ; extra == 'test'",
          "hypothesis (>=4.0) ; extra == 'test'",
          "pytest (>=7.0) ; extra == 'test'",
          "pytest-mock (>=3.6.1) ; extra == 'test'",
          "trustme ; extra == 'test'",
          "contextlib2 ; (python_version < \"3.7\") and extra == 'test'",
          "uvloop (<0.15) ; (python_version < \"3.7\" and (platform_python_implementation == \"CPython\" and platform_system != \"Windows\")) and extra == 'test'",
          "mock (>=4) ; (python_version < \"3.8\") and extra == 'test'",
          "uvloop (>=0.15) ; (python_version >= \"3.7\" and (platform_python_implementation == \"CPython\" and platform_system != \"Windows\")) and extra == 'test'",
          "trio (<0.22,>=0.16) ; extra == 'trio'"
        ],
        "requires_python": ">=3.6.2",
        "project_url": [
          "Documentation, https://anyio.readthedocs.io/en/latest/",
          "Source code, https://github.com/agronholm/anyio",
          "Issue tracker, https://github.com/agronholm/anyio/issues"
        ],
        "provides_extra": [
          "doc",
          "test",
          "trio"
        ],
        "description": ".. image:: https://github.com/agronholm/anyio/actions/workflows/test.yml/badge.svg\n  :target: https://github.com/agronholm/anyio/actions/workflows/test.yml\n  :alt: Build Status\n.. image:: https://coveralls.io/repos/github/agronholm/anyio/badge.svg?branch=master\n  :target: https://coveralls.io/github/agronholm/anyio?branch=master\n  :alt: Code Coverage\n.. image:: https://readthedocs.org/projects/anyio/badge/?version=latest\n  :target: https://anyio.readthedocs.io/en/latest/?badge=latest\n  :alt: Documentation\n.. image:: https://badges.gitter.im/gitterHQ/gitter.svg\n  :target: https://gitter.im/python-trio/AnyIO\n  :alt: Gitter chat\n\nAnyIO is an asynchronous networking and concurrency library that works on top of either asyncio_ or\ntrio_. It implements trio-like `structured concurrency`_ (SC) on top of asyncio, and works in harmony\nwith the native SC of trio itself.\n\nApplications and libraries written against AnyIO's API will run unmodified on either asyncio_ or\ntrio_. AnyIO can also be adopted into a library or application incrementally – bit by bit, no full\nrefactoring necessary. It will blend in with native libraries of your chosen backend.\n\nDocumentation\n-------------\n\nView full documentation at: https://anyio.readthedocs.io/\n\nFeatures\n--------\n\nAnyIO offers the following functionality:\n\n* Task groups (nurseries_ in trio terminology)\n* High level networking (TCP, UDP and UNIX sockets)\n\n  * `Happy eyeballs`_ algorithm for TCP connections (more robust than that of asyncio on Python\n    3.8)\n  * async/await style UDP sockets (unlike asyncio where you still have to use Transports and\n    Protocols)\n\n* A versatile API for byte streams and object streams\n* Inter-task synchronization and communication (locks, conditions, events, semaphores, object\n  streams)\n* Worker threads\n* Subprocesses\n* Asynchronous file I/O (using worker threads)\n* Signal handling\n\nAnyIO also comes with its own pytest_ plugin which also supports asynchronous fixtures.\nIt even works with the popular Hypothesis_ library.\n\n.. _asyncio: https://docs.python.org/3/library/asyncio.html\n.. _trio: https://github.com/python-trio/trio\n.. _structured concurrency: https://en.wikipedia.org/wiki/Structured_concurrency\n.. _nurseries: https://trio.readthedocs.io/en/stable/reference-core.html#nurseries-and-spawning\n.. _Happy eyeballs: https://en.wikipedia.org/wiki/Happy_Eyeballs\n.. _pytest: https://docs.pytest.org/en/latest/\n.. _Hypothesis: https://hypothesis.works/\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/anyio-3.6.2.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "astor",
        "version": "0.8.1",
        "platform": [
          "Independent"
        ],
        "summary": "Read/rewrite/write Python ASTs",
        "keywords": [
          "ast",
          "codegen",
          "PEP 8"
        ],
        "home_page": "https://github.com/berkerpeksag/astor",
        "author": "Patrick Maupin",
        "author_email": "pmaupin@gmail.com",
        "license": "BSD-3-Clause",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Environment :: Console",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: BSD License",
          "Operating System :: OS Independent",
          "Programming Language :: Python",
          "Programming Language :: Python :: 2",
          "Programming Language :: Python :: 2.7",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.4",
          "Programming Language :: Python :: 3.5",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: Implementation",
          "Programming Language :: Python :: Implementation :: CPython",
          "Programming Language :: Python :: Implementation :: PyPy",
          "Topic :: Software Development :: Code Generators",
          "Topic :: Software Development :: Compilers"
        ],
        "requires_python": "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,>=2.7",
        "description": "=============================\nastor -- AST observe/rewrite\n=============================\n\n:PyPI: https://pypi.org/project/astor/\n:Documentation: https://astor.readthedocs.io\n:Source: https://github.com/berkerpeksag/astor\n:License: 3-clause BSD\n:Build status:\n    .. image:: https://secure.travis-ci.org/berkerpeksag/astor.svg\n        :alt: Travis CI\n        :target: https://travis-ci.org/berkerpeksag/astor/\n\nastor is designed to allow easy manipulation of Python source via the AST.\n\nThere are some other similar libraries, but astor focuses on the following areas:\n\n- Round-trip an AST back to Python [1]_:\n\n  - Modified AST doesn't need linenumbers, ctx, etc. or otherwise\n    be directly compileable for the round-trip to work.\n  - Easy to read generated code as, well, code\n  - Can round-trip two different source trees to compare for functional\n    differences, using the astor.rtrip tool (for example, after PEP8 edits).\n\n- Dump pretty-printing of AST\n\n  - Harder to read than round-tripped code, but more accurate to figure out what\n    is going on.\n\n  - Easier to read than dump from built-in AST module\n\n- Non-recursive treewalk\n\n  - Sometimes you want a recursive treewalk (and astor supports that, starting\n    at any node on the tree), but sometimes you don't need to do that.  astor\n    doesn't require you to explicitly visit sub-nodes unless you want to:\n\n  - You can add code that executes before a node's children are visited, and/or\n  - You can add code that executes after a node's children are visited, and/or\n  - You can add code that executes and keeps the node's children from being\n    visited (and optionally visit them yourself via a recursive call)\n\n  - Write functions to access the tree based on object names and/or attribute names\n  - Enjoy easy access to parent node(s) for tree rewriting\n\n.. [1]\n    The decompilation back to Python is based on code originally written\n    by Armin Ronacher.  Armin's code was well-structured, but failed on\n    some obscure corner cases of the Python language (and even more corner\n    cases when the AST changed on different versions of Python), and its\n    output arguably had cosmetic issues -- for example, it produced\n    parentheses even in some cases where they were not needed, to\n    avoid having to reason about precedence.\n\n    Other derivatives of Armin's code are floating around, and typically\n    have fixes for a few corner cases that happened to be noticed by the\n    maintainers, but most of them have not been tested as thoroughly as\n    astor.  One exception may be the version of codegen\n    `maintained at github by CensoredUsername`__.  This has been tested\n    to work properly on Python 2.7 using astor's test suite, and, as it\n    is a single source file, it may be easier to drop into some applications\n    that do not require astor's other features or Python 3.x compatibility.\n\n__ https://github.com/CensoredUsername/codegen\n\n\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/astor-0.8.1.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "astunparse",
        "version": "1.6.3",
        "platform": [
          "UNKNOWN"
        ],
        "summary": "An AST unparser for Python",
        "keywords": [
          "astunparse"
        ],
        "home_page": "https://github.com/simonpercivall/astunparse",
        "maintainer": "Simon Percivall",
        "maintainer_email": "percivall@gmail.com",
        "license": "BSD",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: BSD License",
          "Natural Language :: English",
          "Programming Language :: Python :: 2",
          "Programming Language :: Python :: 2.7",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.5",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Topic :: Software Development :: Code Generators"
        ],
        "requires_dist": [
          "wheel (<1.0,>=0.23.0)",
          "six (<2.0,>=1.6.1)"
        ],
        "description": "============\nAST Unparser\n============\n\n.. image:: https://badge.fury.io/py/astunparse.png\n    :target: http://badge.fury.io/py/astunparse\n\n.. image:: https://travis-ci.org/simonpercivall/astunparse.png?branch=master\n    :target: https://travis-ci.org/simonpercivall/astunparse\n\n.. image:: https://readthedocs.org/projects/astunparse/badge/\n    :target: https://astunparse.readthedocs.org/\n\nAn AST unparser for Python.\n\nThis is a factored out version of ``unparse`` found in the Python\nsource distribution; under Demo/parser in Python 2 and under Tools/parser\nin Python 3.\n\nBasic example::\n\n    import inspect\n    import ast\n    import astunparse\n\n    # get back the source code\n    astunparse.unparse(ast.parse(inspect.getsource(ast)))\n\n    # get a pretty-printed dump of the AST\n    astunparse.dump(ast.parse(inspect.getsource(ast)))\n\n\nThis library is single-source compatible with Python 2.6 through Python 3.5. It\nis authored by the Python core developers; I have simply merged the Python 2.7\nand the Python 3.5 source and test suites, and added a wrapper. This factoring\nout is to provide a library implementation that supports both versions.\n\nAdded to this is a pretty-printing ``dump`` utility function.\n\nThe test suite both runs specific tests and also roundtrips much of the\nstandard library.\n\nExtensions and Alternatives\n---------------------------\n\nSimilar projects include:\n\n    * codegen_\n    * astor_\n    * astmonkey_\n    * astprint_\n\nNone of these roundtrip much of the standard library and fail several of the basic\ntests in the ``test_unparse`` test suite.\n\nThis library uses mature and core maintained code instead of trying to patch\nexisting libraries. The ``unparse`` and the ``test_unparse`` modules\nare under the PSF license.\n\nExtensions include:\n\n    * typed-astunparse: extends astunparse to support type annotations.\n\n* Documentation: http://astunparse.rtfd.org.\n\nFeatures\n--------\n\n* unparses Python AST.\n* pretty-prints AST.\n\n\n.. _codegen: https://github.com/andreif/codegen\n.. _astor: https://github.com/berkerpeksag/astor\n.. _astmonkey: https://github.com/konradhalas/astmonkey\n.. _astprint: https://github.com/Manticore/astprint\n\n\nChangelog\n=========\n\nHere's the recent changes to AST Unparser.\n\n1.6.3 - 2019-12-22\n~~~~~~~~~~~~~~~~~~\n\n* Add full support for Python 3.8\n\n1.6.2 - 2019-01-19\n~~~~~~~~~~~~~~~~~~\n\n* Add support for the Constant node in Python 3.8\n* Add tests to the sdist\n\n1.6.1 - 2018-10-03\n~~~~~~~~~~~~~~~~~~\n\n* Fix the roundtripping of very complex f-strings.\n\n1.6.0 - 2018-09-30\n~~~~~~~~~~~~~~~~~~\n\n* Python 3.7 compatibility\n\n1.5.0 - 2017-02-05\n~~~~~~~~~~~~~~~~~~\n\n* Python 3.6 compatibility\n* bugfix: correct argparser option type\n\n1.4.0 - 2016-06-24\n~~~~~~~~~~~~~~~~~~\n\n* Support for the ``async`` keyword\n* Support for unparsing \"Interactive\" and \"Expression\" nodes\n\n1.3.0 - 2016-01-17\n~~~~~~~~~~~~~~~~~~\n\n* Python 3.5 compatibility\n\n1.2.0 - 2014-04-03\n~~~~~~~~~~~~~~~~~~\n\n* Python 2.6 through 3.4 compatibility\n* A new function ``dump`` is added to return a pretty-printed version\n  of the AST. It's also available when running ``python -m astunparse``\n  as the ``--dump`` argument.\n\n1.1.0 - 2014-04-01\n~~~~~~~~~~~~~~~~~~\n\n* ``unparse`` will return the source code for an AST. It is pretty\n  feature-complete, and round-trips the stdlib, and is compatible with\n  Python 2.7 and Python 3.4.\n\n  Running ``python -m astunparse`` will print the round-tripped source\n  for any python files given as argument.\n\n\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/astunparse-1.6.3.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "async-timeout",
        "version": "4.0.2",
        "platform": [
          "UNKNOWN"
        ],
        "summary": "Timeout context manager for asyncio programs",
        "description_content_type": "text/x-rst",
        "home_page": "https://github.com/aio-libs/async-timeout",
        "author": "Andrew Svetlov <andrew.svetlov@gmail.com>",
        "author_email": "andrew.svetlov@gmail.com",
        "license": "Apache 2",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Topic :: Software Development :: Libraries",
          "Framework :: AsyncIO",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: Apache Software License",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3 :: Only",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10"
        ],
        "requires_dist": [
          "typing-extensions (>=3.6.5) ; python_version < \"3.8\""
        ],
        "requires_python": ">=3.6",
        "project_url": [
          "Chat: Gitter, https://gitter.im/aio-libs/Lobby",
          "CI: GitHub Actions, https://github.com/aio-libs/async-timeout/actions",
          "Coverage: codecov, https://codecov.io/github/aio-libs/async-timeout",
          "GitHub: issues, https://github.com/aio-libs/async-timeout/issues",
          "GitHub: repo, https://github.com/aio-libs/async-timeout"
        ],
        "description": "async-timeout\n=============\n.. image:: https://travis-ci.com/aio-libs/async-timeout.svg?branch=master\n    :target: https://travis-ci.com/aio-libs/async-timeout\n.. image:: https://codecov.io/gh/aio-libs/async-timeout/branch/master/graph/badge.svg\n    :target: https://codecov.io/gh/aio-libs/async-timeout\n.. image:: https://img.shields.io/pypi/v/async-timeout.svg\n    :target: https://pypi.python.org/pypi/async-timeout\n.. image:: https://badges.gitter.im/Join%20Chat.svg\n    :target: https://gitter.im/aio-libs/Lobby\n    :alt: Chat on Gitter\n\nasyncio-compatible timeout context manager.\n\n\nUsage example\n-------------\n\n\nThe context manager is useful in cases when you want to apply timeout\nlogic around block of code or in cases when ``asyncio.wait_for()`` is\nnot suitable. Also it's much faster than ``asyncio.wait_for()``\nbecause ``timeout`` doesn't create a new task.\n\nThe ``timeout(delay, *, loop=None)`` call returns a context manager\nthat cancels a block on *timeout* expiring::\n\n   async with timeout(1.5):\n       await inner()\n\n1. If ``inner()`` is executed faster than in ``1.5`` seconds nothing\n   happens.\n2. Otherwise ``inner()`` is cancelled internally by sending\n   ``asyncio.CancelledError`` into but ``asyncio.TimeoutError`` is\n   raised outside of context manager scope.\n\n*timeout* parameter could be ``None`` for skipping timeout functionality.\n\n\nAlternatively, ``timeout_at(when)`` can be used for scheduling\nat the absolute time::\n\n   loop = asyncio.get_event_loop()\n   now = loop.time()\n\n   async with timeout_at(now + 1.5):\n       await inner()\n\n\nPlease note: it is not POSIX time but a time with\nundefined starting base, e.g. the time of the system power on.\n\n\nContext manager has ``.expired`` property for check if timeout happens\nexactly in context manager::\n\n   async with timeout(1.5) as cm:\n       await inner()\n   print(cm.expired)\n\nThe property is ``True`` if ``inner()`` execution is cancelled by\ntimeout context manager.\n\nIf ``inner()`` call explicitly raises ``TimeoutError`` ``cm.expired``\nis ``False``.\n\nThe scheduled deadline time is available as ``.deadline`` property::\n\n   async with timeout(1.5) as cm:\n       cm.deadline\n\nNot finished yet timeout can be rescheduled by ``shift_by()``\nor ``shift_to()`` methods::\n\n   async with timeout(1.5) as cm:\n       cm.shift(1)  # add another second on waiting\n       cm.update(loop.time() + 5)  # reschedule to now+5 seconds\n\nRescheduling is forbidden if the timeout is expired or after exit from ``async with``\ncode block.\n\n\nInstallation\n------------\n\n::\n\n   $ pip install async-timeout\n\nThe library is Python 3 only!\n\n\n\nAuthors and License\n-------------------\n\nThe module is written by Andrew Svetlov.\n\nIt's *Apache 2* licensed and freely available.\n\n\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/async_timeout-4.0.2.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "backports.zoneinfo",
        "version": "0.2.1",
        "platform": [
          "UNKNOWN"
        ],
        "summary": "Backport of the standard library zoneinfo module",
        "description_content_type": "text/markdown",
        "home_page": "https://github.com/pganssle/zoneinfo",
        "author": "Python Software Foundation",
        "author_email": "datetime-sig@python.org",
        "license": "Apache-2.0",
        "classifier": [
          "Development Status :: 4 - Beta",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: Apache Software License",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3 :: Only",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8"
        ],
        "requires_dist": [
          "importlib-resources ; python_version < \"3.7\"",
          "tzdata ; extra == 'tzdata'"
        ],
        "requires_python": ">=3.6",
        "project_url": [
          "Source, https://github.com/pganssle/zoneinfo",
          "Documentation, https://zoneinfo.readthedocs.io/en/latest/",
          "Bug Reports, https://github.com/pganssle/zoneinfo/issues"
        ],
        "provides_extra": [
          "tzdata"
        ],
        "description": "# `backports.zoneinfo`: Backport of the standard library module `zoneinfo`\n\nThis package was originally the reference implementation for [PEP 615](https://www.python.org/dev/peps/pep-0615/), which proposes support for the IANA time zone database in the standard library, and now serves as a backport to Python 3.6+ (including PyPy).\n\nThis exposes the `backports.zoneinfo` module, which is a backport of the [`zoneinfo`](https://docs.python.org/3.9/library/zoneinfo.html#module-zoneinfo) module. The backport's documentation can be found [on readthedocs](https://zoneinfo.readthedocs.io/en/latest/).\n\nThe module uses the system time zone data if available, and falls back to the [`tzdata`](https://tzdata.readthedocs.io/en/latest/) package (available [on PyPI](https://pypi.org/project/tzdata/)) if installed.\n\n## Installation and depending on this library\n\nThis module is called [`backports.zoneinfo`](https://pypi.org/project/backports.zoneinfo) on PyPI. To install it in your local environment, use:\n\n```\npip install backports.zoneinfo\n```\n\nOr (particularly on Windows), you can also use the `tzdata` extra (which basically just declares a dependency on `tzdata`, so this doesn't actually save you any typing 😅):\n\n```\npip install backports.zoneinfo[tzdata]\n```\n\nIf you want to use this in your application, it is best to use [PEP 508 environment markers](https://www.python.org/dev/peps/pep-0508/#environment-markers) to declare a dependency *conditional on the Python version*:\n\n```\nbackports.zoneinfo;python_version<\"3.9\"\n```\n\nSupport for `backports.zoneinfo` in Python 3.9+ is currently minimal, since it is expected that you would use the standard library `zoneinfo` module instead.\n\n## Use\n\nThe `backports.zoneinfo` module should be a drop-in replacement for the Python 3.9 standard library module `zoneinfo`. If you do not support anything earlier than Python 3.9, **you do not need this library**; if you are supporting Python 3.6+, you may want to use this idiom to \"fall back\" to ``backports.zoneinfo``:\n\n```python\ntry:\n    import zoneinfo\nexcept ImportError:\n    from backports import zoneinfo\n```\n\nTo get access to time zones with this module, construct a `ZoneInfo` object and attach it to your datetime:\n\n```python\n>>> from backports.zoneinfo import ZoneInfo\n>>> from datetime import datetime, timedelta, timezone\n>>> dt = datetime(1992, 3, 1, tzinfo=ZoneInfo(\"Europe/Minsk\"))\n>>> print(dt)\n1992-03-01 00:00:00+02:00\n>>> print(dt.utcoffset())\n2:00:00\n>>> print(dt.tzname())\nEET\n```\n\nArithmetic works as expected without the need for a \"normalization\" step:\n\n```python\n>>> dt += timedelta(days=90)\n>>> print(dt)\n1992-05-30 00:00:00+03:00\n>>> dt.utcoffset()\ndatetime.timedelta(seconds=10800)\n>>> dt.tzname()\n'EEST'\n```\n\nAmbiguous and imaginary times are handled using the `fold` attribute added in [PEP 495](https://www.python.org/dev/peps/pep-0495/):\n\n```python\n>>> dt = datetime(2020, 11, 1, 1, tzinfo=ZoneInfo(\"America/Chicago\"))\n>>> print(dt)\n2020-11-01 01:00:00-05:00\n>>> print(dt.replace(fold=1))\n2020-11-01 01:00:00-06:00\n\n>>> UTC = timezone.utc\n>>> print(dt.astimezone(UTC))\n2020-11-01 06:00:00+00:00\n>>> print(dt.replace(fold=1).astimezone(UTC))\n2020-11-01 07:00:00+00:00\n```\n\n# Contributing\n\nCurrently we are not accepting contributions to this repository because we have not put the CLA in place and we would like to avoid complicating the process of adoption into the standard library. Contributions to [CPython](https://github.com/python/cpython) will eventually be backported to this repository — see [the Python developer's guide](https://devguide.python.org/) for more information on how to contribute to CPython.\n\n\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/backports.zoneinfo-0.2.1.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "bce-python-sdk",
        "version": "0.8.83",
        "summary": "BCE SDK for python",
        "home_page": "http://bce.baidu.com",
        "author": "",
        "author_email": "",
        "license": "Apache License 2.0",
        "requires_dist": [
          "pycryptodome (>=3.8.0)",
          "future (>=0.6.0)",
          "six (>=1.4.0)"
        ],
        "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, <4"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/bce_python_sdk-0.8.83.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "bcrypt",
        "version": "4.0.1",
        "platform": [
          "UNKNOWN"
        ],
        "summary": "Modern password hashing for your software and your servers",
        "description_content_type": "text/x-rst",
        "home_page": "https://github.com/pyca/bcrypt/",
        "author": "The Python Cryptographic Authority developers",
        "author_email": "cryptography-dev@python.org",
        "license": "Apache License, Version 2.0",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "License :: OSI Approved :: Apache Software License",
          "Programming Language :: Python :: Implementation :: CPython",
          "Programming Language :: Python :: Implementation :: PyPy",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3 :: Only",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10"
        ],
        "requires_dist": [
          "pytest (!=3.3.0,>=3.2.1) ; extra == 'tests'",
          "mypy ; extra == 'typecheck'"
        ],
        "requires_python": ">=3.6",
        "provides_extra": [
          "tests",
          "typecheck"
        ],
        "description": "bcrypt\n======\n\n.. image:: https://img.shields.io/pypi/v/bcrypt.svg\n    :target: https://pypi.org/project/bcrypt/\n    :alt: Latest Version\n\n.. image:: https://github.com/pyca/bcrypt/workflows/CI/badge.svg?branch=main\n    :target: https://github.com/pyca/bcrypt/actions?query=workflow%3ACI+branch%3Amain\n\nAcceptable password hashing for your software and your servers (but you should\nreally use argon2id or scrypt)\n\n\nInstallation\n============\n\nTo install bcrypt, simply:\n\n.. code:: bash\n\n    $ pip install bcrypt\n\nNote that bcrypt should build very easily on Linux provided you have a C\ncompiler and a Rust compiler (the minimum supported Rust version is 1.56.0).\n\nFor Debian and Ubuntu, the following command will ensure that the required dependencies are installed:\n\n.. code:: bash\n\n    $ sudo apt-get install build-essential cargo\n\nFor Fedora and RHEL-derivatives, the following command will ensure that the required dependencies are installed:\n\n.. code:: bash\n\n    $ sudo yum install gcc cargo\n\nFor Alpine, the following command will ensure that the required dependencies are installed:\n\n.. code:: bash\n\n    $ apk add --update musl-dev gcc cargo\n\n\nAlternatives\n============\n\nWhile bcrypt remains an acceptable choice for password storage, depending on your specific use case you may also want to consider using scrypt (either via `standard library`_ or `cryptography`_) or argon2id via `argon2_cffi`_.\n\nChangelog\n=========\n\n4.0.1\n-----\n\n* We now build PyPy ``manylinux`` wheels.\n* Fixed a bug where passing an invalid ``salt`` to ``checkpw`` could result in\n  a ``pyo3_runtime.PanicException``. It now correctly raises a ``ValueError``.\n\n4.0.0\n-----\n\n* ``bcrypt`` is now implemented in Rust. Users building from source will need\n  to have a Rust compiler available. Nothing will change for users downloading\n  wheels.\n* We no longer ship ``manylinux2010`` wheels. Users should upgrade to the latest\n  ``pip`` to ensure this doesn’t cause issues downloading wheels on their\n  platform. We now ship ``manylinux_2_28`` wheels for users on new enough platforms.\n* ``NUL`` bytes are now allowed in inputs.\n\n\n3.2.2\n-----\n\n* Fixed packaging of ``py.typed`` files in wheels so that ``mypy`` works.\n\n3.2.1\n-----\n\n* Added support for compilation on z/OS\n* The next release of ``bcrypt`` with be 4.0 and it will require Rust at\n  compile time, for users building from source. There will be no additional\n  requirement for users who are installing from wheels. Users on most\n  platforms will be able to obtain a wheel by making sure they have an up to\n  date ``pip``. The minimum supported Rust version will be 1.56.0.\n* This will be the final release for which we ship ``manylinux2010`` wheels.\n  Going forward the minimum supported manylinux ABI for our wheels will be\n  ``manylinux2014``. The vast majority of users will continue to receive\n  ``manylinux`` wheels provided they have an up to date ``pip``.\n\n\n3.2.0\n-----\n\n* Added typehints for library functions.\n* Dropped support for Python versions less than 3.6 (2.7, 3.4, 3.5).\n* Shipped ``abi3`` Windows wheels (requires pip >= 20).\n\n3.1.7\n-----\n\n* Set a ``setuptools`` lower bound for PEP517 wheel building.\n* We no longer distribute 32-bit ``manylinux1`` wheels. Continuing to produce\n  them was a maintenance burden.\n\n3.1.6\n-----\n\n* Added support for compilation on Haiku.\n\n3.1.5\n-----\n\n* Added support for compilation on AIX.\n* Dropped Python 2.6 and 3.3 support.\n* Switched to using ``abi3`` wheels for Python 3. If you are not getting a\n  wheel on a compatible platform please upgrade your ``pip`` version.\n\n3.1.4\n-----\n\n* Fixed compilation with mingw and on illumos.\n\n3.1.3\n-----\n* Fixed a compilation issue on Solaris.\n* Added a warning when using too few rounds with ``kdf``.\n\n3.1.2\n-----\n* Fixed a compile issue affecting big endian platforms.\n* Fixed invalid escape sequence warnings on Python 3.6.\n* Fixed building in non-UTF8 environments on Python 2.\n\n3.1.1\n-----\n* Resolved a ``UserWarning`` when used with ``cffi`` 1.8.3.\n\n3.1.0\n-----\n* Added support for ``checkpw``, a convenience method for verifying a password.\n* Ensure that you get a ``$2y$`` hash when you input a ``$2y$`` salt.\n* Fixed a regression where ``$2a`` hashes were vulnerable to a wraparound bug.\n* Fixed compilation under Alpine Linux.\n\n3.0.0\n-----\n* Switched the C backend to code obtained from the OpenBSD project rather than\n  openwall.\n* Added support for ``bcrypt_pbkdf`` via the ``kdf`` function.\n\n2.0.0\n-----\n* Added support for an adjustible prefix when calling ``gensalt``.\n* Switched to CFFI 1.0+\n\nUsage\n-----\n\nPassword Hashing\n~~~~~~~~~~~~~~~~\n\nHashing and then later checking that a password matches the previous hashed\npassword is very simple:\n\n.. code:: pycon\n\n    >>> import bcrypt\n    >>> password = b\"super secret password\"\n    >>> # Hash a password for the first time, with a randomly-generated salt\n    >>> hashed = bcrypt.hashpw(password, bcrypt.gensalt())\n    >>> # Check that an unhashed password matches one that has previously been\n    >>> # hashed\n    >>> if bcrypt.checkpw(password, hashed):\n    ...     print(\"It Matches!\")\n    ... else:\n    ...     print(\"It Does not Match :(\")\n\nKDF\n~~~\n\nAs of 3.0.0 ``bcrypt`` now offers a ``kdf`` function which does ``bcrypt_pbkdf``.\nThis KDF is used in OpenSSH's newer encrypted private key format.\n\n.. code:: pycon\n\n    >>> import bcrypt\n    >>> key = bcrypt.kdf(\n    ...     password=b'password',\n    ...     salt=b'salt',\n    ...     desired_key_bytes=32,\n    ...     rounds=100)\n\n\nAdjustable Work Factor\n~~~~~~~~~~~~~~~~~~~~~~\nOne of bcrypt's features is an adjustable logarithmic work factor. To adjust\nthe work factor merely pass the desired number of rounds to\n``bcrypt.gensalt(rounds=12)`` which defaults to 12):\n\n.. code:: pycon\n\n    >>> import bcrypt\n    >>> password = b\"super secret password\"\n    >>> # Hash a password for the first time, with a certain number of rounds\n    >>> hashed = bcrypt.hashpw(password, bcrypt.gensalt(14))\n    >>> # Check that a unhashed password matches one that has previously been\n    >>> #   hashed\n    >>> if bcrypt.checkpw(password, hashed):\n    ...     print(\"It Matches!\")\n    ... else:\n    ...     print(\"It Does not Match :(\")\n\n\nAdjustable Prefix\n~~~~~~~~~~~~~~~~~\n\nAnother one of bcrypt's features is an adjustable prefix to let you define what\nlibraries you'll remain compatible with. To adjust this, pass either ``2a`` or\n``2b`` (the default) to ``bcrypt.gensalt(prefix=b\"2b\")`` as a bytes object.\n\nAs of 3.0.0 the ``$2y$`` prefix is still supported in ``hashpw`` but deprecated.\n\nMaximum Password Length\n~~~~~~~~~~~~~~~~~~~~~~~\n\nThe bcrypt algorithm only handles passwords up to 72 characters, any characters\nbeyond that are ignored. To work around this, a common approach is to hash a\npassword with a cryptographic hash (such as ``sha256``) and then base64\nencode it to prevent NULL byte problems before hashing the result with\n``bcrypt``:\n\n.. code:: pycon\n\n    >>> password = b\"an incredibly long password\" * 10\n    >>> hashed = bcrypt.hashpw(\n    ...     base64.b64encode(hashlib.sha256(password).digest()),\n    ...     bcrypt.gensalt()\n    ... )\n\nCompatibility\n-------------\n\nThis library should be compatible with py-bcrypt and it will run on Python\n3.6+, and PyPy 3.\n\nC Code\n------\n\nThis library uses code from OpenBSD.\n\nSecurity\n--------\n\n``bcrypt`` follows the `same security policy as cryptography`_, if you\nidentify a vulnerability, we ask you to contact us privately.\n\n.. _`same security policy as cryptography`: https://cryptography.io/en/latest/security.html\n.. _`standard library`: https://docs.python.org/3/library/hashlib.html#hashlib.scrypt\n.. _`argon2_cffi`: https://argon2-cffi.readthedocs.io\n.. _`cryptography`: https://cryptography.io/en/latest/hazmat/primitives/key-derivation-functions/#cryptography.hazmat.primitives.kdf.scrypt.Scrypt\n\n\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/bcrypt-4.0.1.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "blinker",
        "version": "1.6.2",
        "summary": "Fast, simple object-to-object and broadcast signaling",
        "description_content_type": "text/x-rst",
        "keywords": [
          "signal",
          "emit",
          "events",
          "broadcast"
        ],
        "author_email": "Jason Kirtland <jek@discorporate.us>",
        "maintainer_email": "Pallets Ecosystem <contact@palletsprojects.com>",
        "license": "MIT License",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: MIT License",
          "Operating System :: OS Independent",
          "Programming Language :: Python",
          "Topic :: Software Development :: Libraries"
        ],
        "requires_python": ">=3.7",
        "project_url": [
          "Homepage, https://blinker.readthedocs.io",
          "Documentation, https://blinker.readthedocs.io",
          "Source Code, https://github.com/pallets-eco/blinker/",
          "Issue Tracker, https://github.com/pallets-eco/blinker/issues/",
          "Chat, https://discord.gg/pallets"
        ],
        "description": "Blinker\n=======\n\nBlinker provides a fast dispatching system that allows any number of\ninterested parties to subscribe to events, or \"signals\".\n\nSignal receivers can subscribe to specific senders or receive signals\nsent by any sender.\n\n.. code-block:: pycon\n\n    >>> from blinker import signal\n    >>> started = signal('round-started')\n    >>> def each(round):\n    ...     print(f\"Round {round}\")\n    ...\n    >>> started.connect(each)\n\n    >>> def round_two(round):\n    ...     print(\"This is round two.\")\n    ...\n    >>> started.connect(round_two, sender=2)\n\n    >>> for round in range(1, 4):\n    ...     started.send(round)\n    ...\n    Round 1!\n    Round 2!\n    This is round two.\n    Round 3!\n\n\nLinks\n-----\n\n-   Documentation: https://blinker.readthedocs.io/\n-   Changes: https://blinker.readthedocs.io/#changes\n-   PyPI Releases: https://pypi.org/project/blinker/\n-   Source Code: https://github.com/pallets-eco/blinker/\n-   Issue Tracker: https://github.com/pallets-eco/blinker/issues/\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/blinker-1.6.2.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "cachetools",
        "version": "5.3.0",
        "summary": "Extensible memoizing collections and decorators",
        "home_page": "https://github.com/tkem/cachetools/",
        "author": "Thomas Kemmer",
        "author_email": "tkemmer@computer.org",
        "license": "MIT",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Environment :: Other Environment",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: MIT License",
          "Operating System :: OS Independent",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Topic :: Software Development :: Libraries :: Python Modules"
        ],
        "requires_python": "~=3.7",
        "description": "cachetools\n========================================================================\n\n.. image:: https://img.shields.io/pypi/v/cachetools\n   :target: https://pypi.org/project/cachetools/\n   :alt: Latest PyPI version\n\n.. image:: https://img.shields.io/github/actions/workflow/status/tkem/cachetools/ci.yml\n   :target: https://github.com/tkem/cachetools/actions/workflows/ci.yml\n   :alt: CI build status\n\n.. image:: https://img.shields.io/readthedocs/cachetools\n   :target: https://cachetools.readthedocs.io/\n   :alt: Documentation build status\n\n.. image:: https://img.shields.io/codecov/c/github/tkem/cachetools/master.svg\n   :target: https://codecov.io/gh/tkem/cachetools\n   :alt: Test coverage\n\n.. image:: https://img.shields.io/librariesio/sourcerank/pypi/cachetools\n   :target: https://libraries.io/pypi/cachetools\n   :alt: Libraries.io SourceRank\n\n.. image:: https://img.shields.io/github/license/tkem/cachetools\n   :target: https://raw.github.com/tkem/cachetools/master/LICENSE\n   :alt: License\n\n.. image:: https://img.shields.io/badge/code%20style-black-000000.svg\n   :target: https://github.com/psf/black\n   :alt: Code style: black\n\n\nThis module provides various memoizing collections and decorators,\nincluding variants of the Python Standard Library's `@lru_cache`_\nfunction decorator.\n\n.. code-block:: python\n\n   from cachetools import cached, LRUCache, TTLCache\n\n   # speed up calculating Fibonacci numbers with dynamic programming\n   @cached(cache={})\n   def fib(n):\n       return n if n < 2 else fib(n - 1) + fib(n - 2)\n\n   # cache least recently used Python Enhancement Proposals\n   @cached(cache=LRUCache(maxsize=32))\n   def get_pep(num):\n       url = 'http://www.python.org/dev/peps/pep-%04d/' % num\n       with urllib.request.urlopen(url) as s:\n           return s.read()\n\n   # cache weather data for no longer than ten minutes\n   @cached(cache=TTLCache(maxsize=1024, ttl=600))\n   def get_weather(place):\n       return owm.weather_at_place(place).get_weather()\n\nFor the purpose of this module, a *cache* is a mutable_ mapping_ of a\nfixed maximum size.  When the cache is full, i.e. by adding another\nitem the cache would exceed its maximum size, the cache must choose\nwhich item(s) to discard based on a suitable `cache algorithm`_.\n\nThis module provides multiple cache classes based on different cache\nalgorithms, as well as decorators for easily memoizing function and\nmethod calls.\n\n\nInstallation\n------------------------------------------------------------------------\n\ncachetools is available from PyPI_ and can be installed by running::\n\n  pip install cachetools\n\nTyping stubs for this package are provided by typeshed_ and can be\ninstalled by running::\n\n  pip install types-cachetools\n\n\nProject Resources\n------------------------------------------------------------------------\n\n- `Documentation`_\n- `Issue tracker`_\n- `Source code`_\n- `Change log`_\n\n\nRelated Projects\n------------------------------------------------------------------------\n\n- asyncache_: Helpers to use cachetools with async functions\n- CacheToolsUtils_: Cachetools Utilities\n- `kids.cache`_: Kids caching library\n- shelved-cache_: Persistent cache for Python cachetools\n\n\nLicense\n------------------------------------------------------------------------\n\nCopyright (c) 2014-2023 Thomas Kemmer.\n\nLicensed under the `MIT License`_.\n\n\n.. _@lru_cache: https://docs.python.org/3/library/functools.html#functools.lru_cache\n.. _mutable: https://docs.python.org/dev/glossary.html#term-mutable\n.. _mapping: https://docs.python.org/dev/glossary.html#term-mapping\n.. _cache algorithm: https://en.wikipedia.org/wiki/Cache_algorithms\n\n.. _PyPI: https://pypi.org/project/cachetools/\n.. _typeshed: https://github.com/python/typeshed/\n.. _Documentation: https://cachetools.readthedocs.io/\n.. _Issue tracker: https://github.com/tkem/cachetools/issues/\n.. _Source code: https://github.com/tkem/cachetools/\n.. _Change log: https://github.com/tkem/cachetools/blob/master/CHANGELOG.rst\n.. _MIT License: https://raw.github.com/tkem/cachetools/master/LICENSE\n\n.. _asyncache: https://pypi.org/project/asyncache/\n.. _CacheToolsUtils: https://pypi.org/project/CacheToolsUtils/\n.. _kids.cache: https://pypi.org/project/kids.cache/\n.. _shelved-cache: https://pypi.org/project/shelved-cache/\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/cachetools-5.3.0.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "cffi",
        "version": "1.15.1",
        "summary": "Foreign Function Interface for Python calling C code.",
        "home_page": "http://cffi.readthedocs.org",
        "author": "Armin Rigo, Maciej Fijalkowski",
        "author_email": "python-cffi@googlegroups.com",
        "license": "MIT",
        "classifier": [
          "Programming Language :: Python",
          "Programming Language :: Python :: 2",
          "Programming Language :: Python :: 2.7",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: Implementation :: CPython",
          "Programming Language :: Python :: Implementation :: PyPy",
          "License :: OSI Approved :: MIT License"
        ],
        "requires_dist": [
          "pycparser"
        ],
        "description": "\nCFFI\n====\n\nForeign Function Interface for Python calling C code.\nPlease see the `Documentation <http://cffi.readthedocs.org/>`_.\n\nContact\n-------\n\n`Mailing list <https://groups.google.com/forum/#!forum/python-cffi>`_\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/cffi-1.15.1.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "charset-normalizer",
        "version": "3.1.0",
        "summary": "The Real First Universal Charset Detector. Open, modern and actively maintained alternative to Chardet.",
        "description_content_type": "text/markdown",
        "keywords": [
          "encoding",
          "charset",
          "charset-detector",
          "detector",
          "normalization",
          "unicode",
          "chardet",
          "detect"
        ],
        "home_page": "https://github.com/Ousret/charset_normalizer",
        "author": "Ahmed TAHRI",
        "author_email": "ahmed.tahri@cloudnursery.dev",
        "license": "MIT",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "License :: OSI Approved :: MIT License",
          "Intended Audience :: Developers",
          "Topic :: Software Development :: Libraries :: Python Modules",
          "Operating System :: OS Independent",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Programming Language :: Python :: Implementation :: PyPy",
          "Topic :: Text Processing :: Linguistic",
          "Topic :: Utilities",
          "Typing :: Typed"
        ],
        "requires_python": ">=3.7.0",
        "project_url": [
          "Bug Reports, https://github.com/Ousret/charset_normalizer/issues",
          "Documentation, https://charset-normalizer.readthedocs.io/en/latest"
        ],
        "provides_extra": [
          "unicode_backport"
        ],
        "description": "<h1 align=\"center\">Charset Detection, for Everyone 👋 <a href=\"https://twitter.com/intent/tweet?text=The%20Real%20First%20Universal%20Charset%20%26%20Language%20Detector&url=https://www.github.com/Ousret/charset_normalizer&hashtags=python,encoding,chardet,developers\"><img src=\"https://img.shields.io/twitter/url/http/shields.io.svg?style=social\"/></a></h1>\n\n<p align=\"center\">\n  <sup>The Real First Universal Charset Detector</sup><br>\n  <a href=\"https://pypi.org/project/charset-normalizer\">\n    <img src=\"https://img.shields.io/pypi/pyversions/charset_normalizer.svg?orange=blue\" />\n  </a>\n  <a href=\"https://codecov.io/gh/Ousret/charset_normalizer\">\n      <img src=\"https://codecov.io/gh/Ousret/charset_normalizer/branch/master/graph/badge.svg\" />\n  </a>\n  <a href=\"https://pepy.tech/project/charset-normalizer/\">\n    <img alt=\"Download Count Total\" src=\"https://pepy.tech/badge/charset-normalizer/month\" />\n  </a>\n</p>\n\n> A library that helps you read text from an unknown charset encoding.<br /> Motivated by `chardet`,\n> I'm trying to resolve the issue by taking a new approach.\n> All IANA character set names for which the Python core library provides codecs are supported.\n\n<p align=\"center\">\n  >>>>> <a href=\"https://charsetnormalizerweb.ousret.now.sh\" target=\"_blank\">👉 Try Me Online Now, Then Adopt Me 👈 </a> <<<<<\n</p>\n\nThis project offers you an alternative to **Universal Charset Encoding Detector**, also known as **Chardet**.\n\n| Feature                                          | [Chardet](https://github.com/chardet/chardet) |                                           Charset Normalizer                                           | [cChardet](https://github.com/PyYoshi/cChardet) |\n|--------------------------------------------------|:---------------------------------------------:|:------------------------------------------------------------------------------------------------------:|:-----------------------------------------------:|\n| `Fast`                                           |                     ❌<br>                     |                                                 ✅<br>                                                  |                     ✅ <br>                      |\n| `Universal**`                                    |                       ❌                       |                                                   ✅                                                    |                        ❌                        |\n| `Reliable` **without** distinguishable standards |                       ❌                       |                                                   ✅                                                    |                        ✅                        |\n| `Reliable` **with** distinguishable standards    |                       ✅                       |                                                   ✅                                                    |                        ✅                        |\n| `License`                                        |           LGPL-2.1<br>_restrictive_           |                                                  MIT                                                   |            MPL-1.1<br>_restrictive_             |\n| `Native Python`                                  |                       ✅                       |                                                   ✅                                                    |                        ❌                        |\n| `Detect spoken language`                         |                       ❌                       |                                                   ✅                                                    |                       N/A                       |\n| `UnicodeDecodeError Safety`                      |                       ❌                       |                                                   ✅                                                    |                        ❌                        |\n| `Whl Size`                                       |                   193.6 kB                    |                                                39.5 kB                                                 |                     ~200 kB                     |\n| `Supported Encoding`                             |                      33                       | :tada: [90](https://charset-normalizer.readthedocs.io/en/latest/user/support.html#supported-encodings) |                       40                        |\n\n<p align=\"center\">\n<img src=\"https://i.imgflip.com/373iay.gif\" alt=\"Reading Normalized Text\" width=\"226\"/><img src=\"https://media.tenor.com/images/c0180f70732a18b4965448d33adba3d0/tenor.gif\" alt=\"Cat Reading Text\" width=\"200\"/>\n\n*\\*\\* : They are clearly using specific code for a specific encoding even if covering most of used one*<br> \nDid you got there because of the logs? See [https://charset-normalizer.readthedocs.io/en/latest/user/miscellaneous.html](https://charset-normalizer.readthedocs.io/en/latest/user/miscellaneous.html)\n\n## ⭐ Your support\n\n*Fork, test-it, star-it, submit your ideas! We do listen.*\n  \n## ⚡ Performance\n\nThis package offer better performance than its counterpart Chardet. Here are some numbers.\n\n| Package                                       | Accuracy | Mean per file (ms) | File per sec (est) |\n|-----------------------------------------------|:--------:|:------------------:|:------------------:|\n| [chardet](https://github.com/chardet/chardet) |   86 %   |       200 ms       |     5 file/sec     |\n| charset-normalizer                            | **98 %** |     **10 ms**      |    100 file/sec    |\n\n| Package                                       | 99th percentile | 95th percentile | 50th percentile |\n|-----------------------------------------------|:---------------:|:---------------:|:---------------:|\n| [chardet](https://github.com/chardet/chardet) |     1200 ms     |     287 ms      |      23 ms      |\n| charset-normalizer                            |     100 ms      |      50 ms      |      5 ms       |\n\nChardet's performance on larger file (1MB+) are very poor. Expect huge difference on large payload.\n\n> Stats are generated using 400+ files using default parameters. More details on used files, see GHA workflows.\n> And yes, these results might change at any time. The dataset can be updated to include more files.\n> The actual delays heavily depends on your CPU capabilities. The factors should remain the same.\n> Keep in mind that the stats are generous and that Chardet accuracy vs our is measured using Chardet initial capability\n> (eg. Supported Encoding) Challenge-them if you want.\n\n## ✨ Installation\n\nUsing PyPi for latest stable\n```sh\npip install charset-normalizer -U\n```\n\n## 🚀 Basic Usage\n\n### CLI\nThis package comes with a CLI.\n\n```\nusage: normalizer [-h] [-v] [-a] [-n] [-m] [-r] [-f] [-t THRESHOLD]\n                  file [file ...]\n\nThe Real First Universal Charset Detector. Discover originating encoding used\non text file. Normalize text to unicode.\n\npositional arguments:\n  files                 File(s) to be analysed\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -v, --verbose         Display complementary information about file if any.\n                        Stdout will contain logs about the detection process.\n  -a, --with-alternative\n                        Output complementary possibilities if any. Top-level\n                        JSON WILL be a list.\n  -n, --normalize       Permit to normalize input file. If not set, program\n                        does not write anything.\n  -m, --minimal         Only output the charset detected to STDOUT. Disabling\n                        JSON output.\n  -r, --replace         Replace file when trying to normalize it instead of\n                        creating a new one.\n  -f, --force           Replace file without asking if you are sure, use this\n                        flag with caution.\n  -t THRESHOLD, --threshold THRESHOLD\n                        Define a custom maximum amount of chaos allowed in\n                        decoded content. 0. <= chaos <= 1.\n  --version             Show version information and exit.\n```\n\n```bash\nnormalizer ./data/sample.1.fr.srt\n```\n\n:tada: Since version 1.4.0 the CLI produce easily usable stdout result in JSON format.\n\n```json\n{\n    \"path\": \"/home/default/projects/charset_normalizer/data/sample.1.fr.srt\",\n    \"encoding\": \"cp1252\",\n    \"encoding_aliases\": [\n        \"1252\",\n        \"windows_1252\"\n    ],\n    \"alternative_encodings\": [\n        \"cp1254\",\n        \"cp1256\",\n        \"cp1258\",\n        \"iso8859_14\",\n        \"iso8859_15\",\n        \"iso8859_16\",\n        \"iso8859_3\",\n        \"iso8859_9\",\n        \"latin_1\",\n        \"mbcs\"\n    ],\n    \"language\": \"French\",\n    \"alphabets\": [\n        \"Basic Latin\",\n        \"Latin-1 Supplement\"\n    ],\n    \"has_sig_or_bom\": false,\n    \"chaos\": 0.149,\n    \"coherence\": 97.152,\n    \"unicode_path\": null,\n    \"is_preferred\": true\n}\n```\n\n### Python\n*Just print out normalized text*\n```python\nfrom charset_normalizer import from_path\n\nresults = from_path('./my_subtitle.srt')\n\nprint(str(results.best()))\n```\n\n*Upgrade your code without effort*\n```python\nfrom charset_normalizer import detect\n```\n\nThe above code will behave the same as **chardet**. We ensure that we offer the best (reasonable) BC result possible.\n\nSee the docs for advanced usage : [readthedocs.io](https://charset-normalizer.readthedocs.io/en/latest/)\n\n## 😇 Why\n\nWhen I started using Chardet, I noticed that it was not suited to my expectations, and I wanted to propose a\nreliable alternative using a completely different method. Also! I never back down on a good challenge!\n\nI **don't care** about the **originating charset** encoding, because **two different tables** can\nproduce **two identical rendered string.**\nWhat I want is to get readable text, the best I can. \n\nIn a way, **I'm brute forcing text decoding.** How cool is that ? 😎\n\nDon't confuse package **ftfy** with charset-normalizer or chardet. ftfy goal is to repair unicode string whereas charset-normalizer to convert raw file in unknown encoding to unicode.\n\n## 🍰 How\n\n  - Discard all charset encoding table that could not fit the binary content.\n  - Measure noise, or the mess once opened (by chunks) with a corresponding charset encoding.\n  - Extract matches with the lowest mess detected.\n  - Additionally, we measure coherence / probe for a language.\n\n**Wait a minute**, what is noise/mess and coherence according to **YOU ?**\n\n*Noise :* I opened hundred of text files, **written by humans**, with the wrong encoding table. **I observed**, then\n**I established** some ground rules about **what is obvious** when **it seems like** a mess.\n I know that my interpretation of what is noise is probably incomplete, feel free to contribute in order to\n improve or rewrite it.\n\n*Coherence :* For each language there is on earth, we have computed ranked letter appearance occurrences (the best we can). So I thought\nthat intel is worth something here. So I use those records against decoded text to check if I can detect intelligent design.\n\n## ⚡ Known limitations\n\n  - Language detection is unreliable when text contains two or more languages sharing identical letters. (eg. HTML (english tags) + Turkish content (Sharing Latin characters))\n  - Every charset detector heavily depends on sufficient content. In common cases, do not bother run detection on very tiny content.\n\n## ⚠️ About Python EOLs\n\n**If you are running:**\n\n- Python >=2.7,<3.5: Unsupported\n- Python 3.5: charset-normalizer < 2.1\n- Python 3.6: charset-normalizer < 3.1\n\nUpgrade your Python interpreter as soon as possible.\n\n## 👤 Contributing\n\nContributions, issues and feature requests are very much welcome.<br />\nFeel free to check [issues page](https://github.com/ousret/charset_normalizer/issues) if you want to contribute.\n\n## 📝 License\n\nCopyright © [Ahmed TAHRI @Ousret](https://github.com/Ousret).<br />\nThis project is [MIT](https://github.com/Ousret/charset_normalizer/blob/master/LICENSE) licensed.\n\nCharacters frequencies used in this project © 2012 [Denny Vrandečić](http://simia.net/letters/)\n\n## 💼 For Enterprise\n\nProfessional support for charset-normalizer is available as part of the [Tidelift\nSubscription][1].  Tidelift gives software development teams a single source for\npurchasing and maintaining their software, with professional grade assurances\nfrom the experts who know it best, while seamlessly integrating with existing\ntools.\n\n[1]: https://tidelift.com/subscription/pkg/pypi-charset-normalizer?utm_source=pypi-charset-normalizer&utm_medium=readme\n\n# Changelog\nAll notable changes to charset-normalizer will be documented in this file. This project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/).\n\n## [3.1.0](https://github.com/Ousret/charset_normalizer/compare/3.0.1...3.1.0) (2023-03-06)\n\n### Added\n- Argument `should_rename_legacy` for legacy function `detect` and disregard any new arguments without errors (PR #262)\n\n### Removed\n- Support for Python 3.6 (PR #260)\n\n### Changed\n- Optional speedup provided by mypy/c 1.0.1\n\n## [3.0.1](https://github.com/Ousret/charset_normalizer/compare/3.0.0...3.0.1) (2022-11-18)\n\n### Fixed\n- Multi-bytes cutter/chunk generator did not always cut correctly (PR #233)\n\n### Changed\n- Speedup provided by mypy/c 0.990 on Python >= 3.7\n\n## [3.0.0](https://github.com/Ousret/charset_normalizer/compare/2.1.1...3.0.0) (2022-10-20)\n\n### Added\n- Extend the capability of explain=True when cp_isolation contains at most two entries (min one), will log in details of the Mess-detector results\n- Support for alternative language frequency set in charset_normalizer.assets.FREQUENCIES\n- Add parameter `language_threshold` in `from_bytes`, `from_path` and `from_fp` to adjust the minimum expected coherence ratio\n- `normalizer --version` now specify if current version provide extra speedup (meaning mypyc compilation whl)\n\n### Changed\n- Build with static metadata using 'build' frontend\n- Make the language detection stricter\n- Optional: Module `md.py` can be compiled using Mypyc to provide an extra speedup up to 4x faster than v2.1\n\n### Fixed\n- CLI with opt --normalize fail when using full path for files\n- TooManyAccentuatedPlugin induce false positive on the mess detection when too few alpha character have been fed to it\n- Sphinx warnings when generating the documentation\n\n### Removed\n- Coherence detector no longer return 'Simple English' instead return 'English'\n- Coherence detector no longer return 'Classical Chinese' instead return 'Chinese'\n- Breaking: Method `first()` and `best()` from CharsetMatch\n- UTF-7 will no longer appear as \"detected\" without a recognized SIG/mark (is unreliable/conflict with ASCII)\n- Breaking: Class aliases CharsetDetector, CharsetDoctor, CharsetNormalizerMatch and CharsetNormalizerMatches\n- Breaking: Top-level function `normalize`\n- Breaking: Properties `chaos_secondary_pass`, `coherence_non_latin` and `w_counter` from CharsetMatch\n- Support for the backport `unicodedata2`\n\n## [3.0.0rc1](https://github.com/Ousret/charset_normalizer/compare/3.0.0b2...3.0.0rc1) (2022-10-18)\n\n### Added\n- Extend the capability of explain=True when cp_isolation contains at most two entries (min one), will log in details of the Mess-detector results\n- Support for alternative language frequency set in charset_normalizer.assets.FREQUENCIES\n- Add parameter `language_threshold` in `from_bytes`, `from_path` and `from_fp` to adjust the minimum expected coherence ratio\n\n### Changed\n- Build with static metadata using 'build' frontend\n- Make the language detection stricter\n\n### Fixed\n- CLI with opt --normalize fail when using full path for files\n- TooManyAccentuatedPlugin induce false positive on the mess detection when too few alpha character have been fed to it\n\n### Removed\n- Coherence detector no longer return 'Simple English' instead return 'English'\n- Coherence detector no longer return 'Classical Chinese' instead return 'Chinese'\n\n## [3.0.0b2](https://github.com/Ousret/charset_normalizer/compare/3.0.0b1...3.0.0b2) (2022-08-21)\n\n### Added\n- `normalizer --version` now specify if current version provide extra speedup (meaning mypyc compilation whl)\n\n### Removed\n- Breaking: Method `first()` and `best()` from CharsetMatch\n- UTF-7 will no longer appear as \"detected\" without a recognized SIG/mark (is unreliable/conflict with ASCII)\n\n### Fixed\n- Sphinx warnings when generating the documentation\n\n## [3.0.0b1](https://github.com/Ousret/charset_normalizer/compare/2.1.0...3.0.0b1) (2022-08-15)\n\n### Changed\n- Optional: Module `md.py` can be compiled using Mypyc to provide an extra speedup up to 4x faster than v2.1\n\n### Removed\n- Breaking: Class aliases CharsetDetector, CharsetDoctor, CharsetNormalizerMatch and CharsetNormalizerMatches\n- Breaking: Top-level function `normalize`\n- Breaking: Properties `chaos_secondary_pass`, `coherence_non_latin` and `w_counter` from CharsetMatch\n- Support for the backport `unicodedata2`\n\n## [2.1.1](https://github.com/Ousret/charset_normalizer/compare/2.1.0...2.1.1) (2022-08-19)\n\n### Deprecated\n- Function `normalize` scheduled for removal in 3.0\n\n### Changed\n- Removed useless call to decode in fn is_unprintable (#206)\n\n### Fixed\n- Third-party library (i18n xgettext) crashing not recognizing utf_8 (PEP 263) with underscore from [@aleksandernovikov](https://github.com/aleksandernovikov) (#204)\n\n## [2.1.0](https://github.com/Ousret/charset_normalizer/compare/2.0.12...2.1.0) (2022-06-19)\n\n### Added\n- Output the Unicode table version when running the CLI with `--version` (PR #194)\n\n### Changed\n- Re-use decoded buffer for single byte character sets from [@nijel](https://github.com/nijel) (PR #175)\n- Fixing some performance bottlenecks from [@deedy5](https://github.com/deedy5) (PR #183)\n\n### Fixed\n- Workaround potential bug in cpython with Zero Width No-Break Space located in Arabic Presentation Forms-B, Unicode 1.1 not acknowledged as space (PR #175)\n- CLI default threshold aligned with the API threshold from [@oleksandr-kuzmenko](https://github.com/oleksandr-kuzmenko) (PR #181)\n\n### Removed\n- Support for Python 3.5 (PR #192)\n\n### Deprecated\n- Use of backport unicodedata from `unicodedata2` as Python is quickly catching up, scheduled for removal in 3.0 (PR #194)\n\n## [2.0.12](https://github.com/Ousret/charset_normalizer/compare/2.0.11...2.0.12) (2022-02-12)\n\n### Fixed\n- ASCII miss-detection on rare cases (PR #170) \n\n## [2.0.11](https://github.com/Ousret/charset_normalizer/compare/2.0.10...2.0.11) (2022-01-30)\n\n### Added\n- Explicit support for Python 3.11 (PR #164)\n\n### Changed\n- The logging behavior have been completely reviewed, now using only TRACE and DEBUG levels (PR #163 #165)\n\n## [2.0.10](https://github.com/Ousret/charset_normalizer/compare/2.0.9...2.0.10) (2022-01-04)\n\n### Fixed\n- Fallback match entries might lead to UnicodeDecodeError for large bytes sequence (PR #154)\n\n### Changed\n- Skipping the language-detection (CD) on ASCII (PR #155)\n\n## [2.0.9](https://github.com/Ousret/charset_normalizer/compare/2.0.8...2.0.9) (2021-12-03)\n\n### Changed\n- Moderating the logging impact (since 2.0.8) for specific environments (PR #147)\n\n### Fixed\n- Wrong logging level applied when setting kwarg `explain` to True (PR #146)\n\n## [2.0.8](https://github.com/Ousret/charset_normalizer/compare/2.0.7...2.0.8) (2021-11-24)\n### Changed\n- Improvement over Vietnamese detection (PR #126)\n- MD improvement on trailing data and long foreign (non-pure latin) data (PR #124)\n- Efficiency improvements in cd/alphabet_languages from [@adbar](https://github.com/adbar) (PR #122)\n- call sum() without an intermediary list following PEP 289 recommendations from [@adbar](https://github.com/adbar) (PR #129)\n- Code style as refactored by Sourcery-AI (PR #131) \n- Minor adjustment on the MD around european words (PR #133)\n- Remove and replace SRTs from assets / tests (PR #139)\n- Initialize the library logger with a `NullHandler` by default from [@nmaynes](https://github.com/nmaynes) (PR #135)\n- Setting kwarg `explain` to True will add provisionally (bounded to function lifespan) a specific stream handler (PR #135)\n\n### Fixed\n- Fix large (misleading) sequence giving UnicodeDecodeError (PR #137)\n- Avoid using too insignificant chunk (PR #137)\n\n### Added\n- Add and expose function `set_logging_handler` to configure a specific StreamHandler from [@nmaynes](https://github.com/nmaynes) (PR #135)\n- Add `CHANGELOG.md` entries, format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/) (PR #141)\n\n## [2.0.7](https://github.com/Ousret/charset_normalizer/compare/2.0.6...2.0.7) (2021-10-11)\n### Added\n- Add support for Kazakh (Cyrillic) language detection (PR #109)\n\n### Changed\n- Further, improve inferring the language from a given single-byte code page (PR #112)\n- Vainly trying to leverage PEP263 when PEP3120 is not supported (PR #116)\n- Refactoring for potential performance improvements in loops from [@adbar](https://github.com/adbar) (PR #113)\n- Various detection improvement (MD+CD) (PR #117)\n\n### Removed\n- Remove redundant logging entry about detected language(s) (PR #115)\n\n### Fixed\n- Fix a minor inconsistency between Python 3.5 and other versions regarding language detection (PR #117 #102)\n\n## [2.0.6](https://github.com/Ousret/charset_normalizer/compare/2.0.5...2.0.6) (2021-09-18)\n### Fixed\n- Unforeseen regression with the loss of the backward-compatibility with some older minor of Python 3.5.x (PR #100)\n- Fix CLI crash when using --minimal output in certain cases (PR #103)\n\n### Changed\n- Minor improvement to the detection efficiency (less than 1%) (PR #106 #101)\n\n## [2.0.5](https://github.com/Ousret/charset_normalizer/compare/2.0.4...2.0.5) (2021-09-14)\n### Changed\n- The project now comply with: flake8, mypy, isort and black to ensure a better overall quality (PR #81)\n- The BC-support with v1.x was improved, the old staticmethods are restored (PR #82)\n- The Unicode detection is slightly improved (PR #93)\n- Add syntax sugar \\_\\_bool\\_\\_ for results CharsetMatches list-container (PR #91)\n\n### Removed\n- The project no longer raise warning on tiny content given for detection, will be simply logged as warning instead (PR #92)\n\n### Fixed\n- In some rare case, the chunks extractor could cut in the middle of a multi-byte character and could mislead the mess detection (PR #95)\n- Some rare 'space' characters could trip up the UnprintablePlugin/Mess detection (PR #96)\n- The MANIFEST.in was not exhaustive (PR #78)\n\n## [2.0.4](https://github.com/Ousret/charset_normalizer/compare/2.0.3...2.0.4) (2021-07-30)\n### Fixed\n- The CLI no longer raise an unexpected exception when no encoding has been found (PR #70)\n- Fix accessing the 'alphabets' property when the payload contains surrogate characters (PR #68)\n- The logger could mislead (explain=True) on detected languages and the impact of one MBCS match (PR #72)\n- Submatch factoring could be wrong in rare edge cases (PR #72)\n- Multiple files given to the CLI were ignored when publishing results to STDOUT. (After the first path) (PR #72)\n- Fix line endings from CRLF to LF for certain project files (PR #67)\n\n### Changed\n- Adjust the MD to lower the sensitivity, thus improving the global detection reliability (PR #69 #76)\n- Allow fallback on specified encoding if any (PR #71)\n\n## [2.0.3](https://github.com/Ousret/charset_normalizer/compare/2.0.2...2.0.3) (2021-07-16)\n### Changed\n- Part of the detection mechanism has been improved to be less sensitive, resulting in more accurate detection results. Especially ASCII. (PR #63)\n- According to the community wishes, the detection will fall back on ASCII or UTF-8 in a last-resort case. (PR #64)\n\n## [2.0.2](https://github.com/Ousret/charset_normalizer/compare/2.0.1...2.0.2) (2021-07-15)\n### Fixed\n- Empty/Too small JSON payload miss-detection fixed. Report from [@tseaver](https://github.com/tseaver) (PR #59) \n\n### Changed\n- Don't inject unicodedata2 into sys.modules from [@akx](https://github.com/akx) (PR #57)\n\n## [2.0.1](https://github.com/Ousret/charset_normalizer/compare/2.0.0...2.0.1) (2021-07-13)\n### Fixed\n- Make it work where there isn't a filesystem available, dropping assets frequencies.json. Report from [@sethmlarson](https://github.com/sethmlarson). (PR #55)\n- Using explain=False permanently disable the verbose output in the current runtime (PR #47)\n- One log entry (language target preemptive) was not show in logs when using explain=True (PR #47)\n- Fix undesired exception (ValueError) on getitem of instance CharsetMatches (PR #52)\n\n### Changed\n- Public function normalize default args values were not aligned with from_bytes (PR #53)\n\n### Added\n- You may now use charset aliases in cp_isolation and cp_exclusion arguments (PR #47)\n\n## [2.0.0](https://github.com/Ousret/charset_normalizer/compare/1.4.1...2.0.0) (2021-07-02)\n### Changed\n- 4x to 5 times faster than the previous 1.4.0 release. At least 2x faster than Chardet.\n- Accent has been made on UTF-8 detection, should perform rather instantaneous.\n- The backward compatibility with Chardet has been greatly improved. The legacy detect function returns an identical charset name whenever possible.\n- The detection mechanism has been slightly improved, now Turkish content is detected correctly (most of the time)\n- The program has been rewritten to ease the readability and maintainability. (+Using static typing)+\n- utf_7 detection has been reinstated.\n\n### Removed\n- This package no longer require anything when used with Python 3.5 (Dropped cached_property)\n- Removed support for these languages: Catalan, Esperanto, Kazakh, Baque, Volapük, Azeri, Galician, Nynorsk, Macedonian, and Serbocroatian.\n- The exception hook on UnicodeDecodeError has been removed.\n\n### Deprecated\n- Methods coherence_non_latin, w_counter, chaos_secondary_pass of the class CharsetMatch are now deprecated and scheduled for removal in v3.0\n\n### Fixed\n- The CLI output used the relative path of the file(s). Should be absolute.\n\n## [1.4.1](https://github.com/Ousret/charset_normalizer/compare/1.4.0...1.4.1) (2021-05-28)\n### Fixed\n- Logger configuration/usage no longer conflict with others (PR #44)\n\n## [1.4.0](https://github.com/Ousret/charset_normalizer/compare/1.3.9...1.4.0) (2021-05-21)\n### Removed\n- Using standard logging instead of using the package loguru.\n- Dropping nose test framework in favor of the maintained pytest.\n- Choose to not use dragonmapper package to help with gibberish Chinese/CJK text.\n- Require cached_property only for Python 3.5 due to constraint. Dropping for every other interpreter version.\n- Stop support for UTF-7 that does not contain a SIG.\n- Dropping PrettyTable, replaced with pure JSON output in CLI.\n\n### Fixed\n- BOM marker in a CharsetNormalizerMatch instance could be False in rare cases even if obviously present. Due to the sub-match factoring process.\n- Not searching properly for the BOM when trying utf32/16 parent codec.\n\n### Changed\n- Improving the package final size by compressing frequencies.json.\n- Huge improvement over the larges payload.\n\n### Added\n- CLI now produces JSON consumable output.\n- Return ASCII if given sequences fit. Given reasonable confidence.\n\n## [1.3.9](https://github.com/Ousret/charset_normalizer/compare/1.3.8...1.3.9) (2021-05-13)\n\n### Fixed\n- In some very rare cases, you may end up getting encode/decode errors due to a bad bytes payload (PR #40)\n\n## [1.3.8](https://github.com/Ousret/charset_normalizer/compare/1.3.7...1.3.8) (2021-05-12)\n\n### Fixed\n- Empty given payload for detection may cause an exception if trying to access the `alphabets` property. (PR #39)\n\n## [1.3.7](https://github.com/Ousret/charset_normalizer/compare/1.3.6...1.3.7) (2021-05-12)\n\n### Fixed\n- The legacy detect function should return UTF-8-SIG if sig is present in the payload. (PR #38)\n\n## [1.3.6](https://github.com/Ousret/charset_normalizer/compare/1.3.5...1.3.6) (2021-02-09)\n\n### Changed\n- Amend the previous release to allow prettytable 2.0 (PR #35)\n\n## [1.3.5](https://github.com/Ousret/charset_normalizer/compare/1.3.4...1.3.5) (2021-02-08)\n\n### Fixed\n- Fix error while using the package with a python pre-release interpreter (PR #33)\n\n### Changed\n- Dependencies refactoring, constraints revised.\n\n### Added\n- Add python 3.9 and 3.10 to the supported interpreters\n\nMIT License\n\nCopyright (c) 2019 TAHRI Ahmed R.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/charset_normalizer-3.1.0.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "click",
        "version": "8.1.3",
        "platform": [
          "UNKNOWN"
        ],
        "summary": "Composable command line interface toolkit",
        "description_content_type": "text/x-rst",
        "home_page": "https://palletsprojects.com/p/click/",
        "author": "Armin Ronacher",
        "author_email": "armin.ronacher@active-4.com",
        "maintainer": "Pallets",
        "maintainer_email": "contact@palletsprojects.com",
        "license": "BSD-3-Clause",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: BSD License",
          "Operating System :: OS Independent",
          "Programming Language :: Python"
        ],
        "requires_dist": [
          "colorama ; platform_system == \"Windows\"",
          "importlib-metadata ; python_version < \"3.8\""
        ],
        "requires_python": ">=3.7",
        "project_url": [
          "Donate, https://palletsprojects.com/donate",
          "Documentation, https://click.palletsprojects.com/",
          "Changes, https://click.palletsprojects.com/changes/",
          "Source Code, https://github.com/pallets/click/",
          "Issue Tracker, https://github.com/pallets/click/issues/",
          "Twitter, https://twitter.com/PalletsTeam",
          "Chat, https://discord.gg/pallets"
        ],
        "description": "\\$ click\\_\n==========\n\nClick is a Python package for creating beautiful command line interfaces\nin a composable way with as little code as necessary. It's the \"Command\nLine Interface Creation Kit\". It's highly configurable but comes with\nsensible defaults out of the box.\n\nIt aims to make the process of writing command line tools quick and fun\nwhile also preventing any frustration caused by the inability to\nimplement an intended CLI API.\n\nClick in three points:\n\n-   Arbitrary nesting of commands\n-   Automatic help page generation\n-   Supports lazy loading of subcommands at runtime\n\n\nInstalling\n----------\n\nInstall and update using `pip`_:\n\n.. code-block:: text\n\n    $ pip install -U click\n\n.. _pip: https://pip.pypa.io/en/stable/getting-started/\n\n\nA Simple Example\n----------------\n\n.. code-block:: python\n\n    import click\n\n    @click.command()\n    @click.option(\"--count\", default=1, help=\"Number of greetings.\")\n    @click.option(\"--name\", prompt=\"Your name\", help=\"The person to greet.\")\n    def hello(count, name):\n        \"\"\"Simple program that greets NAME for a total of COUNT times.\"\"\"\n        for _ in range(count):\n            click.echo(f\"Hello, {name}!\")\n\n    if __name__ == '__main__':\n        hello()\n\n.. code-block:: text\n\n    $ python hello.py --count=3\n    Your name: Click\n    Hello, Click!\n    Hello, Click!\n    Hello, Click!\n\n\nDonate\n------\n\nThe Pallets organization develops and supports Click and other popular\npackages. In order to grow the community of contributors and users, and\nallow the maintainers to devote more time to the projects, `please\ndonate today`_.\n\n.. _please donate today: https://palletsprojects.com/donate\n\n\nLinks\n-----\n\n-   Documentation: https://click.palletsprojects.com/\n-   Changes: https://click.palletsprojects.com/changes/\n-   PyPI Releases: https://pypi.org/project/click/\n-   Source Code: https://github.com/pallets/click\n-   Issue Tracker: https://github.com/pallets/click/issues\n-   Website: https://palletsprojects.com/p/click\n-   Twitter: https://twitter.com/PalletsTeam\n-   Chat: https://discord.gg/pallets\n\n\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/click-8.1.3.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "contourpy",
        "version": "1.0.7",
        "platform": [
          "any"
        ],
        "summary": "Python library for calculating contours of 2D quadrilateral grids",
        "description_content_type": "text/markdown",
        "author": "Ian Thomas",
        "author_email": "ianthomas23@gmail.com",
        "license": "BSD-3-Clause",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Intended Audience :: Developers",
          "Intended Audience :: Science/Research",
          "License :: OSI Approved :: BSD License",
          "Programming Language :: C++",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Topic :: Scientific/Engineering :: Information Analysis",
          "Topic :: Scientific/Engineering :: Mathematics",
          "Topic :: Scientific/Engineering :: Visualization"
        ],
        "requires_dist": [
          "numpy (>=1.16)",
          "bokeh ; extra == 'bokeh'",
          "chromedriver ; extra == 'bokeh'",
          "selenium ; extra == 'bokeh'",
          "furo ; extra == 'docs'",
          "sphinx-copybutton ; extra == 'docs'",
          "contourpy[bokeh] ; extra == 'mypy'",
          "docutils-stubs ; extra == 'mypy'",
          "mypy (==0.991) ; extra == 'mypy'",
          "types-Pillow ; extra == 'mypy'",
          "matplotlib ; extra == 'test'",
          "Pillow ; extra == 'test'",
          "pytest ; extra == 'test'",
          "pytest ; extra == 'test-no-images'"
        ],
        "requires_python": ">=3.8",
        "project_url": [
          "documentation, https://contourpy.readthedocs.io",
          "repository, https://github.com/contourpy/contourpy"
        ],
        "provides_extra": [
          "bokeh",
          "docs",
          "mypy",
          "test",
          "test-no-images"
        ],
        "description": "<picture>\n  <source media=\"(prefers-color-scheme: dark)\" srcset=\"https://raw.githubusercontent.com/contourpy/contourpy/main/docs/_static/contourpy_logo_horiz_white.svg\">\n  <img alt=\"ContourPy\" src=\"https://raw.githubusercontent.com/contourpy/contourpy/main/docs/_static/contourpy_logo_horiz.svg\" height=\"90\">\n</picture>\n\nContourPy is a Python library for calculating contours of 2D quadrilateral grids.  It is written in C++11 and wrapped using pybind11.\n\nIt contains the 2005 and 2014 algorithms used in Matplotlib as well as a newer algorithm that includes more features and is available in both serial and multithreaded versions.  It provides an easy way for Python libraries to use contouring algorithms without having to include Matplotlib as a dependency.\n\n  * **Documentation**: https://contourpy.readthedocs.io\n  * **Source code**: https://github.com/contourpy/contourpy\n\n| | |\n| --- | --- |\n| Latest release | [![PyPI version](https://img.shields.io/pypi/v/contourpy.svg?label=pypi&color=fdae61)](https://pypi.python.org/pypi/contourpy) [![conda-forge version](https://img.shields.io/conda/v/conda-forge/contourpy.svg?label=conda-forge&color=a6d96a)](https://anaconda.org/conda-forge/contourpy) [![anaconda version](https://img.shields.io/conda/v/anaconda/contourpy.svg?label=anaconda&color=1a9641)](https://anaconda.org/anaconda/contourpy) |\n| Downloads | [![PyPi downloads](https://img.shields.io/pypi/dm/contourpy?label=pypi&style=flat&color=fdae61)](https://pepy.tech/project/contourpy) [![conda-forge downloads](https://raw.githubusercontent.com/contourpy/condabadges/main/cache/contourpy_conda-forge_monthly.svg)](https://anaconda.org/conda-forge/contourpy) [![anaconda downloads](https://raw.githubusercontent.com/contourpy/condabadges/main/cache/contourpy_anaconda_monthly.svg)](https://anaconda.org/anaconda/contourpy) |\n| Python version | [![Platforms](https://img.shields.io/pypi/pyversions/contourpy?color=fdae61)](https://pypi.org/project/contourpy/) |\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/contourpy-1.0.7.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "cryptography",
        "version": "40.0.2",
        "platform": [
          "UNKNOWN"
        ],
        "summary": "cryptography is a package which provides cryptographic recipes and primitives to Python developers.",
        "description_content_type": "text/x-rst",
        "home_page": "https://github.com/pyca/cryptography",
        "author": "The Python Cryptographic Authority and individual contributors",
        "author_email": "cryptography-dev@python.org",
        "license": "(Apache-2.0 OR BSD-3-Clause) AND PSF-2.0",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: Apache Software License",
          "License :: OSI Approved :: BSD License",
          "Natural Language :: English",
          "Operating System :: MacOS :: MacOS X",
          "Operating System :: POSIX",
          "Operating System :: POSIX :: BSD",
          "Operating System :: POSIX :: Linux",
          "Operating System :: Microsoft :: Windows",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3 :: Only",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Programming Language :: Python :: Implementation :: CPython",
          "Programming Language :: Python :: Implementation :: PyPy",
          "Topic :: Security :: Cryptography"
        ],
        "requires_dist": [
          "cffi (>=1.12)",
          "sphinx (>=5.3.0) ; extra == 'docs'",
          "sphinx-rtd-theme (>=1.1.1) ; extra == 'docs'",
          "pyenchant (>=1.6.11) ; extra == 'docstest'",
          "twine (>=1.12.0) ; extra == 'docstest'",
          "sphinxcontrib-spelling (>=4.0.1) ; extra == 'docstest'",
          "black ; extra == 'pep8test'",
          "ruff ; extra == 'pep8test'",
          "mypy ; extra == 'pep8test'",
          "check-manifest ; extra == 'pep8test'",
          "setuptools-rust (>=0.11.4) ; extra == 'sdist'",
          "bcrypt (>=3.1.5) ; extra == 'ssh'",
          "pytest (>=6.2.0) ; extra == 'test'",
          "pytest-shard (>=0.1.2) ; extra == 'test'",
          "pytest-benchmark ; extra == 'test'",
          "pytest-cov ; extra == 'test'",
          "pytest-subtests ; extra == 'test'",
          "pytest-xdist ; extra == 'test'",
          "pretend ; extra == 'test'",
          "iso8601 ; extra == 'test'",
          "pytest-randomly ; extra == 'test-randomorder'",
          "tox ; extra == 'tox'"
        ],
        "requires_python": ">=3.6",
        "project_url": [
          "Documentation, https://cryptography.io/",
          "Source, https://github.com/pyca/cryptography/",
          "Issues, https://github.com/pyca/cryptography/issues",
          "Changelog, https://cryptography.io/en/latest/changelog/"
        ],
        "provides_extra": [
          "docs",
          "docstest",
          "pep8test",
          "sdist",
          "ssh",
          "test",
          "test-randomorder",
          "tox"
        ],
        "description": "pyca/cryptography\n=================\n\n.. image:: https://img.shields.io/pypi/v/cryptography.svg\n    :target: https://pypi.org/project/cryptography/\n    :alt: Latest Version\n\n.. image:: https://readthedocs.org/projects/cryptography/badge/?version=latest\n    :target: https://cryptography.io\n    :alt: Latest Docs\n\n.. image:: https://github.com/pyca/cryptography/workflows/CI/badge.svg?branch=main\n    :target: https://github.com/pyca/cryptography/actions?query=workflow%3ACI+branch%3Amain\n\n\n``cryptography`` is a package which provides cryptographic recipes and\nprimitives to Python developers. Our goal is for it to be your \"cryptographic\nstandard library\". It supports Python 3.6+ and PyPy3 7.3.10+.\n\n``cryptography`` includes both high level recipes and low level interfaces to\ncommon cryptographic algorithms such as symmetric ciphers, message digests, and\nkey derivation functions. For example, to encrypt something with\n``cryptography``'s high level symmetric encryption recipe:\n\n.. code-block:: pycon\n\n    >>> from cryptography.fernet import Fernet\n    >>> # Put this somewhere safe!\n    >>> key = Fernet.generate_key()\n    >>> f = Fernet(key)\n    >>> token = f.encrypt(b\"A really secret message. Not for prying eyes.\")\n    >>> token\n    b'...'\n    >>> f.decrypt(token)\n    b'A really secret message. Not for prying eyes.'\n\nYou can find more information in the `documentation`_.\n\nYou can install ``cryptography`` with:\n\n.. code-block:: console\n\n    $ pip install cryptography\n\nFor full details see `the installation documentation`_.\n\nDiscussion\n~~~~~~~~~~\n\nIf you run into bugs, you can file them in our `issue tracker`_.\n\nWe maintain a `cryptography-dev`_ mailing list for development discussion.\n\nYou can also join ``#pyca`` on ``irc.libera.chat`` to ask questions or get\ninvolved.\n\nSecurity\n~~~~~~~~\n\nNeed to report a security issue? Please consult our `security reporting`_\ndocumentation.\n\n\n.. _`documentation`: https://cryptography.io/\n.. _`the installation documentation`: https://cryptography.io/en/latest/installation/\n.. _`issue tracker`: https://github.com/pyca/cryptography/issues\n.. _`cryptography-dev`: https://mail.python.org/mailman/listinfo/cryptography-dev\n.. _`security reporting`: https://cryptography.io/en/latest/security/\n\n\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/cryptography-40.0.2.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "cycler",
        "version": "0.11.0",
        "platform": [
          "Cross platform (Linux",
          "macOS",
          "Windows)"
        ],
        "summary": "Composable style cycles",
        "keywords": [
          "cycle",
          "kwargs"
        ],
        "home_page": "https://github.com/matplotlib/cycler",
        "author": "Thomas A Caswell",
        "author_email": "matplotlib-users@python.org",
        "license": "BSD",
        "classifier": [
          "License :: OSI Approved :: BSD License",
          "Development Status :: 4 - Beta",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3 :: Only"
        ],
        "requires_python": ">=3.6",
        "description": "UNKNOWN\n\n\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/cycler-0.11.0.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "decorator",
        "version": "5.1.1",
        "platform": [
          "All"
        ],
        "summary": "Decorators for Humans",
        "keywords": [
          "decorators",
          "generic",
          "utility"
        ],
        "home_page": "https://github.com/micheles/decorator",
        "author": "Michele Simionato",
        "author_email": "michele.simionato@gmail.com",
        "license": "new BSD License",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: BSD License",
          "Natural Language :: English",
          "Operating System :: OS Independent",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3.5",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: Implementation :: CPython",
          "Topic :: Software Development :: Libraries",
          "Topic :: Utilities"
        ],
        "requires_python": ">=3.5",
        "description": "Decorators for Humans\n=====================\n\nThe goal of the decorator module is to make it easy to define\nsignature-preserving function decorators and decorator factories.\nIt also includes an implementation of multiple dispatch and other niceties\n(please check the docs). It is released under a two-clauses\nBSD license, i.e. basically you can do whatever you want with it but I am not\nresponsible.\n\nInstallation\n-------------\n\nIf you are lazy, just perform\n\n ``$ pip install decorator``\n\nwhich will install just the module on your system.\n\nIf you prefer to install the full distribution from source, including\nthe documentation, clone the `GitHub repo`_ or download the tarball_, unpack it and run\n\n ``$ pip install .``\n\nin the main directory, possibly as superuser.\n\n.. _tarball: https://pypi.org/project/decorator/#files\n.. _GitHub repo: https://github.com/micheles/decorator\n\nTesting\n--------\n\nIf you have the source code installation you can run the tests with\n\n `$ python src/tests/test.py -v`\n\nor (if you have setuptools installed)\n\n `$ python setup.py test`\n\nNotice that you may run into trouble if in your system there\nis an older version of the decorator module; in such a case remove the\nold version. It is safe even to copy the module `decorator.py` over\nan existing one, since we kept backward-compatibility for a long time.\n\nRepository\n---------------\n\nThe project is hosted on GitHub. You can look at the source here:\n\n https://github.com/micheles/decorator\n\nDocumentation\n---------------\n\nThe documentation has been moved to https://github.com/micheles/decorator/blob/master/docs/documentation.md\n\nFrom there you can get a PDF version by simply using the print\nfunctionality of your browser.\n\nHere is the documentation for previous versions of the module:\n\nhttps://github.com/micheles/decorator/blob/4.3.2/docs/tests.documentation.rst\nhttps://github.com/micheles/decorator/blob/4.2.1/docs/tests.documentation.rst\nhttps://github.com/micheles/decorator/blob/4.1.2/docs/tests.documentation.rst\nhttps://github.com/micheles/decorator/blob/4.0.0/documentation.rst\nhttps://github.com/micheles/decorator/blob/3.4.2/documentation.rst\n\nFor the impatient\n-----------------\n\nHere is an example of how to define a family of decorators tracing slow\noperations:\n\n.. code-block:: python\n\n   from decorator import decorator\n\n   @decorator\n   def warn_slow(func, timelimit=60, *args, **kw):\n       t0 = time.time()\n       result = func(*args, **kw)\n       dt = time.time() - t0\n       if dt > timelimit:\n           logging.warn('%s took %d seconds', func.__name__, dt)\n       else:\n           logging.info('%s took %d seconds', func.__name__, dt)\n       return result\n\n   @warn_slow  # warn if it takes more than 1 minute\n   def preprocess_input_files(inputdir, tempdir):\n       ...\n\n   @warn_slow(timelimit=600)  # warn if it takes more than 10 minutes\n   def run_calculation(tempdir, outdir):\n       ...\n\nEnjoy!\n\n\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/decorator-5.1.1.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "distlib",
        "version": "0.3.6",
        "platform": [
          "any"
        ],
        "summary": "Distribution utilities",
        "home_page": "https://github.com/pypa/distlib",
        "author": "Vinay Sajip",
        "author_email": "vinay_sajip@red-dove.com",
        "license": "Python license",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Environment :: Console",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: Python Software Foundation License",
          "Operating System :: OS Independent",
          "Programming Language :: Python",
          "Programming Language :: Python :: 2",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 2.7",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Topic :: Software Development"
        ],
        "project_url": [
          "Documentation, https://distlib.readthedocs.io/",
          "Source, https://github.com/pypa/distlib",
          "Tracker, https://github.com/pypa/distlib/issues"
        ],
        "description": "|badge1| |badge2|\n\n.. |badge1| image:: https://img.shields.io/github/workflow/status/pypa/distlib/Tests\n   :alt: GitHub test status\n\n.. |badge2| image:: https://img.shields.io/codecov/c/github/pypa/distlib\n   :target: https://app.codecov.io/gh/pypa/distlib\n   :alt: GitHub coverage status\n\nWhat is it?\n-----------\n\nDistlib is a library which implements low-level functions that relate to\npackaging and distribution of Python software. It is intended to be used as the\nbasis for third-party packaging tools. The documentation is available at\n\nhttps://distlib.readthedocs.io/\n\nMain features\n-------------\n\nDistlib currently offers the following features:\n\n* The package ``distlib.database``, which implements a database of installed\n  distributions, as defined by :pep:`376`, and distribution dependency graph\n  logic. Support is also provided for non-installed distributions (i.e.\n  distributions registered with metadata on an index like PyPI), including\n  the ability to scan for dependencies and building dependency graphs.\n* The package ``distlib.index``, which implements an interface to perform\n  operations on an index, such as registering a project, uploading a\n  distribution or uploading documentation. Support is included for verifying\n  SSL connections (with domain matching) and signing/verifying packages using\n  GnuPG.\n* The package ``distlib.metadata``, which implements distribution metadata as\n  defined by :pep:`643`, :pep:`566`, :pep:`345`, :pep:`314` and :pep:`241`.\n* The package ``distlib.markers``, which implements environment markers as\n  defined by :pep:`508`.\n* The package ``distlib.manifest``, which implements lists of files used\n  in packaging source distributions.\n* The package ``distlib.locators``, which allows finding distributions, whether\n  on PyPI (XML-RPC or via the \"simple\" interface), local directories or some\n  other source.\n* The package ``distlib.resources``, which allows access to data files stored\n  in Python packages, both in the file system and in .zip files.\n* The package ``distlib.scripts``, which allows installing of scripts with\n  adjustment of shebang lines and support for native Windows executable\n  launchers.\n* The package ``distlib.version``, which implements version specifiers as\n  defined by :pep:`440`, but also support for working with \"legacy\" versions and\n  semantic versions.\n* The package ``distlib.wheel``, which provides support for building and\n  installing from the Wheel format for binary distributions (see :pep:`427`).\n* The package ``distlib.util``, which contains miscellaneous functions and\n  classes which are useful in packaging, but which do not fit neatly into\n  one of the other packages in ``distlib``.* The package implements enhanced\n  globbing functionality such as the ability to use ``**`` in patterns to\n  specify recursing into subdirectories.\n\n\nPython version and platform compatibility\n-----------------------------------------\n\nDistlib is intended to be used on and is tested on Python versions 2.7 and 3.6 - 3.10,\npypy-2.7 and pypy3 on Linux, Windows, and macOS.\n\nProject status\n--------------\n\nThe project has reached a mature status in its development: there is a comprehensive\ntest suite and it has been exercised on Windows, Ubuntu and macOS. The project is used\nby well-known projects such as `pip <https://pypi.org/pypi/pip>`_ and `caniusepython3\n<https://pypi.org/pypi/caniusepython3>`_.\n\nThis project was migrated from Mercurial to Git and from BitBucket to GitHub, and\nalthough all information of importance has been retained across the migration, some\ncommit references in issues and issue comments may have become invalid.\n\nCode of Conduct\n---------------\n\nEveryone interacting in the distlib project's codebases, issue trackers, chat\nrooms, and mailing lists is expected to follow the `PyPA Code of Conduct`_.\n\n.. _PyPA Code of Conduct: https://www.pypa.io/en/latest/code-of-conduct/\n\n\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/distlib-0.3.6.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "easydict",
        "version": "1.10",
        "summary": "Access dict values as attributes (works recursively).",
        "keywords": [
          "MBTiles",
          "Mapnik"
        ],
        "home_page": "https://github.com/makinacorpus/easydict",
        "download_url": "http://pypi.python.org/pypi/easydict/",
        "author": "Mathieu Leplatre",
        "author_email": "mathieu.leplatre@makina-corpus.com",
        "license": "LGPL-3.0",
        "classifier": [
          "Topic :: Utilities",
          "Natural Language :: English",
          "Operating System :: OS Independent",
          "Intended Audience :: Developers",
          "Development Status :: 5 - Production/Stable",
          "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)",
          "Programming Language :: Python :: 2.5",
          "Programming Language :: Python :: 3.6"
        ],
        "description": "*EasyDict* allows to access dict values as attributes (works recursively). \nA Javascript-like properties dot notation for python dicts.\n\n=====\nUSAGE\n=====\n\n::\n\n    >>> from easydict import EasyDict as edict\n    >>> d = edict({'foo':3, 'bar':{'x':1, 'y':2}})\n    >>> d.foo\n    3\n    >>> d.bar.x\n    1\n    \n    >>> d = edict(foo=3)\n    >>> d.foo\n    3\n\n\nVery useful when exploiting parsed JSON content ! \n\n::\n\n    >>> from easydict import EasyDict as edict\n    >>> from simplejson import loads\n    >>> j = \"\"\"{\n    \"Buffer\": 12,\n    \"List1\": [\n        {\"type\" : \"point\", \"coordinates\" : [100.1,54.9] },\n        {\"type\" : \"point\", \"coordinates\" : [109.4,65.1] },\n        {\"type\" : \"point\", \"coordinates\" : [115.2,80.2] },\n        {\"type\" : \"point\", \"coordinates\" : [150.9,97.8] }\n    ]\n    }\"\"\"\n    >>> d = edict(loads(j))\n    >>> d.Buffer\n    12\n    >>> d.List1[0].coordinates[1]\n    54.9\n\nCan set attributes as easily as getting them :\n\n::\n\n    >>> d = EasyDict()\n    >>> d.foo = 3\n    >>> d.foo\n    3\n\nIt is still a ``dict`` !\n\n::\n\n    >>> d = EasyDict(log=False)\n    >>> d.debug = True\n    >>> d.items()\n    [('debug', True), ('log', False)]\n\nInstance and class attributes are accessed like usual objects...\n\n::\n\n    >>> class Flower(EasyDict):\n    ...     power = 1\n    ...\n    >>> f = Flower({'height': 12})\n    >>> f.power\n    1\n    >>> f['power']\n    1\n\n=======\nLICENSE\n=======\n\n* Lesser GNU Public License\n\n=======\nAUTHORS\n=======\n\n* Mathieu Leplatre <mathieu.leplatre@makina-corpus.com>\n\n|makinacom|_\n\n.. |makinacom| image:: http://depot.makina-corpus.org/public/logo.gif\n.. _makinacom:  http://www.makina-corpus.com\n\nSimilar tools\n=============\n\n* `TreeDict <http://pypi.python.org/pypi/treedict>`_, a fast and full-featured dict-like tree container.\n* `addict <https://github.com/mewwts/addict>`_\n\n\n=========\nCHANGELOG\n=========\n\n1.10 (2022-09-28)\n=================\n\n* Make tests compatible with python2 and python3 (thanks @JackLangerman)\n* Dictify input\n* Fix license metadata \n\n1.9 (2018-10-18)\n================\n\n* Fix issue #3 that update and pop now work correctly on EasyDicts.\n\n\n1.8 (2018-08-17)\n================\n\n* Update package classifiers.\n\n\n1.7 (2017-04-27)\n================\n\n* Prevent copying sub-EasyDicts on assignment to fix unpickling (#7, thanks @Chronos-Sk)\n\n1.6 (2015-01-27)\n================\n\n* Allow setting attributes via setting items (thanks phivos)\n\n1.5 (2014-08-07)\n================\n\n* Allow subclassing using self instead of class name (thanks Steve Engledow)\n\n1.4 (2011-03-13)\n================\n\n* Access class attributes like instance attributes\n\n1.3 (2012-02-08)\n================\n\n* Better documentation and tests\n\n1.2 (2011-06-08)\n================\n\n* Fix inclusion of README\n\n1.1 (2012-04-21)\n================\n\n* Switch to distutils2\n\n1.0 (2011-04-18)\n================\n\n* Initial working version\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/easydict-1.10.dist-info",
      "installer": "pip",
      "requested": true
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "faiss-cpu",
        "version": "1.7.1.post2",
        "platform": [
          "UNKNOWN"
        ],
        "summary": "A library for efficient similarity search and clustering of dense vectors.",
        "keywords": [
          "search",
          "nearest",
          "neighbors"
        ],
        "home_page": "https://github.com/kyamagu/faiss-wheels",
        "author": "Kota Yamaguchi",
        "author_email": "KotaYamaguchi1984@gmail.com",
        "license": "MIT",
        "description": "\nFaiss is a library for efficient similarity search and clustering of dense\nvectors. It contains algorithms that search in sets of vectors of any size, up\nto ones that possibly do not fit in RAM. It also contains supporting code for\nevaluation and parameter tuning. Faiss is written in C++ with complete wrappers\nfor Python/numpy. It is developed by Facebook AI Research.\n\n\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/faiss_cpu-1.7.1.post2.dist-info",
      "installer": "pip",
      "requested": true
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "fastapi",
        "version": "0.95.1",
        "summary": "FastAPI framework, high performance, easy to learn, fast to code, ready for production",
        "description_content_type": "text/markdown",
        "author_email": "Sebastián Ramírez <tiangolo@gmail.com>",
        "classifier": [
          "Development Status :: 4 - Beta",
          "Environment :: Web Environment",
          "Framework :: AsyncIO",
          "Framework :: FastAPI",
          "Framework :: Pydantic",
          "Framework :: Pydantic :: 1",
          "Intended Audience :: Developers",
          "Intended Audience :: Information Technology",
          "Intended Audience :: System Administrators",
          "License :: OSI Approved :: MIT License",
          "Operating System :: OS Independent",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3 :: Only",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Topic :: Internet",
          "Topic :: Internet :: WWW/HTTP",
          "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
          "Topic :: Software Development",
          "Topic :: Software Development :: Libraries",
          "Topic :: Software Development :: Libraries :: Application Frameworks",
          "Topic :: Software Development :: Libraries :: Python Modules",
          "Typing :: Typed"
        ],
        "requires_dist": [
          "pydantic!=1.7,!=1.7.1,!=1.7.2,!=1.7.3,!=1.8,!=1.8.1,<2.0.0,>=1.6.2",
          "starlette<0.27.0,>=0.26.1",
          "email-validator>=1.1.1; extra == 'all'",
          "httpx>=0.23.0; extra == 'all'",
          "itsdangerous>=1.1.0; extra == 'all'",
          "jinja2>=2.11.2; extra == 'all'",
          "orjson>=3.2.1; extra == 'all'",
          "python-multipart>=0.0.5; extra == 'all'",
          "pyyaml>=5.3.1; extra == 'all'",
          "ujson!=4.0.2,!=4.1.0,!=4.2.0,!=4.3.0,!=5.0.0,!=5.1.0,>=4.0.1; extra == 'all'",
          "uvicorn[standard]>=0.12.0; extra == 'all'",
          "pre-commit<3.0.0,>=2.17.0; extra == 'dev'",
          "ruff==0.0.138; extra == 'dev'",
          "uvicorn[standard]<0.21.0,>=0.12.0; extra == 'dev'",
          "mdx-include<2.0.0,>=1.4.1; extra == 'doc'",
          "mkdocs-markdownextradata-plugin<0.3.0,>=0.1.7; extra == 'doc'",
          "mkdocs-material<9.0.0,>=8.1.4; extra == 'doc'",
          "mkdocs<2.0.0,>=1.1.2; extra == 'doc'",
          "pyyaml<7.0.0,>=5.3.1; extra == 'doc'",
          "typer-cli<0.0.14,>=0.0.13; extra == 'doc'",
          "typer[all]<0.8.0,>=0.6.1; extra == 'doc'",
          "anyio[trio]<4.0.0,>=3.2.1; extra == 'test'",
          "black==23.1.0; extra == 'test'",
          "coverage[toml]<8.0,>=6.5.0; extra == 'test'",
          "databases[sqlite]<0.7.0,>=0.3.2; extra == 'test'",
          "email-validator<2.0.0,>=1.1.1; extra == 'test'",
          "flask<3.0.0,>=1.1.2; extra == 'test'",
          "httpx<0.24.0,>=0.23.0; extra == 'test'",
          "isort<6.0.0,>=5.0.6; extra == 'test'",
          "mypy==0.982; extra == 'test'",
          "orjson<4.0.0,>=3.2.1; extra == 'test'",
          "passlib[bcrypt]<2.0.0,>=1.7.2; extra == 'test'",
          "peewee<4.0.0,>=3.13.3; extra == 'test'",
          "pytest<8.0.0,>=7.1.3; extra == 'test'",
          "python-jose[cryptography]<4.0.0,>=3.3.0; extra == 'test'",
          "python-multipart<0.0.7,>=0.0.5; extra == 'test'",
          "pyyaml<7.0.0,>=5.3.1; extra == 'test'",
          "ruff==0.0.138; extra == 'test'",
          "sqlalchemy<1.4.43,>=1.3.18; extra == 'test'",
          "types-orjson==3.6.2; extra == 'test'",
          "types-ujson==5.7.0.1; extra == 'test'",
          "ujson!=4.0.2,!=4.1.0,!=4.2.0,!=4.3.0,!=5.0.0,!=5.1.0,<6.0.0,>=4.0.1; extra == 'test'"
        ],
        "requires_python": ">=3.7",
        "project_url": [
          "Homepage, https://github.com/tiangolo/fastapi",
          "Documentation, https://fastapi.tiangolo.com/"
        ],
        "provides_extra": [
          "all",
          "dev",
          "doc",
          "test"
        ],
        "description": "<p align=\"center\">\n  <a href=\"https://fastapi.tiangolo.com\"><img src=\"https://fastapi.tiangolo.com/img/logo-margin/logo-teal.png\" alt=\"FastAPI\"></a>\n</p>\n<p align=\"center\">\n    <em>FastAPI framework, high performance, easy to learn, fast to code, ready for production</em>\n</p>\n<p align=\"center\">\n<a href=\"https://github.com/tiangolo/fastapi/actions?query=workflow%3ATest+event%3Apush+branch%3Amaster\" target=\"_blank\">\n    <img src=\"https://github.com/tiangolo/fastapi/workflows/Test/badge.svg?event=push&branch=master\" alt=\"Test\">\n</a>\n<a href=\"https://coverage-badge.samuelcolvin.workers.dev/redirect/tiangolo/fastapi\" target=\"_blank\">\n    <img src=\"https://coverage-badge.samuelcolvin.workers.dev/tiangolo/fastapi.svg\" alt=\"Coverage\">\n</a>\n<a href=\"https://pypi.org/project/fastapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/pypi/v/fastapi?color=%2334D058&label=pypi%20package\" alt=\"Package version\">\n</a>\n<a href=\"https://pypi.org/project/fastapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/pypi/pyversions/fastapi.svg?color=%2334D058\" alt=\"Supported Python versions\">\n</a>\n</p>\n\n---\n\n**Documentation**: <a href=\"https://fastapi.tiangolo.com\" target=\"_blank\">https://fastapi.tiangolo.com</a>\n\n**Source Code**: <a href=\"https://github.com/tiangolo/fastapi\" target=\"_blank\">https://github.com/tiangolo/fastapi</a>\n\n---\n\nFastAPI is a modern, fast (high-performance), web framework for building APIs with Python 3.7+ based on standard Python type hints.\n\nThe key features are:\n\n* **Fast**: Very high performance, on par with **NodeJS** and **Go** (thanks to Starlette and Pydantic). [One of the fastest Python frameworks available](#performance).\n* **Fast to code**: Increase the speed to develop features by about 200% to 300%. *\n* **Fewer bugs**: Reduce about 40% of human (developer) induced errors. *\n* **Intuitive**: Great editor support. <abbr title=\"also known as auto-complete, autocompletion, IntelliSense\">Completion</abbr> everywhere. Less time debugging.\n* **Easy**: Designed to be easy to use and learn. Less time reading docs.\n* **Short**: Minimize code duplication. Multiple features from each parameter declaration. Fewer bugs.\n* **Robust**: Get production-ready code. With automatic interactive documentation.\n* **Standards-based**: Based on (and fully compatible with) the open standards for APIs: <a href=\"https://github.com/OAI/OpenAPI-Specification\" class=\"external-link\" target=\"_blank\">OpenAPI</a> (previously known as Swagger) and <a href=\"https://json-schema.org/\" class=\"external-link\" target=\"_blank\">JSON Schema</a>.\n\n<small>* estimation based on tests on an internal development team, building production applications.</small>\n\n## Sponsors\n\n<!-- sponsors -->\n\n<a href=\"https://cryptapi.io/\" target=\"_blank\" title=\"CryptAPI: Your easy to use, secure and privacy oriented payment gateway.\"><img src=\"https://fastapi.tiangolo.com/img/sponsors/cryptapi.svg\"></a>\n<a href=\"https://www.deta.sh/?ref=fastapi\" target=\"_blank\" title=\"The launchpad for all your (team's) ideas\"><img src=\"https://fastapi.tiangolo.com/img/sponsors/deta.svg\"></a>\n<a href=\"https://www.investsuite.com/jobs\" target=\"_blank\" title=\"Wealthtech jobs with FastAPI\"><img src=\"https://fastapi.tiangolo.com/img/sponsors/investsuite.svg\"></a>\n<a href=\"https://training.talkpython.fm/fastapi-courses\" target=\"_blank\" title=\"FastAPI video courses on demand from people you trust\"><img src=\"https://fastapi.tiangolo.com/img/sponsors/talkpython.png\"></a>\n<a href=\"https://testdriven.io/courses/tdd-fastapi/\" target=\"_blank\" title=\"Learn to build high-quality web apps with best practices\"><img src=\"https://fastapi.tiangolo.com/img/sponsors/testdriven.svg\"></a>\n<a href=\"https://github.com/deepset-ai/haystack/\" target=\"_blank\" title=\"Build powerful search from composable, open source building blocks\"><img src=\"https://fastapi.tiangolo.com/img/sponsors/haystack-fastapi.svg\"></a>\n<a href=\"https://careers.powens.com/\" target=\"_blank\" title=\"Powens is hiring!\"><img src=\"https://fastapi.tiangolo.com/img/sponsors/powens.png\"></a>\n<a href=\"https://www.svix.com/\" target=\"_blank\" title=\"Svix - Webhooks as a service\"><img src=\"https://fastapi.tiangolo.com/img/sponsors/svix.svg\"></a>\n<a href=\"https://databento.com/\" target=\"_blank\" title=\"Pay as you go for market data\"><img src=\"https://fastapi.tiangolo.com/img/sponsors/databento.svg\"></a>\n\n<!-- /sponsors -->\n\n<a href=\"https://fastapi.tiangolo.com/fastapi-people/#sponsors\" class=\"external-link\" target=\"_blank\">Other sponsors</a>\n\n## Opinions\n\n\"_[...] I'm using **FastAPI** a ton these days. [...] I'm actually planning to use it for all of my team's **ML services at Microsoft**. Some of them are getting integrated into the core **Windows** product and some **Office** products._\"\n\n<div style=\"text-align: right; margin-right: 10%;\">Kabir Khan - <strong>Microsoft</strong> <a href=\"https://github.com/tiangolo/fastapi/pull/26\" target=\"_blank\"><small>(ref)</small></a></div>\n\n---\n\n\"_We adopted the **FastAPI** library to spawn a **REST** server that can be queried to obtain **predictions**. [for Ludwig]_\"\n\n<div style=\"text-align: right; margin-right: 10%;\">Piero Molino, Yaroslav Dudin, and Sai Sumanth Miryala - <strong>Uber</strong> <a href=\"https://eng.uber.com/ludwig-v0-2/\" target=\"_blank\"><small>(ref)</small></a></div>\n\n---\n\n\"_**Netflix** is pleased to announce the open-source release of our **crisis management** orchestration framework: **Dispatch**! [built with **FastAPI**]_\"\n\n<div style=\"text-align: right; margin-right: 10%;\">Kevin Glisson, Marc Vilanova, Forest Monsen - <strong>Netflix</strong> <a href=\"https://netflixtechblog.com/introducing-dispatch-da4b8a2a8072\" target=\"_blank\"><small>(ref)</small></a></div>\n\n---\n\n\"_I’m over the moon excited about **FastAPI**. It’s so fun!_\"\n\n<div style=\"text-align: right; margin-right: 10%;\">Brian Okken - <strong><a href=\"https://pythonbytes.fm/episodes/show/123/time-to-right-the-py-wrongs?time_in_sec=855\" target=\"_blank\">Python Bytes</a> podcast host</strong> <a href=\"https://twitter.com/brianokken/status/1112220079972728832\" target=\"_blank\"><small>(ref)</small></a></div>\n\n---\n\n\"_Honestly, what you've built looks super solid and polished. In many ways, it's what I wanted **Hug** to be - it's really inspiring to see someone build that._\"\n\n<div style=\"text-align: right; margin-right: 10%;\">Timothy Crosley - <strong><a href=\"https://www.hug.rest/\" target=\"_blank\">Hug</a> creator</strong> <a href=\"https://news.ycombinator.com/item?id=19455465\" target=\"_blank\"><small>(ref)</small></a></div>\n\n---\n\n\"_If you're looking to learn one **modern framework** for building REST APIs, check out **FastAPI** [...] It's fast, easy to use and easy to learn [...]_\"\n\n\"_We've switched over to **FastAPI** for our **APIs** [...] I think you'll like it [...]_\"\n\n<div style=\"text-align: right; margin-right: 10%;\">Ines Montani - Matthew Honnibal - <strong><a href=\"https://explosion.ai\" target=\"_blank\">Explosion AI</a> founders - <a href=\"https://spacy.io\" target=\"_blank\">spaCy</a> creators</strong> <a href=\"https://twitter.com/_inesmontani/status/1144173225322143744\" target=\"_blank\"><small>(ref)</small></a> - <a href=\"https://twitter.com/honnibal/status/1144031421859655680\" target=\"_blank\"><small>(ref)</small></a></div>\n\n---\n\n\"_If anyone is looking to build a production Python API, I would highly recommend **FastAPI**. It is **beautifully designed**, **simple to use** and **highly scalable**, it has become a **key component** in our API first development strategy and is driving many automations and services such as our Virtual TAC Engineer._\"\n\n<div style=\"text-align: right; margin-right: 10%;\">Deon Pillsbury - <strong>Cisco</strong> <a href=\"https://www.linkedin.com/posts/deonpillsbury_cisco-cx-python-activity-6963242628536487936-trAp/\" target=\"_blank\"><small>(ref)</small></a></div>\n\n---\n\n## **Typer**, the FastAPI of CLIs\n\n<a href=\"https://typer.tiangolo.com\" target=\"_blank\"><img src=\"https://typer.tiangolo.com/img/logo-margin/logo-margin-vector.svg\" style=\"width: 20%;\"></a>\n\nIf you are building a <abbr title=\"Command Line Interface\">CLI</abbr> app to be used in the terminal instead of a web API, check out <a href=\"https://typer.tiangolo.com/\" class=\"external-link\" target=\"_blank\">**Typer**</a>.\n\n**Typer** is FastAPI's little sibling. And it's intended to be the **FastAPI of CLIs**. ⌨️ 🚀\n\n## Requirements\n\nPython 3.7+\n\nFastAPI stands on the shoulders of giants:\n\n* <a href=\"https://www.starlette.io/\" class=\"external-link\" target=\"_blank\">Starlette</a> for the web parts.\n* <a href=\"https://pydantic-docs.helpmanual.io/\" class=\"external-link\" target=\"_blank\">Pydantic</a> for the data parts.\n\n## Installation\n\n<div class=\"termy\">\n\n```console\n$ pip install fastapi\n\n---> 100%\n```\n\n</div>\n\nYou will also need an ASGI server, for production such as <a href=\"https://www.uvicorn.org\" class=\"external-link\" target=\"_blank\">Uvicorn</a> or <a href=\"https://github.com/pgjones/hypercorn\" class=\"external-link\" target=\"_blank\">Hypercorn</a>.\n\n<div class=\"termy\">\n\n```console\n$ pip install \"uvicorn[standard]\"\n\n---> 100%\n```\n\n</div>\n\n## Example\n\n### Create it\n\n* Create a file `main.py` with:\n\n```Python\nfrom typing import Union\n\nfrom fastapi import FastAPI\n\napp = FastAPI()\n\n\n@app.get(\"/\")\ndef read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\ndef read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}\n```\n\n<details markdown=\"1\">\n<summary>Or use <code>async def</code>...</summary>\n\nIf your code uses `async` / `await`, use `async def`:\n\n```Python hl_lines=\"9  14\"\nfrom typing import Union\n\nfrom fastapi import FastAPI\n\napp = FastAPI()\n\n\n@app.get(\"/\")\nasync def read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\nasync def read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}\n```\n\n**Note**:\n\nIf you don't know, check the _\"In a hurry?\"_ section about <a href=\"https://fastapi.tiangolo.com/async/#in-a-hurry\" target=\"_blank\">`async` and `await` in the docs</a>.\n\n</details>\n\n### Run it\n\nRun the server with:\n\n<div class=\"termy\">\n\n```console\n$ uvicorn main:app --reload\n\nINFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\nINFO:     Started reloader process [28720]\nINFO:     Started server process [28722]\nINFO:     Waiting for application startup.\nINFO:     Application startup complete.\n```\n\n</div>\n\n<details markdown=\"1\">\n<summary>About the command <code>uvicorn main:app --reload</code>...</summary>\n\nThe command `uvicorn main:app` refers to:\n\n* `main`: the file `main.py` (the Python \"module\").\n* `app`: the object created inside of `main.py` with the line `app = FastAPI()`.\n* `--reload`: make the server restart after code changes. Only do this for development.\n\n</details>\n\n### Check it\n\nOpen your browser at <a href=\"http://127.0.0.1:8000/items/5?q=somequery\" class=\"external-link\" target=\"_blank\">http://127.0.0.1:8000/items/5?q=somequery</a>.\n\nYou will see the JSON response as:\n\n```JSON\n{\"item_id\": 5, \"q\": \"somequery\"}\n```\n\nYou already created an API that:\n\n* Receives HTTP requests in the _paths_ `/` and `/items/{item_id}`.\n* Both _paths_ take `GET` <em>operations</em> (also known as HTTP _methods_).\n* The _path_ `/items/{item_id}` has a _path parameter_ `item_id` that should be an `int`.\n* The _path_ `/items/{item_id}` has an optional `str` _query parameter_ `q`.\n\n### Interactive API docs\n\nNow go to <a href=\"http://127.0.0.1:8000/docs\" class=\"external-link\" target=\"_blank\">http://127.0.0.1:8000/docs</a>.\n\nYou will see the automatic interactive API documentation (provided by <a href=\"https://github.com/swagger-api/swagger-ui\" class=\"external-link\" target=\"_blank\">Swagger UI</a>):\n\n![Swagger UI](https://fastapi.tiangolo.com/img/index/index-01-swagger-ui-simple.png)\n\n### Alternative API docs\n\nAnd now, go to <a href=\"http://127.0.0.1:8000/redoc\" class=\"external-link\" target=\"_blank\">http://127.0.0.1:8000/redoc</a>.\n\nYou will see the alternative automatic documentation (provided by <a href=\"https://github.com/Rebilly/ReDoc\" class=\"external-link\" target=\"_blank\">ReDoc</a>):\n\n![ReDoc](https://fastapi.tiangolo.com/img/index/index-02-redoc-simple.png)\n\n## Example upgrade\n\nNow modify the file `main.py` to receive a body from a `PUT` request.\n\nDeclare the body using standard Python types, thanks to Pydantic.\n\n```Python hl_lines=\"4  9-12  25-27\"\nfrom typing import Union\n\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel\n\napp = FastAPI()\n\n\nclass Item(BaseModel):\n    name: str\n    price: float\n    is_offer: Union[bool, None] = None\n\n\n@app.get(\"/\")\ndef read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\ndef read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}\n\n\n@app.put(\"/items/{item_id}\")\ndef update_item(item_id: int, item: Item):\n    return {\"item_name\": item.name, \"item_id\": item_id}\n```\n\nThe server should reload automatically (because you added `--reload` to the `uvicorn` command above).\n\n### Interactive API docs upgrade\n\nNow go to <a href=\"http://127.0.0.1:8000/docs\" class=\"external-link\" target=\"_blank\">http://127.0.0.1:8000/docs</a>.\n\n* The interactive API documentation will be automatically updated, including the new body:\n\n![Swagger UI](https://fastapi.tiangolo.com/img/index/index-03-swagger-02.png)\n\n* Click on the button \"Try it out\", it allows you to fill the parameters and directly interact with the API:\n\n![Swagger UI interaction](https://fastapi.tiangolo.com/img/index/index-04-swagger-03.png)\n\n* Then click on the \"Execute\" button, the user interface will communicate with your API, send the parameters, get the results and show them on the screen:\n\n![Swagger UI interaction](https://fastapi.tiangolo.com/img/index/index-05-swagger-04.png)\n\n### Alternative API docs upgrade\n\nAnd now, go to <a href=\"http://127.0.0.1:8000/redoc\" class=\"external-link\" target=\"_blank\">http://127.0.0.1:8000/redoc</a>.\n\n* The alternative documentation will also reflect the new query parameter and body:\n\n![ReDoc](https://fastapi.tiangolo.com/img/index/index-06-redoc-02.png)\n\n### Recap\n\nIn summary, you declare **once** the types of parameters, body, etc. as function parameters.\n\nYou do that with standard modern Python types.\n\nYou don't have to learn a new syntax, the methods or classes of a specific library, etc.\n\nJust standard **Python 3.7+**.\n\nFor example, for an `int`:\n\n```Python\nitem_id: int\n```\n\nor for a more complex `Item` model:\n\n```Python\nitem: Item\n```\n\n...and with that single declaration you get:\n\n* Editor support, including:\n    * Completion.\n    * Type checks.\n* Validation of data:\n    * Automatic and clear errors when the data is invalid.\n    * Validation even for deeply nested JSON objects.\n* <abbr title=\"also known as: serialization, parsing, marshalling\">Conversion</abbr> of input data: coming from the network to Python data and types. Reading from:\n    * JSON.\n    * Path parameters.\n    * Query parameters.\n    * Cookies.\n    * Headers.\n    * Forms.\n    * Files.\n* <abbr title=\"also known as: serialization, parsing, marshalling\">Conversion</abbr> of output data: converting from Python data and types to network data (as JSON):\n    * Convert Python types (`str`, `int`, `float`, `bool`, `list`, etc).\n    * `datetime` objects.\n    * `UUID` objects.\n    * Database models.\n    * ...and many more.\n* Automatic interactive API documentation, including 2 alternative user interfaces:\n    * Swagger UI.\n    * ReDoc.\n\n---\n\nComing back to the previous code example, **FastAPI** will:\n\n* Validate that there is an `item_id` in the path for `GET` and `PUT` requests.\n* Validate that the `item_id` is of type `int` for `GET` and `PUT` requests.\n    * If it is not, the client will see a useful, clear error.\n* Check if there is an optional query parameter named `q` (as in `http://127.0.0.1:8000/items/foo?q=somequery`) for `GET` requests.\n    * As the `q` parameter is declared with `= None`, it is optional.\n    * Without the `None` it would be required (as is the body in the case with `PUT`).\n* For `PUT` requests to `/items/{item_id}`, Read the body as JSON:\n    * Check that it has a required attribute `name` that should be a `str`.\n    * Check that it has a required attribute `price` that has to be a `float`.\n    * Check that it has an optional attribute `is_offer`, that should be a `bool`, if present.\n    * All this would also work for deeply nested JSON objects.\n* Convert from and to JSON automatically.\n* Document everything with OpenAPI, that can be used by:\n    * Interactive documentation systems.\n    * Automatic client code generation systems, for many languages.\n* Provide 2 interactive documentation web interfaces directly.\n\n---\n\nWe just scratched the surface, but you already get the idea of how it all works.\n\nTry changing the line with:\n\n```Python\n    return {\"item_name\": item.name, \"item_id\": item_id}\n```\n\n...from:\n\n```Python\n        ... \"item_name\": item.name ...\n```\n\n...to:\n\n```Python\n        ... \"item_price\": item.price ...\n```\n\n...and see how your editor will auto-complete the attributes and know their types:\n\n![editor support](https://fastapi.tiangolo.com/img/vscode-completion.png)\n\nFor a more complete example including more features, see the <a href=\"https://fastapi.tiangolo.com/tutorial/\">Tutorial - User Guide</a>.\n\n**Spoiler alert**: the tutorial - user guide includes:\n\n* Declaration of **parameters** from other different places as: **headers**, **cookies**, **form fields** and **files**.\n* How to set **validation constraints** as `maximum_length` or `regex`.\n* A very powerful and easy to use **<abbr title=\"also known as components, resources, providers, services, injectables\">Dependency Injection</abbr>** system.\n* Security and authentication, including support for **OAuth2** with **JWT tokens** and **HTTP Basic** auth.\n* More advanced (but equally easy) techniques for declaring **deeply nested JSON models** (thanks to Pydantic).\n* **GraphQL** integration with <a href=\"https://strawberry.rocks\" class=\"external-link\" target=\"_blank\">Strawberry</a> and other libraries.\n* Many extra features (thanks to Starlette) as:\n    * **WebSockets**\n    * extremely easy tests based on HTTPX and `pytest`\n    * **CORS**\n    * **Cookie Sessions**\n    * ...and more.\n\n## Performance\n\nIndependent TechEmpower benchmarks show **FastAPI** applications running under Uvicorn as <a href=\"https://www.techempower.com/benchmarks/#section=test&runid=7464e520-0dc2-473d-bd34-dbdfd7e85911&hw=ph&test=query&l=zijzen-7\" class=\"external-link\" target=\"_blank\">one of the fastest Python frameworks available</a>, only below Starlette and Uvicorn themselves (used internally by FastAPI). (*)\n\nTo understand more about it, see the section <a href=\"https://fastapi.tiangolo.com/benchmarks/\" class=\"internal-link\" target=\"_blank\">Benchmarks</a>.\n\n## Optional Dependencies\n\nUsed by Pydantic:\n\n* <a href=\"https://github.com/esnme/ultrajson\" target=\"_blank\"><code>ujson</code></a> - for faster JSON <abbr title=\"converting the string that comes from an HTTP request into Python data\">\"parsing\"</abbr>.\n* <a href=\"https://github.com/JoshData/python-email-validator\" target=\"_blank\"><code>email_validator</code></a> - for email validation.\n\nUsed by Starlette:\n\n* <a href=\"https://www.python-httpx.org\" target=\"_blank\"><code>httpx</code></a> - Required if you want to use the `TestClient`.\n* <a href=\"https://jinja.palletsprojects.com\" target=\"_blank\"><code>jinja2</code></a> - Required if you want to use the default template configuration.\n* <a href=\"https://andrew-d.github.io/python-multipart/\" target=\"_blank\"><code>python-multipart</code></a> - Required if you want to support form <abbr title=\"converting the string that comes from an HTTP request into Python data\">\"parsing\"</abbr>, with `request.form()`.\n* <a href=\"https://pythonhosted.org/itsdangerous/\" target=\"_blank\"><code>itsdangerous</code></a> - Required for `SessionMiddleware` support.\n* <a href=\"https://pyyaml.org/wiki/PyYAMLDocumentation\" target=\"_blank\"><code>pyyaml</code></a> - Required for Starlette's `SchemaGenerator` support (you probably don't need it with FastAPI).\n* <a href=\"https://github.com/esnme/ultrajson\" target=\"_blank\"><code>ujson</code></a> - Required if you want to use `UJSONResponse`.\n\nUsed by FastAPI / Starlette:\n\n* <a href=\"https://www.uvicorn.org\" target=\"_blank\"><code>uvicorn</code></a> - for the server that loads and serves your application.\n* <a href=\"https://github.com/ijl/orjson\" target=\"_blank\"><code>orjson</code></a> - Required if you want to use `ORJSONResponse`.\n\nYou can install all of these with `pip install \"fastapi[all]\"`.\n\n## License\n\nThis project is licensed under the terms of the MIT license.\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/fastapi-0.95.1.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "ffmpy",
        "version": "0.3.0",
        "summary": "A simple Python wrapper for ffmpeg",
        "keywords": [
          "ffmpeg",
          "ffprobe",
          "wrapper",
          "audio",
          "video",
          "transcoding"
        ],
        "home_page": "https://github.com/Ch00k/ffmpy",
        "author": "Andrii Yurchuk",
        "author_email": "ay@mntw.re",
        "license": "MIT",
        "classifier": [
          "Topic :: Multimedia :: Sound/Audio",
          "Development Status :: 4 - Beta",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: MIT License",
          "Natural Language :: English",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: Implementation :: CPython",
          "Programming Language :: Python :: Implementation :: PyPy",
          "Operating System :: Microsoft :: Windows",
          "Operating System :: POSIX",
          "Operating System :: POSIX :: BSD",
          "Operating System :: POSIX :: Linux",
          "Operating System :: MacOS :: MacOS X"
        ],
        "description": ".. image:: https://github.com/Ch00k/ffmpy/workflows/test/badge.svg\n    :target: https://github.com/Ch00k/ffmpy/actions\n    :alt: Tests\n\n.. image:: https://codecov.io/gh/Ch00k/ffmpy/branch/master/graphs/badge.svg\n    :target: https://codecov.io/github/Ch00k/ffmpy\n    :alt: Coverage\n\n.. image:: https://readthedocs.org/projects/ffmpy/badge/?version=latest\n    :target: http://ffmpy.readthedocs.io/en/latest/?badge=latest\n    :alt: Documentation\n\n.. image:: https://img.shields.io/pypi/v/ffmpy.svg\n    :target: https://pypi.python.org/pypi/ffmpy\n    :alt: Latest version\n\n\nffmpy\n=====\nffmpy is a simplistic `FFmpeg <http://ffmpeg.org/>`_ command line wrapper. It implements a Pythonic interface for FFmpeg command line compilation and uses Python `subprocess <https://docs.python.org/2/library/subprocess.html>`_ module to execute compiled command line.\n\nInstallation\n------------\nYou guessed it::\n\n  pip install ffmpy\n\nQuick example\n-------------\n.. code:: python\n\n  >>> import ffmpy\n  >>> ff = ffmpy.FFmpeg(\n  ...     inputs={'input.mp4': None},\n  ...     outputs={'output.avi': None}\n  ... )\n  >>> ff.run()\n\nThis will take ``input.mp4`` file in the current directory as the input, change the video container from MP4 to AVI without changing any other video parameters and create a new output file ``output.avi`` in the current directory.\n\nDocumentation\n-------------\nhttp://ffmpy.rtfd.io\n\nSee `Examples <http://ffmpy.readthedocs.io/en/latest/examples.html>`_ section for usage examples.\n\nLicense\n-------\nffmpy is licensed under the terms of MIT license\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/ffmpy-0.3.0.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "filelock",
        "version": "3.12.0",
        "summary": "A platform independent file lock.",
        "description_content_type": "text/markdown",
        "keywords": [
          "application",
          "cache",
          "directory",
          "log",
          "user"
        ],
        "maintainer_email": "Bernát Gábor <gaborjbernat@gmail.com>",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: The Unlicense (Unlicense)",
          "Operating System :: OS Independent",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3 :: Only",
          "Topic :: Internet",
          "Topic :: Software Development :: Libraries",
          "Topic :: System"
        ],
        "requires_dist": [
          "furo>=2023.3.27; extra == 'docs'",
          "sphinx-autodoc-typehints!=1.23.4,>=1.23; extra == 'docs'",
          "sphinx>=6.1.3; extra == 'docs'",
          "covdefaults>=2.3; extra == 'testing'",
          "coverage>=7.2.3; extra == 'testing'",
          "diff-cover>=7.5; extra == 'testing'",
          "pytest-cov>=4; extra == 'testing'",
          "pytest-mock>=3.10; extra == 'testing'",
          "pytest-timeout>=2.1; extra == 'testing'",
          "pytest>=7.3.1; extra == 'testing'"
        ],
        "requires_python": ">=3.7",
        "project_url": [
          "Documentation, https://py-filelock.readthedocs.io",
          "Homepage, https://github.com/tox-dev/py-filelock",
          "Source, https://github.com/tox-dev/py-filelock",
          "Tracker, https://github.com/tox-dev/py-filelock/issues"
        ],
        "provides_extra": [
          "docs",
          "testing"
        ],
        "description": "# py-filelock\n\n[![PyPI](https://img.shields.io/pypi/v/filelock)](https://pypi.org/project/filelock/)\n[![Supported Python\nversions](https://img.shields.io/pypi/pyversions/filelock.svg)](https://pypi.org/project/filelock/)\n[![Documentation\nstatus](https://readthedocs.org/projects/py-filelock/badge/?version=latest)](https://py-filelock.readthedocs.io/en/latest/?badge=latest)\n[![Code style:\nblack](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n[![Downloads](https://pepy.tech/badge/filelock/month)](https://pepy.tech/project/filelock)\n[![check](https://github.com/tox-dev/py-filelock/actions/workflows/check.yml/badge.svg)](https://github.com/tox-dev/py-filelock/actions/workflows/check.yml)\n\nFor more information checkout the [official documentation](https://py-filelock.readthedocs.io/en/latest/index.html).\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/filelock-3.12.0.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "flask-babel",
        "version": "3.1.0",
        "summary": "Adds i18n/l10n support for Flask applications.",
        "description_content_type": "text/markdown",
        "home_page": "https://github.com/python-babel/flask-babel",
        "author": "Armin Ronacher",
        "maintainer": "Tyler Kennedy",
        "maintainer_email": "tk@tkte.ch",
        "license": "BSD-3-Clause",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Environment :: Web Environment",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: BSD License",
          "Operating System :: OS Independent",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: Implementation :: CPython",
          "Programming Language :: Python :: Implementation :: PyPy",
          "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
          "Topic :: Software Development :: Libraries :: Python Modules"
        ],
        "requires_dist": [
          "Babel (>=2.12)",
          "Flask (>=2.0)",
          "Jinja2 (>=3.1)",
          "pytz (>=2022.7)"
        ],
        "requires_python": ">=3.7,<4.0",
        "project_url": [
          "Documentation, https://python-babel.github.io/flask-babel/",
          "Repository, https://github.com/python-babel/flask-babel"
        ],
        "description": "# Flask Babel\n\n![Tests](https://github.com/python-babel/flask-babel/workflows/Tests/badge.svg?branch=master)\n[![PyPI](https://img.shields.io/pypi/v/flask-babel.svg?maxAge=2592000)](https://pypi.python.org/pypi/Flask-Babel)\n\nImplements i18n and l10n support for Flask. This is based on the Python\n[babel][] and [pytz][] modules.\n\n## Documentation\n\nThe latest documentation is available [here][docs].\n\n[babel]: https://github.com/python-babel/babel\n[pytz]: https://pypi.python.org/pypi/pytz/\n[docs]: https://python-babel.github.io/flask-babel/\n[semver]: https://semver.org/\n\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/flask_babel-3.1.0.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "flatbuffers",
        "version": "23.3.3",
        "summary": "The FlatBuffers serialization format for Python",
        "home_page": "https://google.github.io/flatbuffers/",
        "author": "Derek Bailey",
        "author_email": "derekbailey@google.com",
        "license": "Apache 2.0",
        "classifier": [
          "Intended Audience :: Developers",
          "License :: OSI Approved :: Apache Software License",
          "Operating System :: OS Independent",
          "Programming Language :: Python",
          "Programming Language :: Python :: 2",
          "Programming Language :: Python :: 3",
          "Topic :: Software Development :: Libraries :: Python Modules"
        ],
        "project_url": [
          "Documentation, https://google.github.io/flatbuffers/",
          "Source, https://github.com/google/flatbuffers"
        ],
        "description": "Python runtime library for use with the `Flatbuffers <https://google.github.io/flatbuffers/>`_ serialization format.\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/flatbuffers-23.3.3.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "fonttools",
        "version": "4.39.3",
        "platform": [
          "Any"
        ],
        "summary": "Tools to manipulate font files",
        "home_page": "http://github.com/fonttools/fonttools",
        "author": "Just van Rossum",
        "author_email": "just@letterror.com",
        "maintainer": "Behdad Esfahbod",
        "maintainer_email": "behdad@behdad.org",
        "license": "MIT",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Environment :: Console",
          "Environment :: Other Environment",
          "Intended Audience :: Developers",
          "Intended Audience :: End Users/Desktop",
          "License :: OSI Approved :: MIT License",
          "Natural Language :: English",
          "Operating System :: OS Independent",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Programming Language :: Python :: 3",
          "Topic :: Text Processing :: Fonts",
          "Topic :: Multimedia :: Graphics",
          "Topic :: Multimedia :: Graphics :: Graphics Conversion"
        ],
        "requires_dist": [
          "fs (<3,>=2.2.0) ; extra == 'all'",
          "lxml (<5,>=4.0) ; extra == 'all'",
          "zopfli (>=0.1.4) ; extra == 'all'",
          "lz4 (>=1.7.4.2) ; extra == 'all'",
          "matplotlib ; extra == 'all'",
          "sympy ; extra == 'all'",
          "skia-pathops (>=0.5.0) ; extra == 'all'",
          "uharfbuzz (>=0.23.0) ; extra == 'all'",
          "brotlicffi (>=0.8.0) ; (platform_python_implementation != \"CPython\") and extra == 'all'",
          "scipy ; (platform_python_implementation != \"PyPy\") and extra == 'all'",
          "brotli (>=1.0.1) ; (platform_python_implementation == \"CPython\") and extra == 'all'",
          "munkres ; (platform_python_implementation == \"PyPy\") and extra == 'all'",
          "unicodedata2 (>=15.0.0) ; (python_version <= \"3.11\") and extra == 'all'",
          "xattr ; (sys_platform == \"darwin\") and extra == 'all'",
          "lz4 (>=1.7.4.2) ; extra == 'graphite'",
          "scipy ; (platform_python_implementation != \"PyPy\") and extra == 'interpolatable'",
          "munkres ; (platform_python_implementation == \"PyPy\") and extra == 'interpolatable'",
          "lxml (<5,>=4.0) ; extra == 'lxml'",
          "skia-pathops (>=0.5.0) ; extra == 'pathops'",
          "matplotlib ; extra == 'plot'",
          "uharfbuzz (>=0.23.0) ; extra == 'repacker'",
          "sympy ; extra == 'symfont'",
          "xattr ; (sys_platform == \"darwin\") and extra == 'type1'",
          "fs (<3,>=2.2.0) ; extra == 'ufo'",
          "unicodedata2 (>=15.0.0) ; (python_version <= \"3.11\") and extra == 'unicode'",
          "zopfli (>=0.1.4) ; extra == 'woff'",
          "brotlicffi (>=0.8.0) ; (platform_python_implementation != \"CPython\") and extra == 'woff'",
          "brotli (>=1.0.1) ; (platform_python_implementation == \"CPython\") and extra == 'woff'"
        ],
        "requires_python": ">=3.8",
        "provides_extra": [
          "all",
          "graphite",
          "interpolatable",
          "lxml",
          "pathops",
          "plot",
          "repacker",
          "symfont",
          "type1",
          "ufo",
          "unicode",
          "woff"
        ],
        "description": "|CI Build Status| |Coverage Status| |PyPI| |Gitter Chat|\n\nWhat is this?\n~~~~~~~~~~~~~\n\n| fontTools is a library for manipulating fonts, written in Python. The\n  project includes the TTX tool, that can convert TrueType and OpenType\n  fonts to and from an XML text format, which is also called TTX. It\n  supports TrueType, OpenType, AFM and to an extent Type 1 and some\n  Mac-specific formats. The project has an `MIT open-source\n  licence <LICENSE>`__.\n| Among other things this means you can use it free of charge.\n\n`User documentation <https://fonttools.readthedocs.io/en/latest/>`_ and\n`developer documentation <https://fonttools.readthedocs.io/en/latest/developer.html>`_\nare available at `Read the Docs <https://fonttools.readthedocs.io/>`_.\n\nInstallation\n~~~~~~~~~~~~\n\nFontTools requires `Python <http://www.python.org/download/>`__ 3.8\nor later. We try to follow the same schedule of minimum Python version support as\nNumPy (see `NEP 29 <https://numpy.org/neps/nep-0029-deprecation_policy.html>`__).\n\nThe package is listed in the Python Package Index (PyPI), so you can\ninstall it with `pip <https://pip.pypa.io>`__:\n\n.. code:: sh\n\n    pip install fonttools\n\nIf you would like to contribute to its development, you can clone the\nrepository from GitHub, install the package in 'editable' mode and\nmodify the source code in place. We recommend creating a virtual\nenvironment, using `virtualenv <https://virtualenv.pypa.io>`__ or\nPython 3 `venv <https://docs.python.org/3/library/venv.html>`__ module.\n\n.. code:: sh\n\n    # download the source code to 'fonttools' folder\n    git clone https://github.com/fonttools/fonttools.git\n    cd fonttools\n\n    # create new virtual environment called e.g. 'fonttools-venv', or anything you like\n    python -m virtualenv fonttools-venv\n\n    # source the `activate` shell script to enter the environment (Un*x); to exit, just type `deactivate`\n    . fonttools-venv/bin/activate\n\n    # to activate the virtual environment in Windows `cmd.exe`, do\n    fonttools-venv\\Scripts\\activate.bat\n\n    # install in 'editable' mode\n    pip install -e .\n\nOptional Requirements\n---------------------\n\nThe ``fontTools`` package currently has no (required) external dependencies\nbesides the modules included in the Python Standard Library.\nHowever, a few extra dependencies are required by some of its modules, which\nare needed to unlock optional features.\nThe ``fonttools`` PyPI distribution also supports so-called \"extras\", i.e. a\nset of keywords that describe a group of additional dependencies, which can be\nused when installing via pip, or when specifying a requirement.\nFor example:\n\n.. code:: sh\n\n    pip install fonttools[ufo,lxml,woff,unicode]\n\nThis command will install fonttools, as well as the optional dependencies that\nare required to unlock the extra features named \"ufo\", etc.\n\n- ``Lib/fontTools/misc/etree.py``\n\n  The module exports a ElementTree-like API for reading/writing XML files, and\n  allows to use as the backend either the built-in ``xml.etree`` module or\n  `lxml <https://lxml.de>`__. The latter is preferred whenever present,\n  as it is generally faster and more secure.\n\n  *Extra:* ``lxml``\n\n- ``Lib/fontTools/ufoLib``\n\n  Package for reading and writing UFO source files; it requires:\n\n  * `fs <https://pypi.org/pypi/fs>`__: (aka ``pyfilesystem2``) filesystem\n    abstraction layer.\n\n  * `enum34 <https://pypi.org/pypi/enum34>`__: backport for the built-in ``enum``\n    module (only required on Python < 3.4).\n\n  *Extra:* ``ufo``\n\n- ``Lib/fontTools/ttLib/woff2.py``\n\n  Module to compress/decompress WOFF 2.0 web fonts; it requires:\n\n  * `brotli <https://pypi.python.org/pypi/Brotli>`__: Python bindings of\n    the Brotli compression library.\n\n  *Extra:* ``woff``\n\n- ``Lib/fontTools/ttLib/sfnt.py``\n\n  To better compress WOFF 1.0 web fonts, the following module can be used\n  instead of the built-in ``zlib`` library:\n\n  * `zopfli <https://pypi.python.org/pypi/zopfli>`__: Python bindings of\n    the Zopfli compression library.\n\n  *Extra:* ``woff``\n\n- ``Lib/fontTools/unicode.py``\n\n  To display the Unicode character names when dumping the ``cmap`` table\n  with ``ttx`` we use the ``unicodedata`` module in the Standard Library.\n  The version included in there varies between different Python versions.\n  To use the latest available data, you can install:\n\n  * `unicodedata2 <https://pypi.python.org/pypi/unicodedata2>`__:\n    ``unicodedata`` backport for Python 3.x updated to the latest Unicode\n    version 15.0.\n\n  *Extra:* ``unicode``\n\n- ``Lib/fontTools/varLib/interpolatable.py``\n\n  Module for finding wrong contour/component order between different masters.\n  It requires one of the following packages in order to solve the so-called\n  \"minimum weight perfect matching problem in bipartite graphs\", or\n  the Assignment problem:\n\n  * `scipy <https://pypi.python.org/pypi/scipy>`__: the Scientific Library\n    for Python, which internally uses `NumPy <https://pypi.python.org/pypi/numpy>`__\n    arrays and hence is very fast;\n  * `munkres <https://pypi.python.org/pypi/munkres>`__: a pure-Python\n    module that implements the Hungarian or Kuhn-Munkres algorithm.\n\n  *Extra:* ``interpolatable``\n\n- ``Lib/fontTools/varLib/plot.py``\n\n  Module for visualizing DesignSpaceDocument and resulting VariationModel.\n\n  * `matplotlib <https://pypi.org/pypi/matplotlib>`__: 2D plotting library.\n\n  *Extra:* ``plot``\n\n- ``Lib/fontTools/misc/symfont.py``\n\n  Advanced module for symbolic font statistics analysis; it requires:\n\n  * `sympy <https://pypi.python.org/pypi/sympy>`__: the Python library for\n    symbolic mathematics.\n\n  *Extra:* ``symfont``\n\n- ``Lib/fontTools/t1Lib.py``\n\n  To get the file creator and type of Macintosh PostScript Type 1 fonts\n  on Python 3 you need to install the following module, as the old ``MacOS``\n  module is no longer included in Mac Python:\n\n  * `xattr <https://pypi.python.org/pypi/xattr>`__: Python wrapper for\n    extended filesystem attributes (macOS platform only).\n\n  *Extra:* ``type1``\n\n- ``Lib/fontTools/ttLib/removeOverlaps.py``\n\n  Simplify TrueType glyphs by merging overlapping contours and components.\n\n  * `skia-pathops <https://pypi.python.org/pypy/skia-pathops>`__: Python\n    bindings for the Skia library's PathOps module, performing boolean\n    operations on paths (union, intersection, etc.).\n\n  *Extra:* ``pathops``\n\n- ``Lib/fontTools/pens/cocoaPen.py`` and ``Lib/fontTools/pens/quartzPen.py``\n\n  Pens for drawing glyphs with Cocoa ``NSBezierPath`` or ``CGPath`` require:\n\n  * `PyObjC <https://pypi.python.org/pypi/pyobjc>`__: the bridge between\n    Python and the Objective-C runtime (macOS platform only).\n\n- ``Lib/fontTools/pens/qtPen.py``\n\n  Pen for drawing glyphs with Qt's ``QPainterPath``, requires:\n\n  * `PyQt5 <https://pypi.python.org/pypi/PyQt5>`__: Python bindings for\n    the Qt cross platform UI and application toolkit.\n\n- ``Lib/fontTools/pens/reportLabPen.py``\n\n  Pen to drawing glyphs as PNG images, requires:\n\n  * `reportlab <https://pypi.python.org/pypi/reportlab>`__: Python toolkit\n    for generating PDFs and graphics.\n\n- ``Lib/fontTools/pens/freetypePen.py``\n\n  Pen to drawing glyphs with FreeType as raster images, requires:\n\n  * `freetype-py <https://pypi.python.org/pypi/freetype-py>`__: Python binding\n    for the FreeType library.\n    \n- ``Lib/fontTools/ttLib/tables/otBase.py``\n\n  Use the Harfbuzz library to serialize GPOS/GSUB using ``hb_repack`` method, requires:\n  \n  * `uharfbuzz <https://pypi.python.org/pypi/uharfbuzz>`__: Streamlined Cython\n    bindings for the harfbuzz shaping engine\n    \n  *Extra:* ``repacker``\n\nHow to make a new release\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\n1) Update ``NEWS.rst`` with all the changes since the last release. Write a\n   changelog entry for each PR, with one or two short sentences summarizing it,\n   as well as links to the PR and relevant issues addressed by the PR. Do not\n   put a new title, the next command will do it for you.\n2) Use semantic versioning to decide whether the new release will be a 'major',\n   'minor' or 'patch' release. It's usually one of the latter two, depending on\n   whether new backward compatible APIs were added, or simply some bugs were fixed.\n3) Run ``python setup.py release`` command from the tip of the ``main`` branch.\n   By default this bumps the third or 'patch' digit only, unless you pass ``--major``\n   or ``--minor`` to bump respectively the first or second digit.\n   This bumps the package version string, extracts the changes since the latest\n   version from ``NEWS.rst``, and uses that text to create an annotated git tag\n   (or a signed git tag if you pass the ``--sign`` option and your git and Github\n   account are configured for `signing commits <https://docs.github.com/en/github/authenticating-to-github/managing-commit-signature-verification/signing-commits>`__\n   using a GPG key).\n   It also commits an additional version bump which opens the main branch for\n   the subsequent developmental cycle\n4) Push both the tag and commit to the upstream repository, by running the command\n   ``git push --follow-tags``. Note: it may push other local tags as well, be\n   careful.\n5) Let the CI build the wheel and source distribution packages and verify both\n   get uploaded to the Python Package Index (PyPI).\n6) [Optional] Go to fonttools `Github Releases <https://github.com/fonttools/fonttools/releases>`__\n   page and create a new release, copy-pasting the content of the git tag\n   message. This way, the release notes are nicely formatted as markdown, and\n   users watching the repo will get an email notification. One day we shall\n   automate that too.\n\n\nAcknowledgements\n~~~~~~~~~~~~~~~~\n\nIn alphabetical order:\n\naschmitz, Olivier Berten, Samyak Bhuta, Erik van Blokland, Petr van Blokland,\nJelle Bosma, Sascha Brawer, Tom Byrer, Antonio Cavedoni, Frédéric\nCoiffier, Vincent Connare, David Corbett, Simon Cozens, Dave Crossland,\nSimon Daniels, Peter Dekkers, Behdad Esfahbod, Behnam Esfahbod, Hannes\nFamira, Sam Fishman, Matt Fontaine, Takaaki Fuji, Yannis Haralambous, Greg\nHitchcock, Jeremie Hornus, Khaled Hosny, John Hudson, Denis Moyogo Jacquerye,\nJack Jansen, Tom Kacvinsky, Jens Kutilek, Antoine Leca, Werner Lemberg, Tal\nLeming, Peter Lofting, Cosimo Lupo, Olli Meier, Masaya Nakamura, Dave Opstad,\nLaurence Penney, Roozbeh Pournader, Garret Rieger, Read Roberts, Colin Rofls,\nGuido van Rossum, Just van Rossum, Andreas Seidel, Georg Seifert, Chris\nSimpkins, Miguel Sousa, Adam Twardoch, Adrien Tétar, Vitaly Volkov,\nPaul Wise.\n\nCopyrights\n~~~~~~~~~~\n\n| Copyright (c) 1999-2004 Just van Rossum, LettError\n  (just@letterror.com)\n| See `LICENSE <LICENSE>`__ for the full license.\n\nCopyright (c) 2000 BeOpen.com. All Rights Reserved.\n\nCopyright (c) 1995-2001 Corporation for National Research Initiatives.\nAll Rights Reserved.\n\nCopyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam. All\nRights Reserved.\n\nHave fun!\n\n.. |CI Build Status| image:: https://github.com/fonttools/fonttools/workflows/Test/badge.svg\n   :target: https://github.com/fonttools/fonttools/actions?query=workflow%3ATest\n.. |Coverage Status| image:: https://codecov.io/gh/fonttools/fonttools/branch/main/graph/badge.svg\n   :target: https://codecov.io/gh/fonttools/fonttools\n.. |PyPI| image:: https://img.shields.io/pypi/v/fonttools.svg\n   :target: https://pypi.org/project/FontTools\n.. |Gitter Chat| image:: https://badges.gitter.im/fonttools-dev/Lobby.svg\n   :alt: Join the chat at https://gitter.im/fonttools-dev/Lobby\n   :target: https://gitter.im/fonttools-dev/Lobby?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge\n\nChangelog\n~~~~~~~~~\n\n4.39.3 (released 2023-03-28)\n----------------------------\n\n- [sbix] Fixed TypeError when compiling empty glyphs whose imageData is None, regression\n  was introduced in v4.39 (#3059).\n- [ttFont] Fixed AttributeError on python <= 3.10 when opening a TTFont from a tempfile\n  SpooledTemporaryFile, seekable method only added on python 3.11 (#3052).\n\n4.39.2 (released 2023-03-16)\n----------------------------\n\n- [varLib] Fixed regression introduced in 4.39.1 whereby an incomplete 'STAT' table\n  would be built even though a DesignSpace v5 did contain 'STAT' definitions (#3045, #3046).\n\n4.39.1 (released 2023-03-16)\n----------------------------\n\n- [avar2] Added experimental support for reading/writing avar version 2 as specified in\n  this draft proposal: https://github.com/harfbuzz/boring-expansion-spec/blob/main/avar2.md\n- [glifLib] Wrap underlying XML library exceptions with GlifLibError when parsing GLIFs,\n  and also print the name and path of the glyph that fails to be parsed (#3042).\n- [feaLib] Consult avar for normalizing user-space values in ConditionSets and in\n  VariableScalars (#3042, #3043).\n- [ttProgram] Handle string input to Program.fromAssembly() (#3038).\n- [otlLib] Added a config option to emit GPOS 7 lookups, currently disabled by default\n  because of a macOS bug (#3034).\n- [COLRv1] Added method to automatically compute ClipBoxes (#3027).\n- [ttFont] Fixed getGlyphID to raise KeyError on missing glyphs instead of returning\n  None. The regression was introduced in v4.27.0 (#3032).\n- [sbix] Fixed UnboundLocalError: cannot access local variable 'rawdata' (#3031).\n- [varLib] When building VF, do not overwrite a pre-existing ``STAT`` table that was built\n  with feaLib from FEA feature file. Also, added support for building multiple VFs\n  defined in Designspace v5 from ``fonttools varLib`` script (#3024).\n- [mtiLib] Only add ``Debg`` table with lookup names when ``FONTTOOLS_LOOKUP_DEBUGGING``\n  env variable is set (#3023).\n\n4.39.0 (released 2023-03-06)\n----------------------------\n\n- [mtiLib] Optionally add `Debg` debug info for MTI feature builds (#3018).\n- [ttx] Support reading input file from standard input using special `-` character,\n  similar to existing `-o -` option to write output to standard output (#3020).\n- [cython] Prevent ``cython.compiled`` raise AttributeError if cython not installed\n  properly (#3017).\n- [OS/2] Guard against ZeroDivisionError when calculating xAvgCharWidth in the unlikely\n  scenario no glyph has non-zero advance (#3015).\n- [subset] Recompute xAvgCharWidth independently of --no-prune-unicode-ranges,\n  previously the two options were involuntarily bundled together (#3012).\n- [fontBuilder] Add ``debug`` parameter to addOpenTypeFeatures method to add source\n  debugging information to the font in the ``Debg`` private table (#3008).\n- [name] Make NameRecord `__lt__` comparison not fail on Unicode encoding errors (#3006).\n- [featureVars] Fixed bug in ``overlayBox`` (#3003, #3005).\n- [glyf] Added experimental support for cubic bezier curves in TrueType glyf table, as\n  outlined in glyf v1 proposal (#2988):\n  https://github.com/harfbuzz/boring-expansion-spec/blob/main/glyf1-cubicOutlines.md\n- Added new qu2cu module and related qu2cuPen, the reverse of cu2qu for converting\n  TrueType quadratic splines to cubic bezier curves (#2993).\n- [glyf] Added experimental support for reading and writing Variable Composites/Components\n  as defined in glyf v1 spec proposal (#2958):\n  https://github.com/harfbuzz/boring-expansion-spec/blob/main/glyf1-varComposites.md.\n- [pens]: Added `addVarComponent` method to pen protocols' base classes, which pens can implement\n  to handle varcomponents (by default they get decomposed) (#2958).\n- [misc.transform] Added DecomposedTransform class which implements an affine transformation\n  with separate translate, rotation, scale, skew, and transformation-center components (#2598)\n- [sbix] Ensure Glyph.referenceGlyphName is set; fixes error after dumping and\n  re-compiling sbix table with 'dupe' glyphs (#2984).\n- [feaLib] Be cleverer when merging chained single substitutions into same lookup\n  when they are specified using the inline notation (#2150, #2974).\n- [instancer] Clamp user-inputted axis ranges to those of fvar (#2959).\n- [otBase/subset] Define ``__getstate__`` for BaseTable so that a copied/pickled 'lazy'\n  object gets its own OTTableReader to read from; incidentally fixes a bug while\n  subsetting COLRv1 table containing ClipBoxes on python 3.11 (#2965, #2968).\n- [sbix] Handle glyphs with \"dupe\" graphic type on compile correctly (#2963).\n- [glyf] ``endPointsOfContours`` field should be unsigned! Kudos to behdad for\n  spotting one of the oldest bugs in FT. Probably nobody has ever dared to make\n  glyphs with more than 32767 points... (#2957).\n- [feaLib] Fixed handling of ``ignore`` statements with unmarked glyphs to match\n  makeotf behavior, which assumes the first glyph is marked (#2950).\n- Reformatted code with ``black`` and enforce new code style via CI check (#2925).\n- [feaLib] Sort name table entries following OT spec prescribed order in the builder (#2927).\n- [cu2quPen] Add Cu2QuMultiPen that converts multiple outlines at a time in\n  interpolation compatible way; its methods take a list of tuples arguments\n  that would normally be passed to individual segment pens, and at the end it\n  dispatches the converted outlines to each pen (#2912).\n- [reverseContourPen/ttGlyphPen] Add outputImpliedClosingLine option (#2913, #2914,\n  #2921, #2922, #2995).\n- [gvar] Avoid expanding all glyphs unnecessarily upon compile (#2918).\n- [scaleUpem] Fixed bug whereby CFF2 vsindex was scaled; it should not (#2893, #2894).\n- [designspaceLib] Add DS.getAxisByTag and refactor getAxis (#2891).\n- [unicodedata] map Zmth<->math in ot_tag_{to,from}_script (#1737, #2889).\n- [woff2] Support encoding/decoding OVERLAP_SIMPLE glyf flags (#2576, #2884).\n- [instancer] Update OS/2 class and post.italicAngle when default moved (L4)\n- Dropped support for Python 3.7 which reached EOL, fontTools requires 3.8+.\n- [instancer] Fixed instantiateFeatureVariations logic when a rule range becomes\n  default-applicable (#2737, #2880).\n- [ttLib] Add main to ttFont and ttCollection that just decompile and re-compile the\n  input font (#2869).\n- [featureVars] Insert 'rvrn' lookup at the beginning of LookupList, to work around bug\n  in Apple implementation of 'rvrn' feature which the spec says it should be processed\n  early whereas on macOS 10.15 it follows lookup order (#2140, #2867).\n- [instancer/mutator] Remove 'DSIG' table if present.\n- [svgPathPen] Don't close path in endPath(), assume open unless closePath() (#2089, #2865).\n\n4.38.0 (released 2022-10-21)\n----------------------------\n\n- [varLib.instancer] Added support for L4 instancing, i.e. moving the default value of\n  an axis while keeping it variable. Thanks Behdad! (#2728, #2861).  \n  It's now also possible to restrict an axis min/max values beyond the current default\n  value, e.g. a font wght has min=100, def=400, max=900 and you want a partial VF that\n  only varies between 500 and 700, you can now do that.  \n  You can either specify two min/max values (wght=500:700), and the new default will be\n  set to either the minimum or maximum, depending on which one is closer to the current\n  default (e.g. 500 in this case). Or you can specify three values (e.g. wght=500:600:700)\n  to specify the new default value explicitly.\n- [otlLib/featureVars] Set a few Count values so one doesn't need to compile the font\n  to update them (#2860).\n- [varLib.models] Make extrapolation work for 2-master models as well where one master\n  is at the default location (#2843, #2846).  \n  Add optional extrapolate=False to normalizeLocation() (#2847, #2849).\n- [varLib.cff] Fixed sub-optimal packing of CFF2 deltas by no longer rounding them to\n  integer (#2838).\n- [scaleUpem] Calculate numShorts in VarData after scale; handle CFF hintmasks (#2840).\n\n4.37.4 (released 2022-09-30)\n----------------------------\n\n- [subset] Keep nameIDs used by CPAL palette entry labels (#2837).\n- [varLib] Avoid negative hmtx values when creating font from variable CFF2 font (#2827).\n- [instancer] Don't prune stat.ElidedFallbackNameID (#2828).\n- [unicodedata] Update Scripts/Blocks to Unicode 15.0 (#2833).\n\n4.37.3 (released 2022-09-20)\n----------------------------\n\n- Fix arguments in calls to (glyf) glyph.draw() and drawPoints(), whereby offset wasn't\n  correctly passed down; this fix also exposed a second bug, where lsb and tsb were not\n  set (#2824, #2825, adobe-type-tools/afdko#1560).\n\n4.37.2 (released 2022-09-15)\n----------------------------\n\n- [subset] Keep CPAL table and don't attempt to prune unused color indices if OT-SVG\n  table is present even if COLR table was subsetted away; OT-SVG may be referencing the\n  CPAL table; for now we assume that's the case (#2814, #2815).\n- [varLib.instancer] Downgrade GPOS/GSUB version if there are no more FeatureVariations\n  after instancing (#2812).\n- [subset] Added ``--no-lazy`` to optionally load fonts eagerly (mostly to ease\n  debugging of table lazy loading, no practical effects) (#2807).\n- [varLib] Avoid building empty COLR.DeltaSetIndexMap with only identity mappings (#2803).\n- [feaLib] Allow multiple value record types (by promoting to the most general format)\n  within the same PairPos subtable; e.g. this allows variable and non variable kerning\n  rules to share the same subtable. This also fixes a bug whereby some kerning pairs\n  would become unreachable while shapiong because of premature subtable splitting (#2772, #2776).\n- [feaLib] Speed up ``VarScalar`` by caching models for recurring master locations (#2798).\n- [feaLib] Optionally cythonize ``feaLib.lexer``, speeds up parsing FEA a bit (#2799).\n- [designspaceLib] Avoid crash when handling unbounded rule conditions (#2797).\n- [post] Don't crash if ``post`` legacy format 1 is malformed/improperly used (#2786)\n- [gvar] Don't be \"lazy\" (load all glyph variations up front) when TTFont.lazy=False (#2771).\n- [TTFont] Added ``normalizeLocation`` method to normalize a location dict from the\n  font's defined axes space (also known as \"user space\") into the normalized (-1..+1)\n  space. It applies ``avar`` mapping if the font contains an ``avar`` table (#2789).\n- [TTVarGlyphSet] Support drawing glyph instances from CFF2 variable glyph set (#2784).\n- [fontBuilder] Do not error when building cmap if there are zero code points (#2785).\n- [varLib.plot] Added ability to plot a variation model and set of accompaning master\n  values corresponding to the model's master locations into a pyplot figure (#2767).\n- [Snippets] Added ``statShape.py`` script to draw statistical shape of a glyph as an\n  ellips (requires pycairo) (baecd88).\n- [TTVarGlyphSet] implement drawPoints natively, avoiding going through\n  SegmentToPointPen (#2778).\n- [TTVarGlyphSet] Fixed bug whereby drawing a composite glyph multiple times, its\n  components would shif; needed an extra copy (#2774).\n\n4.37.1 (released 2022-08-24)\n----------------------------\n\n- [subset] Fixed regression introduced with v4.37.0 while subsetting the VarStore of\n  ``HVAR`` and ``VVAR`` tables, whereby an ``AttributeError: subset_varidxes`` was\n  thrown because an apparently unused import statement (with the side-effect of\n  dynamically binding that ``subset_varidxes`` method to the VarStore class) had been\n  accidentally deleted in an unrelated PR (#2679, #2773).\n- [pens] Added ``cairoPen`` (#2678).\n- [gvar] Read ``gvar`` more lazily by not parsing all of the ``glyf`` table (#2771).\n- [ttGlyphSet] Make ``drawPoints(pointPen)`` method work for CFF fonts as well via\n  adapter pen (#2770).\n\n4.37.0 (released 2022-08-23)\n----------------------------\n\n- [varLib.models] Reverted PR #2717 which added support for \"narrow tents\" in v4.36.0,\n  as it introduced a regression (#2764, #2765). It will be restored in upcoming release\n  once we found a solution to the bug.\n- [cff.specializer] Fixed issue in charstring generalizer with the ``blend`` operator\n  (#2750, #1975).\n- [varLib.models] Added support for extrapolation (#2757).\n- [ttGlyphSet] Ensure the newly added ``_TTVarGlyphSet`` inherits from ``_TTGlyphSet``\n  to keep backward compatibility with existing API (#2762).\n- [kern] Allow compiling legacy kern tables with more than 64k entries (d21cfdede).\n- [visitor] Added new visitor API to traverse tree of objects and dispatch based\n  on the attribute type: cf. ``fontTools.misc.visitor`` and ``fontTools.ttLib.ttVisitor``. Added ``fontTools.ttLib.scaleUpem`` module that uses the latter to\n  change a font's units-per-em and scale all the related fields accordingly (#2718,\n  #2755).\n\n4.36.0 (released 2022-08-17)\n----------------------------\n\n- [varLib.models] Use a simpler model that generates narrower \"tents\" (regions, master\n  supports) whenever possible: specifically when any two axes that actively \"cooperate\"\n  (have masters at non-zero positions for both axes) have a complete set of intermediates.\n  The simpler algorithm produces fewer overlapping regions and behaves better with\n  respect to rounding at the peak positions than the generic solver, always matching\n  intermediate masters exactly, instead of maximally 0.5 units off. This may be useful\n  when 100% metrics compatibility is desired (#2218, #2717).\n- [feaLib] Remove warning when about ``GDEF`` not being built when explicitly not\n  requested; don't build one unconditonally even when not requested (#2744, also works\n  around #2747).\n- [ttFont] ``TTFont.getGlyphSet`` method now supports selecting a location that\n  represents an instance of a variable font (supports both user-scale and normalized\n  axes coordinates via the ``normalized=False`` parameter). Currently this only works\n  for TrueType-flavored variable fonts (#2738).\n\n4.35.0 (released 2022-08-15)\n----------------------------\n\n- [otData/otConverters] Added support for 'biased' PaintSweepGradient start/end angles\n  to match latest COLRv1 spec (#2743).\n- [varLib.instancer] Fixed bug in ``_instantiateFeatureVariations`` when at the same\n  time pinning one axis and restricting the range of a subsequent axis; the wrong axis\n  tag was being used in the latter step (as the records' axisIdx was updated in the\n  preceding step but looked up using the old axes order in the following step) (#2733,\n  #2734).\n- [mtiLib] Pad script tags with space when less than 4 char long (#1727).\n- [merge] Use ``'.'`` instead of ``'#'`` in duplicate glyph names (#2742).\n- [gvar] Added support for lazily loading glyph variations (#2741).\n- [varLib] In ``build_many``, we forgot to pass on ``colr_layer_reuse`` parameter to\n  the ``build`` method (#2730).\n- [svgPathPen] Add a main that prints SVG for input text (6df779fd).\n- [cffLib.width] Fixed off-by-one in optimized values; previous code didn't match the\n  code block above it (2963fa50).\n- [varLib.interpolatable] Support reading .designspace and .glyphs files (via optional\n  ``glyphsLib``).\n- Compile some modules with Cython when available and building/installing fonttools\n  from source: ``varLib.iup`` (35% faster), ``pens.momentsPen`` (makes\n  ``varLib.interpolatable`` 3x faster).\n- [feaLib] Allow features to be built for VF without also building a GDEF table (e.g.\n  only build GSUB); warn when GDEF would be needed but isn't requested (#2705, 2694).\n- [otBase] Fixed ``AttributeError`` when uharfbuzz < 0.23.0 and 'repack' method is\n  missing (32aa8eaf). Use new ``uharfbuzz.repack_with_tag`` when available (since\n  uharfbuzz>=0.30.0), enables table-specific optimizations to be performed during\n  repacking (#2724).\n- [statisticsPen] By default report all glyphs (4139d891). Avoid division-by-zero\n  (52b28f90).\n- [feaLib] Added missing required argument to FeatureLibError exception (#2693)\n- [varLib.merge] Fixed error during error reporting (#2689). Fixed undefined\n  ``NotANone`` variable (#2714).\n\n4.34.4 (released 2022-07-07)\n----------------------------\n\n- Fixed typo in varLib/merger.py that causes NameError merging COLR glyphs\n  containing more than 255 layers (#2685).\n\n4.34.3 (released 2022-07-07)\n----------------------------\n\n- [designspaceLib] Don't make up bad PS names when no STAT data (#2684)\n\n4.34.2 (released 2022-07-06)\n----------------------------\n\n- [varStore/subset] fixed KeyError exception to do with NO_VARIATION_INDEX while\n  subsetting varidxes in GPOS/GDEF (a08140d).\n\n4.34.1 (released 2022-07-06)\n----------------------------\n\n- [instancer] When optimizing HVAR/VVAR VarStore, use_NO_VARIATION_INDEX=False to avoid\n  including NO_VARIATION_INDEX in AdvWidthMap, RsbMap, LsbMap mappings, which would\n  push the VarIdx width to maximum (4bytes), which is not desirable. This also fixes\n  a hard crash when attempting to subset a varfont after it had been partially instanced\n  with use_NO_VARIATION_INDEX=True.\n\n4.34.0 (released 2022-07-06)\n----------------------------\n\n- [instancer] Set RIBBI bits in head and OS/2 table when cutting instances and the\n  subfamily nameID=2 contains strings like 'Italic' or 'Bold' (#2673).\n- [otTraverse] Addded module containing methods for traversing trees of otData tables\n  (#2660).\n- [otTables] Made DeltaSetIndexMap TTX dump less verbose by omitting no-op entries\n  (#2660).\n- [colorLib.builder] Added option to disable PaintColrLayers's reuse of layers from\n  LayerList (#2660).\n- [varLib] Added support for merging multiple master COLRv1 tables into a variable\n  COLR table (#2660, #2328). Base color glyphs of same name in different masters must have\n  identical paint graph structure (incl. number of layers, palette indices, number\n  of color line stops, corresponding paint formats at each level of the graph),\n  but can differ in the variable fields (e.g. PaintSolid.Alpha). PaintVar* tables\n  are produced when this happens and a VarStore/DeltaSetIndexMap is added to the\n  variable COLR table. It is possible for non-default masters to be 'sparse', i.e.\n  omit some of the color glyphs present in the default master.\n- [feaLib] Let the Parser set nameIDs 1 through 6 that were previously reserved (#2675).\n- [varLib.varStore] Support NO_VARIATION_INDEX in optimizer and instancer.\n- [feaLib] Show all missing glyphs at once at end of parsing (#2665).\n- [varLib.iup] Rewrite force-set conditions and limit DP loopback length (#2651).\n  For Noto Sans, IUP time drops from 23s down to 9s, with only a slight size increase\n  in the final font. This basically turns the algorithm from O(n^3) into O(n).\n- [featureVars] Report about missing glyphs in substitution rules (#2654).\n- [mutator/instancer] Added CLI flag to --no-recalc-timestamp (#2649).\n- [SVG] Allow individual SVG documents in SVG OT table to be compressed on uncompressed,\n  and remember that when roundtripping to/from ttx. The SVG.docList is now a list\n  of SVGDocument namedtuple-like dataclass containing an extra ``compressed`` field,\n  and no longer a bare 3-tuple (#2645).\n- [designspaceLib] Check for descriptor types with hasattr() to allow custom classes\n  that don't inherit the default descriptors (#2634).\n- [subset] Enable sharing across subtables of extension lookups for harfbuzz packing\n  (#2626). Updated how table packing falls back to fontTools from harfbuzz (#2668).\n- [subset] Updated default feature tags following current Harfbuzz (#2637).\n- [svgLib] Fixed regex for real number to support e.g. 1e-4 in addition to 1.0e-4.\n  Support parsing negative rx, ry on arc commands (#2596, #2611).\n- [subset] Fixed subsetting SinglePosFormat2 when ValueFormat=0 (#2603).\n\n4.33.3 (released 2022-04-26)\n----------------------------\n\n- [designspaceLib] Fixed typo in ``deepcopyExceptFonts`` method, preventing font\n  references to be transferred (#2600). Fixed another typo in the name of ``Range``\n  dataclass's ``__post_init__`` magic method (#2597).\n\n4.33.2 (released 2022-04-22)\n----------------------------\n\n- [otBase] Make logging less verbose when harfbuzz fails to serialize. Do not exit\n  at the first failure but continue attempting to fix offset overflow error using\n  the pure-python serializer even when the ``USE_HARFBUZZ_REPACKER`` option was\n  explicitly set to ``True``. This is normal with fonts with relatively large\n  tables, at least until hb.repack implements proper table splitting.\n\n4.33.1 (released 2022-04-22)\n----------------------------\n\n- [otlLib] Put back the ``FONTTOOLS_GPOS_COMPACT_MODE`` environment variable to fix\n  regression in ufo2ft (and thus fontmake) introduced with v4.33.0 (#2592, #2593).\n  This is deprecated and will be removed one ufo2ft gets updated to use the new\n  config setup.\n\n4.33.0 (released 2022-04-21)\n----------------------------\n\n- [OS/2 / merge] Automatically recalculate ``OS/2.xAvgCharWidth`` after merging\n  fonts with ``fontTools.merge`` (#2591, #2538).\n- [misc/config] Added ``fontTools.misc.configTools`` module, a generic configuration\n  system (#2416, #2439).\n  Added ``fontTools.config`` module, a fontTools-specific configuration\n  system using ``configTools`` above.\n  Attached a ``Config`` object to ``TTFont``.\n- [otlLib] Replaced environment variable for GPOS compression level with an\n  equivalent option using the new config system.\n- [designspaceLib] Incremented format version to 5.0 (#2436).\n  Added discrete axes, variable fonts, STAT information, either design- or\n  user-space location on instances.\n  Added ``fontTools.designspaceLib.split`` module to split a designspace\n  into sub-spaces that interpolate and that represent the variable fonts\n  listed in the document.\n  Made instance names optional and allow computing them from STAT data instead.\n  Added ``fontTools.designspaceLib.statNames`` module.\n  Allow instances to have the same location as a previously defined STAT label.\n  Deprecated some attributes:\n  ``SourceDescriptor``: ``copyLib``, ``copyInfo``, ``copyGroups``, ``copyFeatures``.\n  ``InstanceDescriptor``: ``kerning``, ``info``; ``glyphs``: use rules or sparse\n  sources.\n  For both, ``location``: use the more explicit designLocation.\n  Note: all are soft deprecations and existing code should keep working.\n  Updated documentation for Python methods and the XML format.\n- [varLib] Added ``build_many`` to build several variable fonts from a single\n  designspace document (#2436).\n  Added ``fontTools.varLib.stat`` module to build STAT tables from a designspace\n  document.\n- [otBase] Try to use the Harfbuzz Repacker for packing GSUB/GPOS tables when\n  ``uharfbuzz`` python bindings are available (#2552). Disable it by setting the\n  \"fontTools.ttLib.tables.otBase:USE_HARFBUZZ_REPACKER\" config option to ``False``.\n  If the option is set explicitly to ``True`` but ``uharfbuzz`` can't be imported\n  or fails to serialize for any reasons, an error will be raised (ImportError or\n  uharfbuzz errors).\n- [CFF/T2] Ensure that ``pen.closePath()`` gets called for CFF2 charstrings (#2577).\n  Handle implicit CFF2 closePath within ``T2OutlineExtractor`` (#2580).\n\n4.32.0 (released 2022-04-08)\n----------------------------\n\n- [otlLib] Disable GPOS7 optimization to work around bug in Apple CoreText.\n  Always force Chaining GPOS8 for now (#2540).\n- [glifLib] Added ``outputImpliedClosingLine=False`` parameter to ``Glyph.draw()``,\n  to control behaviour of ``PointToSegmentPen`` (6b4e2e7).\n- [varLib.interpolatable] Check for wrong contour starting point (#2571).\n- [cffLib] Remove leftover ``GlobalState`` class and fix calls to ``TopDictIndex()``\n  (#2569, #2570).\n- [instancer] Clear ``AxisValueArray`` if it is empty after instantiating (#2563).\n\n4.31.2 (released 2022-03-22)\n----------------------------\n\n- [varLib] fix instantiation of GPOS SinglePos values (#2555).\n\n4.31.1 (released 2022-03-18)\n----------------------------\n\n- [subset] fix subsetting OT-SVG when glyph id attribute is on the root ``<svg>``\n  element (#2553).\n\n4.31.0 (released 2022-03-18)\n----------------------------\n\n- [ttCollection] Fixed 'ResourceWarning: unclosed file' warning (#2549).\n- [varLib.merger] Handle merging SinglePos with valueformat=0 (#2550).\n- [ttFont] Update glyf's glyphOrder when calling TTFont.setGlyphOrder() (#2544).\n- [ttFont] Added ``ensureDecompiled`` method to load all tables irrespective\n  of the ``lazy`` attribute (#2551).\n- [otBase] Added ``iterSubTable`` method to iterate over BaseTable's children of\n  type BaseTable; useful for traversing a tree of otTables (#2551).\n\n4.30.0 (released 2022-03-10)\n----------------------------\n\n- [varLib] Added debug logger showing the glyph name for which ``gvar`` is built (#2542).\n- [varLib.errors] Fixed undefined names in ``FoundANone`` and ``UnsupportedFormat``\n  exceptions (ac4d5611).\n- [otlLib.builder] Added ``windowsNames`` and ``macNames`` (bool) parameters to the\n  ``buildStatTabe`` function, so that one can select whether to only add one or both\n  of the two sets (#2528).\n- [t1Lib] Added the ability to recreate PostScript stream (#2504).\n- [name] Added ``getFirstDebugName``, ``getBest{Family,SubFamily,Full}Name`` methods (#2526).\n\n4.29.1 (released 2022-02-01)\n----------------------------\n\n- [colorLib] Fixed rounding issue with radial gradient's start/end circles inside\n  one another (#2521).\n- [freetypePen] Handle rotate/skew transform when auto-computing width/height of the\n  buffer; raise PenError wen missing moveTo (#2517)\n\n4.29.0 (released 2022-01-24)\n----------------------------\n\n- [ufoLib] Fixed illegal characters and expanded reserved filenames (#2506).\n- [COLRv1] Don't emit useless PaintColrLayers of lenght=1 in LayerListBuilder (#2513).\n- [ttx] Removed legacy ``waitForKeyPress`` method on Windows (#2509).\n- [pens] Added FreeTypePen that uses ``freetype-py`` and the pen protocol for\n  rasterizating outline paths (#2494).\n- [unicodedata] Updated the script direction list to Unicode 14.0 (#2484).\n  Bumped unicodedata2 dependency to 14.0 (#2499).\n- [psLib] Fixed type of ``fontName`` in ``suckfont`` (#2496).\n\n4.28.5 (released 2021-12-19)\n----------------------------\n\n- [svgPathPen] Continuation of #2471: make sure all occurrences of ``str()`` are now\n  replaced with user-defined ``ntos`` callable.\n- [merge] Refactored code into submodules, plus several bugfixes and improvements:\n  fixed duplicate-glyph-resolution GSUB-lookup generation code; use tolerance in glyph\n  comparison for empty glyph's width; ignore space of default ignorable glyphs;\n  downgrade duplicates-resolution missing-GSUB from assert to warn; added --drop-tables\n  option (#2473, #2475, #2476).\n\n4.28.4 (released 2021-12-15)\n----------------------------\n\n- [merge] Merge GDEF marksets in Lookups properly (#2474).\n- [feaLib] Have ``fontTools feaLib`` script exit with error code when build fails (#2459)\n- [svgPathPen] Added ``ntos`` option to customize number formatting (e.g. rounding) (#2471).\n- [subset] Speed up subsetting of large CFF fonts (#2467).\n- [otTables] Speculatively promote lookups to extension to speed up compilation. If the\n  offset to lookup N is too big to fit in a ushort, the offset to lookup N+1 is going to\n  be too big as well, so we promote to extension all lookups from lookup N onwards (#2465).\n\n4.28.3 (released 2021-12-03)\n----------------------------\n\n- [subset] Fixed bug while subsetting ``COLR`` table, whereby incomplete layer records\n  pointing to missing glyphs were being retained leading to ``struct.error`` upon\n  compiling. Make it so that ``glyf`` glyph closure, which follows the ``COLR`` glyph\n  closure, does not influence the ``COLR`` table subsetting (#2461, #2462).\n- [docs] Fully document the ``cmap`` and ``glyf`` tables (#2454, #2457).\n- [colorLib.unbuilder] Fixed CLI by deleting no longer existing parameter (180bb1867).\n\n4.28.2 (released 2021-11-22)\n----------------------------\n\n- [otlLib] Remove duplicates when building coverage (#2433).\n- [docs] Add interrogate configuration (#2443).\n- [docs] Remove comment about missing “start” optional argument to ``calcChecksum`` (#2448).\n- [cu2qu/cli] Adapt to the latest ufoLib2.\n- [subset] Support subsetting SVG table and remove it from the list of  drop by default tables (#534).\n- [subset] add ``--pretty-svg`` option to pretty print SVG table contents (#2452).\n- [merge] Support merging ``CFF`` tables (CID-keyed ``CFF`` is still not supported) (#2447).\n- [merge] Support ``--output-file`` (#2447).\n- [docs] Split table docs into individual pages (#2444).\n- [feaLib] Forbid empty classes (#2446).\n- [docs] Improve documentation for ``fontTools.ttLib.ttFont`` (#2442).\n\n4.28.1 (released 2021-11-08)\n----------------------------\n\n- [subset] Fixed AttributeError while traversing a color glyph's Paint graph when there is no\n  LayerList, which is optional (#2441).\n\n4.28.0 (released 2021-11-05)\n----------------------------\n\n- Dropped support for EOL Python 3.6, require Python 3.7 (#2417).\n- [ufoLib/glifLib] Make filename-clash checks faster by using a set instead of a list (#2422).\n- [subset] Don't crash if optional ClipList and LayerList are ``None`` (empty) (#2424, 2439).\n- [OT-SVG] Removed support for old deprecated version 1 and embedded color palettes,\n  which were never officially part of the OpenType SVG spec. Upon compile, reuse offsets\n  to SVG documents that are identical (#2430).\n- [feaLib] Added support for Variable Feature File syntax. This is experimental and subject\n  to change until it is finalized in the Adobe FEA spec (#2432).\n- [unicodedata] Update Scripts/ScriptExtensions/Blocks to UnicodeData 14.0 (#2437).\n\n4.27.1 (released 2021-09-23)\n----------------------------\n\n- [otlLib] Fixed error when chained contextual lookup builder overflows (#2404, #2411).\n- [bezierTools] Fixed two floating-point bugs: one when computing `t` for a point\n  lying on an almost horizontal/vertical line; another when computing the intersection\n  point between a curve and a line (#2413).\n\n4.27.0 (released 2021-09-14)\n----------------------------\n\n- [ttLib/otTables] Cleaned up virtual GID handling: allow virtual GIDs in ``Coverage``\n  and ``ClassDef`` readers; removed unused ``allowVID`` argument from ``TTFont``\n  constructor, and ``requireReal`` argument in ``TTFont.getGlyphID`` method.\n  Make ``TTFont.setGlyphOrder`` clear reverse glyphOrder map, and assume ``glyphOrder``\n  internal attribute is never modified outside setGlyphOrder; added ``TTFont.getGlyphNameMany``\n  and ``getGlyphIDMany`` (#1536, #1654, #2334, #2398).\n- [py23] Dropped internal use of ``fontTools.py23`` module to fix deprecation warnings\n  in client code that imports from fontTools (#2234, #2399, #2400).\n- [subset] Fix subsetting COLRv1 clip boxes when font is loaded lazily (#2408).\n\n4.26.2 (released 2021-08-09)\n----------------------------\n\n- [otTables] Added missing ``CompositeMode.PLUS`` operator (#2390).\n\n4.26.1 (released 2021-08-03)\n----------------------------\n\n- [transform] Added ``transformVector`` and ``transformVectors`` methods to the\n  ``Transform`` class. Similar to ``transformPoint`` but ignore the translation\n  part (#2386).\n\n4.26.0 (released 2021-08-03)\n----------------------------\n\n- [xmlWriter] Default to ``\"\\n\"`` for ``newlinestr`` instead of platform-specific\n  ``os.linesep`` (#2384).\n- [otData] Define COLRv1 ClipList and ClipBox (#2379).\n- [removeOverlaps/instancer] Added --ignore-overlap-errors option to work around\n  Skia PathOps.Simplify bug (#2382, #2363, google/fonts#3365).\n- NOTE: This will be the last version to support Python 3.6. FontTools will require\n  Python 3.7 or above from the next release (#2350)\n\n4.25.2 (released 2021-07-26)\n----------------------------\n\n- [COLRv1] Various changes to sync with the latest CORLv1 draft spec. In particular:\n  define COLR.VarIndexMap, remove/inline ColorIndex struct, add VarIndexBase to ``PaintVar*`` tables (#2372);\n  add reduced-precicion specialized transform Paints;\n  define Angle as fraction of half circle encoded as F2Dot14;\n  use FWORD (int16) for all Paint center coordinates;\n  change PaintTransform to have an offset to Affine2x3;\n- [ttLib] when importing XML, only set sfntVersion if the font has no reader and is empty (#2376)\n\n4.25.1 (released 2021-07-16)\n----------------------------\n\n- [ttGlyphPen] Fixed bug in ``TTGlyphPointPen``, whereby open contours (i.e. starting\n  with segmentType \"move\") would throw ``NotImplementedError``. They are now treated\n  as if they are closed, like with the ``TTGlyphPen`` (#2364, #2366).\n\n4.25.0 (released 2021-07-05)\n----------------------------\n\n- [tfmLib] Added new library for parsing TeX Font Metric (TFM) files (#2354).\n- [TupleVariation] Make shared tuples order deterministic on python < 3.7 where\n  Counter (subclass of dict) doesn't remember insertion order (#2351, #2353).\n- [otData] Renamed COLRv1 structs to remove 'v1' suffix and match the updated draft\n  spec: 'LayerV1List' -> 'LayerList', 'BaseGlyphV1List' -> 'BaseGlyphList',\n  'BaseGlyphV1Record' -> 'BaseGlyphPaintRecord' (#2346).\n  Added 8 new ``PaintScale*`` tables: with/without centers, uniform vs non-uniform.\n  Added ``*AroundCenter`` variants to ``PaintRotate`` and ``PaintSkew``: the default\n  versions no longer have centerX/Y, but default to origin.\n  ``PaintRotate``, ``PaintSkew`` and ``PaintComposite`` formats were re-numbered.\n  NOTE: these are breaking changes; clients using the experimental COLRv1 API will\n  have to be updated (#2348).\n- [pointPens] Allow ``GuessSmoothPointPen`` to accept a tolerance. Fixed call to\n  ``math.atan2`` with x/y parameters inverted. Sync the code with fontPens (#2344).\n- [post] Fixed parsing ``post`` table format 2.0 when it contains extra garbage\n  at the end of the stringData array (#2314).\n- [subset] drop empty features unless 'size' with FeatureParams table (#2324).\n- [otlLib] Added ``otlLib.optimize`` module; added GPOS compaction algorithm.\n  The compaction can be run on existing fonts with ``fonttools otlLib.optimize``\n  or using the snippet ``compact_gpos.py``. There's experimental support for\n  compacting fonts at compilation time using an environment variable, but that\n  might be removed later (#2326).\n\n4.24.4 (released 2021-05-25)\n----------------------------\n\n- [subset/instancer] Fixed ``AttributeError`` when instantiating a VF that\n  contains GPOS ValueRecords with ``Device`` tables but without the respective\n  non-Device values (e.g. ``XAdvDevice`` without ``XAdvance``). When not\n  explicitly set, the latter are assumed to be 0 (#2323).\n\n4.24.3 (released 2021-05-20)\n----------------------------\n\n- [otTables] Fixed ``AttributeError`` in methods that split LigatureSubst,\n  MultipleSubst and AlternateSubst subtables when an offset overflow occurs.\n  The ``Format`` attribute was removed in v4.22.0 (#2319).\n\n4.24.2 (released 2021-05-20)\n----------------------------\n\n- [ttGlyphPen] Fixed typing annotation of TTGlyphPen glyphSet parameter (#2315).\n- Fixed two instances of DeprecationWarning: invalid escape sequence (#2311).\n\n4.24.1 (released 2021-05-20)\n----------------------------\n\n- [subset] Fixed AttributeError when SinglePos subtable has None Value (ValueFormat 0)\n  (#2312, #2313).\n\n4.24.0 (released 2021-05-17)\n----------------------------\n\n- [pens] Add ``ttGlyphPen.TTGlyphPointPen`` similar to ``TTGlyphPen`` (#2205).\n\n4.23.1 (released 2021-05-14)\n----------------------------\n\n- [subset] Fix ``KeyError`` after subsetting ``COLR`` table that initially contains\n  both v0 and v1 color glyphs when the subset only requested v1 glyphs; we were\n  not pruning the v0 portion of the table (#2308).\n- [colorLib] Set ``LayerV1List`` attribute to ``None`` when empty, it's optional\n  in CORLv1 (#2308).\n\n4.23.0 (released 2021-05-13)\n----------------------------\n\n- [designspaceLib] Allow to use ``\\\\UNC`` absolute paths on Windows (#2299, #2306).\n- [varLib.merger] Fixed bug where ``VarLibMergeError`` was raised with incorrect\n  parameters (#2300).\n- [feaLib] Allow substituting a glyph class with ``NULL`` to delete multiple glyphs\n  (#2303).\n- [glyf] Fixed ``NameError`` exception in ``getPhantomPoints`` (#2295, #2305).\n- [removeOverlaps] Retry pathops.simplify after rounding path coordinates to integers\n  if it fails the first time using floats, to work around a rare and hard to debug\n  Skia bug (#2288).\n- [varLib] Added support for building, reading, writing and optimizing 32-bit\n  ``ItemVariationStore`` as used in COLRv1 table (#2285).\n- [otBase/otConverters] Add array readers/writers for int types (#2285).\n- [feaLib] Allow more than one lookahead glyph/class in contextual positioning with\n  \"value at end\" (#2293, #2294).\n- [COLRv1] Default varIdx should be 0xFFFFFFFF (#2297, #2298).\n- [pens] Make RecordingPointPen actually pass on identifiers; replace asserts with\n  explicit ``PenError`` exception (#2284).\n- [mutator] Round lsb for CF2 fonts as well (#2286).\n\n4.22.1 (released 2021-04-26)\n----------------------------\n\n- [feaLib] Skip references to named lookups if the lookup block definition\n  is empty, similarly to makeotf. This also fixes an ``AttributeError`` while\n  generating ``aalt`` feature (#2276, #2277).\n- [subset] Fixed bug with ``--no-hinting`` implementation for Device tables (#2272,\n  #2275). The previous code was alwyas dropping Device tables if no-hinting was\n  requested, but some Device tables (DeltaFormat=0x8000) are also used to encode\n  variation indices and need to be retained.\n- [otBase] Fixed bug in getting the ValueRecordSize when decompiling ``MVAR``\n  table with ``lazy=True`` (#2273, #2274).\n- [varLib/glyf/gvar] Optimized and simplified ``GlyphCoordinates`` and\n  ``TupleVariation`` classes, use ``bytearray`` where possible, refactored\n  phantom-points calculations. We measured about 30% speedup in total time\n  of loading master ttfs, building gvar, and saving (#2261, #2266).\n- [subset] Fixed ``AssertionError`` while pruning unused CPAL palettes when\n  ``0xFFFF`` is present (#2257, #2259).\n\n4.22.0 (released 2021-04-01)\n----------------------------\n\n- [ttLib] Remove .Format from Coverage, ClassDef, SingleSubst, LigatureSubst,\n  AlternateSubst, MultipleSubst (#2238).\n  ATTENTION: This will change your TTX dumps!\n- [misc.arrayTools] move Vector to its own submodule, and rewrite as a tuple\n  subclass (#2201).\n- [docs] Added a terminology section for varLib (#2209).\n- [varLib] Move rounding to VariationModel, to avoid error accumulation from\n  multiple deltas (#2214)\n- [varLib] Explain merge errors in more human-friendly terms (#2223, #2226)\n- [otlLib] Correct some documentation (#2225)\n- [varLib/otlLib] Allow merging into VariationFont without first saving GPOS\n  PairPos2 (#2229)\n- [subset] Improve PairPosFormat2 subsetting (#2221)\n- [ttLib] TTFont.save: create file on disk as late as possible (#2253)\n- [cffLib] Add missing CFF2 dict operators LanguageGroup and ExpansionFactor\n  (#2249)\n  ATTENTION: This will change your TTX dumps!\n\n4.21.1 (released 2021-02-26)\n----------------------------\n\n- [pens] Reverted breaking change that turned ``AbstractPen`` and ``AbstractPointPen``\n  into abstract base classes (#2164, #2198).\n\n4.21.0 (released 2021-02-26)\n----------------------------\n\n- [feaLib] Indent anchor statements in ``asFea()`` to make them more legible and\n  diff-able (#2193).\n- [pens] Turn ``AbstractPen`` and ``AbstractPointPen`` into abstract base classes\n  (#2164).\n- [feaLib] Added support for parsing and building ``STAT`` table from AFDKO feature\n  files (#2039).\n- [instancer] Added option to update name table of generated instance using ``STAT``\n  table's axis values (#2189).\n- [bezierTools] Added functions to compute bezier point-at-time, as well as line-line,\n  curve-line and curve-curve intersections (#2192).\n\n4.20.0 (released 2021-02-15)\n----------------------------\n\n- [COLRv1] Added ``unbuildColrV1`` to deconstruct COLRv1 otTables to raw json-able\n  data structure; it does the reverse of ``buildColrV1`` (#2171).\n- [feaLib] Allow ``sub X by NULL`` sequence to delete a glyph (#2170).\n- [arrayTools] Fixed ``Vector`` division (#2173).\n- [COLRv1] Define new ``PaintSweepGradient`` (#2172).\n- [otTables] Moved ``Paint.Format`` enum class outside of ``Paint`` class definition,\n  now named ``PaintFormat``. It was clashing with paint instance ``Format`` attribute\n  and thus was breaking lazy load of COLR table which relies on magic ``__getattr__``\n  (#2175).\n- [COLRv1] Replace hand-coded builder functions with otData-driven dynamic\n  implementation (#2181).\n- [COLRv1] Define additional static (non-variable) Paint formats (#2181).\n- [subset] Added support for subsetting COLR v1 and CPAL tables (#2174, #2177).\n- [fontBuilder] Allow ``setupFvar`` to optionally take ``designspaceLib.AxisDescriptor``\n  objects. Added new ``setupAvar`` method. Support localised names for axes and\n  named instances (#2185).\n\n4.19.1 (released 2021-01-28)\n----------------------------\n\n- [woff2] An initial off-curve point with an overlap flag now stays an off-curve\n  point after compression.\n\n4.19.0 (released 2021-01-25)\n----------------------------\n\n- [codecs] Handle ``errors`` parameter different from 'strict' for the custom\n  extended mac encodings (#2137, #2132).\n- [featureVars] Raise better error message when a script is missing the required\n  default language system (#2154).\n- [COLRv1] Avoid abrupt change caused by rounding ``PaintRadialGradient.c0`` when\n  the start circle almost touches the end circle's perimeter (#2148).\n- [COLRv1] Support building unlimited lists of paints as 255-ary trees of\n  ``PaintColrLayers`` tables (#2153).\n- [subset] Prune redundant format-12 cmap subtables when all non-BMP characters\n  are dropped (#2146).\n- [basePen] Raise ``MissingComponentError`` instead of bare ``KeyError`` when a\n  referenced component is missing (#2145).\n\n4.18.2 (released 2020-12-16)\n----------------------------\n\n- [COLRv1] Implemented ``PaintTranslate`` paint format (#2129).\n- [varLib.cff] Fixed unbound local variable error (#1787).\n- [otlLib] Don't crash when creating OpenType class definitions if some glyphs\n  occur more than once (#2125).\n\n4.18.1 (released 2020-12-09)\n----------------------------\n\n- [colorLib] Speed optimization for ``LayerV1ListBuilder`` (#2119).\n- [mutator] Fixed missing tab in ``interpolate_cff2_metrics`` (0957dc7a).\n\n4.18.0 (released 2020-12-04)\n----------------------------\n\n- [COLRv1] Update to latest draft: added ``PaintRotate`` and ``PaintSkew`` (#2118).\n- [woff2] Support new ``brotlicffi`` bindings for PyPy (#2117).\n- [glifLib] Added ``expectContentsFile`` parameter to ``GlyphSet``, for use when\n  reading existing UFOs, to comply with the specification stating that a\n  ``contents.plist`` file must exist in a glyph set (#2114).\n- [subset] Allow ``LangSys`` tags in ``--layout-scripts`` option (#2112). For example:\n  ``--layout-scripts=arab.dflt,arab.URD,latn``; this will keep ``DefaultLangSys``\n  and ``URD`` language for ``arab`` script, and all languages for ``latn`` script.\n- [varLib.interpolatable] Allow UFOs to be checked; report open paths, non existant\n  glyphs; add a ``--json`` option to produce a machine-readable list of\n  incompatibilities\n- [pens] Added ``QuartzPen`` to create ``CGPath`` from glyph outlines on macOS.\n  Requires pyobjc (#2107).\n- [feaLib] You can export ``FONTTOOLS_LOOKUP_DEBUGGING=1`` to enable feature file\n  debugging info stored in ``Debg`` table (#2106).\n- [otlLib] Build more efficient format 1 and format 2 contextual lookups whenever\n  possible (#2101).\n\n4.17.1 (released 2020-11-16)\n----------------------------\n\n- [colorLib] Fixed regression in 4.17.0 when building COLR v0 table; when color\n  layers are stored in UFO lib plist, we can't distinguish tuples from lists so\n  we need to accept either types (e5439eb9, googlefonts/ufo2ft/issues#426).\n\n4.17.0 (released 2020-11-12)\n----------------------------\n\n- [colorLib/otData] Updated to latest draft ``COLR`` v1 spec (#2092).\n- [svgLib] Fixed parsing error when arc commands' boolean flags are not separated\n  by space or comma (#2094).\n- [varLib] Interpret empty non-default glyphs as 'missing', if the default glyph is\n  not empty (#2082).\n- [feaLib.builder] Only stash lookup location for ``Debg`` if ``Builder.buildLookups_``\n  has cooperated (#2065, #2067).\n- [varLib] Fixed bug in VarStore optimizer (#2073, #2083).\n- [varLib] Add designspace lib key for custom feavar feature tag (#2080).\n- Add HashPointPen adapted from psautohint. With this pen, a hash value of a glyph\n  can be computed, which can later be used to detect glyph changes (#2005).\n\n4.16.1 (released 2020-10-05)\n----------------------------\n\n- [varLib.instancer] Fixed ``TypeError`` exception when instantiating a VF with\n  a GSUB table 1.1 in which ``FeatureVariations`` attribute is present but set to\n  ``None`` -- indicating that optional ``FeatureVariations`` is missing (#2077).\n- [glifLib] Make ``x`` and ``y`` attributes of the ``point`` element required\n  even when validation is turned off, and raise a meaningful ``GlifLibError``\n  message when that happens (#2075).\n\n4.16.0 (released 2020-09-30)\n----------------------------\n\n- [removeOverlaps] Added new module and ``removeOverlaps`` function that merges\n  overlapping contours and components in TrueType glyphs. It requires the\n  `skia-pathops <https://github.com/fonttools/skia-pathops>`__ module.\n  Note that removing overlaps invalidates the TrueType hinting (#2068).\n- [varLib.instancer] Added ``--remove-overlaps`` command-line option.\n  The ``overlap`` option in ``instantiateVariableFont`` now takes an ``OverlapMode``\n  enum: 0: KEEP_AND_DONT_SET_FLAGS, 1: KEEP_AND_SET_FLAGS (default), and 2: REMOVE.\n  The latter is equivalent to calling ``removeOverlaps`` on the generated static\n  instance. The option continues to accept ``bool`` value for backward compatibility.\n\n\n4.15.0 (released 2020-09-21)\n----------------------------\n\n- [plistlib] Added typing annotations to plistlib module. Set up mypy static\n  typechecker to run automatically on CI (#2061).\n- [ttLib] Implement private ``Debg`` table, a reverse-DNS namespaced JSON dict.\n- [feaLib] Optionally add an entry into the ``Debg`` table with the original\n  lookup name (if any), feature name / script / language combination (if any),\n  and original source filename and line location. Annotate the ttx output for\n  a lookup with the information from the Debg table (#2052).\n- [sfnt] Disabled checksum checking by default in ``SFNTReader`` (#2058).\n- [Docs] Document ``mtiLib`` module (#2027).\n- [varLib.interpolatable] Added checks for contour node count and operation type\n  of each node (#2054).\n- [ttLib] Added API to register custom table packer/unpacker classes (#2055).\n\n4.14.0 (released 2020-08-19)\n----------------------------\n\n- [feaLib] Allow anonymous classes in LookupFlags definitions (#2037).\n- [Docs] Better document DesignSpace rules processing order (#2041).\n- [ttLib] Fixed 21-year old bug in ``maxp.maxComponentDepth`` calculation (#2044,\n  #2045).\n- [varLib.models] Fixed misspelled argument name in CLI entry point (81d0042a).\n- [subset] When subsetting GSUB v1.1, fixed TypeError by checking whether the\n  optional FeatureVariations table is present (e63ecc5b).\n- [Snippets] Added snippet to show how to decompose glyphs in a TTF (#2030).\n- [otlLib] Generate GSUB type 5 and GPOS type 7 contextual lookups where appropriate\n  (#2016).\n\n4.13.0 (released 2020-07-10)\n----------------------------\n\n- [feaLib/otlLib] Moved lookup subtable builders from feaLib to otlLib; refactored\n  some common code (#2004, #2007).\n- [docs] Document otlLib module (#2009).\n- [glifLib] Fixed bug with some UFO .glif filenames clashing on case-insensitive\n  filesystems (#2001, #2002).\n- [colorLib] Updated COLRv1 implementation following changes in the draft spec:\n  (#2008, googlefonts/colr-gradients-spec#24).\n\n4.12.1 (released 2020-06-16)\n----------------------------\n\n- [_n_a_m_e] Fixed error in ``addMultilingualName`` with one-character names.\n  Only attempt to recovered malformed UTF-16 data from a ``bytes`` string,\n  not from unicode ``str`` (#1997, #1998).\n\n4.12.0 (released 2020-06-09)\n----------------------------\n\n- [otlLib/varLib] Ensure that the ``AxisNameID`` in the ``STAT`` and ``fvar``\n  tables is grater than 255 as per OpenType spec (#1985, #1986).\n- [docs] Document more modules in ``fontTools.misc`` package: ``filenames``,\n  ``fixedTools``, ``intTools``, ``loggingTools``, ``macCreatorType``, ``macRes``,\n  ``plistlib`` (#1981).\n- [OS/2] Don't calculate whole sets of unicode codepoints, use faster and more memory\n  efficient ranges and bisect lookups (#1984).\n- [voltLib] Support writing back abstract syntax tree as VOLT data (#1983).\n- [voltLib] Accept DO_NOT_TOUCH_CMAP keyword (#1987).\n- [subset/merge] Fixed a namespace clash involving a private helper class (#1955).\n\n4.11.0 (released 2020-05-28)\n----------------------------\n\n- [feaLib] Introduced ``includeDir`` parameter on Parser and IncludingLexer to\n  explicitly specify the directory to search when ``include()`` statements are\n  encountered (#1973).\n- [ufoLib] Silently delete duplicate glyphs within the same kerning group when reading\n  groups (#1970).\n- [ttLib] Set version of COLR table when decompiling COLRv1 (commit 9d8a7e2).\n\n4.10.2 (released 2020-05-20)\n----------------------------\n\n- [sfnt] Fixed ``NameError: SimpleNamespace`` while reading TTC header. The regression\n  was introduced with 4.10.1 after removing ``py23`` star import.\n\n4.10.1 (released 2020-05-19)\n----------------------------\n\n- [sfnt] Make ``SFNTReader`` pickleable even when TTFont is loaded with lazy=True\n  option and thus keeps a reference to an external file (#1962, #1967).\n- [feaLib.ast] Restore backward compatibility (broken in 4.10 with #1905) for\n  ``ChainContextPosStatement`` and ``ChainContextSubstStatement`` classes.\n  Make them accept either list of lookups or list of lists of lookups (#1961).\n- [docs] Document some modules in ``fontTools.misc`` package: ``arrayTools``,\n  ``bezierTools`` ``cliTools`` and ``eexec`` (#1956).\n- [ttLib._n_a_m_e] Fixed ``findMultilingualName()`` when name record's ``string`` is\n  encoded as bytes sequence (#1963).\n\n4.10.0 (released 2020-05-15)\n----------------------------\n\n- [varLib] Allow feature variations to be active across the entire space (#1957).\n- [ufoLib] Added support for ``formatVersionMinor`` in UFO's ``fontinfo.plist`` and for\n  ``formatMinor`` attribute in GLIF file as discussed in unified-font-object/ufo-spec#78.\n  No changes in reading or writing UFOs until an upcoming (non-0) minor update of the\n  UFO specification is published (#1786).\n- [merge] Fixed merging fonts with different versions of ``OS/2`` table (#1865, #1952).\n- [subset] Fixed ``AttributeError`` while subsetting ``ContextSubst`` and ``ContextPos``\n  Format 3 subtable (#1879, #1944).\n- [ttLib.table._m_e_t_a] if data happens to be ascii, emit comment in TTX (#1938).\n- [feaLib] Support multiple lookups per glyph position (#1905).\n- [psCharStrings] Use inheritance to avoid repeated code in initializer (#1932).\n- [Doc] Improved documentation for the following modules: ``afmLib`` (#1933), ``agl``\n  (#1934), ``cffLib`` (#1935), ``cu2qu`` (#1937), ``encodings`` (#1940), ``feaLib``\n  (#1941), ``merge`` (#1949).\n- [Doc] Split off developer-centric info to new page, making front page of docs more\n  user-focused. List all utilities and sub-modules with brief descriptions.\n  Make README more concise and focused (#1914).\n- [otlLib] Add function to build STAT table from high-level description (#1926).\n- [ttLib._n_a_m_e] Add ``findMultilingualName()`` method (#1921).\n- [unicodedata] Update ``RTL_SCRIPTS`` for Unicode 13.0 (#1925).\n- [gvar] Sort ``gvar`` XML output by glyph name, not glyph order (#1907, #1908).\n- [Doc] Added help options to ``fonttools`` command line tool (#1913, #1920).\n  Ensure all fonttools CLI tools have help documentation (#1948).\n- [ufoLib] Only write fontinfo.plist when there actually is content (#1911).\n\n4.9.0 (released 2020-04-29)\n---------------------------\n\n- [subset] Fixed subsetting of FeatureVariations table. The subsetter no longer drops\n  FeatureVariationRecords that have empty substitutions as that will keep the search\n  going and thus change the logic. It will only drop empty records that occur at the\n  end of the FeatureVariationRecords array (#1881).\n- [subset] Remove FeatureVariations table and downgrade GSUB/GPOS to version 0x10000\n  when FeatureVariations contain no FeatureVariationRecords after subsetting (#1903).\n- [agl] Add support for legacy Adobe Glyph List of glyph names in ``fontTools.agl``\n  (#1895).\n- [feaLib] Ignore superfluous script statements (#1883).\n- [feaLib] Hide traceback by default on ``fonttools feaLib`` command line.\n  Use ``--traceback`` option to show (#1898).\n- [feaLib] Check lookup index in chaining sub/pos lookups and print better error\n  message (#1896, #1897).\n- [feaLib] Fix building chained alt substitutions (#1902).\n- [Doc] Included all fontTools modules in the sphinx-generated documentation, and\n  published it to ReadTheDocs for continuous documentation of the fontTools project\n  (#1333). Check it out at https://fonttools.readthedocs.io/. Thanks to Chris Simpkins!\n- [transform] The ``Transform`` class is now subclass of ``typing.NamedTuple``. No\n  change in functionality (#1904).\n\n\n4.8.1 (released 2020-04-17)\n---------------------------\n\n- [feaLib] Fixed ``AttributeError: 'NoneType' has no attribute 'getAlternateGlyphs'``\n  when ``aalt`` feature references a chain contextual substitution lookup\n  (googlefonts/fontmake#648, #1878).\n\n4.8.0 (released 2020-04-16)\n---------------------------\n\n- [feaLib] If Parser is initialized without a ``glyphNames`` parameter, it cannot\n  distinguish between a glyph name containing an hyphen, or a range of glyph names;\n  instead of raising an error, it now interprets them as literal glyph names, while\n  also outputting a logging warning to alert user about the ambiguity (#1768, #1870).\n- [feaLib] When serializing AST to string, emit spaces around hyphens that denote\n  ranges. Also, fixed an issue with CID ranges when round-tripping AST->string->AST\n  (#1872).\n- [Snippets/otf2ttf] In otf2ttf.py script update LSB in hmtx to match xMin (#1873).\n- [colorLib] Added experimental support for building ``COLR`` v1 tables as per\n  the `colr-gradients-spec <https://github.com/googlefonts/colr-gradients-spec/blob/main/colr-gradients-spec.md>`__\n  draft proposal. **NOTE**: both the API and the XML dump of ``COLR`` v1 are\n  susceptible to change while the proposal is being discussed and formalized (#1822).\n\n4.7.0 (released 2020-04-03)\n---------------------------\n\n- [cu2qu] Added ``fontTools.cu2qu`` package, imported from the original\n  `cu2qu <https://github.com/googlefonts/cu2qu>`__ project. The ``cu2qu.pens`` module\n  was moved to ``fontTools.pens.cu2quPen``. The optional cu2qu extension module\n  can be compiled by installing `Cython <https://cython.org/>`__ before installing\n  fonttools from source (i.e. git repo or sdist tarball). The wheel package that\n  is published on PyPI (i.e. the one ``pip`` downloads, unless ``--no-binary``\n  option is used), will continue to be pure-Python for now (#1868).\n\n4.6.0 (released 2020-03-24)\n---------------------------\n\n- [varLib] Added support for building variable ``BASE`` table version 1.1 (#1858).\n- [CPAL] Added ``fromRGBA`` method to ``Color`` class (#1861).\n\n\n4.5.0 (released 2020-03-20)\n---------------------------\n\n- [designspaceLib] Added ``add{Axis,Source,Instance,Rule}Descriptor`` methods to\n  ``DesignSpaceDocument`` class, to initialize new descriptor objects using keyword\n  arguments, and at the same time append them to the current document (#1860).\n- [unicodedata] Update to Unicode 13.0 (#1859).\n\n4.4.3 (released 2020-03-13)\n---------------------------\n\n- [varLib] Always build ``gvar`` table for TrueType-flavored Variable Fonts,\n  even if it contains no variation data. The table is required according to\n  the OpenType spec (#1855, #1857).\n\n4.4.2 (released 2020-03-12)\n---------------------------\n\n- [ttx] Annotate ``LookupFlag`` in XML dump with comment explaining what bits\n  are set and what they mean (#1850).\n- [feaLib] Added more descriptive message to ``IncludedFeaNotFound`` error (#1842).\n\n4.4.1 (released 2020-02-26)\n---------------------------\n\n- [woff2] Skip normalizing ``glyf`` and ``loca`` tables if these are missing from\n  a font (e.g. in NotoColorEmoji using ``CBDT/CBLC`` tables).\n- [timeTools] Use non-localized date parsing in ``timestampFromString``, to fix\n  error when non-English ``LC_TIME`` locale is set (#1838, #1839).\n- [fontBuilder] Make sure the CFF table generated by fontBuilder can be used by varLib\n  without having to compile and decompile the table first. This was breaking in\n  converting the CFF table to CFF2 due to some unset attributes (#1836).\n\n4.4.0 (released 2020-02-18)\n---------------------------\n\n- [colorLib] Added ``fontTools.colorLib.builder`` module, initially with ``buildCOLR``\n  and ``buildCPAL`` public functions. More color font formats will follow (#1827).\n- [fontBuilder] Added ``setupCOLR`` and ``setupCPAL`` methods (#1826).\n- [ttGlyphPen] Quantize ``GlyphComponent.transform`` floats to ``F2Dot14`` to fix\n  round-trip issue when computing bounding boxes of transformed components (#1830).\n- [glyf] If a component uses reference points (``firstPt`` and ``secondPt``) for\n  alignment (instead of X and Y offsets), compute the effective translation offset\n  *after* having applied any transform (#1831).\n- [glyf] When all glyphs have zero contours, compile ``glyf`` table data as a single\n  null byte in order to pass validation by OTS and Windows (#1829).\n- [feaLib] Parsing feature code now ensures that referenced glyph names are part of\n  the known glyph set, unless a glyph set was not provided.\n- [varLib] When filling in the default axis value for a missing location of a source or\n  instance, correctly map the value forward.\n- [varLib] The avar table can now contain mapping output values that are greater than\n  OR EQUAL to the preceeding value, as the avar specification allows this.\n- [varLib] The errors of the module are now ordered hierarchically below VarLibError.\n  See #1821.\n\n4.3.0 (released 2020-02-03)\n---------------------------\n\n- [EBLC/CBLC] Fixed incorrect padding length calculation for Format 3 IndexSubTable\n  (#1817, #1818).\n- [varLib] Fixed error when merging OTL tables and TTFonts were loaded as ``lazy=True``\n  (#1808, #1809).\n- [varLib] Allow to use master fonts containing ``CFF2`` table when building VF (#1816).\n- [ttLib] Make ``recalcBBoxes`` option work also with ``CFF2`` table (#1816).\n- [feaLib] Don't reset ``lookupflag`` in lookups defined inside feature blocks.\n  They will now inherit the current ``lookupflag`` of the feature. This is what\n  Adobe ``makeotf`` also does in this case (#1815).\n- [feaLib] Fixed bug with mixed single/multiple substitutions. If a single substitution\n  involved a glyph class, we were incorrectly using only the first glyph in the class\n  (#1814).\n\n4.2.5 (released 2020-01-29)\n---------------------------\n\n- [feaLib] Do not fail on duplicate multiple substitutions, only warn (#1811).\n- [subset] Optimize SinglePos subtables to Format 1 if all ValueRecords are the same\n  (#1802).\n\n4.2.4 (released 2020-01-09)\n---------------------------\n\n- [unicodedata] Update RTL_SCRIPTS for Unicode 11 and 12.\n\n4.2.3 (released 2020-01-07)\n---------------------------\n\n- [otTables] Fixed bug when splitting `MarkBasePos` subtables as offsets overflow.\n  The mark class values in the split subtable were not being updated, leading to\n  invalid mark-base attachments (#1797, googlefonts/noto-source#145).\n- [feaLib] Only log a warning instead of error when features contain duplicate\n  substitutions (#1767).\n- [glifLib] Strip XML comments when parsing with lxml (#1784, #1785).\n\n4.2.2 (released 2019-12-12)\n---------------------------\n\n- [subset] Fixed issue with subsetting FeatureVariations table when the index\n  of features changes as features get dropped. The feature index need to be\n  remapped to point to index of the remaining features (#1777, #1782).\n- [fontBuilder] Added `addFeatureVariations` method to `FontBuilder` class. This\n  is a shorthand for calling `featureVars.addFeatureVariations` on the builder's\n  TTFont object (#1781).\n- [glyf] Fixed the flags bug in glyph.drawPoints() like we did for glyph.draw()\n  (#1771, #1774).\n\n4.2.1 (released 2019-12-06)\n---------------------------\n\n- [glyf] Use the ``flagOnCurve`` bit mask in ``glyph.draw()``, so that we ignore\n  the ``overlap`` flag that may be set when instantiating variable fonts (#1771).\n\n4.2.0 (released 2019-11-28)\n---------------------------\n\n- [pens] Added the following pens:\n\n  * ``roundingPen.RoundingPen``: filter pen that rounds coordinates and components'\n    offsets to integer;\n  * ``roundingPen.RoundingPointPen``: like the above, but using PointPen protocol.\n  * ``filterPen.FilterPointPen``: base class for filter point pens;\n  * ``transformPen.TransformPointPen``: filter point pen to apply affine transform;\n  * ``recordingPen.RecordingPointPen``: records and replays point-pen commands.\n\n- [ttGlyphPen] Always round float coordinates and component offsets to integers\n  (#1763).\n- [ufoLib] When converting kerning groups from UFO2 to UFO3, avoid confusing\n  groups with the same name as one of the glyphs (#1761, #1762,\n  unified-font-object/ufo-spec#98).\n\n4.1.0 (released 2019-11-18)\n---------------------------\n\n- [instancer] Implemented restricting axis ranges (level 3 partial instancing).\n  You can now pass ``{axis_tag: (min, max)}`` tuples as input to the\n  ``instantiateVariableFont`` function. Note that changing the default axis\n  position is not supported yet. The command-line script also accepts axis ranges\n  in the form of colon-separated float values, e.g. ``wght=400:700`` (#1753, #1537).\n- [instancer] Never drop STAT ``DesignAxis`` records, but only prune out-of-range\n  ``AxisValue`` records.\n- [otBase/otTables] Enforce that VarStore.RegionAxisCount == fvar.axisCount, even\n  when regions list is empty to appease OTS < v8.0 (#1752).\n- [designspaceLib] Defined new ``processing`` attribute for ``<rules>`` element,\n  with values \"first\" or \"last\", plus other editorial changes to DesignSpace\n  specification. Bumped format version to 4.1 (#1750).\n- [varLib] Improved error message when masters' glyph orders do not match (#1758,\n  #1759).\n- [featureVars] Allow to specify custom feature tag in ``addFeatureVariations``;\n  allow said feature to already exist, in which case we append new lookup indices\n  to existing features. Implemented ``<rules>`` attribute ``processing`` according to\n  DesignSpace specification update in #1750. Depending on this flag, we generate\n  either an 'rvrn' (always processed first) or a 'rclt' feature (follows lookup order,\n  therefore last) (#1747, #1625, #1371).\n- [ttCollection] Added support for context manager auto-closing via ``with`` statement\n  like with ``TTFont`` (#1751).\n- [unicodedata] Require unicodedata2 >= 12.1.0.\n- [py2.py3] Removed yet more PY2 vestiges (#1743).\n- [_n_a_m_e] Fixed issue when comparing NameRecords with different string types (#1742).\n- [fixedTools] Changed ``fixedToFloat`` to not do any rounding but simply return\n  ``value / (1 << precisionBits)``. Added ``floatToFixedToStr`` and\n  ``strToFixedToFloat`` functions to be used when loading from or dumping to XML.\n  Fixed values (e.g. fvar axes and instance coordinates, avar mappings, etc.) are\n  are now stored as un-rounded decimal floats upon decompiling (#1740, #737).\n- [feaLib] Fixed handling of multiple ``LigatureCaret`` statements for the same glyph.\n  Only the first rule per glyph is used, additional ones are ignored (#1733).\n\n4.0.2 (released 2019-09-26)\n---------------------------\n\n- [voltLib] Added support for ``ALL`` and ``NONE`` in ``PROCESS_MARKS`` (#1732).\n- [Silf] Fixed issue in ``Silf`` table compilation and decompilation regarding str vs\n  bytes in python3 (#1728).\n- [merge] Handle duplicate glyph names better: instead of appending font index to\n  all glyph names, use similar code like we use in ``post`` and ``CFF`` tables (#1729).\n\n4.0.1 (released 2019-09-11)\n---------------------------\n\n- [otTables] Support fixing offset overflows in ``MultipleSubst`` lookup subtables\n  (#1706).\n- [subset] Prune empty strikes in ``EBDT`` and ``CBDT`` table data (#1698, #1633).\n- [pens] Fixed issue in ``PointToSegmentPen`` when last point of closed contour has\n  same coordinates as the starting point and was incorrectly dropped (#1720).\n- [Graphite] Fixed ``Sill`` table output to pass OTS (#1705).\n- [name] Added ``removeNames`` method to ``table__n_a_m_e`` class (#1719).\n- [ttLib] Added aliases for renamed entries ``ascender`` and ``descender`` in\n  ``hhea`` table (#1715).\n\n4.0.0 (released 2019-08-22)\n---------------------------\n\n- NOTE: The v4.x version series only supports Python 3.6 or greater. You can keep\n  using fonttools 3.x if you need support for Python 2.\n- [py23] Removed all the python2-only code since it is no longer reachable, thus\n  unused; only the Python3 symbols were kept, but these are no-op. The module is now\n  DEPRECATED and will removed in the future.\n- [ttLib] Fixed UnboundLocalError for empty loca/glyph tables (#1680). Also, allow\n  the glyf table to be incomplete when dumping to XML (#1681).\n- [varLib.models] Fixed KeyError while sorting masters and there are no on-axis for\n  a given axis (38a8eb0e).\n- [cffLib] Make sure glyph names are unique (#1699).\n- [feaLib] Fix feature parser to correctly handle octal numbers (#1700).\n\n3.44.0 (released 2019-08-02)\n----------------------------\n\n- NOTE: This is the last scheduled release to support Python 2.7. The upcoming fonttools\n  v4.x series is going to require Python 3.6 or greater.\n- [varLib] Added new ``varLib.instancer`` module for partially instantiating variable\n  fonts. This extends (and will eventually replace) ``varLib.mutator`` module, as\n  it allows to create not just full static instances from a variable font, but also\n  \"partial\" or \"less variable\" fonts where some of the axes are dropped or\n  instantiated at a particular value.\n  Also available from the command-line as `fonttools varLib.instancer --help`\n  (#1537, #1628).\n- [cffLib] Added support for ``FDSelect`` format 4 (#1677).\n- [subset] Added support for subsetting ``sbix`` (Apple bitmap color font) table.\n- [t1Lib] Fixed issue parsing ``eexec`` section in Type1 fonts when whitespace\n  characters are interspersed among the trailing zeros (#1676).\n- [cffLib.specializer] Fixed bug in ``programToCommands`` with CFF2 charstrings (#1669).\n\n3.43.2 (released 2019-07-10)\n----------------------------\n\n- [featureVars] Fixed region-merging code on python3 (#1659).\n- [varLib.cff] Fixed merging of sparse PrivateDict items (#1653).\n\n3.43.1 (released 2019-06-19)\n----------------------------\n\n- [subset] Fixed regression when passing ``--flavor=woff2`` option with an input font\n  that was already compressed as WOFF 1.0 (#1650).\n\n3.43.0 (released 2019-06-18)\n----------------------------\n\n- [woff2] Added support for compressing/decompressing WOFF2 fonts with non-transformed\n  ``glyf`` and ``loca`` tables, as well as with transformed ``hmtx`` table.\n  Removed ``Snippets/woff2_compress.py`` and ``Snippets/woff2_decompress.py`` scripts,\n  and replaced them with a new console entry point ``fonttools ttLib.woff2``\n  that provides two sub-commands ``compress`` and ``decompress``.\n- [varLib.cff] Fixed bug when merging CFF2 ``PrivateDicts``. The ``PrivateDict``\n  data from the first region font was incorrecty used for all subsequent fonts.\n  The bug would only affect variable CFF2 fonts with hinting (#1643, #1644).\n  Also, fixed a merging bug when VF masters have no blends or marking glyphs (#1632,\n  #1642).\n- [loggingTools] Removed unused backport of ``LastResortLogger`` class.\n- [subset] Gracefully handle partial MATH table (#1635).\n- [featureVars] Avoid duplicate references to ``rvrn`` feature record in\n  ``DefaultLangSys`` tables when calling ``addFeatureVariations`` on a font that\n  does not already have a ``GSUB`` table (aa8a5bc6).\n- [varLib] Fixed merging of class-based kerning. Before, the process could introduce\n  rogue kerning values and variations for random classes against class zero (everything\n  not otherwise classed).\n- [varLib] Fixed merging GPOS tables from master fonts with different number of\n  ``SinglePos`` subtables (#1621, #1641).\n- [unicodedata] Updated Blocks, Scripts and ScriptExtensions to Unicode 12.1.\n\n3.42.0 (released 2019-05-28)\n----------------------------\n\n- [OS/2] Fixed sign of ``fsType``: it should be ``uint16``, not ``int16`` (#1619).\n- [subset] Skip out-of-range class values in mark attachment (#1478).\n- [fontBuilder] Add an empty ``DSIG`` table with ``setupDummyDSIG`` method (#1621).\n- [varLib.merger] Fixed bug whereby ``GDEF.GlyphClassDef`` were being dropped\n  when generating instance via ``varLib.mutator`` (#1614).\n- [varLib] Added command-line options ``-v`` and ``-q`` to configure logging (#1613).\n- [subset] Update font extents in head table (#1612).\n- [subset] Make --retain-gids truncate empty glyphs after the last non-empty glyph\n  (#1611).\n- [requirements] Updated ``unicodedata2`` backport for Unicode 12.0.\n\n3.41.2 (released 2019-05-13)\n----------------------------\n\n- [cffLib] Fixed issue when importing a ``CFF2`` variable font from XML, whereby\n  the VarStore state was not propagated to PrivateDict (#1598).\n- [varLib] Don't drop ``post`` glyph names when building CFF2 variable font (#1609).\n\n\n3.41.1 (released 2019-05-13)\n----------------------------\n\n- [designspaceLib] Added ``loadSourceFonts`` method to load source fonts using\n  custom opener function (#1606).\n- [head] Round font bounding box coordinates to integers to fix compile error\n  if CFF font has float coordinates (#1604, #1605).\n- [feaLib] Don't write ``None`` in ``ast.ValueRecord.asFea()`` (#1599).\n- [subset] Fixed issue ``AssertionError`` when using ``--desubroutinize`` option\n  (#1590, #1594).\n- [graphite] Fixed bug in ``Silf`` table's ``decompile`` method unmasked by\n  previous typo fix (#1597). Decode languange code as UTF-8 in ``Sill`` table's\n  ``decompile`` method (#1600).\n\n3.41.0 (released 2019-04-29)\n----------------------------\n\n- [varLib/cffLib] Added support for building ``CFF2`` variable font from sparse\n  masters, or masters with more than one model (multiple ``VarStore.VarData``).\n  In ``cffLib.specializer``, added support for ``CFF2`` CharStrings with\n  ``blend`` operators (#1547, #1591).\n- [subset] Fixed subsetting ``HVAR`` and ``VVAR`` with ``--retain-gids`` option,\n  and when advances mapping is null while sidebearings mappings are non-null\n  (#1587, #1588).\n- Added ``otlLib.maxContextCalc`` module to compute ``OS/2.usMaxContext`` value.\n  Calculate it automatically when compiling features with feaLib. Added option\n  ``--recalc-max-context`` to ``subset`` module (#1582).\n- [otBase/otTables] Fixed ``AttributeError`` on missing OT table fields after\n  importing font from TTX (#1584).\n- [graphite] Fixed typo ``Silf`` table's ``decompile`` method (#1586).\n- [otlLib] Better compress ``GPOS`` SinglePos (LookupType 1) subtables (#1539).\n\n3.40.0 (released 2019-04-08)\n----------------------------\n\n- [subset] Fixed error while subsetting ``VVAR`` with ``--retain-gids``\n  option (#1552).\n- [designspaceLib] Use up-to-date default location in ``findDefault`` method\n  (#1554).\n- [voltLib] Allow passing file-like object to Parser.\n- [arrayTools/glyf] ``calcIntBounds`` (used to compute bounding boxes of glyf\n  table's glyphs) now uses ``otRound`` instead of ``round3`` (#1566).\n- [svgLib] Added support for converting more SVG shapes to path ``d`` strings\n  (ellipse, line, polyline), as well as support for ``transform`` attributes.\n  Only ``matrix`` transformations are currently supported (#1564, #1564).\n- [varLib] Added support for building ``VVAR`` table from ``vmtx`` and ``VORG``\n  tables (#1551).\n- [fontBuilder] Enable making CFF2 fonts with ``post`` table format 2 (#1557).\n- Fixed ``DeprecationWarning`` on invalid escape sequences (#1562).\n\n3.39.0 (released 2019-03-19)\n----------------------------\n\n- [ttLib/glyf] Raise more specific error when encountering recursive\n  component references (#1545, #1546).\n- [Doc/designspaceLib] Defined new ``public.skipExportGlyphs`` lib key (#1534,\n  unified-font-object/ufo-spec#84).\n- [varLib] Use ``vmtx`` to compute vertical phantom points; or ``hhea.ascent``\n  and ``head.unitsPerEM`` if ``vmtx`` is missing (#1528).\n- [gvar/cvar] Sort XML element's min/value/max attributes in TupleVariation\n  toXML to improve readability of TTX dump (#1527).\n- [varLib.plot] Added support for 2D plots with only 1 variation axis (#1522).\n- [designspaceLib] Use axes maps when normalizing locations in\n  DesignSpaceDocument (#1226, #1521), and when finding default source (#1535).\n- [mutator] Set ``OVERLAP_SIMPLE`` and ``OVERLAP_COMPOUND`` glyf flags by\n  default in ``instantiateVariableFont``. Added ``--no-overlap`` cli option\n  to disable this (#1518).\n- [subset] Fixed subsetting ``VVAR`` table (#1516, #1517).\n  Fixed subsetting an ``HVAR`` table that has an ``AdvanceWidthMap`` when the\n  option ``--retain-gids`` is used.\n- [feaLib] Added ``forceChained`` in MultipleSubstStatement (#1511).\n  Fixed double indentation of ``subtable`` statement (#1512).\n  Added support for ``subtable`` statement in more places than just PairPos\n  lookups (#1520).\n  Handle lookupflag 0 and lookupflag without a value (#1540).\n- [varLib] In ``load_designspace``, provide a default English name for the\n  ``ital`` axis tag.\n- Remove pyftinspect because it is unmaintained and bitrotted.\n\n3.38.0 (released 2019-02-18)\n----------------------------\n\n- [cffLib] Fixed RecursionError when unpickling or deepcopying TTFont with\n  CFF table (#1488, 649dc49).\n- [subset] Fixed AttributeError when using --desubroutinize option (#1490).\n  Also, fixed desubroutinizing bug when subrs contain hints (#1499).\n- [CPAL] Make Color a subclass of namedtuple (173a0f5).\n- [feaLib] Allow hyphen in glyph class names.\n- [feaLib] Added 'tables' option to __main__.py (#1497).\n- [feaLib] Add support for special-case contextual positioning formatting\n  (#1501).\n- [svgLib] Support converting SVG basic shapes (rect, circle, etc.) into\n  equivalent SVG paths (#1500, #1508).\n- [Snippets] Added name-viewer.ipynb Jupyter notebook.\n\n\n3.37.3 (released 2019-02-05)\n----------------------------\n\n- The previous release accidentally changed several files from Unix to DOS\n  line-endings. Fix that.\n\n3.37.2 (released 2019-02-05)\n----------------------------\n\n- [varLib] Temporarily revert the fix to ``load_masters()``, which caused a\n  crash in ``interpolate_layout()`` when ``deepcopy``-ing OTFs.\n\n3.37.1 (released 2019-02-05)\n----------------------------\n\n- [varLib] ``load_masters()`` now actually assigns the fonts it loads to the\n  source.font attributes.\n- [varLib] Fixed an MVAR table generation crash when sparse masters were\n  involved.\n- [voltLib] ``parse_coverage_()`` returns a tuple instead of an ast.Enum.\n- [feaLib] A MarkClassDefinition inside a block is no longer doubly indented\n  compared to the rest of the block.\n\n3.37.0 (released 2019-01-28)\n----------------------------\n\n- [svgLib] Added support for converting elliptical arcs to cubic bezier curves\n  (#1464).\n- [py23] Added backport for ``math.isfinite``.\n- [varLib] Apply HIDDEN flag to fvar axis if designspace axis has attribute\n  ``hidden=1``.\n- Fixed \"DeprecationWarning: invalid escape sequence\" in Python 3.7.\n- [voltLib] Fixed parsing glyph groups. Distinguish different PROCESS_MARKS.\n  Accept COMPONENT glyph type.\n- [feaLib] Distinguish missing value and explicit ``<NULL>`` for PairPos2\n  format A (#1459). Round-trip ``useExtension`` keyword. Implemented\n  ``ValueRecord.asFea`` method.\n- [subset] Insert empty widths into hdmx when retaining gids (#1458).\n\n3.36.0 (released 2019-01-17)\n----------------------------\n\n- [ttx] Added ``--no-recalc-timestamp`` option to keep the original font's\n  ``head.modified`` timestamp (#1455, #46).\n- [ttx/psCharStrings] Fixed issues while dumping and round-tripping CFF2 table\n  with ttx (#1451, #1452, #1456).\n- [voltLib] Fixed check for duplicate anchors (#1450). Don't try to read past\n  the ``END`` operator in .vtp file (#1453).\n- [varLib] Use sentinel value -0x8000 (-32768) to ignore post.underlineThickness\n  and post.underlinePosition when generating MVAR deltas (#1449,\n  googlei18n/ufo2ft#308).\n- [subset] Added ``--retain-gids`` option to subset font without modifying the\n  current glyph indices (#1443, #1447).\n- [ufoLib] Replace deprecated calls to ``getbytes`` and ``setbytes`` with new\n  equivalent ``readbytes`` and ``writebytes`` calls. ``fs`` >= 2.2 no required.\n- [varLib] Allow loading masters from TTX files as well (#1441).\n\n3.35.2 (released 2019-01-14)\n----------------------------\n\n- [hmtx/vmtx]: Allow to compile/decompile ``hmtx`` and ``vmtx`` tables even\n  without the corresponding (required) metrics header tables, ``hhea`` and\n  ``vhea`` (#1439).\n- [varLib] Added support for localized axes' ``labelname`` and named instances'\n  ``stylename`` (#1438).\n\n3.35.1 (released 2019-01-09)\n----------------------------\n\n- [_m_a_x_p] Include ``maxComponentElements`` in ``maxp`` table's recalculation.\n\n3.35.0 (released 2019-01-07)\n----------------------------\n\n- [psCharStrings] In ``encodeFloat`` function, use float's \"general format\" with\n  8 digits of precision (i.e. ``%8g``) instead of ``str()``. This works around\n  a macOS rendering issue when real numbers in CFF table are too long, and\n  also makes sure that floats are encoded with the same precision in python 2.7\n  and 3.x (#1430, googlei18n/ufo2ft#306).\n- [_n_a_m_e/fontBuilder] Make ``_n_a_m_e_table.addMultilingualName`` also add\n  Macintosh (platformID=1) names by default. Added options to ``FontBuilder``\n  ``setupNameTable`` method to optionally disable Macintosh or Windows names.\n  (#1359, #1431).\n- [varLib] Make ``build`` optionally accept a ``DesignSpaceDocument`` object,\n  instead of a designspace file path. The caller can now set the ``font``\n  attribute of designspace's sources to a TTFont object, thus allowing to\n  skip filenames manipulation altogether (#1416, #1425).\n- [sfnt] Allow SFNTReader objects to be deep-copied.\n- Require typing>=3.6.4 on py27 to fix issue with singledispatch (#1423).\n- [designspaceLib/t1Lib/macRes] Fixed some cases where pathlib.Path objects were\n  not accepted (#1421).\n- [varLib] Fixed merging of multiple PairPosFormat2 subtables (#1411).\n- [varLib] The default STAT table version is now set to 1.1, to improve\n  compatibility with legacy applications (#1413).\n\n3.34.2 (released 2018-12-17)\n----------------------------\n\n- [merge] Fixed AssertionError when none of the script tables in GPOS/GSUB have\n  a DefaultLangSys record (#1408, 135a4a1).\n\n3.34.1 (released 2018-12-17)\n----------------------------\n\n- [varLib] Work around macOS rendering issue for composites without gvar entry (#1381).\n\n3.34.0 (released 2018-12-14)\n----------------------------\n\n- [varLib] Support generation of CFF2 variable fonts. ``model.reorderMasters()``\n  now supports arbitrary mapping. Fix handling of overlapping ranges for feature\n  variations (#1400).\n- [cffLib, subset] Code clean-up and fixing related to CFF2 support.\n- [ttLib.tables.ttProgram] Use raw strings for regex patterns (#1389).\n- [fontbuilder] Initial support for building CFF2 fonts. Set CFF's\n  ``FontMatrix`` automatically from unitsPerEm.\n- [plistLib] Accept the more general ``collections.Mapping`` instead of the\n  specific ``dict`` class to support custom data classes that should serialize\n  to dictionaries.\n\n3.33.0 (released 2018-11-30)\n----------------------------\n- [subset] subsetter bug fix with variable fonts.\n- [varLib.featureVar] Improve FeatureVariations generation with many rules.\n- [varLib] Enable sparse masters when building variable fonts:\n  https://github.com/fonttools/fonttools/pull/1368#issuecomment-437257368\n- [varLib.mutator] Add IDEF for GETVARIATION opcode, for handling hints in an\n  instance.\n- [ttLib] Ignore the length of kern table subtable format 0\n\n3.32.0 (released 2018-11-01)\n----------------------------\n\n- [ufoLib] Make ``UFOWriter`` a subclass of ``UFOReader``, and use mixins\n  for shared methods (#1344).\n- [featureVars] Fixed normalization error when a condition's minimum/maximum\n  attributes are missing in designspace ``<rule>`` (#1366).\n- [setup.py] Added ``[plot]`` to extras, to optionally install ``matplotlib``,\n  needed to use the ``fonTools.varLib.plot`` module.\n- [varLib] Take total bounding box into account when resolving model (7ee81c8).\n  If multiple axes have the same range ratio, cut across both (62003f4).\n- [subset] Don't error if ``STAT`` has no ``AxisValue`` tables.\n- [fontBuilder] Added a new submodule which contains a ``FontBuilder`` wrapper\n  class around ``TTFont`` that makes it easier to create a working TTF or OTF\n  font from scratch with code. NOTE: the API is still experimental and may\n  change in future versions.\n\n3.31.0 (released 2018-10-21)\n----------------------------\n\n- [ufoLib] Merged the `ufoLib <https://github.com/unified-font-objects/ufoLib>`__\n  master branch into a new ``fontTools.ufoLib`` package (#1335, #1095).\n  Moved ``ufoLib.pointPen`` module to ``fontTools.pens.pointPen``.\n  Moved ``ufoLib.etree`` module to ``fontTools.misc.etree``.\n  Moved ``ufoLib.plistlib`` module to ``fontTools.misc.plistlib``.\n  To use the new ``fontTools.ufoLib`` module you need to install fonttools\n  with the ``[ufo]`` extra, or you can manually install the required additional\n  dependencies (cf. README.rst).\n- [morx] Support AAT action type to insert glyphs and clean up compilation\n  of AAT action tables (4a1871f, 2011ccf).\n- [subset] The ``--no-hinting`` on a CFF font now also drops the optional\n  hinting keys in Private dict: ``ForceBold``, ``LanguageGroup``, and\n  ``ExpansionFactor`` (#1322).\n- [subset] Include nameIDs referenced by STAT table (#1327).\n- [loggingTools] Added ``msg=None`` argument to\n  ``CapturingLogHandler.assertRegex`` (0245f2c).\n- [varLib.mutator] Implemented ``FeatureVariations`` instantiation (#1244).\n- [g_l_y_f] Added PointPen support to ``_TTGlyph`` objects (#1334).\n\n3.30.0 (released 2018-09-18)\n----------------------------\n\n- [feaLib] Skip building noop class PairPos subtables when Coverage is NULL\n  (#1318).\n- [ttx] Expose the previously reserved bit flag ``OVERLAP_SIMPLE`` of\n  glyf table's contour points in the TTX dump. This is used in some\n  implementations to specify a non-zero fill with overlapping contours (#1316).\n- [ttLib] Added support for decompiling/compiling ``TS1C`` tables containing\n  VTT sources for ``cvar`` variation table (#1310).\n- [varLib] Use ``fontTools.designspaceLib`` to read DesignSpaceDocument. The\n  ``fontTools.varLib.designspace`` module is now deprecated and will be removed\n  in future versions. The presence of an explicit ``axes`` element is now\n  required in order to build a variable font (#1224, #1313).\n- [varLib] Implemented building GSUB FeatureVariations table from the ``rules``\n  element of DesignSpace document (#1240, #713, #1314).\n- [subset] Added ``--no-layout-closure`` option to not expand the subset with\n  the glyphs produced by OpenType layout features. Instead, OpenType features\n  will be subset to only rules that are relevant to the otherwise-specified\n  glyph set (#43, #1121).\n\n3.29.1 (released 2018-09-10)\n----------------------------\n\n- [feaLib] Fixed issue whereby lookups from DFLT/dflt were not included in the\n  DFLT/non-dflt language systems (#1307).\n- [graphite] Fixed issue on big-endian architectures (e.g. ppc64) (#1311).\n- [subset] Added ``--layout-scripts`` option to add/exclude set of OpenType\n  layout scripts that will be preserved. By default all scripts are retained\n  (``'*'``) (#1303).\n\n3.29.0 (released 2018-07-26)\n----------------------------\n\n- [feaLib] In the OTL table builder, when the ``name`` table is excluded\n  from the list of tables to be build, skip compiling ``featureNames`` blocks,\n  as the records referenced in ``FeatureParams`` table don't exist (68951b7).\n- [otBase] Try ``ExtensionLookup`` if other offset-overflow methods fail\n  (05f95f0).\n- [feaLib] Added support for explicit ``subtable;`` break statements in\n  PairPos lookups; previously these were ignored (#1279, #1300, #1302).\n- [cffLib.specializer] Make sure the stack depth does not exceed maxstack - 1,\n  so that a subroutinizer can insert subroutine calls (#1301,\n  https://github.com/googlei18n/ufo2ft/issues/266).\n- [otTables] Added support for fixing offset overflow errors occurring inside\n  ``MarkBasePos`` subtables (#1297).\n- [subset] Write the default output file extension based on ``--flavor`` option,\n  or the value of ``TTFont.sfntVersion`` (d7ac0ad).\n- [unicodedata] Updated Blocks, Scripts and ScriptExtensions for Unicode 11\n  (452c85e).\n- [xmlWriter] Added context manager to XMLWriter class to autoclose file\n  descriptor on exit (#1290).\n- [psCharStrings] Optimize the charstring's bytecode by encoding as integers\n  all float values that have no decimal portion (8d7774a).\n- [ttFont] Fixed missing import of ``TTLibError`` exception (#1285).\n- [feaLib] Allow any languages other than ``dflt`` under ``DFLT`` script\n  (#1278, #1292).\n\n3.28.0 (released 2018-06-19)\n----------------------------\n\n- [featureVars] Added experimental module to build ``FeatureVariations``\n  tables. Still needs to be hooked up to ``varLib.build`` (#1240).\n- [fixedTools] Added ``otRound`` to round floats to nearest integer towards\n  positive Infinity. This is now used where we deal with visual data like X/Y\n  coordinates, advance widths/heights, variation deltas, and similar (#1274,\n  #1248).\n- [subset] Improved GSUB closure memoize algorithm.\n- [varLib.models] Fixed regression in model resolution (180124, #1269).\n- [feaLib.ast] Fixed error when converting ``SubtableStatement`` to string\n  (#1275).\n- [varLib.mutator] Set ``OS/2.usWeightClass`` and ``usWidthClass``, and\n  ``post.italicAngle`` based on the 'wght', 'wdth' and 'slnt' axis values\n  (#1276, #1264).\n- [py23/loggingTools] Don't automatically set ``logging.lastResort`` handler\n  on py27. Moved ``LastResortLogger`` to the ``loggingTools`` module (#1277).\n\n3.27.1 (released 2018-06-11)\n----------------------------\n\n- [ttGlyphPen] Issue a warning and skip building non-existing components\n  (https://github.com/googlei18n/fontmake/issues/411).\n- [tests] Fixed issue running ttx_test.py from a tagged commit.\n\n3.27.0 (released 2018-06-11)\n----------------------------\n\n- [designspaceLib] Added new ``conditionSet`` element to ``rule`` element in\n  designspace document. Bumped ``format`` attribute to ``4.0`` (previously,\n  it was formatted as an integer). Removed ``checkDefault``, ``checkAxes``\n  methods, and any kind of guessing about the axes when the ``<axes>`` element\n  is missing. The default master is expected at the intersection of all default\n  values for each axis (#1254, #1255, #1267).\n- [cffLib] Fixed issues when compiling CFF2 or converting from CFF when the\n  font has an FDArray (#1211, #1271).\n- [varLib] Avoid attempting to build ``cvar`` table when ``glyf`` table is not\n  present, as is the case for CFF2 fonts.\n- [subset] Handle None coverages in MarkGlyphSets; revert commit 02616ab that\n  sets empty Coverage tables in MarkGlyphSets to None, to make OTS happy.\n- [ttFont] Allow to build glyph order from ``maxp.numGlyphs`` when ``post`` or\n  ``cmap`` are missing.\n- [ttFont] Added ``__len__`` method to ``_TTGlyphSet``.\n- [glyf] Ensure ``GlyphCoordinates`` never overflow signed shorts (#1230).\n- [py23] Added alias for ``itertools.izip`` shadowing the built-in ``zip``.\n- [loggingTools] Memoize ``log`` property of ``LogMixin`` class (fbab12).\n- [ttx] Impoved test coverage (#1261).\n- [Snippets] Addded script to append a suffix to all family names in a font.\n- [varLib.plot] Make it work with matplotlib >= 2.1 (b38e2b).\n\n3.26.0 (released 2018-05-03)\n----------------------------\n\n- [designspace] Added a new optional ``layer`` attribute to the source element,\n  and a corresponding ``layerName`` attribute to the ``SourceDescriptor``\n  object (#1253).\n  Added ``conditionset`` element to the ``rule`` element to the spec, but not\n  implemented in designspace reader/writer yet (#1254).\n- [varLib.models] Refine modeling one last time (0ecf5c5).\n- [otBase] Fixed sharing of tables referred to by different offset sizes\n  (795f2f9).\n- [subset] Don't drop a GDEF that only has VarStore (fc819d6). Set to None\n  empty Coverage tables in MarkGlyphSets (02616ab).\n- [varLib]: Added ``--master-finder`` command-line option (#1249).\n- [varLib.mutator] Prune fvar nameIDs from instance's name table (#1245).\n- [otTables] Allow decompiling bad ClassDef tables with invalid format, with\n  warning (#1236).\n- [varLib] Make STAT v1.2 and reuse nameIDs from fvar table (#1242).\n- [varLib.plot] Show master locations. Set axis limits to -1, +1.\n- [subset] Handle HVAR direct mapping. Passthrough 'cvar'.\n  Added ``--font-number`` command-line option for collections.\n- [t1Lib] Allow a text encoding to be specified when parsing a Type 1 font\n  (#1234). Added ``kind`` argument to T1Font constructor (c5c161c).\n- [ttLib] Added context manager API to ``TTFont`` class, so it can be used in\n  ``with`` statements to auto-close the file when exiting the context (#1232).\n\n3.25.0 (released 2018-04-03)\n----------------------------\n\n- [varLib] Improved support-resolution algorithm. Previously, the on-axis\n  masters would always cut the space. They don't anymore. That's more\n  consistent, and fixes the main issue Erik showed at TYPO Labs 2017.\n  Any varfont built that had an unusual master configuration will change\n  when rebuilt (42bef17, a523a697,\n  https://github.com/googlei18n/fontmake/issues/264).\n- [varLib.models] Added a ``main()`` entry point, that takes positions and\n  prints model results.\n- [varLib.plot] Added new module to plot a designspace's\n  VariationModel. Requires ``matplotlib``.\n- [varLib.mutator] Added -o option to specify output file path (2ef60fa).\n- [otTables] Fixed IndexError while pruning of HVAR pre-write (6b6c34a).\n- [varLib.models] Convert delta array to floats if values overflows signed\n  short integer (0055f94).\n\n3.24.2 (released 2018-03-26)\n----------------------------\n\n- [otBase] Don't fail during ``ValueRecord`` copy if src has more items.\n  We drop hinting in the subsetter by simply changing ValueFormat, without\n  cleaning up the actual ValueRecords. This was causing assertion error if\n  a variable font was subsetted without hinting and then passed directly to\n  the mutator for instantiation without first it saving to disk.\n\n3.24.1 (released 2018-03-06)\n----------------------------\n\n- [varLib] Don't remap the same ``DeviceTable`` twice in VarStore optimizer\n  (#1206).\n- [varLib] Add ``--disable-iup`` option to ``fonttools varLib`` script,\n  and a ``optimize=True`` keyword argument to ``varLib.build`` function,\n  to optionally disable IUP optimization while building varfonts.\n- [ttCollection] Fixed issue while decompiling ttc with python3 (#1207).\n\n3.24.0 (released 2018-03-01)\n----------------------------\n\n- [ttGlyphPen] Decompose composite glyphs if any components' transform is too\n  large to fit a ``F2Dot14`` value, or clamp transform values that are\n  (almost) equal to +2.0 to make them fit and avoid decomposing (#1200,\n  #1204, #1205).\n- [ttx] Added new ``-g`` option to dump glyphs from the ``glyf`` table\n  splitted as individual ttx files (#153, #1035, #1132, #1202).\n- Copied ``ufoLib.filenames`` module to ``fontTools.misc.filenames``, used\n  for the ttx split-glyphs option (#1202).\n- [feaLib] Added support for ``cvParameters`` blocks in Character Variant\n  feautures ``cv01-cv99`` (#860, #1169).\n- [Snippets] Added ``checksum.py`` script to generate/check SHA1 hash of\n  ttx files (#1197).\n- [varLib.mutator] Fixed issue while instantiating some variable fonts\n  whereby the horizontal advance width computed from ``gvar`` phantom points\n  could turn up to be negative (#1198).\n- [varLib/subset] Fixed issue with subsetting GPOS variation data not\n  picking up ``ValueRecord`` ``Device`` objects (54fd71f).\n- [feaLib/voltLib] In all AST elements, the ``location`` is no longer a\n  required positional argument, but an optional kewyord argument (defaults\n  to ``None``). This will make it easier to construct feature AST from\n  code (#1201).\n\n\n3.23.0 (released 2018-02-26)\n----------------------------\n\n- [designspaceLib] Added an optional ``lib`` element to the designspace as a\n  whole, as well as to the instance elements, to store arbitrary data in a\n  property list dictionary, similar to the UFO's ``lib``. Added an optional\n  ``font`` attribute to the ``SourceDescriptor``, to allow operating on\n  in-memory font objects (#1175).\n- [cffLib] Fixed issue with lazy-loading of attributes when attempting to\n  set the CFF TopDict.Encoding (#1177, #1187).\n- [ttx] Fixed regression introduced in 3.22.0 that affected the split tables\n  ``-s`` option (#1188).\n- [feaLib] Added ``IncludedFeaNotFound`` custom exception subclass, raised\n  when an included feature file cannot be found (#1186).\n- [otTables] Changed ``VarIdxMap`` to use glyph names internally instead of\n  glyph indexes. The old ttx dumps of HVAR/VVAR tables that contain indexes\n  can still be imported (21cbab8, 38a0ffb).\n- [varLib] Implemented VarStore optimizer (#1184).\n- [subset] Implemented pruning of GDEF VarStore, HVAR and MVAR (#1179).\n- [sfnt] Restore backward compatiblity with ``numFonts`` attribute of\n  ``SFNTReader`` object (#1181).\n- [merge] Initial support for merging ``LangSysRecords`` (#1180).\n- [ttCollection] don't seek(0) when writing to possibly unseekable strems.\n- [subset] Keep all ``--name-IDs`` from 0 to 6 by default (#1170, #605, #114).\n- [cffLib] Added ``width`` module to calculate optimal CFF default and\n  nominal glyph widths.\n- [varLib] Don’t fail if STAT already in the master fonts (#1166).\n\n3.22.0 (released 2018-02-04)\n----------------------------\n\n- [subset] Support subsetting ``endchar`` acting as ``seac``-like components\n  in ``CFF`` (fixes #1162).\n- [feaLib] Allow to build from pre-parsed ``ast.FeatureFile`` object.\n  Added ``tables`` argument to only build some tables instead of all (#1159,\n  #1163).\n- [textTools] Replaced ``safeEval`` with ``ast.literal_eval`` (#1139).\n- [feaLib] Added option to the parser to not resolve ``include`` statements\n  (#1154).\n- [ttLib] Added new ``ttCollection`` module to read/write TrueType and\n  OpenType Collections. Exports a ``TTCollection`` class with a ``fonts``\n  attribute containing a list of ``TTFont`` instances, the methods ``save``\n  and ``saveXML``, plus some list-like methods. The ``importXML`` method is\n  not implemented yet (#17).\n- [unicodeadata] Added ``ot_tag_to_script`` function that converts from\n  OpenType script tag to Unicode script code.\n- Added new ``designspaceLib`` subpackage, originally from Erik Van Blokland's\n  ``designSpaceDocument``: https://github.com/LettError/designSpaceDocument\n  NOTE: this is not yet used internally by varLib, and the API may be subject\n  to changes (#911, #1110, LettError/designSpaceDocument#28).\n- Added new FontTools icon images (8ee7c32).\n- [unicodedata] Added ``script_horizontal_direction`` function that returns\n  either \"LTR\" or \"RTL\" given a unicode script code.\n- [otConverters] Don't write descriptive name string as XML comment if the\n  NameID value is 0 (== NULL) (#1151, #1152).\n- [unicodedata] Add ``ot_tags_from_script`` function to get the list of\n  OpenType script tags associated with unicode script code (#1150).\n- [feaLib] Don't error when \"enumerated\" kern pairs conflict with preceding\n  single pairs; emit warning and chose the first value (#1147, #1148).\n- [loggingTools] In ``CapturingLogHandler.assertRegex`` method, match the\n  fully formatted log message.\n- [sbix] Fixed TypeError when concatenating str and bytes (#1154).\n- [bezierTools] Implemented cusp support and removed ``approximate_fallback``\n  arg in ``calcQuadraticArcLength``. Added ``calcCubicArcLength`` (#1142).\n\n3.21.2 (released 2018-01-08)\n----------------------------\n\n- [varLib] Fixed merging PairPos Format1/2 with missing subtables (#1125).\n\n3.21.1 (released 2018-01-03)\n----------------------------\n\n- [feaLib] Allow mixed single/multiple substitutions (#612)\n- Added missing ``*.afm`` test assets to MAINFEST.in (#1137).\n- Fixed dumping ``SVG`` tables containing color palettes (#1124).\n\n3.21.0 (released 2017-12-18)\n----------------------------\n\n- [cmap] when compiling format6 subtable, don't assume gid0 is always called\n  '.notdef' (1e42224).\n- [ot] Allow decompiling fonts with bad Coverage format number (1aafae8).\n- Change FontTools licence to MIT (#1127).\n- [post] Prune extra names already in standard Mac set (df1e8c7).\n- [subset] Delete empty SubrsIndex after subsetting (#994, #1118).\n- [varLib] Don't share points in cvar by default, as it currently fails on\n  some browsers (#1113).\n- [afmLib] Make poor old afmLib work on python3.\n\n3.20.1 (released 2017-11-22)\n----------------------------\n\n- [unicodedata] Fixed issue with ``script`` and ``script_extension`` functions\n  returning inconsistent short vs long names. They both return the short four-\n  letter script codes now. Added ``script_name`` and ``script_code`` functions\n  to look up the long human-readable script name from the script code, and\n  viceversa (#1109, #1111).\n\n3.20.0 (released 2017-11-21)\n----------------------------\n\n- [unicodedata] Addded new module ``fontTools.unicodedata`` which exports the\n  same interface as the built-in ``unicodedata`` module, with the addition of\n  a few functions that are missing from the latter, such as ``script``,\n  ``script_extension`` and ``block``. Added a ``MetaTools/buildUCD.py`` script\n  to download and parse data files from the Unicode Character Database and\n  generate python modules containing lists of ranges and property values.\n- [feaLib] Added ``__str__`` method to all ``ast`` elements (delegates to the\n  ``asFea`` method).\n- [feaLib] ``Parser`` constructor now accepts a ``glyphNames`` iterable\n  instead of ``glyphMap`` dict. The latter still works but with a pending\n  deprecation warning (#1104).\n- [bezierTools] Added arc length calculation functions originally from\n  ``pens.perimeterPen`` module (#1101).\n- [varLib] Started generating STAT table (8af4309). Right now it just reflects\n  the axes, and even that with certain limitations:\n  * AxisOrdering is set to the order axes are defined,\n  * Name-table entries are not shared with fvar.\n- [py23] Added backports for ``redirect_stdout`` and ``redirect_stderr``\n  context managers (#1097).\n- [Graphite] Fixed some round-trip bugs (#1093).\n\n3.19.0 (released 2017-11-06)\n----------------------------\n\n- [varLib] Try set of used points instead of all points when testing whether to\n  share points between tuples (#1090).\n- [CFF2] Fixed issue with reading/writing PrivateDict BlueValues to TTX file.\n  Read the commit message 8b02b5a and issue #1030 for more details.\n  NOTE: this change invalidates all the TTX files containing CFF2 tables\n  that where dumped with previous verisons of fonttools.\n  CFF2 Subr items can have values on the stack after the last operator, thus\n  a ``CFF2Subr`` class was added to accommodate this (#1091).\n- [_k_e_r_n] Fixed compilation of AAT kern version=1.0 tables (#1089, #1094)\n- [ttLib] Added getBestCmap() convenience method to TTFont class and cmap table\n  class that returns a preferred Unicode cmap subtable given a list of options\n  (#1092).\n- [morx] Emit more meaningful subtable flags. Implement InsertionMorphAction\n\n3.18.0 (released 2017-10-30)\n----------------------------\n\n- [feaLib] Fixed writing back nested glyph classes (#1086).\n- [TupleVariation] Reactivated shared points logic, bugfixes (#1009).\n- [AAT] Implemented ``morx`` ligature subtables (#1082).\n- [reverseContourPen] Keep duplicate lineTo following a moveTo (#1080,\n  https://github.com/googlei18n/cu2qu/issues/51).\n- [varLib.mutator] Suport instantiation of GPOS, GDEF and MVAR (#1079).\n- [sstruct] Fixed issue with ``unicode_literals`` and ``struct`` module in\n  old versions of python 2.7 (#993).\n\n3.17.0 (released 2017-10-16)\n----------------------------\n\n- [svgPathPen] Added an ``SVGPathPen`` that translates segment pen commands\n  into SVG path descriptions. Copied from Tal Leming's ``ufo2svg.svgPathPen``\n  https://github.com/typesupply/ufo2svg/blob/d69f992/Lib/ufo2svg/svgPathPen.py\n- [reverseContourPen] Added ``ReverseContourPen``, a filter pen that draws\n  contours with the winding direction reversed, while keeping the starting\n  point (#1071).\n- [filterPen] Added ``ContourFilterPen`` to manipulate contours as a whole\n  rather than segment by segment.\n- [arrayTools] Added ``Vector`` class to apply math operations on an array\n  of numbers, and ``pairwise`` function to loop over pairs of items in an\n  iterable.\n- [varLib] Added support for building and interpolation of ``cvar`` table\n  (f874cf6, a25a401).\n\n3.16.0 (released 2017-10-03)\n----------------------------\n\n- [head] Try using ``SOURCE_DATE_EPOCH`` environment variable when setting\n  the ``head`` modified timestamp to ensure reproducible builds (#1063).\n  See https://reproducible-builds.org/specs/source-date-epoch/\n- [VTT] Decode VTT's ``TSI*`` tables text as UTF-8 (#1060).\n- Added support for Graphite font tables: Feat, Glat, Gloc, Silf and Sill.\n  Thanks @mhosken! (#1054).\n- [varLib] Default to using axis \"name\" attribute if \"labelname\" element\n  is missing (588f524).\n- [merge] Added support for merging Script records. Remove unused features\n  and lookups after merge (d802580, 556508b).\n- Added ``fontTools.svgLib`` package. Includes a parser for SVG Paths that\n  supports the Pen protocol (#1051). Also, added a snippet to convert SVG\n  outlines to UFO GLIF (#1053).\n- [AAT] Added support for ``ankr``, ``bsln``, ``mort``, ``morx``, ``gcid``,\n  and ``cidg``.\n- [subset] Implemented subsetting of ``prop``, ``opbd``, ``bsln``, ``lcar``.\n\n3.15.1 (released 2017-08-18)\n----------------------------\n\n- [otConverters] Implemented ``__add__`` and ``__radd__`` methods on\n  ``otConverters._LazyList`` that decompile a lazy list before adding\n  it to another list or ``_LazyList`` instance. Fixes an ``AttributeError``\n  in the ``subset`` module when attempting to sum ``_LazyList`` objects\n  (6ef48bd2, 1aef1683).\n- [AAT] Support the `opbd` table with optical bounds (a47f6588).\n- [AAT] Support `prop` table with glyph properties (d05617b4).\n\n\n3.15.0 (released 2017-08-17)\n----------------------------\n\n- [AAT] Added support for AAT lookups. The ``lcar`` table can be decompiled\n  and recompiled; futher work needed to handle ``morx`` table (#1025).\n- [subset] Keep (empty) DefaultLangSys for Script 'DFLT' (6eb807b5).\n- [subset] Support GSUB/GPOS.FeatureVariations (fe01d87b).\n- [varLib] In ``models.supportScalars``, ignore an axis when its peak value\n  is 0 (fixes #1020).\n- [varLib] Add default mappings to all axes in avar to fix rendering issue\n  in some rasterizers (19c4b377, 04eacf13).\n- [varLib] Flatten multiple tail PairPosFormat2 subtables before merging\n  (c55ef525).\n- [ttLib] Added support for recalculating font bounding box in ``CFF`` and\n  ``head`` tables, and min/max values in ``hhea`` and ``vhea`` tables (#970).\n\n3.14.0 (released 2017-07-31)\n----------------------------\n\n- [varLib.merger] Remove Extensions subtables before merging (f7c20cf8).\n- [varLib] Initialize the avar segment map with required default entries\n  (#1014).\n- [varLib] Implemented optimal IUP optmiziation (#1019).\n- [otData] Add ``AxisValueFormat4`` for STAT table v1.2 from OT v1.8.2\n  (#1015).\n- [name] Fixed BCP46 language tag for Mac langID=9: 'si' -> 'sl'.\n- [subset] Return value from ``_DehintingT2Decompiler.op_hintmask``\n  (c0d672ba).\n- [cffLib] Allow to get TopDict by index as well as by name (dca96c9c).\n- [cffLib] Removed global ``isCFF2`` state; use one set of classes for\n  both CFF and CFF2, maintaining backward compatibility existing code (#1007).\n- [cffLib] Deprecated maxstack operator, per OpenType spec update 1.8.1.\n- [cffLib] Added missing default (-100) for UnderlinePosition (#983).\n- [feaLib] Enable setting nameIDs greater than 255 (#1003).\n- [varLib] Recalculate ValueFormat when merging SinglePos (#996).\n- [varLib] Do not emit MVAR if there are no entries in the variation store\n  (#987).\n- [ttx] For ``-x`` option, pad with space if table tag length is < 4.\n\n3.13.1 (released 2017-05-30)\n----------------------------\n\n- [feaLib.builder] Removed duplicate lookups optimization. The original\n  lookup order and semantics of the feature file are preserved (#976).\n\n3.13.0 (released 2017-05-24)\n----------------------------\n\n- [varLib.mutator] Implement IUP optimization (#969).\n- [_g_l_y_f.GlyphCoordinates] Changed ``__bool__()`` semantics to match those\n  of other iterables (e46f949). Removed ``__abs__()`` (3db5be2).\n- [varLib.interpolate_layout] Added ``mapped`` keyword argument to\n  ``interpolate_layout`` to allow disabling avar mapping: if False (default),\n  the location is mapped using the map element of the axes in designspace file;\n  if True, it is assumed that location is in designspace's internal space and\n  no mapping is performed (#950, #975).\n- [varLib.interpolate_layout] Import designspace-loading logic from varLib.\n- [varLib] Fixed bug with recombining PairPosClass2 subtables (81498e5, #914).\n- [cffLib.specializer] When copying iterables, cast to list (462b7f86).\n\n3.12.1 (released 2017-05-18)\n----------------------------\n\n- [pens.t2CharStringPen] Fixed AttributeError when calling addComponent in\n  T2CharStringPen (#965).\n\n3.12.0 (released 2017-05-17)\n----------------------------\n\n- [cffLib.specializer] Added new ``specializer`` module to optimize CFF\n  charstrings, used by the T2CharStringPen (#948).\n- [varLib.mutator] Sort glyphs by component depth before calculating composite\n  glyphs' bounding boxes to ensure deltas are correctly caclulated (#945).\n- [_g_l_y_f] Fixed loss of precision in GlyphCoordinates by using 'd' (double)\n  instead of 'f' (float) as ``array.array`` typecode (#963, #964).\n\n3.11.0 (released 2017-05-03)\n----------------------------\n\n- [t2CharStringPen] Initial support for specialized Type2 path operators:\n  vmoveto, hmoveto, vlineto, hlineto, vvcurveto, hhcurveto, vhcurveto and\n  hvcurveto. This should produce more compact charstrings (#940, #403).\n- [Doc] Added Sphinx sources for the documentation. Thanks @gferreira (#935).\n- [fvar] Expose flags in XML (#932)\n- [name] Add helper function for building multi-lingual names (#921)\n- [varLib] Fixed kern merging when a PairPosFormat2 has ClassDef1 with glyphs\n  that are NOT present in the Coverage (1b5e1c4, #939).\n- [varLib] Fixed non-deterministic ClassDef order with PY3 (f056c12, #927).\n- [feLib] Throw an error when the same glyph is defined in multiple mark\n  classes within the same lookup (3e3ff00, #453).\n\n3.10.0 (released 2017-04-14)\n----------------------------\n\n- [varLib] Added support for building ``avar`` table, using the designspace\n  ``<map>`` elements.\n- [varLib] Removed unused ``build(..., axisMap)`` argument. Axis map should\n  be specified in designspace file now. We do not accept nonstandard axes\n  if ``<axes>`` element is not present.\n- [varLib] Removed \"custom\" axis from the ``standard_axis_map``. This was\n  added before when glyphsLib was always exporting the (unused) custom axis.\n- [varLib] Added partial support for building ``MVAR`` table; does not\n  implement ``gasp`` table variations yet.\n- [pens] Added FilterPen base class, for pens that control another pen;\n  factored out ``addComponent`` method from BasePen into a separate abstract\n  DecomposingPen class; added DecomposingRecordingPen, which records\n  components decomposed as regular contours.\n- [TSI1] Fixed computation of the textLength of VTT private tables (#913).\n- [loggingTools] Added ``LogMixin`` class providing a ``log`` property to\n  subclasses, which returns a ``logging.Logger`` named after the latter.\n- [loggingTools] Added ``assertRegex`` method to ``CapturingLogHandler``.\n- [py23] Added backport for python 3's ``types.SimpleNamespace`` class.\n- [EBLC] Fixed issue with python 3 ``zip`` iterator.\n\n3.9.2 (released 2017-04-08)\n---------------------------\n\n- [pens] Added pen to draw glyphs using WxPython ``GraphicsPath`` class:\n  https://wxpython.org/docs/api/wx.GraphicsPath-class.html\n- [varLib.merger] Fixed issue with recombining multiple PairPosFormat2\n  subtables (#888)\n- [varLib] Do not encode gvar deltas that are all zeroes, or if all values\n  are smaller than tolerance.\n- [ttLib] _TTGlyphSet glyphs now also have ``height`` and ``tsb`` (top\n  side bearing) attributes from the ``vmtx`` table, if present.\n- [glyf] In ``GlyphCoordintes`` class, added ``__bool__`` / ``__nonzero__``\n  methods, and ``array`` property to get raw array.\n- [ttx] Support reading TTX files with BOM (#896)\n- [CFF2] Fixed the reporting of the number of regions in the font.\n\n3.9.1 (released 2017-03-20)\n---------------------------\n\n- [varLib.merger] Fixed issue while recombining multiple PairPosFormat2\n  subtables if they were split because of offset overflows (9798c30).\n- [varLib.merger] Only merge multiple PairPosFormat1 subtables if there is\n  at least one of the fonts with a non-empty Format1 subtable (0f5a46b).\n- [varLib.merger] Fixed IndexError with empty ClassDef1 in PairPosFormat2\n  (aad0d46).\n- [varLib.merger] Avoid reusing Class2Record (mutable) objects (e6125b3).\n- [varLib.merger] Calculate ClassDef1 and ClassDef2's Format when merging\n  PairPosFormat2 (23511fd).\n- [macUtils] Added missing ttLib import (b05f203).\n\n3.9.0 (released 2017-03-13)\n---------------------------\n\n- [feaLib] Added (partial) support for parsing feature file comments ``# ...``\n  appearing in between statements (#879).\n- [feaLib] Cleaned up syntax tree for FeatureNames.\n- [ttLib] Added support for reading/writing ``CFF2`` table (thanks to\n  @readroberts at Adobe), and ``TTFA`` (ttfautohint) table.\n- [varLib] Fixed regression introduced with 3.8.0 in the calculation of\n  ``NumShorts``, i.e. the number of deltas in ItemVariationData's delta sets\n  that use a 16-bit representation (b2825ff).\n\n3.8.0 (released 2017-03-05)\n---------------------------\n\n- New pens: MomentsPen, StatisticsPen, RecordingPen, and TeePen.\n- [misc] Added new ``fontTools.misc.symfont`` module, for symbolic font\n  statistical analysis; requires ``sympy`` (http://www.sympy.org/en/index.html)\n- [varLib] Added experimental ``fontTools.varLib.interpolatable`` module for\n  finding wrong contour order between different masters\n- [varLib] designspace.load() now returns a dictionary, instead of a tuple,\n  and supports <axes> element (#864); the 'masters' item was renamed 'sources',\n  like the <sources> element in the designspace document\n- [ttLib] Fixed issue with recalculating ``head`` modified timestamp when\n  saving CFF fonts\n- [ttLib] In TupleVariation, round deltas before compiling (#861, fixed #592)\n- [feaLib] Ignore duplicate glyphs in classes used as MarkFilteringSet and\n  MarkAttachmentType (#863)\n- [merge] Changed the ``gasp`` table merge logic so that only the one from\n  the first font is retained, similar to other hinting tables (#862)\n- [Tests] Added tests for the ``varLib`` package, as well as test fonts\n  from the \"Annotated OpenType Specification\" (AOTS) to exercise ``ttLib``'s\n  table readers/writers (<https://github.com/adobe-type-tools/aots>)\n\n3.7.2 (released 2017-02-17)\n---------------------------\n\n- [subset] Keep advance widths when stripping \".notdef\" glyph outline in\n  CID-keyed CFF fonts (#845)\n- [feaLib] Zero values now produce the same results as makeotf (#633, #848)\n- [feaLib] More compact encoding for “Contextual positioning with in-line\n  single positioning rules” (#514)\n\n3.7.1 (released 2017-02-15)\n---------------------------\n\n- [subset] Fixed issue with ``--no-hinting`` option whereby advance widths in\n  Type 2 charstrings were also being stripped (#709, #343)\n- [feaLib] include statements now resolve relative paths like makeotf (#838)\n- [feaLib] table ``name`` now handles Unicode codepoints beyond the Basic\n  Multilingual Plane, also supports old-style MacOS platform encodings (#842)\n- [feaLib] correctly escape string literals when emitting feature syntax (#780)\n\n3.7.0 (released 2017-02-11)\n---------------------------\n\n- [ttx, mtiLib] Preserve ordering of glyph alternates in GSUB type 3 (#833).\n- [feaLib] Glyph names can have dashes, as per new AFDKO syntax v1.20 (#559).\n- [feaLib] feaLib.Parser now needs the font's glyph map for parsing.\n- [varLib] Fix regression where GPOS values were stored as 0.\n- [varLib] Allow merging of class-based kerning when ClassDefs are different\n\n3.6.3 (released 2017-02-06)\n---------------------------\n\n- [varLib] Fix building variation of PairPosFormat2 (b5c34ce).\n- Populate defaults even for otTables that have postRead (e45297b).\n- Fix compiling of MultipleSubstFormat1 with zero 'out' glyphs (b887860).\n\n3.6.2 (released 2017-01-30)\n---------------------------\n\n- [varLib.merger] Fixed \"TypeError: reduce() of empty sequence with no\n  initial value\" (3717dc6).\n\n3.6.1 (released 2017-01-28)\n---------------------------\n\n-  [py23] Fixed unhandled exception occurring at interpreter shutdown in\n   the \"last resort\" logging handler (972b3e6).\n-  [agl] Ensure all glyph names are of native 'str' type; avoid mixing\n   'str' and 'unicode' in TTFont.glyphOrder (d8c4058).\n-  Fixed inconsistent title levels in README.rst that caused PyPI to\n   incorrectly render the reStructuredText page.\n\n3.6.0 (released 2017-01-26)\n---------------------------\n\n-  [varLib] Refactored and improved the variation-font-building process.\n-  Assembly code in the fpgm, prep, and glyf tables is now indented in\n   XML output for improved readability. The ``instruction`` element is\n   written as a simple tag if empty (#819).\n-  [ttx] Fixed 'I/O operation on closed file' error when dumping\n   multiple TTXs to standard output with the '-o -' option.\n-  The unit test modules (``*_test.py``) have been moved outside of the\n   fontTools package to the Tests folder, thus they are no longer\n   installed (#811).\n\n3.5.0 (released 2017-01-14)\n---------------------------\n\n-  Font tables read from XML can now be written back to XML with no\n   loss.\n-  GSUB/GPOS LookupType is written out in XML as an element, not\n   comment. (#792)\n-  When parsing cmap table, do not store items mapped to glyph id 0.\n   (#790)\n-  [otlLib] Make ClassDef sorting deterministic. Fixes #766 (7d1ddb2)\n-  [mtiLib] Added unit tests (#787)\n-  [cvar] Implemented cvar table\n-  [gvar] Renamed GlyphVariation to TupleVariation to match OpenType\n   terminology.\n-  [otTables] Handle gracefully empty VarData.Item array when compiling\n   XML. (#797)\n-  [varLib] Re-enabled generation of ``HVAR`` table for fonts with\n   TrueType outlines; removed ``--build-HVAR`` command-line option.\n-  [feaLib] The parser can now be extended to support non-standard\n   statements in FEA code by using a customized Abstract Syntax Tree.\n   See, for example, ``feaLib.builder_test.test_extensions`` and\n   baseClass.feax (#794, fixes #773).\n-  [feaLib] Added ``feaLib`` command to the 'fonttools' command-line\n   tool; applies a feature file to a font. ``fonttools feaLib -h`` for\n   help.\n-  [pens] The ``T2CharStringPen`` now takes an optional\n   ``roundTolerance`` argument to control the rounding of coordinates\n   (#804, fixes #769).\n-  [ci] Measure test coverage on all supported python versions and OSes,\n   combine coverage data and upload to\n   https://codecov.io/gh/fonttools/fonttools (#786)\n-  [ci] Configured Travis and Appveyor for running tests on Python 3.6\n   (#785, 55c03bc)\n-  The manual pages installation directory can be customized through\n   ``FONTTOOLS_MANPATH`` environment variable (#799, fixes #84).\n-  [Snippets] Added otf2ttf.py, for converting fonts from CFF to\n   TrueType using the googlei18n/cu2qu module (#802)\n\n3.4.0 (released 2016-12-21)\n---------------------------\n\n-  [feaLib] Added support for generating FEA text from abstract syntax\n   tree (AST) objects (#776). Thanks @mhosken\n-  Added ``agl.toUnicode`` function to convert AGL-compliant glyph names\n   to Unicode strings (#774)\n-  Implemented MVAR table (b4d5381)\n\n3.3.1 (released 2016-12-15)\n---------------------------\n\n-  [setup] We no longer use versioneer.py to compute fonttools version\n   from git metadata, as this has caused issues for some users (#767).\n   Now we bump the version strings manually with a custom ``release``\n   command of setup.py script.\n\n3.3.0 (released 2016-12-06)\n---------------------------\n\n-  [ttLib] Implemented STAT table from OpenType 1.8 (#758)\n-  [cffLib] Fixed decompilation of CFF fonts containing non-standard\n   key/value pairs in FontDict (issue #740; PR #744)\n-  [py23] minor: in ``round3`` function, allow the second argument to be\n   ``None`` (#757)\n-  The standalone ``sstruct`` and ``xmlWriter`` modules, deprecated\n   since vesion 3.2.0, have been removed. They can be imported from the\n   ``fontTools.misc`` package.\n\n3.2.3 (released 2016-12-02)\n---------------------------\n\n-  [py23] optimized performance of round3 function; added backport for\n   py35 math.isclose() (9d8dacb)\n-  [subset] fixed issue with 'narrow' (UCS-2) Python 2 builds and\n   ``--text``/``--text-file`` options containing non-BMP chararcters\n   (16d0e5e)\n-  [varLib] fixed issuewhen normalizing location values (8fa2ee1, #749)\n-  [inspect] Made it compatible with both python2 and python3 (167ee60,\n   #748). Thanks @pnemade\n\n3.2.2 (released 2016-11-24)\n---------------------------\n\n-  [varLib] Do not emit null axes in fvar (1bebcec). Thanks @robmck-ms\n-  [varLib] Handle fonts without GPOS (7915a45)\n-  [merge] Ignore LangSys if None (a11bc56)\n-  [subset] Fix subsetting MathVariants (78d3cbe)\n-  [OS/2] Fix \"Private Use (plane 15)\" range (08a0d55). Thanks @mashabow\n\n3.2.1 (released 2016-11-03)\n---------------------------\n\n-  [OS/2] fix checking ``fsSelection`` bits matching ``head.macStyle``\n   bits\n-  [varLib] added ``--build-HVAR`` option to generate ``HVAR`` table for\n   fonts with TrueType outlines. For ``CFF2``, it is enabled by default.\n\n3.2.0 (released 2016-11-02)\n---------------------------\n\n-  [varLib] Improve support for OpenType 1.8 Variable Fonts:\n-  Implement GDEF's VariationStore\n-  Implement HVAR/VVAR tables\n-  Partial support for loading MutatorMath .designspace files with\n   varLib.designspace module\n-  Add varLib.models with Variation fonts interpolation models\n-  Implement GSUB/GPOS FeatureVariations\n-  Initial support for interpolating and merging OpenType Layout tables\n   (see ``varLib.interpolate_layout`` and ``varLib.merger`` modules)\n-  [API change] Change version to be an integer instead of a float in\n   XML output for GSUB, GPOS, GDEF, MATH, BASE, JSTF, HVAR, VVAR, feat,\n   hhea and vhea tables. Scripts that set the Version for those to 1.0\n   or other float values also need fixing. A warning is emitted when\n   code or XML needs fix.\n-  several bug fixes to the cffLib module, contributed by Adobe's\n   @readroberts\n-  The XML output for CFF table now has a 'major' and 'minor' elements\n   for specifying whether it's version 1.0 or 2.0 (support for CFF2 is\n   coming soon)\n-  [setup.py] remove undocumented/deprecated ``extra_path`` Distutils\n   argument. This means that we no longer create a \"FontTools\" subfolder\n   in site-packages containing the actual fontTools package, as well as\n   the standalone xmlWriter and sstruct modules. The latter modules are\n   also deprecated, and scheduled for removal in upcoming releases.\n   Please change your import statements to point to from fontTools.misc\n   import xmlWriter and from fontTools.misc import sstruct.\n-  [scripts] Add a 'fonttools' command-line tool that simply runs\n   ``fontTools.*`` sub-modules: e.g. ``fonttools ttx``,\n   ``fonttools subset``, etc.\n-  [hmtx/vmts] Read advance width/heights as unsigned short (uint16);\n   automatically round float values to integers.\n-  [ttLib/xmlWriter] add 'newlinestr=None' keyword argument to\n   ``TTFont.saveXML`` for overriding os-specific line endings (passed on\n   to ``XMLWriter`` instances).\n-  [versioning] Use versioneer instead of ``setuptools_scm`` to\n   dynamically load version info from a git checkout at import time.\n-  [feaLib] Support backslash-prefixed glyph names.\n\n3.1.2 (released 2016-09-27)\n---------------------------\n\n-  restore Makefile as an alternative way to build/check/install\n-  README.md: update instructions for installing package from source,\n   and for running test suite\n-  NEWS: Change log was out of sync with tagged release\n\n3.1.1 (released 2016-09-27)\n---------------------------\n\n-  Fix ``ttLibVersion`` attribute in TTX files still showing '3.0'\n   instead of '3.1'.\n-  Use ``setuptools_scm`` to manage package versions.\n\n3.1.0 (released 2016-09-26)\n---------------------------\n\n-  [feaLib] New library to parse and compile Adobe FDK OpenType Feature\n   files.\n-  [mtiLib] New library to parse and compile Monotype 'FontDame'\n   OpenType Layout Tables files.\n-  [voltLib] New library to parse Microsoft VOLT project files.\n-  [otlLib] New library to work with OpenType Layout tables.\n-  [varLib] New library to work with OpenType Font Variations.\n-  [pens] Add ttGlyphPen to draw to TrueType glyphs, and t2CharStringPen\n   to draw to Type 2 Charstrings (CFF); add areaPen and perimeterPen.\n-  [ttLib.tables] Implement 'meta' and 'trak' tables.\n-  [ttx] Add --flavor option for compiling to 'woff' or 'woff2'; add\n   ``--with-zopfli`` option to use Zopfli to compress WOFF 1.0 fonts.\n-  [subset] Support subsetting 'COLR'/'CPAL' and 'CBDT'/'CBLC' color\n   fonts tables, and 'gvar' table for variation fonts.\n-  [Snippets] Add ``symfont.py``, for symbolic font statistics analysis;\n   interpolatable.py, a preliminary script for detecting interpolation\n   errors; ``{merge,dump}_woff_metadata.py``.\n-  [classifyTools] Helpers to classify things into classes.\n-  [CI] Run tests on Windows, Linux and macOS using Appveyor and Travis\n   CI; check unit test coverage with Coverage.py/Coveralls; automatic\n   deployment to PyPI on tags.\n-  [loggingTools] Use Python built-in logging module to print messages.\n-  [py23] Make round() behave like Python 3 built-in round(); define\n   round2() and round3().\n\n3.0 (released 2015-09-01)\n-------------------------\n\n-  Add Snippet scripts for cmap subtable format conversion, printing\n   GSUB/GPOS features, building a GX font from two masters\n-  TTX WOFF2 support and a ``-f`` option to overwrite output file(s)\n-  Support GX tables: ``avar``, ``gvar``, ``fvar``, ``meta``\n-  Support ``feat`` and gzip-compressed SVG tables\n-  Upgrade Mac East Asian encodings to native implementation if\n   available\n-  Add Roman Croatian and Romanian encodings, codecs for mac-extended\n   East Asian encodings\n-  Implement optimal GLYF glyph outline packing; disabled by default\n\n2.5 (released 2014-09-24)\n-------------------------\n\n-  Add a Qt pen\n-  Add VDMX table converter\n-  Load all OpenType sub-structures lazily\n-  Add support for cmap format 13.\n-  Add pyftmerge tool\n-  Update to Unicode 6.3.0d3\n-  Add pyftinspect tool\n-  Add support for Google CBLC/CBDT color bitmaps, standard EBLC/EBDT\n   embedded bitmaps, and ``SVG`` table (thanks to Read Roberts at Adobe)\n-  Add support for loading, saving and ttx'ing WOFF file format\n-  Add support for Microsoft COLR/CPAL layered color glyphs\n-  Support PyPy\n-  Support Jython, by replacing numpy with array/lists modules and\n   removed it, pure-Python StringIO, not cStringIO\n-  Add pyftsubset and Subsetter object, supporting CFF and TTF\n-  Add to ttx args for -q for quiet mode, -z to choose a bitmap dump\n   format\n\n2.4 (released 2013-06-22)\n-------------------------\n\n-  Option to write to arbitrary files\n-  Better dump format for DSIG\n-  Better detection of OTF XML\n-  Fix issue with Apple's kern table format\n-  Fix mangling of TT glyph programs\n-  Fix issues related to mona.ttf\n-  Fix Windows Installer instructions\n-  Fix some modern MacOS issues\n-  Fix minor issues and typos\n\n2.3 (released 2009-11-08)\n-------------------------\n\n-  TrueType Collection (TTC) support\n-  Python 2.6 support\n-  Update Unicode data to 5.2.0\n-  Couple of bug fixes\n\n2.2 (released 2008-05-18)\n-------------------------\n\n-  ClearType support\n-  cmap format 1 support\n-  PFA font support\n-  Switched from Numeric to numpy\n-  Update Unicode data to 5.1.0\n-  Update AGLFN data to 1.6\n-  Many bug fixes\n\n2.1 (released 2008-01-28)\n-------------------------\n\n-  Many years worth of fixes and features\n\n2.0b2 (released 2002-??-??)\n---------------------------\n\n-  Be \"forgiving\" when interpreting the maxp table version field:\n   interpret any value as 1.0 if it's not 0.5. Fixes dumping of these\n   GPL fonts: http://www.freebsd.org/cgi/pds.cgi?ports/chinese/wangttf\n-  Fixed ttx -l: it turned out this part of the code didn't work with\n   Python 2.2.1 and earlier. My bad to do most of my testing with a\n   different version than I shipped TTX with :-(\n-  Fixed bug in ClassDef format 1 subtable (Andreas Seidel bumped into\n   this one).\n\n2.0b1 (released 2002-09-10)\n---------------------------\n\n-  Fixed embarrassing bug: the master checksum in the head table is now\n   calculated correctly even on little-endian platforms (such as Intel).\n-  Made the cmap format 4 compiler smarter: the binary data it creates\n   is now more or less as compact as possible. TTX now makes more\n   compact data than in any shipping font I've tested it with.\n-  Dump glyph names as a separate \"GlyphOrder\" pseudo table as opposed\n   to as part of the glyf table (obviously needed for CFF-OTF's).\n-  Added proper support for the CFF table.\n-  Don't barf on empty tables (questionable, but \"there are font out\n   there...\")\n-  When writing TT glyf data, align glyphs on 4-byte boundaries. This\n   seems to be the current recommendation by MS. Also: don't barf on\n   fonts which are already 4-byte aligned.\n-  Windows installer contributed bu Adam Twardoch! Yay!\n-  Changed the command line interface again, now by creating one new\n   tool replacing the old ones: ttx It dumps and compiles, depending on\n   input file types. The options have changed somewhat.\n-  The -d option is back (output dir)\n-  ttcompile's -i options is now called -m (as in \"merge\"), to avoid\n   clash with dump's -i.\n-  The -s option (\"split tables\") no longer creates a directory, but\n   instead outputs a small .ttx file containing references to the\n   individual table files. This is not a true link, it's a simple file\n   name, and the referenced file should be in the same directory so\n   ttcompile can find them.\n-  compile no longer accepts a directory as input argument. Instead it\n   can parse the new \"mini-ttx\" format as output by \"ttx -s\".\n-  all arguments are input files\n-  Renamed the command line programs and moved them to the Tools\n   subdirectory. They are now installed by the setup.py install script.\n-  Added OpenType support. BASE, GDEF, GPOS, GSUB and JSTF are (almost)\n   fully supported. The XML output is not yet final, as I'm still\n   considering to output certain subtables in a more human-friendly\n   manner.\n-  Fixed 'kern' table to correctly accept subtables it doesn't know\n   about, as well as interpreting Apple's definition of the 'kern' table\n   headers correctly.\n-  Fixed bug where glyphnames were not calculated from 'cmap' if it was\n   (one of the) first tables to be decompiled. More specifically: it\n   cmap was the first to ask for a glyphID -> glyphName mapping.\n-  Switched XML parsers: use expat instead of xmlproc. Should be faster.\n-  Removed my UnicodeString object: I now require Python 2.0 or up,\n   which has unicode support built in.\n-  Removed assert in glyf table: redundant data at the end of the table\n   is now ignored instead of raising an error. Should become a warning.\n-  Fixed bug in hmtx/vmtx code that only occured if all advances were\n   equal.\n-  Fixed subtle bug in TT instruction disassembler.\n-  Couple of fixes to the 'post' table.\n-  Updated OS/2 table to latest spec.\n\n1.0b1 (released 2001-08-10)\n---------------------------\n\n-  Reorganized the command line interface for ttDump.py and\n   ttCompile.py, they now behave more like \"normal\" command line tool,\n   in that they accept multiple input files for batch processing.\n-  ttDump.py and ttCompile.py don't silently override files anymore, but\n   ask before doing so. Can be overridden by -f.\n-  Added -d option to both ttDump.py and ttCompile.py.\n-  Installation is now done with distutils. (Needs work for environments\n   without compilers.)\n-  Updated installation instructions.\n-  Added some workarounds so as to handle certain buggy fonts more\n   gracefully.\n-  Updated Unicode table to Unicode 3.0 (Thanks Antoine!)\n-  Included a Python script by Adam Twardoch that adds some useful stuff\n   to the Windows registry.\n-  Moved the project to SourceForge.\n\n1.0a6 (released 2000-03-15)\n---------------------------\n\n-  Big reorganization: made ttLib a subpackage of the new fontTools\n   package, changed several module names. Called the entire suite\n   \"FontTools\"\n-  Added several submodules to fontTools, some new, some older.\n-  Added experimental CFF/GPOS/GSUB support to ttLib, read-only (but XML\n   dumping of GPOS/GSUB is for now disabled)\n-  Fixed hdmx endian bug\n-  Added -b option to ttCompile.py, it disables recalculation of\n   bounding boxes, as requested by Werner Lemberg.\n-  Renamed tt2xml.pt to ttDump.py and xml2tt.py to ttCompile.py\n-  Use \".ttx\" as file extension instead of \".xml\".\n-  TTX is now the name of the XML-based *format* for TT fonts, and not\n   just an application.\n\n1.0a5\n-----\n\nNever released\n\n-  More tables supported: hdmx, vhea, vmtx\n\n1.0a3 & 1.0a4\n-------------\n\nNever released\n\n-  fixed most portability issues\n-  retracted the \"Euro_or_currency\" change from 1.0a2: it was\n   nonsense!\n\n1.0a2 (released 1999-05-02)\n---------------------------\n\n-  binary release for MacOS\n-  genenates full FOND resources: including width table, PS font name\n   info and kern table if applicable.\n-  added cmap format 4 support. Extra: dumps Unicode char names as XML\n   comments!\n-  added cmap format 6 support\n-  now accepts true type files starting with \"true\" (instead of just\n   0x00010000 and \"OTTO\")\n-  'glyf' table support is now complete: I added support for composite\n   scale, xy-scale and two-by-two for the 'glyf' table. For now,\n   component offset scale behaviour defaults to Apple-style. This only\n   affects the (re)calculation of the glyph bounding box.\n-  changed \"Euro\" to \"Euro_or_currency\" in the Standard Apple Glyph\n   order list, since we cannot tell from the 'post' table which is\n   meant. I should probably doublecheck with a Unicode encoding if\n   available. (This does not affect the output!)\n\nFixed bugs: - 'hhea' table is now recalculated correctly - fixed wrong\nassumption about sfnt resource names\n\n1.0a1 (released 1999-04-27)\n---------------------------\n\n-  initial binary release for MacOS\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/fonttools-4.39.3.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "frozenlist",
        "version": "1.3.3",
        "summary": "A list-like structure which implements collections.abc.MutableSequence",
        "description_content_type": "text/x-rst",
        "home_page": "https://github.com/aio-libs/frozenlist",
        "maintainer": "aiohttp team <team@aiohttp.org>",
        "maintainer_email": "team@aiohttp.org",
        "license": "Apache 2",
        "classifier": [
          "License :: OSI Approved :: Apache Software License",
          "Intended Audience :: Developers",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Development Status :: 5 - Production/Stable",
          "Operating System :: POSIX",
          "Operating System :: MacOS :: MacOS X",
          "Operating System :: Microsoft :: Windows"
        ],
        "requires_python": ">=3.7",
        "project_url": [
          "Chat: Gitter, https://gitter.im/aio-libs/Lobby",
          "CI: Github Actions, https://github.com/aio-libs/frozenlist/actions",
          "Coverage: codecov, https://codecov.io/github/aio-libs/frozenlist",
          "Docs: RTD, https://frozenlist.readthedocs.io",
          "GitHub: issues, https://github.com/aio-libs/frozenlist/issues",
          "GitHub: repo, https://github.com/aio-libs/frozenlist"
        ],
        "description": "==========\nfrozenlist\n==========\n\n.. image:: https://github.com/aio-libs/frozenlist/workflows/CI/badge.svg\n   :target: https://github.com/aio-libs/frozenlist/actions\n   :alt: GitHub status for master branch\n\n.. image:: https://codecov.io/gh/aio-libs/frozenlist/branch/master/graph/badge.svg\n   :target: https://codecov.io/gh/aio-libs/frozenlist\n   :alt: codecov.io status for master branch\n\n.. image:: https://badge.fury.io/py/frozenlist.svg\n   :target: https://pypi.org/project/frozenlist\n   :alt: Latest PyPI package version\n\n.. image:: https://readthedocs.org/projects/frozenlist/badge/?version=latest\n   :target: https://frozenlist.readthedocs.io/\n   :alt: Latest Read The Docs\n\n.. image:: https://img.shields.io/discourse/topics?server=https%3A%2F%2Faio-libs.discourse.group%2F\n   :target: https://aio-libs.discourse.group/\n   :alt: Discourse group for io-libs\n\n.. image:: https://badges.gitter.im/Join%20Chat.svg\n   :target: https://gitter.im/aio-libs/Lobby\n   :alt: Chat on Gitter\n\nIntroduction\n============\n\n``frozenlist.FrozenList`` is a list-like structure which implements\n``collections.abc.MutableSequence``. The list is *mutable* until ``FrozenList.freeze``\nis called, after which list modifications raise ``RuntimeError``:\n\n\n>>> from frozenlist import FrozenList\n>>> fl = FrozenList([17, 42])\n>>> fl.append('spam')\n>>> fl.append('Vikings')\n>>> fl\n<FrozenList(frozen=False, [17, 42, 'spam', 'Vikings'])>\n>>> fl.freeze()\n>>> fl\n<FrozenList(frozen=True, [17, 42, 'spam', 'Vikings'])>\n>>> fl.frozen\nTrue\n>>> fl.append(\"Monty\")\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"frozenlist/_frozenlist.pyx\", line 97, in frozenlist._frozenlist.FrozenList.append\n    self._check_frozen()\n  File \"frozenlist/_frozenlist.pyx\", line 19, in frozenlist._frozenlist.FrozenList._check_frozen\n    raise RuntimeError(\"Cannot modify frozen list.\")\nRuntimeError: Cannot modify frozen list.\n\n\nFrozenList is also hashable, but only when frozen. Otherwise it also throws a RuntimeError:\n\n\n>>> fl = FrozenList([17, 42, 'spam'])\n>>> hash(fl)\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"frozenlist/_frozenlist.pyx\", line 111, in frozenlist._frozenlist.FrozenList.__hash__\n    raise RuntimeError(\"Cannot hash unfrozen list.\")\nRuntimeError: Cannot hash unfrozen list.\n>>> fl.freeze()\n>>> hash(fl)\n3713081631934410656\n>>> dictionary = {fl: 'Vikings'} # frozen fl can be a dict key\n>>> dictionary\n{<FrozenList(frozen=True, [1, 2])>: 'Vikings'}\n\n\nInstallation\n------------\n\n::\n\n   $ pip install frozenlist\n\nThe library requires Python 3.6 or newer.\n\n\nDocumentation\n=============\n\nhttps://frozenlist.readthedocs.io/\n\nCommunication channels\n======================\n\n*aio-libs discourse group*: https://aio-libs.discourse.group\n\nFeel free to post your questions and ideas here.\n\n*gitter chat* https://gitter.im/aio-libs/Lobby\n\nRequirements\n============\n\n- Python >= 3.6\n\nLicense\n=======\n\n``frozenlist`` is offered under the Apache 2 license.\n\nSource code\n===========\n\nThe project is hosted on GitHub_\n\nPlease file an issue in the `bug tracker\n<https://github.com/aio-libs/frozenlist/issues>`_ if you have found a bug\nor have some suggestions to improve the library.\n\n.. _GitHub: https://github.com/aio-libs/frozenlist\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/frozenlist-1.3.3.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "fsspec",
        "version": "2023.5.0",
        "summary": "File-system specification",
        "description_content_type": "text/markdown",
        "keywords": [
          "file"
        ],
        "home_page": "http://github.com/fsspec/filesystem_spec",
        "maintainer": "Martin Durant",
        "maintainer_email": "mdurant@anaconda.com",
        "license": "BSD",
        "classifier": [
          "Development Status :: 4 - Beta",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: BSD License",
          "Operating System :: OS Independent",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11"
        ],
        "requires_dist": [
          "adlfs ; extra == 'abfs'",
          "adlfs ; extra == 'adl'",
          "pyarrow (>=1) ; extra == 'arrow'",
          "dask ; extra == 'dask'",
          "distributed ; extra == 'dask'",
          "pytest ; extra == 'devel'",
          "pytest-cov ; extra == 'devel'",
          "dropboxdrivefs ; extra == 'dropbox'",
          "requests ; extra == 'dropbox'",
          "dropbox ; extra == 'dropbox'",
          "adlfs ; extra == 'full'",
          "aiohttp (!=4.0.0a0,!=4.0.0a1) ; extra == 'full'",
          "dask ; extra == 'full'",
          "distributed ; extra == 'full'",
          "dropbox ; extra == 'full'",
          "dropboxdrivefs ; extra == 'full'",
          "fusepy ; extra == 'full'",
          "gcsfs ; extra == 'full'",
          "libarchive-c ; extra == 'full'",
          "ocifs ; extra == 'full'",
          "panel ; extra == 'full'",
          "paramiko ; extra == 'full'",
          "pyarrow (>=1) ; extra == 'full'",
          "pygit2 ; extra == 'full'",
          "requests ; extra == 'full'",
          "s3fs ; extra == 'full'",
          "smbprotocol ; extra == 'full'",
          "tqdm ; extra == 'full'",
          "fusepy ; extra == 'fuse'",
          "gcsfs ; extra == 'gcs'",
          "pygit2 ; extra == 'git'",
          "requests ; extra == 'github'",
          "gcsfs ; extra == 'gs'",
          "panel ; extra == 'gui'",
          "pyarrow (>=1) ; extra == 'hdfs'",
          "requests ; extra == 'http'",
          "aiohttp (!=4.0.0a0,!=4.0.0a1) ; extra == 'http'",
          "libarchive-c ; extra == 'libarchive'",
          "ocifs ; extra == 'oci'",
          "s3fs ; extra == 's3'",
          "paramiko ; extra == 'sftp'",
          "smbprotocol ; extra == 'smb'",
          "paramiko ; extra == 'ssh'",
          "tqdm ; extra == 'tqdm'"
        ],
        "requires_python": ">=3.8",
        "project_url": [
          "Changelog, https://filesystem-spec.readthedocs.io/en/latest/changelog.html",
          "Documentation, https://filesystem-spec.readthedocs.io/en/latest/"
        ],
        "provides_extra": [
          "abfs",
          "adl",
          "arrow",
          "dask",
          "devel",
          "dropbox",
          "entrypoints",
          "full",
          "fuse",
          "gcs",
          "git",
          "github",
          "gs",
          "gui",
          "hdfs",
          "http",
          "libarchive",
          "oci",
          "s3",
          "sftp",
          "smb",
          "ssh",
          "tqdm"
        ],
        "description": "# filesystem_spec\n\n[![PyPI version](https://badge.fury.io/py/fsspec.svg)](https://pypi.python.org/pypi/fsspec/)\n[![Anaconda-Server Badge](https://anaconda.org/conda-forge/fsspec/badges/version.svg)](https://anaconda.org/conda-forge/fsspec)\n![Build](https://github.com/fsspec/filesystem_spec/workflows/CI/badge.svg)\n[![Docs](https://readthedocs.org/projects/filesystem-spec/badge/?version=latest)](https://filesystem-spec.readthedocs.io/en/latest/?badge=latest)\n\nA specification for pythonic filesystems.\n\n## Install\n\n```bash\npip install fsspec\n```\n\nwould install the base fsspec. Various optionally supported features might require specification of custom\nextra require, e.g. `pip install fsspec[ssh]` will install dependencies for `ssh` backends support.\nUse `pip install fsspec[full]` for installation of all known extra dependencies.\n\nUp-to-date package also provided through conda-forge distribution:\n\n```bash\nconda install -c conda-forge fsspec\n```\n\n\n## Purpose\n\nTo produce a template or specification for a file-system interface, that specific implementations should follow,\nso that applications making use of them can rely on a common behaviour and not have to worry about the specific\ninternal implementation decisions with any given backend. Many such implementations are included in this package,\nor in sister projects such as `s3fs` and `gcsfs`.\n\nIn addition, if this is well-designed, then additional functionality, such as a key-value store or FUSE\nmounting of the file-system implementation may be available for all implementations \"for free\".\n\n## Documentation\n\nPlease refer to [RTD](https://filesystem-spec.readthedocs.io/en/latest/?badge=latest)\n\n## Develop\n\nfsspec uses GitHub Actions for CI. Environment files can be found\nin the \"ci/\" directory. Note that the main environment is called \"py38\",\nbut it is expected that the version of python installed be adjustable at\nCI runtime. For local use, pick a version suitable for you.\n\n### Testing\n\nTests can be run in the dev environment, if activated, via ``pytest fsspec``.\n\nThe full fsspec suite requires a system-level docker, docker-compose, and fuse\ninstallation. If only making changes to one backend implementation, it is\nnot generally necessary to run all tests locally.\n\nIt is expected that contributors ensure that any change to fsspec does not\ncause issues or regressions for either other fsspec-related packages such\nas gcsfs and s3fs, nor for downstream users of fsspec. The \"downstream\" CI\nrun and corresponding environment file run a set of tests from the dask\ntest suite, and very minimal tests against pandas and zarr from the\ntest_downstream.py module in this repo.\n\n### Code Formatting\n\nfsspec uses [Black](https://black.readthedocs.io/en/stable) to ensure\na consistent code format throughout the project.\nRun ``black fsspec`` from the root of the filesystem_spec repository to\nauto-format your code. Additionally, many editors have plugins that will apply\n``black`` as you edit files. ``black`` is included in the ``tox`` environments.\n\nOptionally, you may wish to setup [pre-commit hooks](https://pre-commit.com) to\nautomatically run ``black`` when you make a git commit.\nRun ``pre-commit install --install-hooks`` from the root of the\nfilesystem_spec repository to setup pre-commit hooks. ``black`` will now be run\nbefore you commit, reformatting any changed files. You can format without\ncommitting via ``pre-commit run`` or skip these checks with ``git commit\n--no-verify``.\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/fsspec-2023.5.0.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "future",
        "version": "0.18.3",
        "summary": "Clean single-source support for Python 3 and 2",
        "keywords": [
          "future",
          "past",
          "python3",
          "migration",
          "futurize",
          "backport",
          "six",
          "2to3",
          "modernize",
          "pasteurize",
          "3to2"
        ],
        "home_page": "https://python-future.org",
        "author": "Ed Schofield",
        "author_email": "ed@pythoncharmers.com",
        "license": "MIT",
        "classifier": [
          "Programming Language :: Python",
          "Programming Language :: Python :: 2",
          "Programming Language :: Python :: 2.6",
          "Programming Language :: Python :: 2.7",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.3",
          "Programming Language :: Python :: 3.4",
          "Programming Language :: Python :: 3.5",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "License :: OSI Approved",
          "License :: OSI Approved :: MIT License",
          "Development Status :: 4 - Beta",
          "Intended Audience :: Developers"
        ],
        "requires_python": ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*",
        "description": "\nfuture: Easy, safe support for Python 2/3 compatibility\n=======================================================\n\n``future`` is the missing compatibility layer between Python 2 and Python\n3. It allows you to use a single, clean Python 3.x-compatible codebase to\nsupport both Python 2 and Python 3 with minimal overhead.\n\nIt is designed to be used as follows::\n\n    from __future__ import (absolute_import, division,\n                            print_function, unicode_literals)\n    from builtins import (\n             bytes, dict, int, list, object, range, str,\n             ascii, chr, hex, input, next, oct, open,\n             pow, round, super,\n             filter, map, zip)\n\nfollowed by predominantly standard, idiomatic Python 3 code that then runs\nsimilarly on Python 2.6/2.7 and Python 3.3+.\n\nThe imports have no effect on Python 3. On Python 2, they shadow the\ncorresponding builtins, which normally have different semantics on Python 3\nversus 2, to provide their Python 3 semantics.\n\n\nStandard library reorganization\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n``future`` supports the standard library reorganization (PEP 3108) through the\nfollowing Py3 interfaces:\n\n    >>> # Top-level packages with Py3 names provided on Py2:\n    >>> import html.parser\n    >>> import queue\n    >>> import tkinter.dialog\n    >>> import xmlrpc.client\n    >>> # etc.\n\n    >>> # Aliases provided for extensions to existing Py2 module names:\n    >>> from future.standard_library import install_aliases\n    >>> install_aliases()\n\n    >>> from collections import Counter, OrderedDict   # backported to Py2.6\n    >>> from collections import UserDict, UserList, UserString\n    >>> import urllib.request\n    >>> from itertools import filterfalse, zip_longest\n    >>> from subprocess import getoutput, getstatusoutput\n\n\nAutomatic conversion\n--------------------\n\nAn included script called `futurize\n<http://python-future.org/automatic_conversion.html>`_ aids in converting\ncode (from either Python 2 or Python 3) to code compatible with both\nplatforms. It is similar to ``python-modernize`` but goes further in\nproviding Python 3 compatibility through the use of the backported types\nand builtin functions in ``future``.\n\n\nDocumentation\n-------------\n\nSee: http://python-future.org\n\n\nCredits\n-------\n\n:Author:  Ed Schofield, Jordan M. Adler, et al\n:Sponsor: Python Charmers Pty Ltd, Australia, and Python Charmers Pte\n          Ltd, Singapore. http://pythoncharmers.com\n:Others:  See docs/credits.rst or http://python-future.org/credits.html\n\n\nLicensing\n---------\nCopyright 2013-2019 Python Charmers Pty Ltd, Australia.\nThe software is distributed under an MIT licence. See LICENSE.txt.\n\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/future-0.18.3.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "gast",
        "version": "0.3.3",
        "platform": [
          "UNKNOWN"
        ],
        "summary": "Python AST that abstracts the underlying Python version",
        "home_page": "https://github.com/serge-sans-paille/gast/",
        "author": "serge-sans-paille",
        "author_email": "serge.guelton@telecom-bretagne.eu",
        "license": "BSD 3-Clause",
        "classifier": [
          "Development Status :: 4 - Beta",
          "Environment :: Console",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: BSD License",
          "Natural Language :: English",
          "Programming Language :: Python :: 2",
          "Programming Language :: Python :: 2.7",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.4",
          "Programming Language :: Python :: 3.5",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7"
        ],
        "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*",
        "description": "\nA generic AST to represent Python2 and Python3's Abstract Syntax Tree(AST).\n\nGAST provides a compatibility layer between the AST of various Python versions,\nas produced by ``ast.parse`` from the standard ``ast`` module.\n\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/gast-0.3.3.dist-info",
      "installer": "pip",
      "requested": true
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "gevent",
        "version": "22.10.2",
        "summary": "Coroutine-based network library",
        "description_content_type": "text/x-rst",
        "keywords": [
          "greenlet",
          "coroutine",
          "cooperative",
          "multitasking",
          "light",
          "threads",
          "monkey"
        ],
        "home_page": "http://www.gevent.org/",
        "author": "Denis Bilenko",
        "author_email": "denis.bilenko@gmail.com",
        "maintainer": "Jason Madden",
        "maintainer_email": "jason@nextthought.com",
        "license": "MIT",
        "classifier": [
          "License :: OSI Approved :: MIT License",
          "Programming Language :: Python :: 2.7",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Programming Language :: Python :: Implementation :: CPython",
          "Programming Language :: Python :: Implementation :: PyPy",
          "Operating System :: MacOS :: MacOS X",
          "Operating System :: POSIX",
          "Operating System :: Microsoft :: Windows",
          "Topic :: Internet",
          "Topic :: Software Development :: Libraries :: Python Modules",
          "Intended Audience :: Developers",
          "Development Status :: 4 - Beta"
        ],
        "requires_dist": [
          "zope.event",
          "zope.interface",
          "setuptools",
          "greenlet (>=2.0.0) ; platform_python_implementation == \"CPython\"",
          "cffi (>=1.12.2) ; platform_python_implementation == \"CPython\" and sys_platform == \"win32\"",
          "dnspython (<2.0,>=1.16.0) ; (python_version < \"3.10\") and extra == 'dnspython'",
          "idna ; (python_version < \"3.10\") and extra == 'dnspython'",
          "repoze.sphinx.autointerface ; extra == 'docs'",
          "sphinxcontrib-programoutput ; extra == 'docs'",
          "zope.schema ; extra == 'docs'",
          "psutil (>=5.7.0) ; (sys_platform != \"win32\" or platform_python_implementation == \"CPython\") and extra == 'monitor'",
          "cffi (>=1.12.2) ; (platform_python_implementation == \"CPython\") and extra == 'recommended'",
          "dnspython (<2.0,>=1.16.0) ; (python_version < \"3.10\") and extra == 'recommended'",
          "idna ; (python_version < \"3.10\") and extra == 'recommended'",
          "selectors2 ; (python_version == \"2.7\") and extra == 'recommended'",
          "backports.socketpair ; (python_version == \"2.7\" and sys_platform == \"win32\") and extra == 'recommended'",
          "psutil (>=5.7.0) ; (sys_platform != \"win32\" or platform_python_implementation == \"CPython\") and extra == 'recommended'",
          "requests ; extra == 'test'",
          "objgraph ; extra == 'test'",
          "cffi (>=1.12.2) ; (platform_python_implementation == \"CPython\") and extra == 'test'",
          "dnspython (<2.0,>=1.16.0) ; (python_version < \"3.10\") and extra == 'test'",
          "idna ; (python_version < \"3.10\") and extra == 'test'",
          "selectors2 ; (python_version == \"2.7\") and extra == 'test'",
          "futures ; (python_version == \"2.7\") and extra == 'test'",
          "mock ; (python_version == \"2.7\") and extra == 'test'",
          "backports.socketpair ; (python_version == \"2.7\" and sys_platform == \"win32\") and extra == 'test'",
          "contextvars (==2.4) ; (python_version > \"3.0\" and python_version < \"3.7\") and extra == 'test'",
          "coverage (>=5.0) ; (sys_platform != \"win32\") and extra == 'test'",
          "coveralls (>=1.7.0) ; (sys_platform != \"win32\") and extra == 'test'",
          "psutil (>=5.7.0) ; (sys_platform != \"win32\" or platform_python_implementation == \"CPython\") and extra == 'test'"
        ],
        "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5",
        "project_url": [
          "Bug Tracker, https://github.com/gevent/gevent/issues",
          "Source Code, https://github.com/gevent/gevent/",
          "Documentation, http://www.gevent.org"
        ],
        "provides_extra": [
          "dnspython",
          "docs",
          "events",
          "monitor",
          "recommended",
          "test"
        ],
        "description": "========\n gevent\n========\n\n.. image:: https://github.com/gevent/gevent/workflows/gevent%20testing/badge.svg\n   :target: https://github.com/gevent/gevent/actions\n\n.. image:: https://ci.appveyor.com/api/projects/status/bqxl88yhpho223jg?svg=true\n   :target: https://ci.appveyor.com/project/denik/gevent\n\n.. image:: https://coveralls.io/repos/gevent/gevent/badge.svg?branch=master&service=github\n   :target: https://coveralls.io/github/gevent/gevent?branch=master\n\n..\n  This file is included in README.rst from the top-level\n  so it is limited to pure ReST markup, not Sphinx.\n\n\n\ngevent is a coroutine_ -based Python_ networking library that uses\n`greenlet <https://greenlet.readthedocs.io>`_ to provide a high-level synchronous API on top of the `libev`_\nor `libuv`_ event loop.\n\nFeatures include:\n\n\n* Fast event loop based on `libev`_ or `libuv`_.\n* Lightweight execution units based on greenlets.\n* API that re-uses concepts from the Python standard library (for\n  examples there are `events`_ and\n  `queues`_).\n* `Cooperative sockets with SSL support <http://www.gevent.org/api/index.html#networking>`_\n* `Cooperative DNS queries <http://www.gevent.org/dns.html>`_ performed through a threadpool,\n  dnspython, or c-ares.\n* `Monkey patching utility <http://www.gevent.org/intro.html#monkey-patching>`_ to get 3rd party modules to become cooperative\n* TCP/UDP/HTTP servers\n* Subprocess support (through `gevent.subprocess`_)\n* Thread pools\n\ngevent is `inspired by eventlet`_ but features a more consistent API,\nsimpler implementation and better performance. Read why others `use\ngevent`_ and check out the list of the `open source projects based on\ngevent`_.\n\ngevent was written by `Denis Bilenko <http://denisbilenko.com/>`_.\n\nSince version 1.1, gevent is maintained by Jason Madden for\n`NextThought <https://nextthought.com>`_ with help from the\n`contributors <https://github.com/gevent/gevent/graphs/contributors>`_\nand is licensed under the MIT license.\n\nSee `what's new`_ in the latest major release.\n\nCheck out the detailed changelog_ for this version.\n\n.. _events: http://www.gevent.org/api/gevent.event.html#gevent.event.Event\n.. _queues: http://www.gevent.org/api/gevent.queue.html#gevent.queue.Queue\n.. _gevent.subprocess: http://www.gevent.org/api/gevent.subprocess.html#module-gevent.subprocess\n\n.. _coroutine: https://en.wikipedia.org/wiki/Coroutine\n.. _Python: http://python.org\n.. _libev: http://software.schmorp.de/pkg/libev.html\n.. _libuv: http://libuv.org\n.. _inspired by eventlet: http://blog.gevent.org/2010/02/27/why-gevent/\n.. _use gevent: http://groups.google.com/group/gevent/browse_thread/thread/4de9703e5dca8271\n.. _open source projects based on gevent: https://github.com/gevent/gevent/wiki/Projects\n.. _what's new: http://www.gevent.org/whatsnew_1_5.html\n.. _changelog: http://www.gevent.org/changelog.html\n\n\nRead the documentation online at http://www.gevent.org.\n\nPost issues on the `bug tracker`_, discuss and ask open ended\nquestions on the `mailing list`_, and find announcements and\ninformation on the blog_ and `twitter (@gevent)`_.\n\n===============================\n Installation and Requirements\n===============================\n\n.. _installation:\n\n..\n  This file is included in README.rst so it is limited to plain\n  ReST markup, not Sphinx.\n\n.. note::\n\n   If you are reading this document on the `Python Package Index`_\n   (PyPI, https://pypi.org/), it is specific to the version of gevent that\n   you are viewing. If you are viewing this document on gevent.org, it\n   refers to the current state of gevent in source control (git\n   master).\n\nSupported Platforms\n===================\n\nThis version of gevent runs on Python 2.7.9 and up, and many versions\nof Python 3 (for exact details, see the classifiers on the PyPI page\nor in ``setup.py``). gevent requires the `greenlet <https://greenlet.readthedocs.io>`_\nlibrary and will install the `cffi`_ library by default on Windows.\nThe cffi library will become the default on all platforms in a future\nrelease of gevent.\n\nThis version of gevent also runs on PyPy 7.3.7 (7.3.6 for PyPy2) or\nabove. On PyPy, there are no external dependencies.\n\ngevent is tested on Windows, macOS, and Linux, and should run on most\nother Unix-like operating systems (e.g., FreeBSD, Solaris, etc.)\n\n.. note::\n\n   Windows is supported as a tier 2, \"best effort,\" platform. It is\n   suitable for development, but not recommended for production. In\n   particular, PyPy3 on Windows may have issues, especially with\n   subprocesses.\n\n   On Windows using the deprecated libev backend, gevent is\n   limited to a maximum of 1024 open sockets due to\n   `limitations in libev`_. This limitation should not exist\n   with the default libuv backend.\n\nOlder Versions of Python\n------------------------\n\nUsers of older versions of Python 2 or Python 3 may install an older\nversion of gevent. Note that these versions are generally not\nsupported.\n\n+-------+-------+\n|Python |Gevent |\n|Version|Version|\n+=======+=======+\n|2.5    |1.0.x  |\n|       |       |\n+-------+-------+\n|2.6    |1.1.x  |\n+-------+-------+\n|<=     |1.2.x  |\n|2.7.8  |       |\n+-------+-------+\n|3.3    |1.2.x  |\n+-------+-------+\n|3.4.0 -| 1.3.x |\n|3.4.2  |       |\n|       |       |\n+-------+-------+\n|3.4.3  | 1.4.x |\n|       |       |\n|       |       |\n+-------+-------+\n|3.5.x  | 20.9.0|\n|       |       |\n|       |       |\n+-------+-------+\n\nInstallation\n============\n\n.. note::\n\n   This section is about installing released versions of gevent as\n   distributed on the `Python Package Index`_. For building gevent\n   from source, including customizing the build and embedded\n   libraries, see `Installing From Source`_.\n\n.. _Python Package Index: http://pypi.org/project/gevent\n\ngevent and greenlet can both be installed with `pip`_, e.g., ``pip\ninstall gevent``. Installation using `buildout\n<http://docs.buildout.org/en/latest/>`_ is also supported.\n\nOn Windows, macOS, and Linux, both gevent and greenlet are\ndistributed as binary `wheels`_.\n\n.. tip::\n\n   You need Pip 8.0 or later, or buildout 2.10.0 to install the binary\n   wheels on Windows or macOS. On Linux, you'll need `pip 19\n   <https://github.com/pypa/pip/pull/5008>`_ to install the\n   manylinux2010 wheels.\n\n.. tip::\n\n   Binary wheels cannot be installed on non-manylinux2010 compatible\n   Linux systems, such as those that use `musl\n   <https://musl.libc.org>`_, including `Alpine Linux\n   <https://alpinelinux.org>`_. Those systems must install from source.\n\n.. tip::\n\n   Beginning with gevent 20.12.0, 64-bit ARM binaries are distributed\n   on PyPI for aarch64 manylinux2014 compatible systems. Installing these\n   needs a very recent version of ``pip``. These wheels *do not*\n   contain the c-ares resolver, are not tested, and are built with\n   very low levels of optimizations. Serious production users of\n   gevent on 64-bit ARM systems are encouraged to build their own\n   binary wheels.\n\n   Beginning with gevent 22.10.0, ppc64le binaries are distributed on\n   PyPI. The same caveats apply as for 64-bit ARM binaries. Using them\n   for anything other than local development is discouraged.\n\n\nInstalling From Source\n----------------------\n\nIf you are unable to use the binary wheels (for platforms where no\npre-built wheels are available or if wheel installation is disabled),\nyou can build gevent from source. A normal ``pip install`` will\nfall back to doing this if no binary wheel is available. See\n`Installing From Source`_ for more, including common installation issues.\n\nExtra Dependencies\n==================\n\nThere are a number\nof additional libraries that extend gevent's functionality and will be\nused if they are available. All of these may be installed using\n`setuptools extras\n<https://setuptools.readthedocs.io/en/latest/setuptools.html#declaring-extras-optional-features-with-their-own-dependencies>`_,\nas named below, e.g., ``pip install gevent[events]``.\n\nevents\n    In versions of gevent up to and including 20.5.0, this provided configurable\n    event support using `zope.event\n    <https://pypi.org/project/zope.event>`_ and was highly\n    recommended.\n\n    In versions after that, this extra is empty and does nothing. It\n    will be removed in gevent 21.0.\n\ndnspython\n    Enables a pure-Python resolver, backed by `dnspython\n    <https://pypi.org/project/dnspython>`_. On Python 2, this also\n    includes `idna <https://pypi.org/project/idna>`_. They can be\n    installed with the ``dnspython`` extra.\n\n    .. note:: This is not compatible with Python 3.10 or dnspython 2.\n\nmonitor\n    Enhancements to gevent's self-monitoring capabilities. This\n    includes the `psutil <https://pypi.org/project/psutil>`_ library\n    which is needed to monitor memory usage. (Note that this may not\n    build on all platforms.)\n\nrecommended\n    A shortcut for installing suggested extras together. This includes\n    the non-test extras defined here, plus:\n\n    - `backports.socketpair\n      <https://pypi.org/project/backports.socketpair/>`_ on Python\n      2/Windows (beginning with release 20.6.0);\n    - `selectors2 <https://pypi.org/project/selectors2/>`_ on Python 2 (beginning with release 20.6.0).\n\ntest\n    Everything needed to run the complete gevent test suite.\n\n\n.. _`pip`: https://pip.pypa.io/en/stable/installing/\n.. _`wheels`: http://pythonwheels.com\n.. _`gevent 1.5`: whatsnew_1_5.html\n.. _`Installing From Source`: https://www.gevent.org/development/installing_from_source.html\n\n.. _`cffi`: https://cffi.readthedocs.io\n.. _`limitations in libev`: http://pod.tst.eu/http://cvs.schmorp.de/libev/ev.pod#WIN32_PLATFORM_LIMITATIONS_AND_WORKA\n\n\n.. _bug tracker: https://github.com/gevent/gevent/issues\n.. _mailing list: http://groups.google.com/group/gevent\n.. _blog: https://dev.nextthought.com/blog/categories/gevent.html\n.. _twitter (@gevent): http://twitter.com/gevent\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/gevent-22.10.2.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "geventhttpclient",
        "version": "2.0.2",
        "summary": "http client library for gevent",
        "home_page": "http://github.com/gwik/geventhttpclient",
        "author": "Antonin Amand",
        "author_email": "antonin.amand@gmail.com",
        "license": "MIT",
        "requires_dist": [
          "gevent (>=0.13)",
          "certifi",
          "six",
          "brotli"
        ],
        "description": "\nA high performance, concurrent HTTP client library for python using gevent.\n\ngevent.httplib support was removed in gevent 1.0, geventhttpclient now\nprovides that missing functionality.\n\ngeventhttpclient uses a fast http parser, written in C, originating from\nnginx, extracted and modified by Joyent.\n\ngeventhttpclient has been specifically designed for high concurrency,\nstreaming and support HTTP 1.1 persistent connections. More generally it is\ndesigned for efficiently pulling from REST APIs and streaming APIs\nlike Twitter's.\n\nSafe SSL support is provided by default. geventhttpclient depends on\nthe certifi CA Bundle. This is the same CA Bundle which ships with the\nRequests codebase, and is derived from Mozilla Firefox's canonical set.\n\nAs of 1.5, only Python 3.6+ is fully supported (with prebuilt wheels), \nbut Python 2.7 and 3.5 *should* work too.\n\nUse of SSL/TLS with python 2.7.9 is not recommended and may be broken.\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/geventhttpclient-2.0.2.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "gitdb",
        "version": "4.0.10",
        "platform": [
          "UNKNOWN"
        ],
        "summary": "Git Object Database",
        "home_page": "https://github.com/gitpython-developers/gitdb",
        "author": "Sebastian Thiel",
        "author_email": "byronimo@gmail.com",
        "license": "BSD License",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Environment :: Console",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: BSD License",
          "Operating System :: OS Independent",
          "Operating System :: POSIX",
          "Operating System :: Microsoft :: Windows",
          "Operating System :: MacOS :: MacOS X",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Programming Language :: Python :: 3 :: Only"
        ],
        "requires_dist": [
          "smmap (<6,>=3.0.1)"
        ],
        "requires_python": ">=3.7",
        "description": "GitDB is a pure-Python git object database\n\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/gitdb-4.0.10.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "google-auth",
        "version": "2.17.3",
        "summary": "Google Authentication Library",
        "keywords": [
          "google",
          "auth",
          "oauth",
          "client"
        ],
        "home_page": "https://github.com/googleapis/google-auth-library-python",
        "author": "Google Cloud Platform",
        "author_email": "googleapis-packages@google.com",
        "license": "Apache 2.0",
        "classifier": [
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Development Status :: 5 - Production/Stable",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: Apache Software License",
          "Operating System :: POSIX",
          "Operating System :: Microsoft :: Windows",
          "Operating System :: MacOS :: MacOS X",
          "Operating System :: OS Independent",
          "Topic :: Internet :: WWW/HTTP"
        ],
        "requires_dist": [
          "cachetools (<6.0,>=2.0.0)",
          "pyasn1-modules (>=0.2.1)",
          "six (>=1.9.0)",
          "enum34 (>=1.1.10) ; python_version < \"3.4\"",
          "rsa (<4.6) ; python_version < \"3.6\"",
          "rsa (<5,>=3.1.4) ; python_version >= \"3.6\"",
          "requests (<3.0.0dev,>=2.20.0) ; extra == 'aiohttp'",
          "aiohttp (<4.0.0dev,>=3.6.2) ; (python_version >= \"3.6\") and extra == 'aiohttp'",
          "cryptography (==36.0.2) ; extra == 'enterprise_cert'",
          "pyopenssl (==22.0.0) ; extra == 'enterprise_cert'",
          "pyopenssl (>=20.0.0) ; extra == 'pyopenssl'",
          "cryptography (>=38.0.3) ; extra == 'pyopenssl'",
          "pyu2f (>=0.1.5) ; extra == 'reauth'",
          "requests (<3.0.0dev,>=2.20.0) ; extra == 'requests'"
        ],
        "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*",
        "provides_extra": [
          "aiohttp",
          "enterprise_cert",
          "pyopenssl",
          "reauth",
          "requests"
        ],
        "description": "Google Auth Python Library\n==========================\n\n|pypi|\n\nThis library simplifies using Google's various server-to-server authentication\nmechanisms to access Google APIs.\n\n.. |pypi| image:: https://img.shields.io/pypi/v/google-auth.svg\n   :target: https://pypi.python.org/pypi/google-auth\n\nInstalling\n----------\n\nYou can install using `pip`_::\n\n    $ pip install google-auth\n\n.. _pip: https://pip.pypa.io/en/stable/\n\nFor more information on setting up your Python development environment, please refer to `Python Development Environment Setup Guide`_ for Google Cloud Platform.\n\n.. _`Python Development Environment Setup Guide`: https://cloud.google.com/python/setup\n\nExtras\n------\n\ngoogle-auth has few extras that you can install. For example::\n\n    $ pip install google-auth[pyopenssl]\n\nNote that the extras pyopenssl and enterprise_cert should not be used together because they use conflicting versions of `cryptography`_.\n\n.. _`cryptography`: https://cryptography.io/en/latest/\n\nSupported Python Versions\n^^^^^^^^^^^^^^^^^^^^^^^^^\nPython >= 3.6\n\nUnsupported Python Versions\n^^^^^^^^^^^^^^^^^^^^^^^^^^^\n- Python == 2.7:  The last version of this library with support for Python 2.7\n  was `google.auth == 1.34.0`.\n\n- Python 3.5:   The last version of this library with support for Python 3.5\n  was `google.auth == 1.23.0`.\n\nDocumentation\n-------------\n\nGoogle Auth Python Library has usage and reference documentation at https://googleapis.dev/python/google-auth/latest/index.html.\n\nCurrent Maintainers\n-------------------\n- googleapis-auth@google.com\n\nAuthors\n-------\n\n- `@theacodes <https://github.com/theacodes>`_ (Thea Flowers)\n- `@dhermes <https://github.com/dhermes>`_ (Danny Hermes)\n- `@lukesneeringer <https://github.com/lukesneeringer>`_ (Luke Sneeringer)\n- `@busunkim96 <https://github.com/busunkim96>`_ (Bu Sun Kim)\n\nContributing\n------------\n\nContributions to this library are always welcome and highly encouraged.\n\nSee `CONTRIBUTING.rst`_ for more information on how to get started.\n\n.. _CONTRIBUTING.rst: https://github.com/googleapis/google-auth-library-python/blob/main/CONTRIBUTING.rst\n\nLicense\n-------\n\nApache 2.0 - See `the LICENSE`_ for more information.\n\n.. _the LICENSE: https://github.com/googleapis/google-auth-library-python/blob/main/LICENSE\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/google_auth-2.17.3.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "google-auth-oauthlib",
        "version": "1.0.0",
        "summary": "Google Authentication Library",
        "keywords": [
          "google",
          "auth",
          "oauth",
          "client",
          "oauthlib"
        ],
        "home_page": "https://github.com/GoogleCloudPlatform/google-auth-library-python-oauthlib",
        "author": "Google Cloud Platform",
        "author_email": "jonwayne+google-auth@google.com",
        "license": "Apache 2.0",
        "classifier": [
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Development Status :: 5 - Production/Stable",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: Apache Software License",
          "Operating System :: POSIX",
          "Operating System :: Microsoft :: Windows",
          "Operating System :: MacOS :: MacOS X",
          "Operating System :: OS Independent",
          "Topic :: Internet :: WWW/HTTP"
        ],
        "requires_dist": [
          "google-auth (>=2.15.0)",
          "requests-oauthlib (>=0.7.0)",
          "click (>=6.0.0) ; extra == 'tool'"
        ],
        "requires_python": ">=3.6",
        "provides_extra": [
          "tool"
        ],
        "description": "oauthlib integration for Google Auth\n====================================\n\n|pypi|\n\nThis library provides `oauthlib`_ integration with `google-auth`_.\n\n.. |build| image:: https://travis-ci.org/googleapis/google-auth-library-python-oauthlib.svg?branch=main\n   :target: https://googleapis.dev/python/google-auth-oauthlib/latest/index.html\n.. |pypi| image:: https://img.shields.io/pypi/v/google-auth-oauthlib.svg\n   :target: https://pypi.python.org/pypi/google-auth-oauthlib\n\n.. _oauthlib: https://github.com/idan/oauthlib\n.. _google-auth: https://github.com/googleapis/google-auth-library-python\n\nInstalling\n----------\n\nYou can install using `pip`_::\n\n    $ pip install google-auth-oauthlib\n\n.. _pip: https://pip.pypa.io/en/stable/\n\nDocumentation\n-------------\n\nThe latest documentation is available at `google-auth-oauthlib.googleapis.dev`_.\n\n.. _google-auth-oauthlib.googleapis.dev: https://googleapis.dev/python/google-auth-oauthlib/latest/index.html\n\nSupported Python Versions\n-------------------------\nPython >= 3.6\n\n\nUnsupported Python Versions\n---------------------------\n\nPython == 2.7, Python == 3.5.\n\nThe last version of this library compatible with Python 2.7 and 3.5 is\n`google-auth-oauthlib==0.4.1`.\n\nLicense\n-------\n\nApache 2.0 - See `the LICENSE`_ for more information.\n\n.. _the LICENSE: https://github.com/googleapis/google-auth-library-python-oauthlib/blob/main/LICENSE\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/google_auth_oauthlib-1.0.0.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "google-pasta",
        "version": "0.2.0",
        "platform": [
          "UNKNOWN"
        ],
        "summary": "pasta is an AST-based Python refactoring library",
        "keywords": [
          "python",
          "refactoring",
          "ast"
        ],
        "home_page": "https://github.com/google/pasta",
        "author": "Nick Smith",
        "author_email": "smithnick@google.com",
        "license": "Apache 2.0",
        "classifier": [
          "Development Status :: 2 - Pre-Alpha",
          "License :: OSI Approved :: Apache Software License",
          "Programming Language :: Python",
          "Programming Language :: Python :: 2.7",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.4",
          "Programming Language :: Python :: 3.5",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8"
        ],
        "requires_dist": [
          "six"
        ],
        "description": "UNKNOWN\n\n\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/google_pasta-0.2.0.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "gradio",
        "version": "3.11.0",
        "summary": "Python library for easily interacting with trained machine learning models",
        "description_content_type": "text/markdown",
        "keywords": [
          "machine learning",
          "reproducibility",
          "visualization"
        ],
        "author_email": "Abubakar Abid <team@gradio.app>, Ali Abid <team@gradio.app>, Ali Abdalla <team@gradio.app>, Dawood Khan <team@gradio.app>, Ahsen Khaliq <team@gradio.app>, Pete Allen <team@gradio.app>, Ömer Faruk Özdemir <team@gradio.app>",
        "requires_dist": [
          "aiohttp",
          "fastapi",
          "ffmpy",
          "fsspec",
          "h11<0.13,>=0.11",
          "httpx",
          "jinja2",
          "markdown-it-py[linkify,plugins]",
          "matplotlib",
          "numpy",
          "orjson",
          "pandas",
          "paramiko",
          "pillow",
          "pycryptodome",
          "pydantic",
          "pydub",
          "python-multipart",
          "pyyaml",
          "requests",
          "uvicorn",
          "websockets>=10.0"
        ],
        "requires_python": ">=3.7",
        "project_url": [
          "Homepage, https://github.com/gradio-app/gradio"
        ],
        "description": "<!-- DO NOT EDIT THIS FILE DIRECTLY. INSTEAD EDIT THE `readme_template.md` OR `guides/1)getting_started/1)quickstart.md` TEMPLATES AND THEN RUN `render_readme.py` SCRIPT. -->\n\n<div align=\"center\">\n\n  [<img src=\"https://raw.githubusercontent.com/gradio-app/gradio/main/readme_files/gradio.svg\" alt=\"gradio\" width=300>](https://gradio.app)<br>\n  <em>Build & share delightful machine learning apps easily</em>\n\n  [<img src=\"https://circleci.com/gh/gradio-app/gradio.svg?style=svg\" alt=\"circleci\">](https://circleci.com/gh/gradio-app/gradio)\n  [<img src=\"https://codecov.io/gh/gradio-app/gradio/branch/master/graph/badge.svg\" alt=\"codecov\">](https://app.codecov.io/gh/gradio-app/gradio)\n  [![PyPI](https://img.shields.io/pypi/v/gradio)](https://pypi.org/project/gradio/)\n  [![PyPI downloads](https://img.shields.io/pypi/dm/gradio)](https://pypi.org/project/gradio/)\n  ![Python version](https://img.shields.io/badge/python-3.7+-important)\n  [![Twitter follow](https://img.shields.io/twitter/follow/gradio?style=social&label=follow)](https://twitter.com/gradio)\n\n  [Website](https://gradio.app)\n  | [Documentation](https://gradio.app/docs/)\n  | [Guides](https://gradio.app/guides/)\n  | [Getting Started](https://gradio.app/getting_started/)\n  | [Examples](demo/)\n</div>\n\n# Gradio: Build Machine Learning Web Apps — in Python\n\nGradio is an open-source Python library that is used to build machine learning and data science demos and web applications.\n\nWith Gradio, you can quickly create a beautiful user interface around your machine learning models or data science workflow and let people \"try it out\" by dragging-and-dropping in their own images,\npasting text, recording their own voice, and interacting with your demo, all through the browser.\n\n![Interface montage](https://raw.githubusercontent.com/gradio-app/gradio/main/readme_files/header-image.jpg)\n\nGradio is useful for:\n\n- **Demoing** your machine learning models for clients/collaborators/users/students.\n\n- **Deploying** your models quickly with automatic shareable links and getting feedback on model performance.\n\n- **Debugging** your model interactively during development using built-in manipulation and interpretation tools.\n\n## Quickstart\n\n**Prerequisite**: Gradio requires Python 3.7 or higher, that's all!\n\n### What Does Gradio Do?\n\nOne of the *best ways to share* your machine learning model, API, or data science workflow with others is to create an **interactive app** that allows your users or colleagues to try out the demo in their browsers.\n\nGradio allows you to **build demos and share them, all in Python.** And usually in just a few lines of code! So let's get started.\n\n### Hello, World\n\nTo get Gradio running with a simple \"Hello, World\" example, follow these three steps:\n\n1\\. Install Gradio using pip:\n\n```bash\npip install gradio\n```\n\n2\\. Run the code below as a Python script or in a Jupyter Notebook (or [Google Colab](https://colab.research.google.com/drive/18ODkJvyxHutTN0P5APWyGFO_xwNcgHDZ?usp=sharing)):\n\n```python\nimport gradio as gr\n\ndef greet(name):\n    return \"Hello \" + name + \"!\"\n\ndemo = gr.Interface(fn=greet, inputs=\"text\", outputs=\"text\")\ndemo.launch()\n```\n\n\n3\\. The demo below will appear automatically within the Jupyter Notebook, or pop in a browser on [http://localhost:7860](http://localhost:7860) if running from a script:\n\n![`hello_world` demo](https://raw.githubusercontent.com/gradio-app/gradio/main/demo/hello_world/screenshot.gif)\n\n### The `Interface` Class\n\nYou'll notice that in order to make the demo, we created a `gradio.Interface`. This `Interface` class can wrap any Python function with a user interface. In the example above, we saw a simple text-based function, but the function could be anything from music generator to a tax calculator to the prediction function of a pretrained machine learning model.\n\nThe core `Interface` class is initialized with three required parameters:\n\n- `fn`: the function to wrap a UI around\n- `inputs`: which component(s) to use for the input (e.g. `\"text\"`, `\"image\"` or `\"audio\"`)\n- `outputs`: which component(s) to use for the output (e.g. `\"text\"`, `\"image\"` or `\"label\"`)\n\nLet's take a closer look at these components used to provide input and output.\n\n### Components Attributes\n\nWe saw some simple `Textbox` components in the previous examples, but what if you want to change how the UI components look or behave?\n\nLet's say you want to customize the input text field — for example, you wanted it to be larger and have a text placeholder. If we use the actual class for `Textbox` instead of using the string shortcut, you have access to much more customizability through component attributes.\n\n```python\nimport gradio as gr\n\ndef greet(name):\n    return \"Hello \" + name + \"!\"\n\ndemo = gr.Interface(\n    fn=greet,\n    inputs=gr.Textbox(lines=2, placeholder=\"Name Here...\"),\n    outputs=\"text\",\n)\ndemo.launch()\n```\n\n![`hello_world_2` demo](https://raw.githubusercontent.com/gradio-app/gradio/main/demo/hello_world_2/screenshot.gif)\n\n### Multiple Input and Output Components\n\nSuppose you had a more complex function, with multiple inputs and outputs. In the example below, we define a function that takes a string, boolean, and number, and returns a string and number. Take a look how you pass a list of input and output components.\n\n```python\nimport gradio as gr\n\ndef greet(name, is_morning, temperature):\n    salutation = \"Good morning\" if is_morning else \"Good evening\"\n    greeting = f\"{salutation} {name}. It is {temperature} degrees today\"\n    celsius = (temperature - 32) * 5 / 9\n    return greeting, round(celsius, 2)\n\ndemo = gr.Interface(\n    fn=greet,\n    inputs=[\"text\", \"checkbox\", gr.Slider(0, 100)],\n    outputs=[\"text\", \"number\"],\n)\ndemo.launch()\n```\n\n![`hello_world_3` demo](https://raw.githubusercontent.com/gradio-app/gradio/main/demo/hello_world_3/screenshot.gif)\n\nYou simply wrap the components in a list. Each component in the `inputs` list corresponds to one of the parameters of the function, in order. Each component in the `outputs` list corresponds to one of the values returned by the function, again in order.\n\n### An Image Example\n\nGradio supports many types of components, such as `Image`, `DataFrame`, `Video`, or `Label`. Let's try an image-to-image function to get a feel for these!\n\n```python\nimport numpy as np\nimport gradio as gr\n\ndef sepia(input_img):\n    sepia_filter = np.array([\n        [0.393, 0.769, 0.189], \n        [0.349, 0.686, 0.168], \n        [0.272, 0.534, 0.131]\n    ])\n    sepia_img = input_img.dot(sepia_filter.T)\n    sepia_img /= sepia_img.max()\n    return sepia_img\n\ndemo = gr.Interface(sepia, gr.Image(shape=(200, 200)), \"image\")\ndemo.launch()\n```\n\n![`sepia_filter` demo](https://raw.githubusercontent.com/gradio-app/gradio/main/demo/sepia_filter/screenshot.gif)\n\nWhen using the `Image` component as input, your function will receive a NumPy array with the shape `(width, height, 3)`, where the last dimension represents the RGB values. We'll return an image as well in the form of a NumPy array.\n\nYou can also set the datatype used by the component with the `type=` keyword argument. For example, if you wanted your function to take a file path to an image instead of a NumPy array, the input `Image` component could be written as:\n\n```python\ngr.Image(type=\"filepath\", shape=...)\n```\n\nAlso note that our input `Image` component comes with an edit button 🖉, which allows for cropping and zooming into images. Manipulating images in this way can help reveal biases or hidden flaws in a machine learning model!\n\nYou can read more about the many components and how to use them in the [Gradio docs](https://gradio.app/docs).\n\n### Blocks: More Flexibility and Control\n\nGradio offers two classes to build apps:\n\n1\\. **Interface**, that provides a high-level abstraction for creating demos that we've been discussing so far.\n\n2\\. **Blocks**, a low-level API for designing web apps with more flexible layouts and data flows. Blocks allows you to do things like feature multiple data flows and demos, control where components appear on the page, handle complex data flows (e.g. outputs can serve as inputs to other functions), and update properties/visibility of components based on user interaction — still all in Python. If this customizability is what you need, try `Blocks` instead!\n\n### Hello, Blocks\n\nLet's take a look at a simple example. Note how the API here differs from `Interface`.\n\n```python\nimport gradio as gr\n\ndef greet(name):\n    return \"Hello \" + name + \"!\"\n\nwith gr.Blocks() as demo:\n    name = gr.Textbox(label=\"Name\")\n    output = gr.Textbox(label=\"Output Box\")\n    greet_btn = gr.Button(\"Greet\")\n    greet_btn.click(fn=greet, inputs=name, outputs=output)\n\ndemo.launch()\n```\n\n![`hello_blocks` demo](https://raw.githubusercontent.com/gradio-app/gradio/main/demo/hello_blocks/screenshot.gif)\n\nThings to note:\n\n- `Blocks` are made with a `with` clause, and any component created inside this clause is automatically added to the app.\n- Components appear vertically in the app in the order they are created. (Later we will cover customizing layouts!)\n- A `Button` was created, and then a `click` event-listener was added to this button. The API for this should look familiar! Like an `Interface`, the `click` method takes a Python function, input components, and output components.\n\n### More Complexity\n\nHere's an app to give you a taste of what's possible with `Blocks`:\n\n```python\nimport numpy as np\nimport gradio as gr\n\ndef flip_text(x):\n    return x[::-1]\n\ndef flip_image(x):\n    return np.fliplr(x)\n\nwith gr.Blocks() as demo:\n    gr.Markdown(\"Flip text or image files using this demo.\")\n    with gr.Tabs():\n        with gr.TabItem(\"Flip Text\"):\n            text_input = gr.Textbox()\n            text_output = gr.Textbox()\n            text_button = gr.Button(\"Flip\")\n        with gr.TabItem(\"Flip Image\"):\n            with gr.Row():\n                image_input = gr.Image()\n                image_output = gr.Image()\n            image_button = gr.Button(\"Flip\")\n    \n    text_button.click(flip_text, inputs=text_input, outputs=text_output)\n    image_button.click(flip_image, inputs=image_input, outputs=image_output)\n    \ndemo.launch()\n```\n\n![`blocks_flipper` demo](https://raw.githubusercontent.com/gradio-app/gradio/main/demo/blocks_flipper/screenshot.gif)\n\nA lot more going on here! We'll cover how to create complex `Blocks` apps like this in the [building with blocks](https://github.com/gradio-app/gradio/tree/main/guides/3\\)building_with_blocks) section for you.\n\nCongrats, you're now familiar with the basics of Gradio! 🥳 Go to our [next guide](https://gradio.app/key_features) to learn more about the key features of Gradio.\n\n\n## Open Source Stack\n\nGradio is built with many wonderful open-source libraries, please support them as well!\n\n[<img src=\"https://raw.githubusercontent.com/gradio-app/gradio/main/readme_files/huggingface_mini.svg\" alt=\"huggingface\" height=40>](https://huggingface.co)\n[<img src=\"https://raw.githubusercontent.com/gradio-app/gradio/main/readme_files/python.svg\" alt=\"python\" height=40>](https://www.python.org)\n[<img src=\"https://raw.githubusercontent.com/gradio-app/gradio/main/readme_files/fastapi.svg\" alt=\"fastapi\" height=40>](https://fastapi.tiangolo.com)\n[<img src=\"https://raw.githubusercontent.com/gradio-app/gradio/main/readme_files/encode.svg\" alt=\"encode\" height=40>](https://www.encode.io)\n[<img src=\"https://raw.githubusercontent.com/gradio-app/gradio/main/readme_files/svelte.svg\" alt=\"svelte\" height=40>](https://svelte.dev)\n[<img src=\"https://raw.githubusercontent.com/gradio-app/gradio/main/readme_files/vite.svg\" alt=\"vite\" height=40>](https://vitejs.dev)\n[<img src=\"https://raw.githubusercontent.com/gradio-app/gradio/main/readme_files/pnpm.svg\" alt=\"pnpm\" height=40>](https://pnpm.io)\n[<img src=\"https://raw.githubusercontent.com/gradio-app/gradio/main/readme_files/tailwind.svg\" alt=\"tailwind\" height=40>](https://tailwindcss.com)\n\n## License\n\nGradio is licensed under the Apache License 2.0 found in the [LICENSE](LICENSE) file in the root directory of this repository.\n\n## Citation\n\nAlso check out the paper *[Gradio: Hassle-Free Sharing and Testing of ML Models in the Wild](https://arxiv.org/abs/1906.02569), ICML HILL 2019*, and please cite it if you use Gradio in your work.\n\n```\n@article{abid2019gradio,\n  title = {Gradio: Hassle-Free Sharing and Testing of ML Models in the Wild},\n  author = {Abid, Abubakar and Abdalla, Ali and Abid, Ali and Khan, Dawood and Alfozan, Abdulrahman and Zou, James},\n  journal = {arXiv preprint arXiv:1906.02569},\n  year = {2019},\n}\n```\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/gradio-3.11.0.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "greenlet",
        "version": "2.0.2",
        "platform": [
          "any"
        ],
        "summary": "Lightweight in-process concurrent programming",
        "description_content_type": "text/x-rst",
        "keywords": [
          "greenlet",
          "coroutine",
          "concurrency",
          "threads",
          "cooperative"
        ],
        "home_page": "https://greenlet.readthedocs.io/",
        "author": "Alexey Borzenkov",
        "author_email": "snaury@gmail.com",
        "maintainer": "Jason Madden",
        "maintainer_email": "jason@seecoresoftware.com",
        "license": "MIT License",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: MIT License",
          "Natural Language :: English",
          "Programming Language :: C",
          "Programming Language :: Python",
          "Programming Language :: Python :: 2",
          "Programming Language :: Python :: 2.7",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.5",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Operating System :: OS Independent",
          "Topic :: Software Development :: Libraries :: Python Modules"
        ],
        "requires_dist": [
          "Sphinx ; extra == 'docs'",
          "docutils (<0.18) ; (python_version < \"3\") and extra == 'docs'",
          "objgraph ; extra == 'test'",
          "psutil ; extra == 'test'"
        ],
        "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*",
        "project_url": [
          "Bug Tracker, https://github.com/python-greenlet/greenlet/issues",
          "Source Code, https://github.com/python-greenlet/greenlet/",
          "Documentation, https://greenlet.readthedocs.io/"
        ],
        "provides_extra": [
          "docs",
          "test"
        ],
        "description": ".. This file is included into docs/history.rst\n\n.. image:: https://github.com/python-greenlet/greenlet/workflows/tests/badge.svg\n   :target: https://github.com/python-greenlet/greenlet/actions\n\nGreenlets are lightweight coroutines for in-process concurrent\nprogramming.\n\nThe \"greenlet\" package is a spin-off of `Stackless`_, a version of\nCPython that supports micro-threads called \"tasklets\". Tasklets run\npseudo-concurrently (typically in a single or a few OS-level threads)\nand are synchronized with data exchanges on \"channels\".\n\nA \"greenlet\", on the other hand, is a still more primitive notion of\nmicro-thread with no implicit scheduling; coroutines, in other words.\nThis is useful when you want to control exactly when your code runs.\nYou can build custom scheduled micro-threads on top of greenlet;\nhowever, it seems that greenlets are useful on their own as a way to\nmake advanced control flow structures. For example, we can recreate\ngenerators; the difference with Python's own generators is that our\ngenerators can call nested functions and the nested functions can\nyield values too. (Additionally, you don't need a \"yield\" keyword. See\nthe example in `test_generator.py\n<https://github.com/python-greenlet/greenlet/blob/adca19bf1f287b3395896a8f41f3f4fd1797fdc7/src/greenlet/tests/test_generator.py#L1>`_).\n\nGreenlets are provided as a C extension module for the regular unmodified\ninterpreter.\n\n.. _`Stackless`: http://www.stackless.com\n\n\nWho is using Greenlet?\n======================\n\nThere are several libraries that use Greenlet as a more flexible\nalternative to Python's built in coroutine support:\n\n - `Concurrence`_\n - `Eventlet`_\n - `Gevent`_\n\n.. _Concurrence: http://opensource.hyves.org/concurrence/\n.. _Eventlet: http://eventlet.net/\n.. _Gevent: http://www.gevent.org/\n\nGetting Greenlet\n================\n\nThe easiest way to get Greenlet is to install it with pip::\n\n  pip install greenlet\n\n\nSource code archives and binary distributions are available on the\npython package index at https://pypi.org/project/greenlet\n\nThe source code repository is hosted on github:\nhttps://github.com/python-greenlet/greenlet\n\nDocumentation is available on readthedocs.org:\nhttps://greenlet.readthedocs.io\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/greenlet-2.0.2.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "grpcio",
        "version": "1.54.0",
        "summary": "HTTP/2-based RPC framework",
        "description_content_type": "text/x-rst",
        "home_page": "https://grpc.io",
        "author": "The gRPC Authors",
        "author_email": "grpc-io@googlegroups.com",
        "license": "Apache License 2.0",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "License :: OSI Approved :: Apache Software License"
        ],
        "requires_dist": [
          "grpcio-tools (>=1.54.0) ; extra == 'protobuf'"
        ],
        "requires_python": ">=3.7",
        "project_url": [
          "Source Code, https://github.com/grpc/grpc",
          "Bug Tracker, https://github.com/grpc/grpc/issues",
          "Documentation, https://grpc.github.io/grpc/python"
        ],
        "provides_extra": [
          "protobuf"
        ],
        "description": "gRPC Python\n===========\n\n|compat_check_pypi|\n\nPackage for gRPC Python.\n\n.. |compat_check_pypi| image:: https://python-compatibility-tools.appspot.com/one_badge_image?package=grpcio\n   :target: https://python-compatibility-tools.appspot.com/one_badge_target?package=grpcio\n\nSupported Python Versions\n-------------------------\nPython >= 3.7\n\nInstallation\n------------\n\ngRPC Python is available for Linux, macOS, and Windows.\n\nInstalling From PyPI\n~~~~~~~~~~~~~~~~~~~~\n\nIf you are installing locally...\n\n::\n\n  $ pip install grpcio\n\nElse system wide (on Ubuntu)...\n\n::\n\n  $ sudo pip install grpcio\n\nIf you're on Windows make sure that you installed the :code:`pip.exe` component\nwhen you installed Python (if not go back and install it!) then invoke:\n\n::\n\n  $ pip.exe install grpcio\n\nWindows users may need to invoke :code:`pip.exe` from a command line ran as\nadministrator.\n\nn.b. On Windows and on Mac OS X one *must* have a recent release of :code:`pip`\nto retrieve the proper wheel from PyPI. Be sure to upgrade to the latest\nversion!\n\nInstalling From Source\n~~~~~~~~~~~~~~~~~~~~~~\n\nBuilding from source requires that you have the Python headers (usually a\npackage named :code:`python-dev`).\n\n::\n\n  $ export REPO_ROOT=grpc  # REPO_ROOT can be any directory of your choice\n  $ git clone -b RELEASE_TAG_HERE https://github.com/grpc/grpc $REPO_ROOT\n  $ cd $REPO_ROOT\n  $ git submodule update --init\n\n  # For the next two commands do `sudo pip install` if you get permission-denied errors\n  $ pip install -rrequirements.txt\n  $ GRPC_PYTHON_BUILD_WITH_CYTHON=1 pip install .\n\nYou cannot currently install Python from source on Windows. Things might work\nout for you in MSYS2 (follow the Linux instructions), but it isn't officially\nsupported at the moment.\n\nTroubleshooting\n~~~~~~~~~~~~~~~\n\nHelp, I ...\n\n* **... see a** :code:`pkg_resources.VersionConflict` **when I try to install\n  grpc**\n\n  This is likely because :code:`pip` doesn't own the offending dependency,\n  which in turn is likely because your operating system's package manager owns\n  it. You'll need to force the installation of the dependency:\n\n  :code:`pip install --ignore-installed $OFFENDING_DEPENDENCY`\n\n  For example, if you get an error like the following:\n\n  ::\n\n    Traceback (most recent call last):\n    File \"<string>\", line 17, in <module>\n     ...\n    File \"/usr/lib/python2.7/dist-packages/pkg_resources.py\", line 509, in find\n      raise VersionConflict(dist, req)\n    pkg_resources.VersionConflict: (six 1.8.0 (/usr/lib/python2.7/dist-packages), Requirement.parse('six>=1.10'))\n\n  You can fix it by doing:\n\n  ::\n\n    sudo pip install --ignore-installed six\n\n* **... see the following error on some platforms**\n\n  ::\n\n    /tmp/pip-build-U8pSsr/cython/Cython/Plex/Scanners.c:4:20: fatal error: Python.h: No such file or directory\n    #include \"Python.h\"\n                    ^\n    compilation terminated.\n\n  You can fix it by installing `python-dev` package. i.e\n\n  ::\n\n    sudo apt-get install python-dev\n\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/grpcio-1.54.0.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "h11",
        "version": "0.12.0",
        "platform": [
          "UNKNOWN"
        ],
        "summary": "A pure-Python, bring-your-own-I/O implementation of HTTP/1.1",
        "home_page": "https://github.com/python-hyper/h11",
        "author": "Nathaniel J. Smith",
        "author_email": "njs@pobox.com",
        "license": "MIT",
        "classifier": [
          "Development Status :: 3 - Alpha",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: MIT License",
          "Programming Language :: Python :: Implementation :: CPython",
          "Programming Language :: Python :: Implementation :: PyPy",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3 :: Only",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Topic :: Internet :: WWW/HTTP",
          "Topic :: System :: Networking"
        ],
        "requires_python": ">=3.6",
        "description": "h11\n===\n\n.. image:: https://travis-ci.org/python-hyper/h11.svg?branch=master\n   :target: https://travis-ci.org/python-hyper/h11\n   :alt: Automated test status\n\n.. image:: https://codecov.io/gh/python-hyper/h11/branch/master/graph/badge.svg\n   :target: https://codecov.io/gh/python-hyper/h11\n   :alt: Test coverage\n\n.. image:: https://readthedocs.org/projects/h11/badge/?version=latest\n   :target: http://h11.readthedocs.io/en/latest/?badge=latest\n   :alt: Documentation Status\n\nThis is a little HTTP/1.1 library written from scratch in Python,\nheavily inspired by `hyper-h2 <https://hyper-h2.readthedocs.io/>`_.\n\nIt's a \"bring-your-own-I/O\" library; h11 contains no IO code\nwhatsoever. This means you can hook h11 up to your favorite network\nAPI, and that could be anything you want: synchronous, threaded,\nasynchronous, or your own implementation of `RFC 6214\n<https://tools.ietf.org/html/rfc6214>`_ -- h11 won't judge you.\n(Compare this to the current state of the art, where every time a `new\nnetwork API <https://trio.readthedocs.io/>`_ comes along then someone\ngets to start over reimplementing the entire HTTP protocol from\nscratch.) Cory Benfield made an `excellent blog post describing the\nbenefits of this approach\n<https://lukasa.co.uk/2015/10/The_New_Hyper/>`_, or if you like video\nthen here's his `PyCon 2016 talk on the same theme\n<https://www.youtube.com/watch?v=7cC3_jGwl_U>`_.\n\nThis also means that h11 is not immediately useful out of the box:\nit's a toolkit for building programs that speak HTTP, not something\nthat could directly replace ``requests`` or ``twisted.web`` or\nwhatever. But h11 makes it much easier to implement something like\n``requests`` or ``twisted.web``.\n\nAt a high level, working with h11 goes like this:\n\n1) First, create an ``h11.Connection`` object to track the state of a\n   single HTTP/1.1 connection.\n\n2) When you read data off the network, pass it to\n   ``conn.receive_data(...)``; you'll get back a list of objects\n   representing high-level HTTP \"events\".\n\n3) When you want to send a high-level HTTP event, create the\n   corresponding \"event\" object and pass it to ``conn.send(...)``;\n   this will give you back some bytes that you can then push out\n   through the network.\n\nFor example, a client might instantiate and then send a\n``h11.Request`` object, then zero or more ``h11.Data`` objects for the\nrequest body (e.g., if this is a POST), and then a\n``h11.EndOfMessage`` to indicate the end of the message. Then the\nserver would then send back a ``h11.Response``, some ``h11.Data``, and\nits own ``h11.EndOfMessage``. If either side violates the protocol,\nyou'll get a ``h11.ProtocolError`` exception.\n\nh11 is suitable for implementing both servers and clients, and has a\npleasantly symmetric API: the events you send as a client are exactly\nthe ones that you receive as a server and vice-versa.\n\n`Here's an example of a tiny HTTP client\n<https://github.com/python-hyper/h11/blob/master/examples/basic-client.py>`_\n\nIt also has `a fine manual <https://h11.readthedocs.io/>`_.\n\nFAQ\n---\n\n*Whyyyyy?*\n\nI wanted to play with HTTP in `Curio\n<https://curio.readthedocs.io/en/latest/tutorial.html>`__ and `Trio\n<https://trio.readthedocs.io>`__, which at the time didn't have any\nHTTP libraries. So I thought, no big deal, Python has, like, a dozen\ndifferent implementations of HTTP, surely I can find one that's\nreusable. I didn't find one, but I did find Cory's call-to-arms\nblog-post. So I figured, well, fine, if I have to implement HTTP from\nscratch, at least I can make sure no-one *else* has to ever again.\n\n*Should I use it?*\n\nMaybe. You should be aware that it's a very young project. But, it's\nfeature complete and has an exhaustive test-suite and complete docs,\nso the next step is for people to try using it and see how it goes\n:-). If you do then please let us know -- if nothing else we'll want\nto talk to you before making any incompatible changes!\n\n*What are the features/limitations?*\n\nRoughly speaking, it's trying to be a robust, complete, and non-hacky\nimplementation of the first \"chapter\" of the HTTP/1.1 spec: `RFC 7230:\nHTTP/1.1 Message Syntax and Routing\n<https://tools.ietf.org/html/rfc7230>`_. That is, it mostly focuses on\nimplementing HTTP at the level of taking bytes on and off the wire,\nand the headers related to that, and tries to be anal about spec\nconformance. It doesn't know about higher-level concerns like URL\nrouting, conditional GETs, cross-origin cookie policies, or content\nnegotiation. But it does know how to take care of framing,\ncross-version differences in keep-alive handling, and the \"obsolete\nline folding\" rule, so you can focus your energies on the hard /\ninteresting parts for your application, and it tries to support the\nfull specification in the sense that any useful HTTP/1.1 conformant\napplication should be able to use h11.\n\nIt's pure Python, and has no dependencies outside of the standard\nlibrary.\n\nIt has a test suite with 100.0% coverage for both statements and\nbranches.\n\nCurrently it supports Python 3 (testing on 3.6-3.9) and PyPy 3.\nThe last Python 2-compatible version was h11 0.11.x.\n(Originally it had a Cython wrapper for `http-parser\n<https://github.com/nodejs/http-parser>`_ and a beautiful nested state\nmachine implemented with ``yield from`` to postprocess the output. But\nI had to take these out -- the new *parser* needs fewer lines-of-code\nthan the old *parser wrapper*, is written in pure Python, uses no\nexotic language syntax, and has more features. It's sad, really; that\nold state machine was really slick. I just need a few sentences here\nto mourn that.)\n\nI don't know how fast it is. I haven't benchmarked or profiled it yet,\nso it's probably got a few pointless hot spots, and I've been trying\nto err on the side of simplicity and robustness instead of\nmicro-optimization. But at the architectural level I tried hard to\navoid fundamentally bad decisions, e.g., I believe that all the\nparsing algorithms remain linear-time even in the face of pathological\ninput like slowloris, and there are no byte-by-byte loops. (I also\nbelieve that it maintains bounded memory usage in the face of\narbitrary/pathological input.)\n\nThe whole library is ~800 lines-of-code. You can read and understand\nthe whole thing in less than an hour. Most of the energy invested in\nthis so far has been spent on trying to keep things simple by\nminimizing special-cases and ad hoc state manipulation; even though it\nis now quite small and simple, I'm still annoyed that I haven't\nfigured out how to make it even smaller and simpler. (Unfortunately,\nHTTP does not lend itself to simplicity.)\n\nThe API is ~feature complete and I don't expect the general outlines\nto change much, but you can't judge an API's ergonomics until you\nactually document and use it, so I'd expect some changes in the\ndetails.\n\n*How do I try it?*\n\n.. code-block:: sh\n\n  $ pip install h11\n  $ git clone git@github.com:python-hyper/h11\n  $ cd h11/examples\n  $ python basic-client.py\n\nand go from there.\n\n*License?*\n\nMIT\n\n*Code of conduct?*\n\nContributors are requested to follow our `code of conduct\n<https://github.com/python-hyper/h11/blob/master/CODE_OF_CONDUCT.md>`_ in\nall project spaces.\n\n\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/h11-0.12.0.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "h5py",
        "version": "3.8.0",
        "summary": "Read and write HDF5 files from Python",
        "description_content_type": "text/x-rst",
        "author_email": "Andrew Collette <andrew.collette@gmail.com>",
        "maintainer_email": "Thomas Kluyver <thomas@kluyver.me.uk>, Thomas A Caswell <tcaswell@bnl.gov>",
        "license": "BSD-3-Clause",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Intended Audience :: Developers",
          "Intended Audience :: Information Technology",
          "Intended Audience :: Science/Research",
          "License :: OSI Approved :: BSD License",
          "Operating System :: Unix",
          "Operating System :: POSIX :: Linux",
          "Operating System :: MacOS :: MacOS X",
          "Operating System :: Microsoft :: Windows",
          "Programming Language :: Cython",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: Implementation :: CPython",
          "Topic :: Scientific/Engineering",
          "Topic :: Database",
          "Topic :: Software Development :: Libraries :: Python Modules"
        ],
        "requires_dist": [
          "numpy (>=1.14.5)"
        ],
        "requires_python": ">=3.7",
        "project_url": [
          "Homepage, https://www.h5py.org/",
          "Source, https://github.com/h5py/h5py",
          "Documentation, https://docs.h5py.org/en/stable/",
          "Release notes, https://docs.h5py.org/en/stable/whatsnew/index.html",
          "Discussion forum, https://forum.hdfgroup.org/c/hdf-tools/h5py"
        ],
        "description": "The h5py package provides both a high- and low-level interface to the HDF5\nlibrary from Python. The low-level interface is intended to be a complete\nwrapping of the HDF5 API, while the high-level component supports  access to\nHDF5 files, datasets and groups using established Python and NumPy concepts.\n\nA strong emphasis on automatic conversion between Python (Numpy) datatypes and\ndata structures and their HDF5 equivalents vastly simplifies the process of\nreading and writing data from Python.\n\nWheels are provided for several popular platforms, with an included copy of\nthe HDF5 library (usually the latest version when h5py is released).\n\nYou can also `build h5py from source\n<https://docs.h5py.org/en/stable/build.html#source-installation>`_\nwith any HDF5 stable release from version 1.8.4 onwards, although naturally new\nHDF5 versions released after this version of h5py may not work.\nOdd-numbered minor versions of HDF5 (e.g. 1.13) are experimental, and may not\nbe supported.\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/h5py-3.8.0.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "httpcore",
        "version": "0.15.0",
        "summary": "A minimal low-level HTTP client.",
        "description_content_type": "text/markdown",
        "home_page": "https://github.com/encode/httpcore",
        "author": "Tom Christie",
        "author_email": "tom@tomchristie.com",
        "license": "BSD",
        "classifier": [
          "Development Status :: 3 - Alpha",
          "Environment :: Web Environment",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: BSD License",
          "Operating System :: OS Independent",
          "Topic :: Internet :: WWW/HTTP",
          "Framework :: AsyncIO",
          "Framework :: Trio",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3 :: Only"
        ],
        "requires_dist": [
          "h11 (<0.13,>=0.11)",
          "sniffio (==1.*)",
          "anyio (==3.*)",
          "certifi",
          "h2 (<5,>=3) ; extra == 'http2'",
          "socksio (==1.*) ; extra == 'socks'"
        ],
        "requires_python": ">=3.7",
        "project_url": [
          "Documentation, https://www.encode.io/httpcore",
          "Source, https://github.com/encode/httpcore"
        ],
        "provides_extra": [
          "http2",
          "socks"
        ],
        "description": "# HTTP Core\n\n[![Test Suite](https://github.com/encode/httpcore/workflows/Test%20Suite/badge.svg)](https://github.com/encode/httpcore/actions)\n[![Package version](https://badge.fury.io/py/httpcore.svg)](https://pypi.org/project/httpcore/)\n\n> *Do one thing, and do it well.*\n\nThe HTTP Core package provides a minimal low-level HTTP client, which does\none thing only. Sending HTTP requests.\n\nIt does not provide any high level model abstractions over the API,\ndoes not handle redirects, multipart uploads, building authentication headers,\ntransparent HTTP caching, URL parsing, session cookie handling,\ncontent or charset decoding, handling JSON, environment based configuration\ndefaults, or any of that Jazz.\n\nSome things HTTP Core does do:\n\n* Sending HTTP requests.\n* Thread-safe / task-safe connection pooling.\n* HTTP(S) proxy & SOCKS proxy support.\n* Supports HTTP/1.1 and HTTP/2.\n* Provides both sync and async interfaces.\n* Async backend support for `asyncio` and `trio`.\n\n## Requirements\n\nPython 3.7+\n\n## Installation\n\nFor HTTP/1.1 only support, install with:\n\n```shell\n$ pip install httpcore\n```\n\nFor HTTP/1.1 and HTTP/2 support, install with:\n\n```shell\n$ pip install httpcore[http2]\n```\n\nFor SOCKS proxy support, install with:\n\n```shell\n$ pip install httpcore[socks]\n```\n\n# Sending requests\n\nSend an HTTP request:\n\n```python\nimport httpcore\n\nresponse = httpcore.request(\"GET\", \"https://www.example.com/\")\n\nprint(response)\n# <Response [200]>\nprint(response.status)\n# 200\nprint(response.headers)\n# [(b'Accept-Ranges', b'bytes'), (b'Age', b'557328'), (b'Cache-Control', b'max-age=604800'), ...]\nprint(response.content)\n# b'<!doctype html>\\n<html>\\n<head>\\n<title>Example Domain</title>\\n\\n<meta charset=\"utf-8\"/>\\n ...'\n```\n\nThe top-level `httpcore.request()` function is provided for convenience. In practice whenever you're working with `httpcore` you'll want to use the connection pooling functionality that it provides.\n\n```python\nimport httpcore\n\nhttp = httpcore.ConnectionPool()\nresponse = http.request(\"GET\", \"https://www.example.com/\")\n```\n\nOnce you're ready to get going, [head over to the documentation](https://www.encode.io/httpcore/).\n\n## Motivation\n\nYou *probably* don't want to be using HTTP Core directly. It might make sense if\nyou're writing something like a proxy service in Python, and you just want\nsomething at the lowest possible level, but more typically you'll want to use\na higher level client library, such as `httpx`.\n\nThe motivation for `httpcore` is:\n\n* To provide a reusable low-level client library, that other packages can then build on top of.\n* To provide a *really clear interface split* between the networking code and client logic,\n  so that each is easier to understand and reason about in isolation.\n\n\n# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/).\n\n## 0.15.0 (May 17th, 2022)\n\n- Drop Python 3.6 support (#535)\n- Ensure HTTP proxy CONNECT requests include `timeout` configuration. (#506)\n- Switch to explicit `typing.Optional` for type hints (#513)\n- For `trio` map OSError exceptions to `ConnectError` (#543)\n\n## 0.14.7 (February 4th, 2022)\n\n- Requests which raise a PoolTimeout need to be removed from the pool queue. (#502)\n- Fix AttributeError that happened when Socks5Connection were terminated. (#501)\n\n## 0.14.6 (February 1st, 2022)\n\n- Fix SOCKS support for `http://` URLs. (#492)\n- Resolve race condition around exceptions during streaming a response. (#491)\n\n## 0.14.5 (January 18th, 2022)\n\n- SOCKS proxy support. (#478)\n- Add proxy_auth argument to HTTPProxy (#481)\n- Improve error message on 'RemoteProtocolError' exception when server disconnects without sending a response (#479)\n\n## 0.14.4 (January 5th, 2022)\n\n- Support HTTP/2 on HTTPS tunnelling proxies. (#468)\n- Fix proxy headers missing on HTTP forwarding. (#456)\n- Only instantiate SSL context if required. (#457)\n- More robust HTTP/2 handling. (#253, #439, #440, #441)\n\n## 0.14.3 (November 17th, 2021)\n\n- Fix race condition when removing closed connections from the pool (#437)\n\n## 0.14.2 (November 16th, 2021)\n\n- Failed connections no longer remain in the pool. (Pull #433)\n\n## 0.14.1 (November 12th, 2021)\n\n- `max_connections` becomes optional. (Pull #429)\n- `certifi` is now included in the install dependancies. (Pull #428)\n- `h2` is now strictly optional. (Pull #428)\n\n## 0.14.0 (November 11th, 2021)\n\nThe 0.14 release is a complete reworking of `httpcore`, comprehensively addressing some underlying issues in the connection pooling, as well as substantially redesigning the API to be more user friendly.\n\nSome of the lower-level API design also makes the components more easily testable in isolation, and the package now has 100% test coverage.\n\nSee [discussion #419](https://github.com/encode/httpcore/discussions/419) for a little more background.\n\nThere's some other neat bits in there too, such as the \"trace\" extension, which gives a hook into inspecting the internal events that occur during the request/response cycle. This extension is needed for the HTTPX cli, in order to...\n\n* Log the point at which the connection is established, and the IP/port on which it is made.\n* Determine if the outgoing request should log as HTTP/1.1 or HTTP/2, rather than having to assume it's HTTP/2 if the --http2 flag was passed. (Which may not actually be true.)\n* Log SSL version info / certificate info.\n\nNote that `curio` support is not currently available in 0.14.0. If you're using `httpcore` with `curio` please get in touch, so we can assess if we ought to prioritize it as a feature or not.\n\n## 0.13.7 (September 13th, 2021)\n\n- Fix broken error messaging when URL scheme is missing, or a non HTTP(S) scheme is used. (Pull #403)\n\n## 0.13.6 (June 15th, 2021)\n\n### Fixed\n\n- Close sockets when read or write timeouts occur. (Pull #365)\n\n## 0.13.5 (June 14th, 2021)\n\n### Fixed\n\n- Resolved niggles with AnyIO EOF behaviours. (Pull #358, #362)\n\n## 0.13.4 (June 9th, 2021)\n\n### Added\n\n- Improved error messaging when URL scheme is missing, or a non HTTP(S) scheme is used. (Pull #354)\n\n### Fixed\n\n- Switched to `anyio` as the default backend implementation when running with `asyncio`. Resolves some awkward [TLS timeout issues](https://github.com/encode/httpx/discussions/1511).\n\n## 0.13.3 (May 6th, 2021)\n\n### Added\n\n- Support HTTP/2 prior knowledge, using `httpcore.SyncConnectionPool(http1=False)`. (Pull #333)\n\n### Fixed\n\n- Handle cases where environment does not provide `select.poll` support. (Pull #331)\n\n## 0.13.2 (April 29th, 2021)\n\n### Added\n\n- Improve error message for specific case of `RemoteProtocolError` where server disconnects without sending a response. (Pull #313)\n\n## 0.13.1 (April 28th, 2021)\n\n### Fixed\n\n- More resiliant testing for closed connections. (Pull #311)\n- Don't raise exceptions on ungraceful connection closes. (Pull #310)\n\n## 0.13.0 (April 21st, 2021)\n\nThe 0.13 release updates the core API in order to match the HTTPX Transport API,\nintroduced in HTTPX 0.18 onwards.\n\nAn example of making requests with the new interface is:\n\n```python\nwith httpcore.SyncConnectionPool() as http:\n    status_code, headers, stream, extensions = http.handle_request(\n        method=b'GET',\n        url=(b'https', b'example.org', 443, b'/'),\n        headers=[(b'host', b'example.org'), (b'user-agent', b'httpcore')]\n        stream=httpcore.ByteStream(b''),\n        extensions={}\n    )\n    body = stream.read()\n    print(status_code, body)\n```\n\n### Changed\n\n- The `.request()` method is now `handle_request()`. (Pull #296)\n- The `.arequest()` method is now `.handle_async_request()`. (Pull #296)\n- The `headers` argument is no longer optional. (Pull #296)\n- The `stream` argument is no longer optional. (Pull #296)\n- The `ext` argument is now named `extensions`, and is no longer optional. (Pull #296)\n- The `\"reason\"` extension keyword is now named `\"reason_phrase\"`. (Pull #296)\n- The `\"reason_phrase\"` and `\"http_version\"` extensions now use byte strings for their values. (Pull #296)\n- The `httpcore.PlainByteStream()` class becomes `httpcore.ByteStream()`. (Pull #296)\n\n### Added\n\n- Streams now support a `.read()` interface. (Pull #296)\n\n### Fixed\n\n- Task cancellation no longer leaks connections from the connection pool. (Pull #305)\n\n## 0.12.3 (December 7th, 2020)\n\n### Fixed\n\n- Abort SSL connections on close rather than waiting for remote EOF when using `asyncio`.  (Pull #167)\n- Fix exception raised in case of connect timeouts when using the `anyio` backend. (Pull #236)\n- Fix `Host` header precedence for `:authority` in HTTP/2. (Pull #241, #243)\n- Handle extra edge case when detecting for socket readability when using `asyncio`. (Pull #242, #244)\n- Fix `asyncio` SSL warning when using proxy tunneling. (Pull #249)\n\n## 0.12.2 (November 20th, 2020)\n\n### Fixed\n\n- Properly wrap connect errors on the asyncio backend. (Pull #235)\n- Fix `ImportError` occurring on Python 3.9 when using the HTTP/1.1 sync client in a multithreaded context. (Pull #237)\n\n## 0.12.1 (November 7th, 2020)\n\n### Added\n\n- Add connect retries. (Pull #221)\n\n### Fixed\n\n- Tweak detection of dropped connections, resolving an issue with open files limits on Linux. (Pull #185)\n- Avoid leaking connections when establishing an HTTP tunnel to a proxy has failed. (Pull #223)\n- Properly wrap OS errors when using `trio`. (Pull #225)\n\n## 0.12.0 (October 6th, 2020)\n\n### Changed\n\n- HTTP header casing is now preserved, rather than always sent in lowercase. (#216 and python-hyper/h11#104)\n\n### Added\n\n- Add Python 3.9 to officially supported versions.\n\n### Fixed\n\n- Gracefully handle a stdlib asyncio bug when a connection is closed while it is in a paused-for-reading state. (#201)\n\n## 0.11.1 (September 28nd, 2020)\n\n### Fixed\n\n- Add await to async semaphore release() coroutine (#197)\n- Drop incorrect curio classifier (#192)\n\n## 0.11.0 (September 22nd, 2020)\n\nThe Transport API with 0.11.0 has a couple of significant changes.\n\nFirstly we've moved changed the request interface in order to allow extensions, which will later enable us to support features\nsuch as trailing headers, HTTP/2 server push, and CONNECT/Upgrade connections.\n\nThe interface changes from:\n\n```python\ndef request(method, url, headers, stream, timeout):\n    return (http_version, status_code, reason, headers, stream)\n```\n\nTo instead including an optional dictionary of extensions on the request and response:\n\n```python\ndef request(method, url, headers, stream, ext):\n    return (status_code, headers, stream, ext)\n```\n\nHaving an open-ended extensions point will allow us to add later support for various optional features, that wouldn't otherwise be supported without these API changes.\n\nIn particular:\n\n* Trailing headers support.\n* HTTP/2 Server Push\n* sendfile.\n* Exposing raw connection on CONNECT, Upgrade, HTTP/2 bi-di streaming.\n* Exposing debug information out of the API, including template name, template context.\n\nCurrently extensions are limited to:\n\n* request: `timeout` - Optional. Timeout dictionary.\n* response: `http_version` - Optional. Include the HTTP version used on the response.\n* response: `reason` - Optional. Include the reason phrase used on the response. Only valid with HTTP/1.*.\n\nSee https://github.com/encode/httpx/issues/1274#issuecomment-694884553 for the history behind this.\n\nSecondly, the async version of `request` is now namespaced as `arequest`.\n\nThis allows concrete transports to support both sync and async implementations on the same class.\n\n### Added\n\n- Add curio support. (Pull #168)\n- Add anyio support, with `backend=\"anyio\"`. (Pull #169)\n\n### Changed\n\n- Update the Transport API to use 'ext' for optional extensions. (Pull #190)\n- Update the Transport API to use `.request` and `.arequest` so implementations can support both sync and async. (Pull #189)\n\n## 0.10.2 (August 20th, 2020)\n\n### Added\n\n- Added Unix Domain Socket support. (Pull #139)\n\n### Fixed\n\n- Always include the port on proxy CONNECT requests. (Pull #154)\n- Fix `max_keepalive_connections` configuration. (Pull #153)\n- Fixes behaviour in HTTP/1.1 where server disconnects can be used to signal the end of the response body. (Pull #164)\n\n## 0.10.1 (August 7th, 2020)\n\n- Include `max_keepalive_connections` on `AsyncHTTPProxy`/`SyncHTTPProxy` classes.\n\n## 0.10.0 (August 7th, 2020)\n\nThe most notable change in the 0.10.0 release is that HTTP/2 support is now fully optional.\n\nUse either `pip install httpcore` for HTTP/1.1 support only, or `pip install httpcore[http2]` for HTTP/1.1 and HTTP/2 support.\n\n### Added\n\n- HTTP/2 support becomes optional. (Pull #121, #130)\n- Add `local_address=...` support. (Pull #100, #134)\n- Add `PlainByteStream`, `IteratorByteStream`, `AsyncIteratorByteStream`. The `AsyncByteSteam` and `SyncByteStream` classes are now pure interface classes. (#133)\n- Add `LocalProtocolError`, `RemoteProtocolError` exceptions. (Pull #129)\n- Add `UnsupportedProtocol` exception. (Pull #128)\n- Add `.get_connection_info()` method. (Pull #102, #137)\n- Add better TRACE logs. (Pull #101)\n\n### Changed\n\n- `max_keepalive` is deprecated in favour of `max_keepalive_connections`. (Pull #140)\n\n### Fixed\n\n- Improve handling of server disconnects. (Pull #112)\n\n## 0.9.1 (May 27th, 2020)\n\n### Fixed\n\n- Proper host resolution for sync case, including IPv6 support. (Pull #97)\n- Close outstanding connections when connection pool is closed. (Pull #98)\n\n## 0.9.0 (May 21th, 2020)\n\n### Changed\n\n- URL port becomes an `Optional[int]` instead of `int`. (Pull #92)\n\n### Fixed\n\n- Honor HTTP/2 max concurrent streams settings. (Pull #89, #90)\n- Remove incorrect debug log. (Pull #83)\n\n## 0.8.4 (May 11th, 2020)\n\n### Added\n\n- Logging via HTTPCORE_LOG_LEVEL and HTTPX_LOG_LEVEL environment variables\nand TRACE level logging. (Pull #79)\n\n### Fixed\n\n- Reuse of connections on HTTP/2 in close concurrency situations. (Pull #81)\n\n## 0.8.3 (May 6rd, 2020)\n\n### Fixed\n\n- Include `Host` and `Accept` headers on proxy \"CONNECT\" requests.\n- De-duplicate any headers also contained in proxy_headers.\n- HTTP/2 flag not being passed down to proxy connections.\n\n## 0.8.2 (May 3rd, 2020)\n\n### Fixed\n\n- Fix connections using proxy forwarding requests not being added to the\nconnection pool properly. (Pull #70)\n\n## 0.8.1 (April 30th, 2020)\n\n### Changed\n\n- Allow inherintance of both `httpcore.AsyncByteStream`, `httpcore.SyncByteStream` without type conflicts.\n\n## 0.8.0 (April 30th, 2020)\n\n### Fixed\n\n- Fixed tunnel proxy support.\n\n### Added\n\n- New `TimeoutException` base class.\n\n## 0.7.0 (March 5th, 2020)\n\n- First integration with HTTPX.\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/httpcore-0.15.0.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "httpx",
        "version": "0.24.0",
        "summary": "The next generation HTTP client.",
        "description_content_type": "text/markdown",
        "author_email": "Tom Christie <tom@tomchristie.com>",
        "classifier": [
          "Development Status :: 4 - Beta",
          "Environment :: Web Environment",
          "Framework :: AsyncIO",
          "Framework :: Trio",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: BSD License",
          "Operating System :: OS Independent",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3 :: Only",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Topic :: Internet :: WWW/HTTP"
        ],
        "requires_dist": [
          "certifi",
          "httpcore<0.18.0,>=0.15.0",
          "idna",
          "sniffio",
          "brotli; platform_python_implementation == 'CPython' and extra == 'brotli'",
          "brotlicffi; platform_python_implementation != 'CPython' and extra == 'brotli'",
          "click==8.*; extra == 'cli'",
          "pygments==2.*; extra == 'cli'",
          "rich<14,>=10; extra == 'cli'",
          "h2<5,>=3; extra == 'http2'",
          "socksio==1.*; extra == 'socks'"
        ],
        "requires_python": ">=3.7",
        "project_url": [
          "Changelog, https://github.com/encode/httpx/blob/master/CHANGELOG.md",
          "Documentation, https://www.python-httpx.org",
          "Homepage, https://github.com/encode/httpx",
          "Source, https://github.com/encode/httpx"
        ],
        "provides_extra": [
          "brotli",
          "cli",
          "http2",
          "socks"
        ],
        "description": "<p align=\"center\">\n  <a href=\"https://www.python-httpx.org/\"><img width=\"350\" height=\"208\" src=\"https://raw.githubusercontent.com/encode/httpx/master/docs/img/butterfly.png\" alt='HTTPX'></a>\n</p>\n\n<p align=\"center\"><strong>HTTPX</strong> <em>- A next-generation HTTP client for Python.</em></p>\n\n<p align=\"center\">\n<a href=\"https://github.com/encode/httpx/actions\">\n    <img src=\"https://github.com/encode/httpx/workflows/Test%20Suite/badge.svg\" alt=\"Test Suite\">\n</a>\n<a href=\"https://pypi.org/project/httpx/\">\n    <img src=\"https://badge.fury.io/py/httpx.svg\" alt=\"Package version\">\n</a>\n</p>\n\nHTTPX is a fully featured HTTP client library for Python 3. It includes **an integrated\ncommand line client**, has support for both **HTTP/1.1 and HTTP/2**, and provides both **sync\nand async APIs**.\n\n---\n\nInstall HTTPX using pip:\n\n```shell\n$ pip install httpx\n```\n\nNow, let's get started:\n\n```pycon\n>>> import httpx\n>>> r = httpx.get('https://www.example.org/')\n>>> r\n<Response [200 OK]>\n>>> r.status_code\n200\n>>> r.headers['content-type']\n'text/html; charset=UTF-8'\n>>> r.text\n'<!doctype html>\\n<html>\\n<head>\\n<title>Example Domain</title>...'\n```\n\nOr, using the command-line client.\n\n```shell\n$ pip install 'httpx[cli]'  # The command line client is an optional dependency.\n```\n\nWhich now allows us to use HTTPX directly from the command-line...\n\n<p align=\"center\">\n  <img width=\"700\" src=\"https://raw.githubusercontent.com/encode/httpx/master/docs/img/httpx-help.png\" alt='httpx --help'>\n</p>\n\nSending a request...\n\n<p align=\"center\">\n  <img width=\"700\" src=\"https://raw.githubusercontent.com/encode/httpx/master/docs/img/httpx-request.png\" alt='httpx http://httpbin.org/json'>\n</p>\n\n## Features\n\nHTTPX builds on the well-established usability of `requests`, and gives you:\n\n* A broadly [requests-compatible API](https://www.python-httpx.org/compatibility/).\n* An integrated command-line client.\n* HTTP/1.1 [and HTTP/2 support](https://www.python-httpx.org/http2/).\n* Standard synchronous interface, but with [async support if you need it](https://www.python-httpx.org/async/).\n* Ability to make requests directly to [WSGI applications](https://www.python-httpx.org/advanced/#calling-into-python-web-apps) or [ASGI applications](https://www.python-httpx.org/async/#calling-into-python-web-apps).\n* Strict timeouts everywhere.\n* Fully type annotated.\n* 100% test coverage.\n\nPlus all the standard features of `requests`...\n\n* International Domains and URLs\n* Keep-Alive & Connection Pooling\n* Sessions with Cookie Persistence\n* Browser-style SSL Verification\n* Basic/Digest Authentication\n* Elegant Key/Value Cookies\n* Automatic Decompression\n* Automatic Content Decoding\n* Unicode Response Bodies\n* Multipart File Uploads\n* HTTP(S) Proxy Support\n* Connection Timeouts\n* Streaming Downloads\n* .netrc Support\n* Chunked Requests\n\n## Installation\n\nInstall with pip:\n\n```shell\n$ pip install httpx\n```\n\nOr, to include the optional HTTP/2 support, use:\n\n```shell\n$ pip install httpx[http2]\n```\n\nHTTPX requires Python 3.7+.\n\n## Documentation\n\nProject documentation is available at [https://www.python-httpx.org/](https://www.python-httpx.org/).\n\nFor a run-through of all the basics, head over to the [QuickStart](https://www.python-httpx.org/quickstart/).\n\nFor more advanced topics, see the [Advanced Usage](https://www.python-httpx.org/advanced/) section, the [async support](https://www.python-httpx.org/async/) section, or the [HTTP/2](https://www.python-httpx.org/http2/) section.\n\nThe [Developer Interface](https://www.python-httpx.org/api/) provides a comprehensive API reference.\n\nTo find out about tools that integrate with HTTPX, see [Third Party Packages](https://www.python-httpx.org/third_party_packages/).\n\n## Contribute\n\nIf you want to contribute with HTTPX check out the [Contributing Guide](https://www.python-httpx.org/contributing/) to learn how to start.\n\n## Dependencies\n\nThe HTTPX project relies on these excellent libraries:\n\n* `httpcore` - The underlying transport implementation for `httpx`.\n  * `h11` - HTTP/1.1 support.\n* `certifi` - SSL certificates.\n* `idna` - Internationalized domain name support.\n* `sniffio` - Async library autodetection.\n\nAs well as these optional installs:\n\n* `h2` - HTTP/2 support. *(Optional, with `httpx[http2]`)*\n* `socksio` - SOCKS proxy support. *(Optional, with `httpx[socks]`)*\n* `rich` - Rich terminal support. *(Optional, with `httpx[cli]`)*\n* `click` - Command line client support. *(Optional, with `httpx[cli]`)*\n* `brotli` or `brotlicffi` - Decoding for \"brotli\" compressed responses. *(Optional, with `httpx[brotli]`)*\n\nA huge amount of credit is due to `requests` for the API layout that\nmuch of this work follows, as well as to `urllib3` for plenty of design\ninspiration around the lower-level networking details.\n\n---\n\n<p align=\"center\"><i>HTTPX is <a href=\"https://github.com/encode/httpx/blob/master/LICENSE.md\">BSD licensed</a> code.<br/>Designed & crafted with care.</i><br/>&mdash; 🦋 &mdash;</p>\n\n## Release Information\n\n### Changed\n\n* The logging behaviour has been changed to be more in-line with other standard Python logging usages. We no longer have a custom `TRACE` log level, and we no longer use the `HTTPX_LOG_LEVEL` environment variable to auto-configure logging. We now have a significant amount of `DEBUG` logging available at the network level. Full documentation is available at https://www.python-httpx.org/logging/ (#2547, encode/httpcore#648)\n* The `Response.iter_lines()` method now matches the stdlib behaviour and does not include the newline characters. It also resolves a performance issue. (#2423)\n* Query parameter encoding switches from using + for spaces and %2F for forward slash, to instead using %20 for spaces and treating forward slash as a safe, unescaped character. This differs from `requests`, but is in line with browser behavior in Chrome, Safari, and Firefox. Both options are RFC valid. (#2543)\n* NetRC authentication is no longer automatically handled, but is instead supported by an explicit `httpx.NetRCAuth()` authentication class. See the documentation at https://www.python-httpx.org/advanced/#netrc-support (#2525)\n\n### Removed\n\n* The `rfc3986` dependancy has been removed. (#2252)\n\n\n---\n\n[Full changelog](https://github.com/encode/httpx/blob/master/CHANGELOG.md)\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/httpx-0.24.0.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "importlib-metadata",
        "version": "6.6.0",
        "summary": "Read metadata from Python packages",
        "home_page": "https://github.com/python/importlib_metadata",
        "author": "Jason R. Coombs",
        "author_email": "jaraco@jaraco.com",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: Apache Software License",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3 :: Only"
        ],
        "requires_dist": [
          "zipp (>=0.5)",
          "typing-extensions (>=3.6.4) ; python_version < \"3.8\"",
          "sphinx (>=3.5) ; extra == 'docs'",
          "jaraco.packaging (>=9) ; extra == 'docs'",
          "rst.linker (>=1.9) ; extra == 'docs'",
          "furo ; extra == 'docs'",
          "sphinx-lint ; extra == 'docs'",
          "jaraco.tidelift (>=1.4) ; extra == 'docs'",
          "ipython ; extra == 'perf'",
          "pytest (>=6) ; extra == 'testing'",
          "pytest-checkdocs (>=2.4) ; extra == 'testing'",
          "flake8 (<5) ; extra == 'testing'",
          "pytest-cov ; extra == 'testing'",
          "pytest-enabler (>=1.3) ; extra == 'testing'",
          "packaging ; extra == 'testing'",
          "pyfakefs ; extra == 'testing'",
          "flufl.flake8 ; extra == 'testing'",
          "pytest-perf (>=0.9.2) ; extra == 'testing'",
          "pytest-black (>=0.3.7) ; (platform_python_implementation != \"PyPy\") and extra == 'testing'",
          "pytest-mypy (>=0.9.1) ; (platform_python_implementation != \"PyPy\") and extra == 'testing'",
          "pytest-flake8 ; (python_version < \"3.12\") and extra == 'testing'",
          "importlib-resources (>=1.3) ; (python_version < \"3.9\") and extra == 'testing'"
        ],
        "requires_python": ">=3.7",
        "provides_extra": [
          "docs",
          "perf",
          "testing"
        ],
        "description": ".. image:: https://img.shields.io/pypi/v/importlib_metadata.svg\n   :target: https://pypi.org/project/importlib_metadata\n\n.. image:: https://img.shields.io/pypi/pyversions/importlib_metadata.svg\n\n.. image:: https://github.com/python/importlib_metadata/workflows/tests/badge.svg\n   :target: https://github.com/python/importlib_metadata/actions?query=workflow%3A%22tests%22\n   :alt: tests\n\n.. image:: https://img.shields.io/badge/code%20style-black-000000.svg\n   :target: https://github.com/psf/black\n   :alt: Code style: Black\n\n.. image:: https://readthedocs.org/projects/importlib-metadata/badge/?version=latest\n   :target: https://importlib-metadata.readthedocs.io/en/latest/?badge=latest\n\n.. image:: https://img.shields.io/badge/skeleton-2023-informational\n   :target: https://blog.jaraco.com/skeleton\n\n.. image:: https://tidelift.com/badges/package/pypi/importlib-metadata\n   :target: https://tidelift.com/subscription/pkg/pypi-importlib-metadata?utm_source=pypi-importlib-metadata&utm_medium=readme\n\nLibrary to access the metadata for a Python package.\n\nThis package supplies third-party access to the functionality of\n`importlib.metadata <https://docs.python.org/3/library/importlib.metadata.html>`_\nincluding improvements added to subsequent Python versions.\n\n\nCompatibility\n=============\n\nNew features are introduced in this third-party library and later merged\ninto CPython. The following table indicates which versions of this library\nwere contributed to different versions in the standard library:\n\n.. list-table::\n   :header-rows: 1\n\n   * - importlib_metadata\n     - stdlib\n   * - 6.5\n     - 3.12\n   * - 4.13\n     - 3.11\n   * - 4.6\n     - 3.10\n   * - 1.4\n     - 3.8\n\n\nUsage\n=====\n\nSee the `online documentation <https://importlib-metadata.readthedocs.io/>`_\nfor usage details.\n\n`Finder authors\n<https://docs.python.org/3/reference/import.html#finders-and-loaders>`_ can\nalso add support for custom package installers.  See the above documentation\nfor details.\n\n\nCaveats\n=======\n\nThis project primarily supports third-party packages installed by PyPA\ntools (or other conforming packages). It does not support:\n\n- Packages in the stdlib.\n- Packages installed without metadata.\n\nProject details\n===============\n\n * Project home: https://github.com/python/importlib_metadata\n * Report bugs at: https://github.com/python/importlib_metadata/issues\n * Code hosting: https://github.com/python/importlib_metadata\n * Documentation: https://importlib-metadata.readthedocs.io/\n\nFor Enterprise\n==============\n\nAvailable as part of the Tidelift Subscription.\n\nThis project and the maintainers of thousands of other packages are working with Tidelift to deliver one enterprise subscription that covers all of the open source you use.\n\n`Learn more <https://tidelift.com/subscription/pkg/pypi-importlib-metadata?utm_source=pypi-importlib-metadata&utm_medium=referral&utm_campaign=github>`_.\n\nSecurity Contact\n================\n\nTo report a security vulnerability, please use the\n`Tidelift security contact <https://tidelift.com/security>`_.\nTidelift will coordinate the fix and disclosure.\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/importlib_metadata-6.6.0.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "importlib-resources",
        "version": "5.12.0",
        "summary": "Read resources from Python packages",
        "home_page": "https://github.com/python/importlib_resources",
        "author": "Barry Warsaw",
        "author_email": "barry@python.org",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: Apache Software License",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3 :: Only"
        ],
        "requires_dist": [
          "zipp (>=3.1.0) ; python_version < \"3.10\"",
          "sphinx (>=3.5) ; extra == 'docs'",
          "jaraco.packaging (>=9) ; extra == 'docs'",
          "rst.linker (>=1.9) ; extra == 'docs'",
          "furo ; extra == 'docs'",
          "sphinx-lint ; extra == 'docs'",
          "jaraco.tidelift (>=1.4) ; extra == 'docs'",
          "pytest (>=6) ; extra == 'testing'",
          "pytest-checkdocs (>=2.4) ; extra == 'testing'",
          "flake8 (<5) ; extra == 'testing'",
          "pytest-cov ; extra == 'testing'",
          "pytest-enabler (>=1.3) ; extra == 'testing'",
          "pytest-black (>=0.3.7) ; (platform_python_implementation != \"PyPy\") and extra == 'testing'",
          "pytest-mypy (>=0.9.1) ; (platform_python_implementation != \"PyPy\") and extra == 'testing'",
          "pytest-flake8 ; (python_version < \"3.12\") and extra == 'testing'"
        ],
        "requires_python": ">=3.7",
        "project_url": [
          "Documentation, https://importlib-resources.readthedocs.io/"
        ],
        "provides_extra": [
          "docs",
          "testing"
        ],
        "description": ".. image:: https://img.shields.io/pypi/v/importlib_resources.svg\n   :target: https://pypi.org/project/importlib_resources\n\n.. image:: https://img.shields.io/pypi/pyversions/importlib_resources.svg\n\n.. image:: https://github.com/python/importlib_resources/workflows/tests/badge.svg\n   :target: https://github.com/python/importlib_resources/actions?query=workflow%3A%22tests%22\n   :alt: tests\n\n.. image:: https://img.shields.io/badge/code%20style-black-000000.svg\n   :target: https://github.com/psf/black\n   :alt: Code style: Black\n\n.. image:: https://readthedocs.org/projects/importlib-resources/badge/?version=latest\n   :target: https://importlib-resources.readthedocs.io/en/latest/?badge=latest\n\n.. image:: https://img.shields.io/badge/skeleton-2023-informational\n   :target: https://blog.jaraco.com/skeleton\n\n.. image:: https://tidelift.com/badges/package/pypi/importlib-resources\n   :target: https://tidelift.com/subscription/pkg/pypi-importlib-resources?utm_source=pypi-importlib-resources&utm_medium=readme\n\n``importlib_resources`` is a backport of Python standard library\n`importlib.resources\n<https://docs.python.org/3/library/importlib.html#module-importlib.resources>`_\nmodule for older Pythons.\n\nThe key goal of this module is to replace parts of `pkg_resources\n<https://setuptools.readthedocs.io/en/latest/pkg_resources.html>`_ with a\nsolution in Python's stdlib that relies on well-defined APIs.  This makes\nreading resources included in packages easier, with more stable and consistent\nsemantics.\n\nCompatibility\n=============\n\nNew features are introduced in this third-party library and later merged\ninto CPython. The following table indicates which versions of this library\nwere contributed to different versions in the standard library:\n\n.. list-table::\n   :header-rows: 1\n\n   * - importlib_resources\n     - stdlib\n   * - 5.9\n     - 3.12\n   * - 5.7\n     - 3.11\n   * - 5.0\n     - 3.10\n   * - 1.3\n     - 3.9\n   * - 0.5 (?)\n     - 3.7\n\nFor Enterprise\n==============\n\nAvailable as part of the Tidelift Subscription.\n\nThis project and the maintainers of thousands of other packages are working with Tidelift to deliver one enterprise subscription that covers all of the open source you use.\n\n`Learn more <https://tidelift.com/subscription/pkg/pypi-importlib-resources?utm_source=pypi-importlib-resources&utm_medium=referral&utm_campaign=github>`_.\n\nSecurity Contact\n================\n\nTo report a security vulnerability, please use the\n`Tidelift security contact <https://tidelift.com/security>`_.\nTidelift will coordinate the fix and disclosure.\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/importlib_resources-5.12.0.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "incremental",
        "version": "22.10.0",
        "summary": "\"A small library that versions your Python projects.\"",
        "home_page": "https://github.com/twisted/incremental",
        "maintainer": "Amber Brown",
        "maintainer_email": "hawkowl@twistedmatrix.com",
        "license": "MIT",
        "classifier": [
          "Intended Audience :: Developers",
          "License :: OSI Approved :: MIT License",
          "Programming Language :: Python :: 2",
          "Programming Language :: Python :: 2.7",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.4",
          "Programming Language :: Python :: 3.5",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9"
        ],
        "requires_dist": [
          "click (>=6.0) ; extra == 'mypy'",
          "twisted (>=16.4.0) ; extra == 'mypy'",
          "mypy (==0.812) ; extra == 'mypy'",
          "click (>=6.0) ; extra == 'scripts'",
          "twisted (>=16.4.0) ; extra == 'scripts'"
        ],
        "provides_extra": [
          "mypy",
          "scripts"
        ],
        "description": "Incremental\n===========\n\n|gha|\n|pypi|\n|coverage|\n\nIncremental is a small library that versions your Python projects.\n\nAPI documentation can be found `here <https://twisted.github.io/incremental/docs/>`_.\n\n\nQuick Start\n-----------\n\nAdd this to your ``setup.py``\\ 's ``setup()`` call, removing any other versioning arguments:\n\n.. code::\n\n   setup(\n       use_incremental=True,\n       setup_requires=['incremental'],\n       install_requires=['incremental'], # along with any other install dependencies\n       ...\n   }\n\n\nInstall Incremental to your local environment with ``pip install incremental[scripts]``.\nThen run ``python -m incremental.update <projectname> --create``.\nIt will create a file in your package named ``_version.py`` and look like this:\n\n.. code::\n\n   from incremental import Version\n\n   __version__ = Version(\"widgetbox\", 17, 1, 0)\n   __all__ = [\"__version__\"]\n\n\nThen, so users of your project can find your version, in your root package's ``__init__.py`` add:\n\n.. code::\n\n   from ._version import __version__\n\n\nSubsequent installations of your project will then use Incremental for versioning.\n\n\nIncremental Versions\n--------------------\n\n``incremental.Version`` is a class that represents a version of a given project.\nIt is made up of the following elements (which are given during instantiation):\n\n- ``package`` (required), the name of the package this ``Version`` represents.\n- ``major``, ``minor``, ``micro`` (all required), the X.Y.Z of your project's ``Version``.\n- ``release_candidate`` (optional), set to 0 or higher to mark this ``Version`` being of a release candidate (also sometimes called a \"prerelease\").\n- ``post`` (optional), set to 0 or higher to mark this ``Version`` as a postrelease.\n- ``dev`` (optional), set to 0 or higher to mark this ``Version`` as a development release.\n\nYou can extract a PEP-440 compatible version string by using the ``.public()`` method, which returns a ``str`` containing the full version. This is the version you should provide to users, or publicly use. An example output would be ``\"13.2.0\"``, ``\"17.1.2dev1\"``, or ``\"18.8.0rc2\"``.\n\nCalling ``repr()`` with a ``Version`` will give a Python-source-code representation of it, and calling ``str()`` with a ``Version`` will provide a string similar to ``'[Incremental, version 16.10.1]'``.\n\n\nUpdating\n--------\n\nIncremental includes a tool to automate updating your Incremental-using project's version called ``incremental.update``.\nIt updates the ``_version.py`` file and automatically updates some uses of Incremental versions from an indeterminate version to the current one.\nIt requires ``click`` from PyPI.\n\n``python -m incremental.update <projectname>`` will perform updates on that package.\nThe commands that can be given after that will determine what the next version is.\n\n- ``--newversion=<version>``, to set the project version to a fully-specified version (like 1.2.3, or 17.1.0dev1).\n- ``--rc``, to set the project version to ``<year-2000>.<month>.0rc1`` if the current version is not a release candidate, or bump the release candidate number by 1 if it is.\n- ``--dev``, to set the project development release number to 0 if it is not a development release, or bump the development release number by 1 if it is.\n- ``--patch``, to increment the patch number of the release. This will also reset the release candidate number, pass ``--rc`` at the same time to increment the patch number and make it a release candidate.\n- ``--post``, to set the project postrelease number to 0 if it is not a postrelease, or bump the postrelease number by 1 if it is. This will also reset the release candidate and development release numbers.\n\nIf you give no arguments, it will strip the release candidate number, making it a \"full release\".\n\nIncremental supports \"indeterminate\" versions, as a stand-in for the next \"full\" version. This can be used when the version which will be displayed to the end-user is unknown (for example \"introduced in\" or \"deprecated in\"). Incremental supports the following indeterminate versions:\n\n- ``Version(\"<projectname>\", \"NEXT\", 0, 0)``\n- ``<projectname> NEXT``\n\nWhen you run ``python -m incremental.update <projectname> --rc``, these will be updated to real versions (assuming the target final version is 17.1.0):\n\n- ``Version(\"<projectname>\", 17, 1, 0, release_candidate=1)``\n- ``<projectname> 17.1.0rc1``\n\nOnce the final version is made, it will become:\n\n- ``Version(\"<projectname>\", 17, 1, 0)``\n- ``<projectname> 17.1.0``\n\n\n.. |coverage| image:: https://codecov.io/gh/twisted/incremental/branch/master/graph/badge.svg?token=K2ieeL887X\n.. _coverage: https://codecov.io/gh/twisted/incremental\n\n.. |gha| image:: https://github.com/twisted/incremental/actions/workflows/tests.yaml/badge.svg\n.. _gha: https://github.com/twisted/incremental/actions/workflows/tests.yaml\n\n.. |pypi| image:: http://img.shields.io/pypi/v/incremental.svg\n.. _pypi: https://pypi.python.org/pypi/incremental\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/incremental-22.10.0.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "itsdangerous",
        "version": "2.1.2",
        "platform": [
          "UNKNOWN"
        ],
        "summary": "Safely pass data to untrusted environments and back.",
        "description_content_type": "text/x-rst",
        "home_page": "https://palletsprojects.com/p/itsdangerous/",
        "author": "Armin Ronacher",
        "author_email": "armin.ronacher@active-4.com",
        "maintainer": "Pallets",
        "maintainer_email": "contact@palletsprojects.com",
        "license": "BSD-3-Clause",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: BSD License",
          "Operating System :: OS Independent",
          "Programming Language :: Python"
        ],
        "requires_python": ">=3.7",
        "project_url": [
          "Donate, https://palletsprojects.com/donate",
          "Documentation, https://itsdangerous.palletsprojects.com/",
          "Changes, https://itsdangerous.palletsprojects.com/changes/",
          "Source Code, https://github.com/pallets/itsdangerous/",
          "Issue Tracker, https://github.com/pallets/itsdangerous/issues/",
          "Twitter, https://twitter.com/PalletsTeam",
          "Chat, https://discord.gg/pallets"
        ],
        "description": "ItsDangerous\n============\n\n... so better sign this\n\nVarious helpers to pass data to untrusted environments and to get it\nback safe and sound. Data is cryptographically signed to ensure that a\ntoken has not been tampered with.\n\nIt's possible to customize how data is serialized. Data is compressed as\nneeded. A timestamp can be added and verified automatically while\nloading a token.\n\n\nInstalling\n----------\n\nInstall and update using `pip`_:\n\n.. code-block:: text\n\n    pip install -U itsdangerous\n\n.. _pip: https://pip.pypa.io/en/stable/getting-started/\n\n\nA Simple Example\n----------------\n\nHere's how you could generate a token for transmitting a user's id and\nname between web requests.\n\n.. code-block:: python\n\n    from itsdangerous import URLSafeSerializer\n    auth_s = URLSafeSerializer(\"secret key\", \"auth\")\n    token = auth_s.dumps({\"id\": 5, \"name\": \"itsdangerous\"})\n\n    print(token)\n    # eyJpZCI6NSwibmFtZSI6Iml0c2Rhbmdlcm91cyJ9.6YP6T0BaO67XP--9UzTrmurXSmg\n\n    data = auth_s.loads(token)\n    print(data[\"name\"])\n    # itsdangerous\n\n\nDonate\n------\n\nThe Pallets organization develops and supports ItsDangerous and other\npopular packages. In order to grow the community of contributors and\nusers, and allow the maintainers to devote more time to the projects,\n`please donate today`_.\n\n.. _please donate today: https://palletsprojects.com/donate\n\n\nLinks\n-----\n\n-   Documentation: https://itsdangerous.palletsprojects.com/\n-   Changes: https://itsdangerous.palletsprojects.com/changes/\n-   PyPI Releases: https://pypi.org/project/ItsDangerous/\n-   Source Code: https://github.com/pallets/itsdangerous/\n-   Issue Tracker: https://github.com/pallets/itsdangerous/issues/\n-   Website: https://palletsprojects.com/p/itsdangerous/\n-   Twitter: https://twitter.com/PalletsTeam\n-   Chat: https://discord.gg/pallets\n\n\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/itsdangerous-2.1.2.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "jax",
        "version": "0.4.8",
        "summary": "Differentiate, compile, and transform Numpy code.",
        "description_content_type": "text/markdown",
        "home_page": "https://github.com/google/jax",
        "author": "JAX team",
        "author_email": "jax-dev@google.com",
        "license": "Apache-2.0",
        "classifier": [
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11"
        ],
        "requires_dist": [
          "ml-dtypes (>=0.0.3)",
          "numpy (>=1.21)",
          "opt-einsum",
          "scipy (>=1.7)",
          "protobuf (<4,>=3.13) ; extra == 'australis'",
          "jaxlib (==0.4.7) ; extra == 'ci'",
          "jaxlib (==0.4.7) ; extra == 'cpu'",
          "jaxlib (==0.4.7+cuda11.cudnn86) ; extra == 'cuda'",
          "jaxlib (==0.4.7+cuda11.cudnn82) ; extra == 'cuda11_cudnn82'",
          "jaxlib (==0.4.7+cuda11.cudnn86) ; extra == 'cuda11_cudnn86'",
          "jaxlib (==0.4.7+cuda11.cudnn86) ; extra == 'cuda11_local'",
          "jaxlib (==0.4.7+cuda11.cudnn86) ; extra == 'cuda11_pip'",
          "nvidia-cublas-cu11 (>=11.11) ; extra == 'cuda11_pip'",
          "nvidia-cuda-nvcc-cu11 (>=11.8) ; extra == 'cuda11_pip'",
          "nvidia-cuda-runtime-cu11 (>=11.8) ; extra == 'cuda11_pip'",
          "nvidia-cudnn-cu11 (>=8.6) ; extra == 'cuda11_pip'",
          "nvidia-cufft-cu11 (>=10.9) ; extra == 'cuda11_pip'",
          "nvidia-cusolver-cu11 (>=11.4) ; extra == 'cuda11_pip'",
          "nvidia-cusparse-cu11 (>=11.7) ; extra == 'cuda11_pip'",
          "jaxlib (==0.4.7+cuda12.cudnn88) ; extra == 'cuda12_local'",
          "jaxlib (==0.4.7+cuda12.cudnn88) ; extra == 'cuda12_pip'",
          "nvidia-cublas-cu12 ; extra == 'cuda12_pip'",
          "nvidia-cuda-nvcc-cu12 ; extra == 'cuda12_pip'",
          "nvidia-cuda-runtime-cu12 ; extra == 'cuda12_pip'",
          "nvidia-cudnn-cu12 ; extra == 'cuda12_pip'",
          "nvidia-cufft-cu12 ; extra == 'cuda12_pip'",
          "nvidia-cusolver-cu12 ; extra == 'cuda12_pip'",
          "nvidia-cusparse-cu12 ; extra == 'cuda12_pip'",
          "jaxlib (==0.4.7) ; extra == 'minimum-jaxlib'",
          "jaxlib (==0.4.7) ; extra == 'tpu'",
          "libtpu-nightly (==0.1.dev20230327) ; extra == 'tpu'",
          "requests ; extra == 'tpu'"
        ],
        "requires_python": ">=3.8",
        "provides_extra": [
          "australis",
          "ci",
          "cpu",
          "cuda",
          "cuda11_cudnn82",
          "cuda11_cudnn86",
          "cuda11_local",
          "cuda11_pip",
          "cuda12_local",
          "cuda12_pip",
          "minimum-jaxlib",
          "tpu"
        ],
        "description": "<div align=\"center\">\n<img src=\"https://raw.githubusercontent.com/google/jax/main/images/jax_logo_250px.png\" alt=\"logo\"></img>\n</div>\n\n# JAX: Autograd and XLA\n\n![Continuous integration](https://github.com/google/jax/actions/workflows/ci-build.yaml/badge.svg)\n![PyPI version](https://img.shields.io/pypi/v/jax)\n\n[**Quickstart**](#quickstart-colab-in-the-cloud)\n| [**Transformations**](#transformations)\n| [**Install guide**](#installation)\n| [**Neural net libraries**](#neural-network-libraries)\n| [**Change logs**](https://jax.readthedocs.io/en/latest/changelog.html)\n| [**Reference docs**](https://jax.readthedocs.io/en/latest/)\n\n\n## What is JAX?\n\nJAX is [Autograd](https://github.com/hips/autograd) and [XLA](https://www.tensorflow.org/xla),\nbrought together for high-performance machine learning research.\n\nWith its updated version of [Autograd](https://github.com/hips/autograd),\nJAX can automatically differentiate native\nPython and NumPy functions. It can differentiate through loops, branches,\nrecursion, and closures, and it can take derivatives of derivatives of\nderivatives. It supports reverse-mode differentiation (a.k.a. backpropagation)\nvia [`grad`](#automatic-differentiation-with-grad) as well as forward-mode differentiation,\nand the two can be composed arbitrarily to any order.\n\nWhat’s new is that JAX uses [XLA](https://www.tensorflow.org/xla)\nto compile and run your NumPy programs on GPUs and TPUs. Compilation happens\nunder the hood by default, with library calls getting just-in-time compiled and\nexecuted. But JAX also lets you just-in-time compile your own Python functions\ninto XLA-optimized kernels using a one-function API,\n[`jit`](#compilation-with-jit). Compilation and automatic differentiation can be\ncomposed arbitrarily, so you can express sophisticated algorithms and get\nmaximal performance without leaving Python. You can even program multiple GPUs\nor TPU cores at once using [`pmap`](#spmd-programming-with-pmap), and\ndifferentiate through the whole thing.\n\nDig a little deeper, and you'll see that JAX is really an extensible system for\n[composable function transformations](#transformations). Both\n[`grad`](#automatic-differentiation-with-grad) and [`jit`](#compilation-with-jit)\nare instances of such transformations. Others are\n[`vmap`](#auto-vectorization-with-vmap) for automatic vectorization and\n[`pmap`](#spmd-programming-with-pmap) for single-program multiple-data (SPMD)\nparallel programming of multiple accelerators, with more to come.\n\nThis is a research project, not an official Google product. Expect bugs and\n[sharp edges](https://jax.readthedocs.io/en/latest/notebooks/Common_Gotchas_in_JAX.html).\nPlease help by trying it out, [reporting\nbugs](https://github.com/google/jax/issues), and letting us know what you\nthink!\n\n```python\nimport jax.numpy as jnp\nfrom jax import grad, jit, vmap\n\ndef predict(params, inputs):\n  for W, b in params:\n    outputs = jnp.dot(inputs, W) + b\n    inputs = jnp.tanh(outputs)  # inputs to the next layer\n  return outputs                # no activation on last layer\n\ndef loss(params, inputs, targets):\n  preds = predict(params, inputs)\n  return jnp.sum((preds - targets)**2)\n\ngrad_loss = jit(grad(loss))  # compiled gradient evaluation function\nperex_grads = jit(vmap(grad_loss, in_axes=(None, 0, 0)))  # fast per-example grads\n```\n\n### Contents\n* [Quickstart: Colab in the Cloud](#quickstart-colab-in-the-cloud)\n* [Transformations](#transformations)\n* [Current gotchas](#current-gotchas)\n* [Installation](#installation)\n* [Neural net libraries](#neural-network-libraries)\n* [Citing JAX](#citing-jax)\n* [Reference documentation](#reference-documentation)\n\n## Quickstart: Colab in the Cloud\nJump right in using a notebook in your browser, connected to a Google Cloud GPU.\nHere are some starter notebooks:\n- [The basics: NumPy on accelerators, `grad` for differentiation, `jit` for compilation, and `vmap` for vectorization](https://jax.readthedocs.io/en/latest/notebooks/quickstart.html)\n- [Training a Simple Neural Network, with TensorFlow Dataset Data Loading](https://colab.research.google.com/github/google/jax/blob/main/docs/notebooks/neural_network_with_tfds_data.ipynb)\n\n**JAX now runs on Cloud TPUs.** To try out the preview, see the [Cloud TPU\nColabs](https://github.com/google/jax/tree/main/cloud_tpu_colabs).\n\nFor a deeper dive into JAX:\n- [The Autodiff Cookbook, Part 1: easy and powerful automatic differentiation in JAX](https://jax.readthedocs.io/en/latest/notebooks/autodiff_cookbook.html)\n- [Common gotchas and sharp edges](https://jax.readthedocs.io/en/latest/notebooks/Common_Gotchas_in_JAX.html)\n- See the [full list of\nnotebooks](https://github.com/google/jax/tree/main/docs/notebooks).\n\nYou can also take a look at [the mini-libraries in\n`jax.example_libraries`](https://github.com/google/jax/tree/main/jax/example_libraries/README.md),\nlike [`stax` for building neural\nnetworks](https://github.com/google/jax/tree/main/jax/example_libraries/README.md#neural-net-building-with-stax)\nand [`optimizers` for first-order stochastic\noptimization](https://github.com/google/jax/tree/main/jax/example_libraries/README.md#first-order-optimization),\nor the [examples](https://github.com/google/jax/tree/main/examples).\n\n## Transformations\n\nAt its core, JAX is an extensible system for transforming numerical functions.\nHere are four transformations of primary interest: `grad`, `jit`, `vmap`, and\n`pmap`.\n\n### Automatic differentiation with `grad`\n\nJAX has roughly the same API as [Autograd](https://github.com/hips/autograd).\nThe most popular function is\n[`grad`](https://jax.readthedocs.io/en/latest/jax.html#jax.grad)\nfor reverse-mode gradients:\n\n```python\nfrom jax import grad\nimport jax.numpy as jnp\n\ndef tanh(x):  # Define a function\n  y = jnp.exp(-2.0 * x)\n  return (1.0 - y) / (1.0 + y)\n\ngrad_tanh = grad(tanh)  # Obtain its gradient function\nprint(grad_tanh(1.0))   # Evaluate it at x = 1.0\n# prints 0.4199743\n```\n\nYou can differentiate to any order with `grad`.\n\n```python\nprint(grad(grad(grad(tanh)))(1.0))\n# prints 0.62162673\n```\n\nFor more advanced autodiff, you can use\n[`jax.vjp`](https://jax.readthedocs.io/en/latest/jax.html#jax.vjp) for\nreverse-mode vector-Jacobian products and\n[`jax.jvp`](https://jax.readthedocs.io/en/latest/jax.html#jax.jvp) for\nforward-mode Jacobian-vector products. The two can be composed arbitrarily with\none another, and with other JAX transformations. Here's one way to compose those\nto make a function that efficiently computes [full Hessian\nmatrices](https://jax.readthedocs.io/en/latest/_autosummary/jax.hessian.html#jax.hessian):\n\n```python\nfrom jax import jit, jacfwd, jacrev\n\ndef hessian(fun):\n  return jit(jacfwd(jacrev(fun)))\n```\n\nAs with [Autograd](https://github.com/hips/autograd), you're free to use\ndifferentiation with Python control structures:\n\n```python\ndef abs_val(x):\n  if x > 0:\n    return x\n  else:\n    return -x\n\nabs_val_grad = grad(abs_val)\nprint(abs_val_grad(1.0))   # prints 1.0\nprint(abs_val_grad(-1.0))  # prints -1.0 (abs_val is re-evaluated)\n```\n\nSee the [reference docs on automatic\ndifferentiation](https://jax.readthedocs.io/en/latest/jax.html#automatic-differentiation)\nand the [JAX Autodiff\nCookbook](https://jax.readthedocs.io/en/latest/notebooks/autodiff_cookbook.html)\nfor more.\n\n### Compilation with `jit`\n\nYou can use XLA to compile your functions end-to-end with\n[`jit`](https://jax.readthedocs.io/en/latest/jax.html#just-in-time-compilation-jit),\nused either as an `@jit` decorator or as a higher-order function.\n\n```python\nimport jax.numpy as jnp\nfrom jax import jit\n\ndef slow_f(x):\n  # Element-wise ops see a large benefit from fusion\n  return x * x + x * 2.0\n\nx = jnp.ones((5000, 5000))\nfast_f = jit(slow_f)\n%timeit -n10 -r3 fast_f(x)  # ~ 4.5 ms / loop on Titan X\n%timeit -n10 -r3 slow_f(x)  # ~ 14.5 ms / loop (also on GPU via JAX)\n```\n\nYou can mix `jit` and `grad` and any other JAX transformation however you like.\n\nUsing `jit` puts constraints on the kind of Python control flow\nthe function can use; see\nthe [Gotchas\nNotebook](https://jax.readthedocs.io/en/latest/notebooks/Common_Gotchas_in_JAX.html#python-control-flow-+-JIT)\nfor more.\n\n### Auto-vectorization with `vmap`\n\n[`vmap`](https://jax.readthedocs.io/en/latest/jax.html#vectorization-vmap) is\nthe vectorizing map.\nIt has the familiar semantics of mapping a function along array axes, but\ninstead of keeping the loop on the outside, it pushes the loop down into a\nfunction’s primitive operations for better performance.\n\nUsing `vmap` can save you from having to carry around batch dimensions in your\ncode. For example, consider this simple *unbatched* neural network prediction\nfunction:\n\n```python\ndef predict(params, input_vec):\n  assert input_vec.ndim == 1\n  activations = input_vec\n  for W, b in params:\n    outputs = jnp.dot(W, activations) + b  # `activations` on the right-hand side!\n    activations = jnp.tanh(outputs)        # inputs to the next layer\n  return outputs                           # no activation on last layer\n```\n\nWe often instead write `jnp.dot(activations, W)` to allow for a batch dimension on the\nleft side of `activations`, but we’ve written this particular prediction function to\napply only to single input vectors. If we wanted to apply this function to a\nbatch of inputs at once, semantically we could just write\n\n```python\nfrom functools import partial\npredictions = jnp.stack(list(map(partial(predict, params), input_batch)))\n```\n\nBut pushing one example through the network at a time would be slow! It’s better\nto vectorize the computation, so that at every layer we’re doing matrix-matrix\nmultiplication rather than matrix-vector multiplication.\n\nThe `vmap` function does that transformation for us. That is, if we write\n\n```python\nfrom jax import vmap\npredictions = vmap(partial(predict, params))(input_batch)\n# or, alternatively\npredictions = vmap(predict, in_axes=(None, 0))(params, input_batch)\n```\n\nthen the `vmap` function will push the outer loop inside the function, and our\nmachine will end up executing matrix-matrix multiplications exactly as if we’d\ndone the batching by hand.\n\nIt’s easy enough to manually batch a simple neural network without `vmap`, but\nin other cases manual vectorization can be impractical or impossible. Take the\nproblem of efficiently computing per-example gradients: that is, for a fixed set\nof parameters, we want to compute the gradient of our loss function evaluated\nseparately at each example in a batch. With `vmap`, it’s easy:\n\n```python\nper_example_gradients = vmap(partial(grad(loss), params))(inputs, targets)\n```\n\nOf course, `vmap` can be arbitrarily composed with `jit`, `grad`, and any other\nJAX transformation! We use `vmap` with both forward- and reverse-mode automatic\ndifferentiation for fast Jacobian and Hessian matrix calculations in\n`jax.jacfwd`, `jax.jacrev`, and `jax.hessian`.\n\n### SPMD programming with `pmap`\n\nFor parallel programming of multiple accelerators, like multiple GPUs, use\n[`pmap`](https://jax.readthedocs.io/en/latest/jax.html#parallelization-pmap).\nWith `pmap` you write single-program multiple-data (SPMD) programs, including\nfast parallel collective communication operations. Applying `pmap` will mean\nthat the function you write is compiled by XLA (similarly to `jit`), then\nreplicated and executed in parallel across devices.\n\nHere's an example on an 8-GPU machine:\n\n```python\nfrom jax import random, pmap\nimport jax.numpy as jnp\n\n# Create 8 random 5000 x 6000 matrices, one per GPU\nkeys = random.split(random.PRNGKey(0), 8)\nmats = pmap(lambda key: random.normal(key, (5000, 6000)))(keys)\n\n# Run a local matmul on each device in parallel (no data transfer)\nresult = pmap(lambda x: jnp.dot(x, x.T))(mats)  # result.shape is (8, 5000, 5000)\n\n# Compute the mean on each device in parallel and print the result\nprint(pmap(jnp.mean)(result))\n# prints [1.1566595 1.1805978 ... 1.2321935 1.2015157]\n```\n\nIn addition to expressing pure maps, you can use fast [collective communication\noperations](https://jax.readthedocs.io/en/latest/jax.lax.html#parallel-operators)\nbetween devices:\n\n```python\nfrom functools import partial\nfrom jax import lax\n\n@partial(pmap, axis_name='i')\ndef normalize(x):\n  return x / lax.psum(x, 'i')\n\nprint(normalize(jnp.arange(4.)))\n# prints [0.         0.16666667 0.33333334 0.5       ]\n```\n\nYou can even [nest `pmap` functions](https://colab.research.google.com/github/google/jax/blob/main/cloud_tpu_colabs/Pmap_Cookbook.ipynb#scrollTo=MdRscR5MONuN) for more\nsophisticated communication patterns.\n\nIt all composes, so you're free to differentiate through parallel computations:\n\n```python\nfrom jax import grad\n\n@pmap\ndef f(x):\n  y = jnp.sin(x)\n  @pmap\n  def g(z):\n    return jnp.cos(z) * jnp.tan(y.sum()) * jnp.tanh(x).sum()\n  return grad(lambda w: jnp.sum(g(w)))(x)\n\nprint(f(x))\n# [[ 0.        , -0.7170853 ],\n#  [-3.1085174 , -0.4824318 ],\n#  [10.366636  , 13.135289  ],\n#  [ 0.22163185, -0.52112055]]\n\nprint(grad(lambda x: jnp.sum(f(x)))(x))\n# [[ -3.2369726,  -1.6356447],\n#  [  4.7572474,  11.606951 ],\n#  [-98.524414 ,  42.76499  ],\n#  [ -1.6007166,  -1.2568436]]\n```\n\nWhen reverse-mode differentiating a `pmap` function (e.g. with `grad`), the\nbackward pass of the computation is parallelized just like the forward pass.\n\nSee the [SPMD\nCookbook](https://colab.research.google.com/github/google/jax/blob/main/cloud_tpu_colabs/Pmap_Cookbook.ipynb)\nand the [SPMD MNIST classifier from scratch\nexample](https://github.com/google/jax/blob/main/examples/spmd_mnist_classifier_fromscratch.py)\nfor more.\n\n## Current gotchas\n\nFor a more thorough survey of current gotchas, with examples and explanations,\nwe highly recommend reading the [Gotchas\nNotebook](https://jax.readthedocs.io/en/latest/notebooks/Common_Gotchas_in_JAX.html).\nSome standouts:\n\n1. JAX transformations only work on [pure functions](https://en.wikipedia.org/wiki/Pure_function), which don't have side-effects and respect [referential transparency](https://en.wikipedia.org/wiki/Referential_transparency) (i.e. object identity testing with `is` isn't preserved). If you use a JAX transformation on an impure Python function, you might see an error like `Exception: Can't lift Traced...`  or `Exception: Different traces at same level`.\n1. [In-place mutating updates of\n   arrays](https://jax.readthedocs.io/en/latest/notebooks/Common_Gotchas_in_JAX.html#in-place-updates), like `x[i] += y`, aren't supported, but [there are functional alternatives](https://jax.readthedocs.io/en/latest/jax.ops.html). Under a `jit`, those functional alternatives will reuse buffers in-place automatically.\n1. [Random numbers are\n   different](https://jax.readthedocs.io/en/latest/notebooks/Common_Gotchas_in_JAX.html#random-numbers), but for [good reasons](https://github.com/google/jax/blob/main/docs/jep/263-prng.md).\n1. If you're looking for [convolution\n   operators](https://jax.readthedocs.io/en/latest/notebooks/convolutions.html),\n   they're in the `jax.lax` package.\n1. JAX enforces single-precision (32-bit, e.g. `float32`) values by default, and\n   [to enable\n   double-precision](https://jax.readthedocs.io/en/latest/notebooks/Common_Gotchas_in_JAX.html#double-64bit-precision)\n   (64-bit, e.g. `float64`) one needs to set the `jax_enable_x64` variable at\n   startup (or set the environment variable `JAX_ENABLE_X64=True`).\n   On TPU, JAX uses 32-bit values by default for everything _except_ internal\n   temporary variables in 'matmul-like' operations, such as `jax.numpy.dot` and `lax.conv`.\n   Those ops have a `precision` parameter which can be used to simulate\n   true 32-bit, with a cost of possibly slower runtime.\n1. Some of NumPy's dtype promotion semantics involving a mix of Python scalars\n   and NumPy types aren't preserved, namely `np.add(1, np.array([2],\n   np.float32)).dtype` is `float64` rather than `float32`.\n1. Some transformations, like `jit`, [constrain how you can use Python control\n   flow](https://jax.readthedocs.io/en/latest/notebooks/Common_Gotchas_in_JAX.html#control-flow).\n   You'll always get loud errors if something goes wrong. You might have to use\n   [`jit`'s `static_argnums`\n   parameter](https://jax.readthedocs.io/en/latest/jax.html#just-in-time-compilation-jit),\n   [structured control flow\n   primitives](https://jax.readthedocs.io/en/latest/jax.lax.html#control-flow-operators)\n   like\n   [`lax.scan`](https://jax.readthedocs.io/en/latest/_autosummary/jax.lax.scan.html#jax.lax.scan),\n   or just use `jit` on smaller subfunctions.\n\n## Installation\n\nJAX is written in pure Python, but it depends on XLA, which needs to be\ninstalled as the `jaxlib` package. Use the following instructions to install a\nbinary package with `pip` or `conda`, or to [build JAX from\nsource](https://jax.readthedocs.io/en/latest/developer.html#building-from-source).\n\nWe support installing or building `jaxlib` on Linux (Ubuntu 16.04 or later) and\nmacOS (10.12 or later) platforms.\n\nWindows users can use JAX on CPU and GPU via the [Windows Subsystem for\nLinux](https://docs.microsoft.com/en-us/windows/wsl/about). In addition, there\nis some initial community-driven native Windows support, but since it is still\nsomewhat immature, there are no official binary releases and it must be [built\nfrom source for Windows](https://jax.readthedocs.io/en/latest/developer.html#additional-notes-for-building-jaxlib-from-source-on-windows).\nFor an unofficial discussion of native Windows builds, see also the [Issue #5795\nthread](https://github.com/google/jax/issues/5795).\n\n### pip installation: CPU\n\nTo install a CPU-only version of JAX, which might be useful for doing local\ndevelopment on a laptop, you can run\n\n```bash\npip install --upgrade pip\npip install --upgrade \"jax[cpu]\"\n```\n\nOn Linux, it is often necessary to first update `pip` to a version that supports\n`manylinux2014` wheels. Also note that for Linux, we currently release wheels for `x86_64` architectures only, other architectures require building from source. Trying to pip install with other Linux architectures may lead to `jaxlib` not being installed alongside `jax`, although `jax` may successfully install (but fail at runtime).\n**These `pip` installations do not work with Windows, and may fail silently; see\n[above](#installation).**\n\n### pip installation: GPU (CUDA, installed via pip, easier)\n\nThere are two ways to install JAX with NVIDIA GPU support: using CUDA and CUDNN\ninstalled from pip wheels, and using a self-installed CUDA/CUDNN. We recommend\ninstalling CUDA and CUDNN using the pip wheels, since it is much easier!\n\nYou must first install the NVIDIA driver. We\nrecommend installing the newest driver available from NVIDIA, but the driver\nmust be version >= 525.60.13 for CUDA 12 and >= 450.80.02 for CUDA 11 on Linux.\n\n```bash\npip install --upgrade pip\n\n# CUDA 12 installation\n# Note: wheels only available on linux.\npip install --upgrade \"jax[cuda12_pip]\" -f https://storage.googleapis.com/jax-releases/jax_cuda_releases.html\n\n# CUDA 11 installation\n# Note: wheels only available on linux.\npip install --upgrade \"jax[cuda11_pip]\" -f https://storage.googleapis.com/jax-releases/jax_cuda_releases.html\n```\n\n### pip installation: GPU (CUDA, installed locally, harder)\n\nIf you prefer to use a preinstalled copy of CUDA, you must first\ninstall [CUDA](https://developer.nvidia.com/cuda-downloads) and\n[CuDNN](https://developer.nvidia.com/CUDNN).\n\nJAX provides pre-built CUDA-compatible wheels for **Linux x86_64 only**. Other\ncombinations of operating system and architecture are possible, but require\n[building from source](https://jax.readthedocs.io/en/latest/developer.html#building-from-source).\n\nYou should use an NVIDIA driver version that is at least as new as your\n[CUDA toolkit's corresponding driver version](https://docs.nvidia.com/cuda/cuda-toolkit-release-notes/index.html#cuda-major-component-versions__table-cuda-toolkit-driver-versions).\nIf you need to use an newer CUDA toolkit with an older driver, for example\non a cluster where you cannot update the NVIDIA driver easily, you may be\nable to use the\n[CUDA forward compatibility packages](https://docs.nvidia.com/deploy/cuda-compatibility/)\nthat NVIDIA provides for this purpose.\n\nJAX currently ships three CUDA wheel variants:\n* CUDA 12.0 and CuDNN 8.8.\n* CUDA 11.8 and CuDNN 8.6.\n* CUDA 11.4 and CuDNN 8.2. This wheel is deprecated and will be discontinued\n  with jax 0.4.8.\n\nYou may use a JAX wheel provided the major version of your CUDA and CuDNN\ninstallation matches, and the minor version is at least as new as the version\nJAX expects. For example, you would be able to use the CUDA 12.0 wheel with\nCUDA 12.1 and CuDNN 8.9.\n\nYour CUDA installation must also be new enough to support your GPU. If you have\nan Ada Lovelace (e.g., RTX 4080) or Hopper (e.g., H100) GPU,\nyou must use CUDA 11.8 or newer.\n\n\nTo install, run\n\n```bash\npip install --upgrade pip\n\n# Installs the wheel compatible with CUDA 12 and cuDNN 8.8 or newer.\n# Note: wheels only available on linux.\npip install --upgrade \"jax[cuda12_local]\" -f https://storage.googleapis.com/jax-releases/jax_cuda_releases.html\n\n# Installs the wheel compatible with CUDA 11 and cuDNN 8.6 or newer.\n# Note: wheels only available on linux.\npip install --upgrade \"jax[cuda11_local]\" -f https://storage.googleapis.com/jax-releases/jax_cuda_releases.html\n\n# Installs the wheel compatible with Cuda 11.4+ and cudnn 8.2+ (deprecated).\npip install \"jax[cuda11_cudnn82]\" -f https://storage.googleapis.com/jax-releases/jax_cuda_releases.html\n```\n\n**These `pip` installations do not work with Windows, and may fail silently; see\n[above](#installation).**\n\nYou can find your CUDA version with the command:\n\n```bash\nnvcc --version\n```\n\nSome GPU functionality expects the CUDA installation to be at\n`/usr/local/cuda-X.X`, where X.X should be replaced with the CUDA version number\n(e.g. `cuda-11.8`). If CUDA is installed elsewhere on your system, you can either\ncreate a symlink:\n\n```bash\nsudo ln -s /path/to/cuda /usr/local/cuda-X.X\n```\n\nPlease let us know on [the issue tracker](https://github.com/google/jax/issues)\nif you run into any errors or problems with the prebuilt wheels.\n\n### pip installation: Google Cloud TPU\nJAX also provides pre-built wheels for\n[Google Cloud TPU](https://cloud.google.com/tpu/docs/users-guide-tpu-vm).\nTo install JAX along with appropriate versions of `jaxlib` and `libtpu`, you can run\nthe following in your cloud TPU VM:\n```bash\npip install jax[tpu] -f https://storage.googleapis.com/jax-releases/libtpu_releases.html\n```\n\n### pip installation: Colab TPU\nColab TPU runtimes use an older TPU architecture than Cloud TPU VMs, so the installation instructions differ.\nThe Colab TPU runtime comes with JAX pre-installed, but before importing JAX you must run the following code to initialize the TPU:\n```python\nimport jax.tools.colab_tpu\njax.tools.colab_tpu.setup_tpu()\n```\nNote that Colab TPU runtimes are not compatible with JAX version 0.4.0 or newer.\nIf you need to re-install JAX on a Colab TPU runtime, you can use the following command:\n```\n!pip install jax<=0.3.25 jaxlib<=0.3.25\n```\n\n### Conda installation\n\nThere is a community-supported Conda build of `jax`. To install using `conda`,\nsimply run\n\n```bash\nconda install jax -c conda-forge\n```\n\nTo install on a machine with an NVIDIA GPU, run\n```bash\nconda install jaxlib=*=*cuda* jax cuda-nvcc -c conda-forge -c nvidia\n```\n\nNote the `cudatoolkit` distributed by `conda-forge` is missing `ptxas`, which\nJAX requires. You must therefore either install the `cuda-nvcc` package from\nthe `nvidia` channel, or install CUDA on your machine separately so that `ptxas`\nis in your path. The channel order above is important (`conda-forge` before\n`nvidia`).\n\nIf you would like to override which release of CUDA is used by JAX, or to\ninstall the CUDA build on a machine without GPUs, follow the instructions in the\n[Tips & tricks](https://conda-forge.org/docs/user/tipsandtricks.html#installing-cuda-enabled-packages-like-tensorflow-and-pytorch)\nsection of the `conda-forge` website.\n\nSee the `conda-forge`\n[jaxlib](https://github.com/conda-forge/jaxlib-feedstock#installing-jaxlib) and\n[jax](https://github.com/conda-forge/jax-feedstock#installing-jax) repositories\nfor more details.\n\n### Building JAX from source\nSee [Building JAX from\nsource](https://jax.readthedocs.io/en/latest/developer.html#building-from-source).\n\n## Neural network libraries\n\nMultiple Google research groups develop and share libraries for training neural\nnetworks in JAX. If you want a fully featured library for neural network\ntraining with examples and how-to guides, try\n[Flax](https://github.com/google/flax).\n\nIn addition, DeepMind has open-sourced an [ecosystem of libraries around\nJAX](https://deepmind.com/blog/article/using-jax-to-accelerate-our-research)\nincluding [Haiku](https://github.com/deepmind/dm-haiku) for neural network\nmodules, [Optax](https://github.com/deepmind/optax) for gradient processing and\noptimization, [RLax](https://github.com/deepmind/rlax) for RL algorithms, and\n[chex](https://github.com/deepmind/chex) for reliable code and testing. (Watch\nthe NeurIPS 2020 JAX Ecosystem at DeepMind talk\n[here](https://www.youtube.com/watch?v=iDxJxIyzSiM))\n\n## Citing JAX\n\nTo cite this repository:\n\n```\n@software{jax2018github,\n  author = {James Bradbury and Roy Frostig and Peter Hawkins and Matthew James Johnson and Chris Leary and Dougal Maclaurin and George Necula and Adam Paszke and Jake Vander{P}las and Skye Wanderman-{M}ilne and Qiao Zhang},\n  title = {{JAX}: composable transformations of {P}ython+{N}um{P}y programs},\n  url = {http://github.com/google/jax},\n  version = {0.3.13},\n  year = {2018},\n}\n```\n\nIn the above bibtex entry, names are in alphabetical order, the version number\nis intended to be that from [jax/version.py](../main/jax/version.py), and\nthe year corresponds to the project's open-source release.\n\nA nascent version of JAX, supporting only automatic differentiation and\ncompilation to XLA, was described in a [paper that appeared at SysML\n2018](https://mlsys.org/Conferences/2019/doc/2018/146.pdf). We're currently working on\ncovering JAX's ideas and capabilities in a more comprehensive and up-to-date\npaper.\n\n## Reference documentation\n\nFor details about the JAX API, see the\n[reference documentation](https://jax.readthedocs.io/).\n\nFor getting started as a JAX developer, see the\n[developer documentation](https://jax.readthedocs.io/en/latest/developer.html).\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/jax-0.4.8.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "joblib",
        "version": "1.2.0",
        "platform": [
          "any"
        ],
        "summary": "Lightweight pipelining with Python functions",
        "description_content_type": "text/x-rst",
        "home_page": "https://joblib.readthedocs.io",
        "author": "Gael Varoquaux",
        "author_email": "gael.varoquaux@normalesup.org",
        "license": "BSD",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Environment :: Console",
          "Intended Audience :: Developers",
          "Intended Audience :: Science/Research",
          "Intended Audience :: Education",
          "License :: OSI Approved :: BSD License",
          "Operating System :: OS Independent",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Topic :: Scientific/Engineering",
          "Topic :: Utilities",
          "Topic :: Software Development :: Libraries"
        ],
        "requires_python": ">=3.7",
        "project_url": [
          "Source, https://github.com/joblib/joblib"
        ],
        "description": "|PyPi| |Azure| |ReadTheDocs| |Codecov| \n\n.. |PyPi| image:: https://badge.fury.io/py/joblib.svg\n   :target: https://badge.fury.io/py/joblib\n   :alt: Joblib version\n\n.. |Azure| image:: https://dev.azure.com/joblib/joblib/_apis/build/status/joblib.joblib?branchName=master\n   :target: https://dev.azure.com/joblib/joblib/_build?definitionId=3&_a=summary&branchFilter=40\n   :alt: Azure CI status\n\n.. |ReadTheDocs| image:: https://readthedocs.org/projects/joblib/badge/?version=latest\n    :target: https://joblib.readthedocs.io/en/latest/?badge=latest\n    :alt: Documentation Status\n\n.. |Codecov| image:: https://codecov.io/gh/joblib/joblib/branch/master/graph/badge.svg\n   :target: https://codecov.io/gh/joblib/joblib\n   :alt: Codecov coverage\n\n\nThe homepage of joblib with user documentation is located on:\n\nhttps://joblib.readthedocs.io\n\nGetting the latest code\n=======================\n\nTo get the latest code using git, simply type::\n\n    git clone git://github.com/joblib/joblib.git\n\nIf you don't have git installed, you can download a zip or tarball\nof the latest code: http://github.com/joblib/joblib/archives/master\n\nInstalling\n==========\n\nYou can use `pip` to install joblib::\n\n    pip install joblib\n\nfrom any directory or::\n\n    python setup.py install\n\nfrom the source directory.\n\nDependencies\n============\n\n- Joblib has no mandatory dependencies besides Python (supported versions are\n  3.7+).\n- Joblib has an optional dependency on Numpy (at least version 1.6.1) for array\n  manipulation.\n- Joblib includes its own vendored copy of\n  `loky <https://github.com/tomMoral/loky>`_ for process management.\n- Joblib can efficiently dump and load numpy arrays but does not require numpy\n  to be installed.\n- Joblib has an optional dependency on\n  `python-lz4 <https://pypi.python.org/pypi/lz4>`_ as a faster alternative to\n  zlib and gzip for compressed serialization.\n- Joblib has an optional dependency on psutil to mitigate memory leaks in\n  parallel worker processes.\n- Some examples require external dependencies such as pandas. See the\n  instructions in the `Building the docs`_ section for details.\n\nWorkflow to contribute\n======================\n\nTo contribute to joblib, first create an account on `github\n<http://github.com/>`_. Once this is done, fork the `joblib repository\n<http://github.com/joblib/joblib>`_ to have your own repository,\nclone it using 'git clone' on the computers where you want to work. Make\nyour changes in your clone, push them to your github account, test them\non several computers, and when you are happy with them, send a pull\nrequest to the main repository.\n\nRunning the test suite\n======================\n\nTo run the test suite, you need the pytest (version >= 3) and coverage modules.\nRun the test suite using::\n\n    pytest joblib\n\nfrom the root of the project.\n\nBuilding the docs\n=================\n\nTo build the docs you need to have sphinx (>=1.4) and some dependencies\ninstalled::\n\n    pip install -U -r .readthedocs-requirements.txt\n\nThe docs can then be built with the following command::\n\n    make doc\n\nThe html docs are located in the ``doc/_build/html`` directory.\n\n\nMaking a source tarball\n=======================\n\nTo create a source tarball, eg for packaging or distributing, run the\nfollowing command::\n\n    python setup.py sdist\n\nThe tarball will be created in the `dist` directory. This command will\ncompile the docs, and the resulting tarball can be installed with\nno extra dependencies than the Python standard library. You will need\nsetuptool and sphinx.\n\nMaking a release and uploading it to PyPI\n=========================================\n\nThis command is only run by project manager, to make a release, and\nupload in to PyPI::\n\n    python setup.py sdist bdist_wheel\n    twine upload dist/*\n\n\nNote that the documentation should automatically get updated at each git\npush. If that is not the case, try building th doc locally and resolve\nany doc build error (in particular when running the examples).\n\nUpdating the changelog\n======================\n\nChanges are listed in the CHANGES.rst file. They must be manually updated\nbut, the following git command may be used to generate the lines::\n\n    git log --abbrev-commit --date=short --no-merges --sparse\n\n\n\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/joblib-1.2.0.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "keras",
        "version": "2.12.0",
        "platform": [
          "UNKNOWN"
        ],
        "summary": "Deep learning for humans.",
        "keywords": [
          "keras",
          "tensorflow",
          "machine learning",
          "deep learning"
        ],
        "home_page": "https://keras.io/",
        "download_url": "https://github.com/keras-team/keras/tags",
        "author": "Keras team",
        "author_email": "keras-users@googlegroups.com",
        "license": "Apache 2.0",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Intended Audience :: Developers",
          "Intended Audience :: Education",
          "Intended Audience :: Science/Research",
          "License :: OSI Approved :: Apache Software License",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Programming Language :: Python :: 3 :: Only",
          "Topic :: Scientific/Engineering",
          "Topic :: Scientific/Engineering :: Mathematics",
          "Topic :: Scientific/Engineering :: Artificial Intelligence",
          "Topic :: Software Development",
          "Topic :: Software Development :: Libraries",
          "Topic :: Software Development :: Libraries :: Python Modules"
        ],
        "requires_python": ">=3.8",
        "description": "TensorFlow Keras is an implementation of the Keras API that uses TensorFlow as\na backend.\n\n\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/keras-2.12.0.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "kiwisolver",
        "version": "1.4.4",
        "summary": "A fast implementation of the Cassowary constraint solver",
        "description_content_type": "text/x-rst",
        "author_email": "The Nucleic Development Team <sccolbert@gmail.com>",
        "maintainer_email": "\"Matthieu C. Dartiailh\" <m.dartiailh@gmail.com>",
        "license": "=========================\n         The Kiwi licensing terms\n        =========================\n        Kiwi is licensed under the terms of the Modified BSD License (also known as\n        New or Revised BSD), as follows:        \n        Copyright (c) 2013, Nucleic Development Team        \n        All rights reserved.        \n        Redistribution and use in source and binary forms, with or without\n        modification, are permitted provided that the following conditions are met:        \n        Redistributions of source code must retain the above copyright notice, this\n        list of conditions and the following disclaimer.        \n        Redistributions in binary form must reproduce the above copyright notice, this\n        list of conditions and the following disclaimer in the documentation and/or\n        other materials provided with the distribution.        \n        Neither the name of the Nucleic Development Team nor the names of its\n        contributors may be used to endorse or promote products derived from this\n        software without specific prior written permission.        \n        THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n        ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n        WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n        DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE\n        FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n        DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n        SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n        CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n        OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n        OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.        \n        About Kiwi\n        ----------\n        Chris Colbert began the Kiwi project in December 2013 in an effort to\n        create a blisteringly fast UI constraint solver. Chris is still the\n        project lead.        \n        The Nucleic Development Team is the set of all contributors to the Nucleic\n        project and its subprojects.        \n        The core team that coordinates development on GitHub can be found here:\n        http://github.com/nucleic. The current team consists of:        \n        * Chris Colbert        \n        Our Copyright Policy\n        --------------------\n        Nucleic uses a shared copyright model. Each contributor maintains copyright\n        over their contributions to Nucleic. But, it is important to note that these\n        contributions are typically only changes to the repositories. Thus, the Nucleic\n        source code, in its entirety is not the copyright of any single person or\n        institution. Instead, it is the collective copyright of the entire Nucleic\n        Development Team. If individual contributors want to maintain a record of what\n        changes/contributions they have specific copyright on, they should indicate\n        their copyright in the commit message of the change, when they commit the\n        change to one of the Nucleic repositories.        \n        With this in mind, the following banner should be used in any source code file\n        to indicate the copyright and license terms:        \n        #------------------------------------------------------------------------------\n        # Copyright (c) 2013, Nucleic Development Team.\n        #\n        # Distributed under the terms of the Modified BSD License.\n        #\n        # The full license is in the file LICENSE, distributed with this software.\n        #------------------------------------------------------------------------------        ",
        "classifier": [
          "License :: OSI Approved :: BSD License",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: Implementation :: CPython",
          "Programming Language :: Python :: Implementation :: PyPy"
        ],
        "requires_dist": [
          "typing-extensions ; python_version < \"3.8\""
        ],
        "requires_python": ">=3.7",
        "project_url": [
          "homepage, https://github.com/nucleic/kiwi",
          "documentation, https://kiwisolver.readthedocs.io/en/latest/",
          "repository, https://github.com/nucleic/kiwi",
          "changelog, https://github.com/nucleic/kiwi/blob/main/releasenotes.rst"
        ],
        "description": "Welcome to Kiwi\n===============\n\n.. image:: https://travis-ci.org/nucleic/kiwi.svg?branch=main\n    :target: https://travis-ci.org/nucleic/kiwi\n.. image:: https://github.com/nucleic/kiwi/workflows/Continuous%20Integration/badge.svg\n    :target: https://github.com/nucleic/kiwi/actions\n.. image:: https://github.com/nucleic/kiwi/workflows/Documentation%20building/badge.svg\n    :target: https://github.com/nucleic/kiwi/actions\n.. image:: https://codecov.io/gh/nucleic/kiwi/branch/main/graph/badge.svg\n  :target: https://codecov.io/gh/nucleic/kiwi\n.. image:: https://readthedocs.org/projects/kiwisolver/badge/?version=latest\n    :target: https://kiwisolver.readthedocs.io/en/latest/?badge=latest\n    :alt: Documentation Status\n\nKiwi is an efficient C++ implementation of the Cassowary constraint solving\nalgorithm. Kiwi is an implementation of the algorithm based on the\n`seminal Cassowary paper <https://constraints.cs.washington.edu/solvers/cassowary-tochi.pdf>`_.\nIt is *not* a refactoring of the original C++ solver. Kiwi has been designed\nfrom the ground up to be lightweight and fast. Kiwi ranges from 10x to 500x\nfaster than the original Cassowary solver with typical usecases gaining a 40x\nimprovement. Memory savings are consistently > 5x.\n\nIn addition to the C++ solver, Kiwi ships with hand-rolled Python bindings for\nPython 3.7+.\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/kiwisolver-1.4.4.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "libclang",
        "version": "16.0.0",
        "platform": [
          "any"
        ],
        "summary": "Clang Python Bindings, mirrored from the official LLVM repo: https://github.com/llvm/llvm-project/tree/main/clang/bindings/python, to make the installation process easier.",
        "description_content_type": "text/markdown",
        "keywords": [
          "Clang",
          "Python",
          "Bindings"
        ],
        "home_page": "https://github.com/sighingnow/libclang",
        "author": "Tao He",
        "author_email": "sighingnow@gmail.com",
        "license": "Apache License 2.0",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Intended Audience :: Developers",
          "Topic :: Software Development :: Compilers",
          "Operating System :: MacOS :: MacOS X",
          "Operating System :: Microsoft :: Windows",
          "Operating System :: POSIX",
          "Programming Language :: Python",
          "Programming Language :: Python :: 2",
          "Programming Language :: Python :: 2.7",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.3",
          "Programming Language :: Python :: 3.4",
          "Programming Language :: Python :: 3.5",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Programming Language :: Python :: 3.12",
          "License :: OSI Approved :: Apache Software License"
        ],
        "project_url": [
          "Documentation, https://libclang.readthedocs.io",
          "Source, https://github.com/sighingnow/libclang",
          "Tracker, https://github.com/sighingnow/libclang/issues"
        ],
        "description": "libclang-for-pip\n================\n\n[![PyPI](https://img.shields.io/pypi/v/libclang)](https://pypi.org/project/libclang)\n![Python](https://img.shields.io/pypi/pyversions/libclang)\n![Downloads](https://img.shields.io/pypi/dw/libclang)\n[![License](https://img.shields.io/pypi/l/libclang)](https://github.com/sighingnow/libclang/blob/master/LICENSE.TXT)\n\n[![Arch: x86\\_64](https://img.shields.io/badge/arch-x86__64-brightgreen)](https://pypi.org/project/libclang/#files)\n[![Arch: aarch64](https://img.shields.io/badge/arch-aarch64-yellowgreen)](https://pypi.org/project/libclang/#files)\n[![Arch: arm](https://img.shields.io/badge/arch-arm-orange)](https://pypi.org/project/libclang/#files)\n\n[![Linux](https://github.com/sighingnow/libclang/workflows/libclang-linux-amd64/badge.svg)](https://github.com/sighingnow/libclang/actions/workflows/libclang-linux-amd64.yml)\n[![Linux Arm](https://github.com/sighingnow/libclang/workflows/libclang-linux-arm/badge.svg)](https://github.com/sighingnow/libclang/actions/workflows/libclang-linux-arm.yml)\n[![Linux AArch64](https://github.com/sighingnow/libclang/workflows/libclang-linux-aarch64/badge.svg)](https://github.com/sighingnow/libclang/actions/workflows/libclang-linux-aarch64.yml)\n[![Linux Alpine](https://github.com/sighingnow/libclang/workflows/libclang-alpine-amd64/badge.svg)](https://github.com/sighingnow/libclang/actions/workflows/libclang-alpine-amd64.yml)\n\n[![MacOS Intel](https://github.com/sighingnow/libclang/workflows/libclang-macosx-amd64/badge.svg)](https://github.com/sighingnow/libclang/actions/workflows/libclang-macosx-amd64.yml)\n[![MacOS M1](https://img.shields.io/cirrus/github/sighingnow/libclang?label=libclang-macosx-arm64)](https://cirrus-ci.com/github/sighingnow/libclang)\n\n[![Windows](https://github.com/sighingnow/libclang/workflows/libclang-windows-amd64/badge.svg)](https://github.com/sighingnow/libclang/actions/workflows/libclang-windows-amd64.yml)\n[![Windows AArch64](https://github.com/sighingnow/libclang/workflows/libclang-windows-aarch64/badge.svg)](https://github.com/sighingnow/libclang/actions/workflows/libclang-windows-aarch64.yml)\n\nThe repository contains code taken from [the LLVM project][1], to make it easier to install\nclang's python bindings.\n\nThe repository copies necessary Python binding files from LLVM repo, adds packaging scripts\nto make it a valid Python package and finally uploads the package to [pypi][2]. To make the libclang\navailable without installing the LLVM toolkits, this package provides bundled static-linked libclang\nshared library for different platforms, which, should work well on OSX, Windows, as well as\nusual Linux distributions.\n\nThe aim of this project is to make the `clang.cindex` (aka., Clang Python Bindings)\navailable for more Python users, without setting up the LLVM environment. To install the package,\nyou just need to run\n\n```bash\npip install libclang\n```\n\nNote that the library is named `libclang`, the package `clang` on PyPi is another package and\ndoesn't bundle the prebuilt shared library.\n\nInternals\n---------\n\nUpdate class variable `library_path` of `Config` in `cindex.py` as:\n\n```python\n    library_path = os.path.join(os.path.dirname(os.path.realpath(__file__)), 'native')\n```\n\nLicense\n-------\n\nThis repository follows the license agreement of the LLVM project, see [Apache-2.0 WITH LLVM-exception](./LICENSE.TXT).\n\n[1]: https://github.com/llvm/llvm-project/tree/main/clang/bindings/python\n[2]: https://pypi.org/project/libclang\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/libclang-16.0.0.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "linkify-it-py",
        "version": "2.0.2",
        "summary": "Links recognition library with FULL unicode support.",
        "description_content_type": "text/markdown",
        "keywords": [
          "linkify",
          "linkifier",
          "autolink",
          "autolinker"
        ],
        "author": "tsutsu3",
        "license": "MIT",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "License :: OSI Approved :: MIT License",
          "Operating System :: OS Independent",
          "Intended Audience :: Developers",
          "Topic :: Software Development :: Libraries :: Python Modules"
        ],
        "requires_dist": [
          "uc-micro-py",
          "pytest ; extra == 'benchmark'",
          "pytest-benchmark ; extra == 'benchmark'",
          "pre-commit ; extra == 'dev'",
          "isort ; extra == 'dev'",
          "flake8 ; extra == 'dev'",
          "black ; extra == 'dev'",
          "pyproject-flake8 ; extra == 'dev'",
          "sphinx ; extra == 'doc'",
          "sphinx-book-theme ; extra == 'doc'",
          "myst-parser ; extra == 'doc'",
          "pytest ; extra == 'test'",
          "coverage ; extra == 'test'",
          "pytest-cov ; extra == 'test'"
        ],
        "requires_python": ">=3.7",
        "project_url": [
          "Homepage, https://github.com/tsutsu3/linkify-it-py"
        ],
        "provides_extra": [
          "benchmark",
          "dev",
          "doc",
          "test"
        ],
        "description": "# linkify-it-py\n\n[![CI](https://github.com/tsutsu3/linkify-it-py/workflows/CI/badge.svg?branch=main)](https://github.com/tsutsu3/linkify-it-py/actions)\n[![pypi](https://img.shields.io/pypi/v/linkify-it-py)](https://pypi.org/project/linkify-it-py/)\n[![Anaconda-Server Badge](https://anaconda.org/conda-forge/linkify-it-py/badges/version.svg)](https://anaconda.org/conda-forge/linkify-it-py)\n[![Documentation Status](https://readthedocs.org/projects/linkify-it-py/badge/?version=latest)](https://linkify-it-py.readthedocs.io/en/latest/?badge=latest)\n[![codecov](https://codecov.io/gh/tsutsu3/linkify-it-py/branch/main/graph/badge.svg)](https://codecov.io/gh/tsutsu3/linkify-it-py)\n[![Maintainability](https://api.codeclimate.com/v1/badges/6341fd3ec5f05fde392f/maintainability)](https://codeclimate.com/github/tsutsu3/linkify-it-py/maintainability)\n\nThis is Python port of [linkify-it](https://github.com/markdown-it/linkify-it).\n\n> Links recognition library with FULL unicode support.\n> Focused on high quality link patterns detection in plain text.\n\n__[Javascript Demo](http://markdown-it.github.io/linkify-it/)__\n\nWhy it's awesome:\n\n- Full unicode support, _with astral characters_!\n- International domains support.\n- Allows rules extension & custom normalizers.\n\n\n## Install\n\n```bash\npip install linkify-it-py\n```\n\nor\n\n```bash\nconda install -c conda-forge linkify-it-py\n```\n\n## Usage examples\n\n### Example 1. Simple use\n\n```python\nfrom linkify_it import LinkifyIt\n\n\nlinkify = LinkifyIt()\n\nprint(linkify.test(\"Site github.com!\"))\n# => True\n\nprint(linkify.match(\"Site github.com!\"))\n# => [linkify_it.main.Match({\n#         'schema': '',\n#         'index': 5,\n#         'last_index': 15,\n#         'raw': 'github.com',\n#         'text': 'github.com',\n#         'url': 'http://github.com'\n#     }]\n```\n\n### Example 2. With options\n\n```python\nfrom linkify_it import LinkifyIt\nfrom linkify_it.tlds import TLDS\n\n\n# Reload full tlds list & add unofficial `.onion` domain.\nlinkify = (\n    LinkifyIt()\n    .tlds(TLDS)               # Reload with full tlds list\n    .tlds(\"onion\", True)      # Add unofficial `.onion` domain\n    .add(\"git:\", \"http:\")     # Add `git:` protocol as \"alias\"\n    .add(\"ftp:\", None)        # Disable `ftp:` protocol\n    .set({\"fuzzy_ip\": True})  # Enable IPs in fuzzy links (without schema)\n)\nprint(linkify.test(\"Site tamanegi.onion!\"))\n# => True\n\nprint(linkify.match(\"Site tamanegi.onion!\"))\n# => [linkify_it.main.Match({\n#         'schema': '',\n#         'index': 5,\n#         'last_index': 19,\n#         'raw': 'tamanegi.onion',\n#         'text': 'tamanegi.onion',\n#         'url': 'http://tamanegi.onion'\n#     }]\n```\n\n### Example 3. Add twitter mentions handler\n\n```python\nfrom linkify_it import LinkifyIt\n\n\nlinkify = LinkifyIt()\n\ndef validate(obj, text, pos):\n    tail = text[pos:]\n\n    if not obj.re.get(\"twitter\"):\n        obj.re[\"twitter\"] = re.compile(\n            \"^([a-zA-Z0-9_]){1,15}(?!_)(?=$|\" + obj.re[\"src_ZPCc\"] + \")\"\n        )\n    if obj.re[\"twitter\"].search(tail):\n        if pos > 2 and tail[pos - 2] == \"@\":\n            return False\n        return len(obj.re[\"twitter\"].search(tail).group())\n    return 0\n\ndef normalize(obj, match):\n    match.url = \"https://twitter.com/\" + re.sub(r\"^@\", \"\", match.url)\n\nlinkify.add(\"@\", {\"validate\": validate, \"normalize\": normalize})\n```\n\n\n## API\n\n[API documentation](https://linkify-it-py.readthedocs.io/en/latest/)\n\n### LinkifyIt(schemas, options)\n\nCreates new linkifier instance with optional additional schemas.\n\nBy default understands:\n\n- `http(s)://...` , `ftp://...`, `mailto:...` & `//...` links\n- \"fuzzy\" links and emails (google.com, foo@bar.com).\n\n`schemas` is an dict, where each key/value describes protocol/rule:\n\n- __key__ - link prefix (usually, protocol name with `:` at the end, `skype:`\n  for example). `linkify-it-py` makes sure that prefix is not preceded with\n  alphanumeric char.\n- __value__ - rule to check tail after link prefix\n  - _str_\n    - just alias to existing rule\n  - _dict_\n    - _validate_ - either a `re.Pattern` (start with `^`, and don't include the\n      link prefix itself), or a validator `function` which, given arguments\n      _self_, _text_ and _pos_, returns the length of a match in _text_\n      starting at index _pos_.  _pos_ is the index right after the link prefix.\n      _self_ can be used to access the linkify object to cache data.\n    - _normalize_ - optional function to normalize text & url of matched result\n      (for example, for twitter mentions).\n\n`options`:\n\n- __fuzzy_link__ - recognize URL-s without `http(s)://` head. Default `True`.\n- __fuzzy_ip__ - allow IPs in fuzzy links above. Can conflict with some texts\n  like version numbers. Default `False`.\n- __fuzzy_email__ - recognize emails without `mailto:` prefix. Default `True`.\n- __---__ - set `True` to terminate link with `---` (if it's considered as long dash).\n\n\n### .test(text)\n\nSearches linkifiable pattern and returns `True` on success or `False` on fail.\n\n\n### .pretest(text)\n\nQuick check if link MAY BE can exist. Can be used to optimize more expensive\n`.test()` calls. Return `False` if link can not be found, `True` - if `.test()`\ncall needed to know exactly.\n\n\n### .test_schema_at(text, name, position)\n\nSimilar to `.test()` but checks only specific protocol tail exactly at given\nposition. Returns length of found pattern (0 on fail).\n\n\n### .match(text)\n\nReturns `list` of found link matches or null if nothing found.\n\nEach match has:\n\n- __schema__ - link schema, can be empty for fuzzy links, or `//` for\n  protocol-neutral links.\n- __index__ - offset of matched text\n- __last_index__ - index of next char after mathch end\n- __raw__ - matched text\n- __text__ - normalized text\n- __url__ - link, generated from matched text\n\n### .matchAtStart(text)\n\nChecks if a match exists at the start of the string. Returns `Match`\n(see docs for `match(text)`) or null if no URL is at the start.\nDoesn't work with fuzzy links.\n\n### .tlds(list_tlds, keep_old=False)\n\nLoad (or merge) new tlds list. Those are needed for fuzzy links (without schema)\nto avoid false positives. By default:\n\n- 2-letter root zones are ok.\n- biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф are ok.\n- encoded (`xn--...`) root zones are ok.\n\nIf that's not enough, you can reload defaults with more detailed zones list.\n\n### .add(key, value)\n\nAdd a new schema to the schemas object. As described in the constructor\ndefinition, `key` is a link prefix (`skype:`, for example), and `value`\nis a `str` to alias to another schema, or an `dict` with `validate` and\noptionally `normalize` definitions.  To disable an existing rule, use\n`.add(key, None)`.\n\n\n### .set(options)\n\nOverride default options. Missed properties will not be changed.\n\n\n## License\n\n[MIT](https://github.com/tsutsu3/linkify-it-py/blob/master/LICENSE)\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/linkify_it_py-2.0.2.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "markdown-it-py",
        "version": "2.2.0",
        "summary": "Python port of markdown-it. Markdown parsing, done right!",
        "description_content_type": "text/markdown",
        "keywords": [
          "markdown",
          "lexer",
          "parser",
          "commonmark",
          "markdown-it"
        ],
        "author_email": "Chris Sewell <chrisj_sewell@hotmail.com>",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: MIT License",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: Implementation :: CPython",
          "Programming Language :: Python :: Implementation :: PyPy",
          "Topic :: Software Development :: Libraries :: Python Modules",
          "Topic :: Text Processing :: Markup"
        ],
        "requires_dist": [
          "mdurl~=0.1",
          "typing_extensions>=3.7.4;python_version<'3.8'",
          "psutil ; extra == \"benchmarking\"",
          "pytest ; extra == \"benchmarking\"",
          "pytest-benchmark ; extra == \"benchmarking\"",
          "pre-commit~=3.0 ; extra == \"code_style\"",
          "commonmark~=0.9 ; extra == \"compare\"",
          "markdown~=3.4 ; extra == \"compare\"",
          "mistletoe~=1.0 ; extra == \"compare\"",
          "mistune~=2.0 ; extra == \"compare\"",
          "panflute~=2.3 ; extra == \"compare\"",
          "linkify-it-py>=1,<3 ; extra == \"linkify\"",
          "mdit-py-plugins ; extra == \"plugins\"",
          "gprof2dot ; extra == \"profiling\"",
          "attrs ; extra == \"rtd\"",
          "myst-parser ; extra == \"rtd\"",
          "pyyaml ; extra == \"rtd\"",
          "sphinx ; extra == \"rtd\"",
          "sphinx-copybutton ; extra == \"rtd\"",
          "sphinx-design ; extra == \"rtd\"",
          "sphinx_book_theme ; extra == \"rtd\"",
          "coverage ; extra == \"testing\"",
          "pytest ; extra == \"testing\"",
          "pytest-cov ; extra == \"testing\"",
          "pytest-regressions ; extra == \"testing\""
        ],
        "requires_python": ">=3.7",
        "project_url": [
          "Documentation, https://markdown-it-py.readthedocs.io",
          "Homepage, https://github.com/executablebooks/markdown-it-py"
        ],
        "provides_extra": [
          "benchmarking",
          "code_style",
          "compare",
          "linkify",
          "plugins",
          "profiling",
          "rtd",
          "testing"
        ],
        "description": "# markdown-it-py\n\n[![Github-CI][github-ci]][github-link]\n[![Coverage Status][codecov-badge]][codecov-link]\n[![PyPI][pypi-badge]][pypi-link]\n[![Conda][conda-badge]][conda-link]\n[![Code style: black][black-badge]][black-link]\n[![PyPI - Downloads][install-badge]][install-link]\n\n> Markdown parser done right.\n\n- Follows the __[CommonMark spec](http://spec.commonmark.org/)__ for baseline parsing\n- Configurable syntax: you can add new rules and even replace existing ones.\n- Pluggable: Adds syntax extensions to extend the parser (see the [plugin list][md-plugins]).\n- High speed (see our [benchmarking tests][md-performance])\n- [Safe by default][md-security]\n\nThis is a Python port of [markdown-it], and some of its associated plugins.\nFor more details see: <https://markdown-it-py.readthedocs.io>.\n\nFor details on [markdown-it] itself, see:\n\n- The __[Live demo](https://markdown-it.github.io)__\n- [The markdown-it README][markdown-it-readme]\n\n## Installation\n\n```bash\nconda install -c conda-forge markdown-it-py\n```\n\nor\n\n```bash\npip install markdown-it-py[plugins]\n```\n\nor with extras\n\n```bash\nconda install -c conda-forge markdown-it-py linkify-it-py mdit-py-plugins\npip install markdown-it-py[linkify,plugins]\n```\n\n## Usage\n\n### Python API Usage\n\nRender markdown to HTML with markdown-it-py and a custom configuration\nwith and without plugins and features:\n\n```python\nfrom markdown_it import MarkdownIt\nfrom mdit_py_plugins.front_matter import front_matter_plugin\nfrom mdit_py_plugins.footnote import footnote_plugin\n\nmd = (\n    MarkdownIt('commonmark' ,{'breaks':True,'html':True})\n    .use(front_matter_plugin)\n    .use(footnote_plugin)\n    .enable('table')\n)\ntext = (\"\"\"\n---\na: 1\n---\n\na | b\n- | -\n1 | 2\n\nA footnote [^1]\n\n[^1]: some details\n\"\"\")\ntokens = md.parse(text)\nhtml_text = md.render(text)\n\n## To export the html to a file, uncomment the lines below:\n# from pathlib import Path\n# Path(\"output.html\").write_text(html_text)\n```\n\n### Command-line Usage\n\nRender markdown to HTML with markdown-it-py from the\ncommand-line:\n\n```console\nusage: markdown-it [-h] [-v] [filenames [filenames ...]]\n\nParse one or more markdown files, convert each to HTML, and print to stdout\n\npositional arguments:\n  filenames      specify an optional list of files to convert\n\noptional arguments:\n  -h, --help     show this help message and exit\n  -v, --version  show program's version number and exit\n\nInteractive:\n\n  $ markdown-it\n  markdown-it-py [version 0.0.0] (interactive)\n  Type Ctrl-D to complete input, or Ctrl-C to exit.\n  >>> # Example\n  ... > markdown *input*\n  ...\n  <h1>Example</h1>\n  <blockquote>\n  <p>markdown <em>input</em></p>\n  </blockquote>\n\nBatch:\n\n  $ markdown-it README.md README.footer.md > index.html\n\n```\n\n## References / Thanks\n\nBig thanks to the authors of [markdown-it]:\n\n- Alex Kocharin [github/rlidwka](https://github.com/rlidwka)\n- Vitaly Puzrin [github/puzrin](https://github.com/puzrin)\n\nAlso [John MacFarlane](https://github.com/jgm) for his work on the CommonMark spec and reference implementations.\n\n[github-ci]: https://github.com/executablebooks/markdown-it-py/workflows/Python%20package/badge.svg?branch=master\n[github-link]: https://github.com/executablebooks/markdown-it-py\n[pypi-badge]: https://img.shields.io/pypi/v/markdown-it-py.svg\n[pypi-link]: https://pypi.org/project/markdown-it-py\n[conda-badge]: https://anaconda.org/conda-forge/markdown-it-py/badges/version.svg\n[conda-link]: https://anaconda.org/conda-forge/markdown-it-py\n[codecov-badge]: https://codecov.io/gh/executablebooks/markdown-it-py/branch/master/graph/badge.svg\n[codecov-link]: https://codecov.io/gh/executablebooks/markdown-it-py\n[black-badge]: https://img.shields.io/badge/code%20style-black-000000.svg\n[black-link]: https://github.com/ambv/black\n[install-badge]: https://img.shields.io/pypi/dw/markdown-it-py?label=pypi%20installs\n[install-link]: https://pypistats.org/packages/markdown-it-py\n\n[CommonMark spec]: http://spec.commonmark.org/\n[markdown-it]: https://github.com/markdown-it/markdown-it\n[markdown-it-readme]: https://github.com/markdown-it/markdown-it/blob/master/README.md\n[md-security]: https://markdown-it-py.readthedocs.io/en/latest/other.html\n[md-performance]: https://markdown-it-py.readthedocs.io/en/latest/other.html\n[md-plugins]: https://markdown-it-py.readthedocs.io/en/latest/plugins.html\n\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/markdown_it_py-2.2.0.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "matplotlib",
        "version": "3.7.1",
        "platform": [
          "any"
        ],
        "summary": "Python plotting package",
        "description_content_type": "text/markdown",
        "home_page": "https://matplotlib.org",
        "download_url": "https://matplotlib.org/stable/users/installing/index.html",
        "author": "John D. Hunter, Michael Droettboom",
        "author_email": "matplotlib-users@python.org",
        "license": "PSF",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Framework :: Matplotlib",
          "Intended Audience :: Science/Research",
          "Intended Audience :: Education",
          "License :: OSI Approved :: Python Software Foundation License",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Topic :: Scientific/Engineering :: Visualization"
        ],
        "requires_dist": [
          "contourpy (>=1.0.1)",
          "cycler (>=0.10)",
          "fonttools (>=4.22.0)",
          "kiwisolver (>=1.0.1)",
          "numpy (>=1.20)",
          "packaging (>=20.0)",
          "pillow (>=6.2.0)",
          "pyparsing (>=2.3.1)",
          "python-dateutil (>=2.7)",
          "importlib-resources (>=3.2.0) ; python_version<\"3.10\""
        ],
        "requires_python": ">=3.8",
        "project_url": [
          "Documentation, https://matplotlib.org",
          "Source Code, https://github.com/matplotlib/matplotlib",
          "Bug Tracker, https://github.com/matplotlib/matplotlib/issues",
          "Forum, https://discourse.matplotlib.org/",
          "Donate, https://numfocus.org/donate-to-matplotlib"
        ],
        "description": "[![PyPi](https://badge.fury.io/py/matplotlib.svg)](https://badge.fury.io/py/matplotlib)\n[![Downloads](https://pepy.tech/badge/matplotlib/month)](https://pepy.tech/project/matplotlib)\n[![NUMFocus](https://img.shields.io/badge/powered%20by-NumFOCUS-orange.svg?style=flat&colorA=E1523D&colorB=007D8A)](https://numfocus.org)\n\n[![DiscourseBadge](https://img.shields.io/badge/help_forum-discourse-blue.svg)](https://discourse.matplotlib.org)\n[![Gitter](https://badges.gitter.im/matplotlib/matplotlib.svg)](https://gitter.im/matplotlib/matplotlib)\n[![GitHubIssues](https://img.shields.io/badge/issue_tracking-github-blue.svg)](https://github.com/matplotlib/matplotlib/issues)\n[![GitTutorial](https://img.shields.io/badge/PR-Welcome-%23FF8300.svg?)](https://git-scm.com/book/en/v2/GitHub-Contributing-to-a-Project)\n\n[![GitHubActions](https://github.com/matplotlib/matplotlib/workflows/Tests/badge.svg)](https://github.com/matplotlib/matplotlib/actions?query=workflow%3ATests)\n[![AzurePipelines](https://dev.azure.com/matplotlib/matplotlib/_apis/build/status/matplotlib.matplotlib?branchName=main)](https://dev.azure.com/matplotlib/matplotlib/_build/latest?definitionId=1&branchName=main)\n[![AppVeyor](https://ci.appveyor.com/api/projects/status/github/matplotlib/matplotlib?branch=main&svg=true)](https://ci.appveyor.com/project/matplotlib/matplotlib)\n[![Codecov](https://codecov.io/github/matplotlib/matplotlib/badge.svg?branch=main&service=github)](https://codecov.io/github/matplotlib/matplotlib?branch=main)\n\n![image](https://matplotlib.org/_static/logo2.svg)\n\nMatplotlib is a comprehensive library for creating static, animated, and\ninteractive visualizations in Python.\n\nCheck out our [home page](https://matplotlib.org/) for more information.\n\n![image](https://matplotlib.org/_static/readme_preview.png)\n\nMatplotlib produces publication-quality figures in a variety of hardcopy\nformats and interactive environments across platforms. Matplotlib can be\nused in Python scripts, Python/IPython shells, web application servers,\nand various graphical user interface toolkits.\n\n## Install\n\nSee the [install\ndocumentation](https://matplotlib.org/stable/users/installing/index.html),\nwhich is generated from `/doc/users/installing/index.rst`\n\n## Contribute\n\nYou've discovered a bug or something else you want to change -\nexcellent!\n\nYou've worked out a way to fix it -- even better!\n\nYou want to tell us about it -- best of all!\n\nStart at the [contributing\nguide](https://matplotlib.org/devdocs/devel/contributing.html)!\n\n## Contact\n\n[Discourse](https://discourse.matplotlib.org/) is the discussion forum\nfor general questions and discussions and our recommended starting\npoint.\n\nOur active mailing lists (which are mirrored on Discourse) are:\n\n-   [Users](https://mail.python.org/mailman/listinfo/matplotlib-users)\n    mailing list: <matplotlib-users@python.org>\n-   [Announcement](https://mail.python.org/mailman/listinfo/matplotlib-announce)\n    mailing list: <matplotlib-announce@python.org>\n-   [Development](https://mail.python.org/mailman/listinfo/matplotlib-devel)\n    mailing list: <matplotlib-devel@python.org>\n\n[Gitter](https://gitter.im/matplotlib/matplotlib) is for coordinating\ndevelopment and asking questions directly related to contributing to\nmatplotlib.\n\n## Citing Matplotlib\n\nIf Matplotlib contributes to a project that leads to publication, please\nacknowledge this by citing Matplotlib.\n\n[A ready-made citation\nentry](https://matplotlib.org/stable/users/project/citing.html) is\navailable.\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/matplotlib-3.7.1.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "mdit-py-plugins",
        "version": "0.3.5",
        "summary": "Collection of plugins for markdown-it-py",
        "description_content_type": "text/markdown",
        "keywords": [
          "markdown",
          "markdown-it",
          "lexer",
          "parser",
          "development"
        ],
        "author_email": "Chris Sewell <chrisj_sewell@hotmail.com>",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: MIT License",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: Implementation :: CPython",
          "Programming Language :: Python :: Implementation :: PyPy",
          "Topic :: Software Development :: Libraries :: Python Modules",
          "Topic :: Text Processing :: Markup"
        ],
        "requires_dist": [
          "markdown-it-py>=1.0.0,<3.0.0",
          "pre-commit ; extra == \"code_style\"",
          "attrs ; extra == \"rtd\"",
          "myst-parser~=0.16.1 ; extra == \"rtd\"",
          "sphinx-book-theme~=0.1.0 ; extra == \"rtd\"",
          "coverage ; extra == \"testing\"",
          "pytest ; extra == \"testing\"",
          "pytest-cov ; extra == \"testing\"",
          "pytest-regressions ; extra == \"testing\""
        ],
        "requires_python": ">=3.7",
        "project_url": [
          "Documentation, https://mdit-py-plugins.readthedocs.io",
          "Homepage, https://github.com/executablebooks/mdit-py-plugins"
        ],
        "provides_extra": [
          "code_style",
          "rtd",
          "testing"
        ],
        "description": "# mdit-py-plugins\n\n[![Github-CI][github-ci]][github-link]\n[![Coverage Status][codecov-badge]][codecov-link]\n[![PyPI][pypi-badge]][pypi-link]\n[![Conda][conda-badge]][conda-link]\n[![Code style: black][black-badge]][black-link]\n\nCollection of core plugins for [markdown-it-py](https://github.com/executablebooks/markdown-it-py).\n\n[github-ci]: https://github.com/executablebooks/mdit-py-plugins/workflows/continuous-integration/badge.svg\n[github-link]: https://github.com/executablebooks/mdit-py-plugins\n[pypi-badge]: https://img.shields.io/pypi/v/mdit-py-plugins.svg\n[pypi-link]: https://pypi.org/project/mdit-py-plugins\n[conda-badge]: https://anaconda.org/conda-forge/mdit-py-plugins/badges/version.svg\n[conda-link]: https://anaconda.org/conda-forge/mdit-py-plugins\n[codecov-badge]: https://codecov.io/gh/executablebooks/mdit-py-plugins/branch/master/graph/badge.svg\n[codecov-link]: https://codecov.io/gh/executablebooks/mdit-py-plugins\n[black-badge]: https://img.shields.io/badge/code%20style-black-000000.svg\n[black-link]: https://github.com/ambv/black\n[install-badge]: https://img.shields.io/pypi/dw/mdit-py-plugins?label=pypi%20installs\n[install-link]: https://pypistats.org/packages/mdit-py-plugins\n\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/mdit_py_plugins-0.3.5.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "mdurl",
        "version": "0.1.2",
        "summary": "Markdown URL utilities",
        "description_content_type": "text/markdown",
        "keywords": [
          "markdown",
          "commonmark"
        ],
        "author_email": "Taneli Hukkinen <hukkin@users.noreply.github.com>",
        "classifier": [
          "License :: OSI Approved :: MIT License",
          "Operating System :: MacOS",
          "Operating System :: Microsoft :: Windows",
          "Operating System :: POSIX :: Linux",
          "Programming Language :: Python :: 3 :: Only",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: Implementation :: CPython",
          "Programming Language :: Python :: Implementation :: PyPy",
          "Topic :: Software Development :: Libraries :: Python Modules",
          "Typing :: Typed"
        ],
        "requires_python": ">=3.7",
        "project_url": [
          "Homepage, https://github.com/executablebooks/mdurl"
        ],
        "description": "# mdurl\n\n[![Build Status](https://github.com/executablebooks/mdurl/workflows/Tests/badge.svg?branch=master)](https://github.com/executablebooks/mdurl/actions?query=workflow%3ATests+branch%3Amaster+event%3Apush)\n[![codecov.io](https://codecov.io/gh/executablebooks/mdurl/branch/master/graph/badge.svg)](https://codecov.io/gh/executablebooks/mdurl)\n[![PyPI version](https://img.shields.io/pypi/v/mdurl)](https://pypi.org/project/mdurl)\n\nThis is a Python port of the JavaScript [mdurl](https://www.npmjs.com/package/mdurl) package.\nSee the [upstream README.md file](https://github.com/markdown-it/mdurl/blob/master/README.md) for API documentation.\n\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/mdurl-0.1.2.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "ml-dtypes",
        "version": "0.1.0",
        "description_content_type": "text/markdown",
        "author_email": "ml_dtypes authors <ml_dtypes@google.com>",
        "license": "\n                                         Apache License\n                                   Version 2.0, January 2004\n                                http://www.apache.org/licenses/\n        \n           TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n        \n           1. Definitions.\n        \n              \"License\" shall mean the terms and conditions for use, reproduction,\n              and distribution as defined by Sections 1 through 9 of this document.\n        \n              \"Licensor\" shall mean the copyright owner or entity authorized by\n              the copyright owner that is granting the License.\n        \n              \"Legal Entity\" shall mean the union of the acting entity and all\n              other entities that control, are controlled by, or are under common\n              control with that entity. For the purposes of this definition,\n              \"control\" means (i) the power, direct or indirect, to cause the\n              direction or management of such entity, whether by contract or\n              otherwise, or (ii) ownership of fifty percent (50%) or more of the\n              outstanding shares, or (iii) beneficial ownership of such entity.\n        \n              \"You\" (or \"Your\") shall mean an individual or Legal Entity\n              exercising permissions granted by this License.\n        \n              \"Source\" form shall mean the preferred form for making modifications,\n              including but not limited to software source code, documentation\n              source, and configuration files.\n        \n              \"Object\" form shall mean any form resulting from mechanical\n              transformation or translation of a Source form, including but\n              not limited to compiled object code, generated documentation,\n              and conversions to other media types.\n        \n              \"Work\" shall mean the work of authorship, whether in Source or\n              Object form, made available under the License, as indicated by a\n              copyright notice that is included in or attached to the work\n              (an example is provided in the Appendix below).\n        \n              \"Derivative Works\" shall mean any work, whether in Source or Object\n              form, that is based on (or derived from) the Work and for which the\n              editorial revisions, annotations, elaborations, or other modifications\n              represent, as a whole, an original work of authorship. For the purposes\n              of this License, Derivative Works shall not include works that remain\n              separable from, or merely link (or bind by name) to the interfaces of,\n              the Work and Derivative Works thereof.\n        \n              \"Contribution\" shall mean any work of authorship, including\n              the original version of the Work and any modifications or additions\n              to that Work or Derivative Works thereof, that is intentionally\n              submitted to Licensor for inclusion in the Work by the copyright owner\n              or by an individual or Legal Entity authorized to submit on behalf of\n              the copyright owner. For the purposes of this definition, \"submitted\"\n              means any form of electronic, verbal, or written communication sent\n              to the Licensor or its representatives, including but not limited to\n              communication on electronic mailing lists, source code control systems,\n              and issue tracking systems that are managed by, or on behalf of, the\n              Licensor for the purpose of discussing and improving the Work, but\n              excluding communication that is conspicuously marked or otherwise\n              designated in writing by the copyright owner as \"Not a Contribution.\"\n        \n              \"Contributor\" shall mean Licensor and any individual or Legal Entity\n              on behalf of whom a Contribution has been received by Licensor and\n              subsequently incorporated within the Work.\n        \n           2. Grant of Copyright License. Subject to the terms and conditions of\n              this License, each Contributor hereby grants to You a perpetual,\n              worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n              copyright license to reproduce, prepare Derivative Works of,\n              publicly display, publicly perform, sublicense, and distribute the\n              Work and such Derivative Works in Source or Object form.\n        \n           3. Grant of Patent License. Subject to the terms and conditions of\n              this License, each Contributor hereby grants to You a perpetual,\n              worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n              (except as stated in this section) patent license to make, have made,\n              use, offer to sell, sell, import, and otherwise transfer the Work,\n              where such license applies only to those patent claims licensable\n              by such Contributor that are necessarily infringed by their\n              Contribution(s) alone or by combination of their Contribution(s)\n              with the Work to which such Contribution(s) was submitted. If You\n              institute patent litigation against any entity (including a\n              cross-claim or counterclaim in a lawsuit) alleging that the Work\n              or a Contribution incorporated within the Work constitutes direct\n              or contributory patent infringement, then any patent licenses\n              granted to You under this License for that Work shall terminate\n              as of the date such litigation is filed.\n        \n           4. Redistribution. You may reproduce and distribute copies of the\n              Work or Derivative Works thereof in any medium, with or without\n              modifications, and in Source or Object form, provided that You\n              meet the following conditions:\n        \n              (a) You must give any other recipients of the Work or\n                  Derivative Works a copy of this License; and\n        \n              (b) You must cause any modified files to carry prominent notices\n                  stating that You changed the files; and\n        \n              (c) You must retain, in the Source form of any Derivative Works\n                  that You distribute, all copyright, patent, trademark, and\n                  attribution notices from the Source form of the Work,\n                  excluding those notices that do not pertain to any part of\n                  the Derivative Works; and\n        \n              (d) If the Work includes a \"NOTICE\" text file as part of its\n                  distribution, then any Derivative Works that You distribute must\n                  include a readable copy of the attribution notices contained\n                  within such NOTICE file, excluding those notices that do not\n                  pertain to any part of the Derivative Works, in at least one\n                  of the following places: within a NOTICE text file distributed\n                  as part of the Derivative Works; within the Source form or\n                  documentation, if provided along with the Derivative Works; or,\n                  within a display generated by the Derivative Works, if and\n                  wherever such third-party notices normally appear. The contents\n                  of the NOTICE file are for informational purposes only and\n                  do not modify the License. You may add Your own attribution\n                  notices within Derivative Works that You distribute, alongside\n                  or as an addendum to the NOTICE text from the Work, provided\n                  that such additional attribution notices cannot be construed\n                  as modifying the License.\n        \n              You may add Your own copyright statement to Your modifications and\n              may provide additional or different license terms and conditions\n              for use, reproduction, or distribution of Your modifications, or\n              for any such Derivative Works as a whole, provided Your use,\n              reproduction, and distribution of the Work otherwise complies with\n              the conditions stated in this License.\n        \n           5. Submission of Contributions. Unless You explicitly state otherwise,\n              any Contribution intentionally submitted for inclusion in the Work\n              by You to the Licensor shall be under the terms and conditions of\n              this License, without any additional terms or conditions.\n              Notwithstanding the above, nothing herein shall supersede or modify\n              the terms of any separate license agreement you may have executed\n              with Licensor regarding such Contributions.\n        \n           6. Trademarks. This License does not grant permission to use the trade\n              names, trademarks, service marks, or product names of the Licensor,\n              except as required for reasonable and customary use in describing the\n              origin of the Work and reproducing the content of the NOTICE file.\n        \n           7. Disclaimer of Warranty. Unless required by applicable law or\n              agreed to in writing, Licensor provides the Work (and each\n              Contributor provides its Contributions) on an \"AS IS\" BASIS,\n              WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n              implied, including, without limitation, any warranties or conditions\n              of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n              PARTICULAR PURPOSE. You are solely responsible for determining the\n              appropriateness of using or redistributing the Work and assume any\n              risks associated with Your exercise of permissions under this License.\n        \n           8. Limitation of Liability. In no event and under no legal theory,\n              whether in tort (including negligence), contract, or otherwise,\n              unless required by applicable law (such as deliberate and grossly\n              negligent acts) or agreed to in writing, shall any Contributor be\n              liable to You for damages, including any direct, indirect, special,\n              incidental, or consequential damages of any character arising as a\n              result of this License or out of the use or inability to use the\n              Work (including but not limited to damages for loss of goodwill,\n              work stoppage, computer failure or malfunction, or any and all\n              other commercial damages or losses), even if such Contributor\n              has been advised of the possibility of such damages.\n        \n           9. Accepting Warranty or Additional Liability. While redistributing\n              the Work or Derivative Works thereof, You may choose to offer,\n              and charge a fee for, acceptance of support, warranty, indemnity,\n              or other liability obligations and/or rights consistent with this\n              License. However, in accepting such obligations, You may act only\n              on Your own behalf and on Your sole responsibility, not on behalf\n              of any other Contributor, and only if You agree to indemnify,\n              defend, and hold each Contributor harmless for any liability\n              incurred by, or claims asserted against, such Contributor by reason\n              of your accepting any such warranty or additional liability.\n        \n           END OF TERMS AND CONDITIONS\n        \n           APPENDIX: How to apply the Apache License to your work.\n        \n              To apply the Apache License to your work, attach the following\n              boilerplate notice, with the fields enclosed by brackets \"[]\"\n              replaced with your own identifying information. (Don't include\n              the brackets!)  The text should be enclosed in the appropriate\n              comment syntax for the file format. We also recommend that a\n              file or class name and description of purpose be included on the\n              same \"printed page\" as the copyright notice for easier\n              identification within third-party archives.\n        \n           Copyright [yyyy] [name of copyright owner]\n        \n           Licensed under the Apache License, Version 2.0 (the \"License\");\n           you may not use this file except in compliance with the License.\n           You may obtain a copy of the License at\n        \n               http://www.apache.org/licenses/LICENSE-2.0\n        \n           Unless required by applicable law or agreed to in writing, software\n           distributed under the License is distributed on an \"AS IS\" BASIS,\n           WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n           See the License for the specific language governing permissions and\n           limitations under the License.\n        ",
        "classifier": [
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3 :: Only",
          "License :: OSI Approved :: Apache Software License",
          "Intended Audience :: Science/Research"
        ],
        "requires_dist": [
          "numpy (>1.20)",
          "numpy (>=1.23.3) ; python_version > \"3.10\"",
          "numpy (>=1.21.2) ; python_version > \"3.9\"",
          "absl-py ; extra == 'dev'",
          "pytest ; extra == 'dev'",
          "pytest-xdist ; extra == 'dev'",
          "pylint (>=2.6.0) ; extra == 'dev'",
          "pyink ; extra == 'dev'"
        ],
        "requires_python": ">=3.7",
        "project_url": [
          "homepage, https://github.com/jax-ml/ml_dtypes",
          "repository, https://github.com/jax-ml/ml_dtypes"
        ],
        "provides_extra": [
          "dev"
        ],
        "description": "# ml_dtypes\n\n[![Unittests](https://github.com/jax-ml/ml_dtypes/actions/workflows/test.yml/badge.svg)](https://github.com/jax-ml/ml_dtypes/actions/workflows/test.yml)\n[![Wheel Build](https://github.com/jax-ml/ml_dtypes/actions/workflows/wheels.yml/badge.svg)](https://github.com/jax-ml/ml_dtypes/actions/workflows/wheels.yml)\n[![PyPI version](https://badge.fury.io/py/ml_dtypes.svg)](https://badge.fury.io/py/ml_dtypes)\n\n*This is not an officially supported Google product.*\n\n`ml_dtypes` is a stand-alone implementation of several NumPy dtype extensions used in machine learning libraries, including:\n\n- [`bfloat16`](https://en.wikipedia.org/wiki/Bfloat16_floating-point_format):\n  an alternative to the standard [`float16`](https://en.wikipedia.org/wiki/Half-precision_floating-point_format) format\n- `float8_*`: several experimental 8-bit floating point representations\n  including:\n  * `float8_e4m3b11`\n  * `float8_e4m3fn`\n  * `float8_e4m3fnuz`\n  * `float8_e5m2`\n  * `float8_e5m2fnuz`\n\n## Installation\n\nThe `ml_dtypes` package is tested with Python versions 3.8-3.11, and can be installed\nwith the following command:\n```\npip install ml_dtypes\n```\nTo test your installation, you can run the following:\n```\npip install absl-py pytest\npytest --pyargs ml_dtypes\n```\nTo build from source, clone the repository and run:\n```\ngit submodule init\ngit submodule update\npip install .\n```\n\n## Example Usage\n\n```python\n>>> from ml_dtypes import bfloat16\n>>> import numpy as np\n>>> np.zeros(4, dtype=bfloat16)\narray([0, 0, 0, 0], dtype=bfloat16)\n```\nImporting `ml_dtypes` also registers the data types with numpy, so that they may\nbe referred to by their string name:\n```python\n>>> np.dtype('bfloat16')\ndtype(bfloat16)\n>>> np.dtype('float8_e5m2')\ndtype(float8_e5m2)\n```\n\n## License\n\nThe `ml_dtypes` source code is licensed under the Apache 2.0 license\n(see [LICENSE](LICENSE)). Pre-compiled wheels are built with the\n[EIGEN](https://eigen.tuxfamily.org/) project, which is released under the\nMPL 2.0 license (see [LICENSE.eigen](LICENSE.eigen)).\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/ml_dtypes-0.1.0.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "mpmath",
        "version": "1.3.0",
        "summary": "Python library for arbitrary-precision floating-point arithmetic",
        "home_page": "http://mpmath.org/",
        "author": "Fredrik Johansson",
        "author_email": "fredrik.johansson@gmail.com",
        "license": "BSD",
        "classifier": [
          "License :: OSI Approved :: BSD License",
          "Topic :: Scientific/Engineering :: Mathematics",
          "Topic :: Software Development :: Libraries :: Python Modules",
          "Programming Language :: Python",
          "Programming Language :: Python :: 2",
          "Programming Language :: Python :: 2.7",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.5",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: Implementation :: CPython",
          "Programming Language :: Python :: Implementation :: PyPy"
        ],
        "requires_dist": [
          "pytest (>=4.6) ; extra == 'develop'",
          "pycodestyle ; extra == 'develop'",
          "pytest-cov ; extra == 'develop'",
          "codecov ; extra == 'develop'",
          "wheel ; extra == 'develop'",
          "sphinx ; extra == 'docs'",
          "gmpy2 (>=2.1.0a4) ; (platform_python_implementation != \"PyPy\") and extra == 'gmpy'",
          "pytest (>=4.6) ; extra == 'tests'"
        ],
        "project_url": [
          "Source, https://github.com/fredrik-johansson/mpmath",
          "Tracker, https://github.com/fredrik-johansson/mpmath/issues",
          "Documentation, http://mpmath.org/doc/current/"
        ],
        "provides_extra": [
          "develop",
          "docs",
          "gmpy",
          "tests"
        ],
        "description": "mpmath\n======\n\n|pypi version| |Build status| |Code coverage status| |Zenodo Badge|\n\n.. |pypi version| image:: https://img.shields.io/pypi/v/mpmath.svg\n   :target: https://pypi.python.org/pypi/mpmath\n.. |Build status| image:: https://github.com/fredrik-johansson/mpmath/workflows/test/badge.svg\n   :target: https://github.com/fredrik-johansson/mpmath/actions?workflow=test\n.. |Code coverage status| image:: https://codecov.io/gh/fredrik-johansson/mpmath/branch/master/graph/badge.svg\n   :target: https://codecov.io/gh/fredrik-johansson/mpmath\n.. |Zenodo Badge| image:: https://zenodo.org/badge/2934512.svg\n   :target: https://zenodo.org/badge/latestdoi/2934512\n\nA Python library for arbitrary-precision floating-point arithmetic.\n\nWebsite: http://mpmath.org/\nMain author: Fredrik Johansson <fredrik.johansson@gmail.com>\n\nMpmath is free software released under the New BSD License (see the\nLICENSE file for details)\n\n0. History and credits\n----------------------\n\nThe following people (among others) have contributed major patches\nor new features to mpmath:\n\n* Pearu Peterson <pearu.peterson@gmail.com>\n* Mario Pernici <mario.pernici@mi.infn.it>\n* Ondrej Certik <ondrej@certik.cz>\n* Vinzent Steinberg <vinzent.steinberg@gmail.cm>\n* Nimish Telang <ntelang@gmail.com>\n* Mike Taschuk <mtaschuk@ece.ualberta.ca>\n* Case Van Horsen <casevh@gmail.com>\n* Jorn Baayen <jorn.baayen@gmail.com>\n* Chris Smith <smichr@gmail.com>\n* Juan Arias de Reyna <arias@us.es>\n* Ioannis Tziakos <itziakos@gmail.com>\n* Aaron Meurer <asmeurer@gmail.com>\n* Stefan Krastanov <krastanov.stefan@gmail.com>\n* Ken Allen <ken.allen@sbcglobal.net>\n* Timo Hartmann <thartmann15@gmail.com>\n* Sergey B Kirpichev <skirpichev@gmail.com>\n* Kris Kuhlman <kristopher.kuhlman@gmail.com>\n* Paul Masson <paulmasson@analyticphysics.com>\n* Michael Kagalenko <michael.kagalenko@gmail.com>\n* Jonathan Warner <warnerjon12@gmail.com>\n* Max Gaukler <max.gaukler@fau.de>\n* Guillermo Navas-Palencia <g.navas.palencia@gmail.com>\n* Nike Dattani <nike@hpqc.org>\n\nNumerous other people have contributed by reporting bugs,\nrequesting new features, or suggesting improvements to the\ndocumentation.\n\nFor a detailed changelog, including individual contributions,\nsee the CHANGES file.\n\nFredrik's work on mpmath during summer 2008 was sponsored by Google\nas part of the Google Summer of Code program.\n\nFredrik's work on mpmath during summer 2009 was sponsored by the\nAmerican Institute of Mathematics under the support of the National Science\nFoundation Grant No. 0757627 (FRG: L-functions and Modular Forms).\n\nAny opinions, findings, and conclusions or recommendations expressed in this\nmaterial are those of the author(s) and do not necessarily reflect the\nviews of the sponsors.\n\nCredit also goes to:\n\n* The authors of the GMP library and the Python wrapper\n  gmpy, enabling mpmath to become much faster at\n  high precision\n* The authors of MPFR, pari/gp, MPFUN, and other arbitrary-\n  precision libraries, whose documentation has been helpful\n  for implementing many of the algorithms in mpmath\n* Wikipedia contributors; Abramowitz & Stegun; Gradshteyn & Ryzhik;\n  Wolfram Research for MathWorld and the Wolfram Functions site.\n  These are the main references used for special functions\n  implementations.\n* George Brandl for developing the Sphinx documentation tool\n  used to build mpmath's documentation\n\nRelease history:\n\n* Version 1.3.0 released on March 7, 2023\n* Version 1.2.0 released on February 1, 2021\n* Version 1.1.0 released on December 11, 2018\n* Version 1.0.0 released on September 27, 2017\n* Version 0.19 released on June 10, 2014\n* Version 0.18 released on December 31, 2013\n* Version 0.17 released on February 1, 2011\n* Version 0.16 released on September 24, 2010\n* Version 0.15 released on June 6, 2010\n* Version 0.14 released on February 5, 2010\n* Version 0.13 released on August 13, 2009\n* Version 0.12 released on June 9, 2009\n* Version 0.11 released on January 26, 2009\n* Version 0.10 released on October 15, 2008\n* Version 0.9 released on August 23, 2008\n* Version 0.8 released on April 20, 2008\n* Version 0.7 released on March 12, 2008\n* Version 0.6 released on January 13, 2008\n* Version 0.5 released on November 24, 2007\n* Version 0.4 released on November 3, 2007\n* Version 0.3 released on October 5, 2007\n* Version 0.2 released on October 2, 2007\n* Version 0.1 released on September 27, 2007\n\n1. Download & installation\n--------------------------\n\nMpmath requires Python 2.7 or 3.5 (or later versions). It has been tested\nwith CPython 2.7, 3.5 through 3.7 and for PyPy.\n\nThe latest release of mpmath can be downloaded from the mpmath\nwebsite and from https://github.com/fredrik-johansson/mpmath/releases\n\nIt should also be available in the Python Package Index at\nhttps://pypi.python.org/pypi/mpmath\n\nTo install latest release of Mpmath with pip, simply run\n\n``pip install mpmath``\n\nOr unpack the mpmath archive and run\n\n``python setup.py install``\n\nMpmath can also be installed using\n\n``python -m easy_install mpmath``\n\nThe latest development code is available from\nhttps://github.com/fredrik-johansson/mpmath\n\nSee the main documentation for more detailed instructions.\n\n2. Running tests\n----------------\n\nThe unit tests in mpmath/tests/ can be run via the script\nruntests.py, but it is recommended to run them with py.test\n(https://pytest.org/), especially\nto generate more useful reports in case there are failures.\n\nYou may also want to check out the demo scripts in the demo\ndirectory.\n\nThe master branch is automatically tested by Travis CI.\n\n3. Documentation\n----------------\n\nDocumentation in reStructuredText format is available in the\ndoc directory included with the source package. These files\nare human-readable, but can be compiled to prettier HTML using\nthe build.py script (requires Sphinx, http://sphinx.pocoo.org/).\n\nSee setup.txt in the documentation for more information.\n\nThe most recent documentation is also available in HTML format:\n\nhttp://mpmath.org/doc/current/\n\n4. Known problems\n-----------------\n\nMpmath is a work in progress. Major issues include:\n\n* Some functions may return incorrect values when given extremely\n  large arguments or arguments very close to singularities.\n\n* Directed rounding works for arithmetic operations. It is implemented\n  heuristically for other operations, and their results may be off by one\n  or two units in the last place (even if otherwise accurate).\n\n* Some IEEE 754 features are not available. Inifinities and NaN are\n  partially supported; denormal rounding is currently not available\n  at all.\n\n* The interface for switching precision and rounding is not finalized.\n  The current method is not threadsafe.\n\n5. Help and bug reports\n-----------------------\n\nGeneral questions and comments can be sent to the mpmath mailinglist,\nmpmath@googlegroups.com\n\nYou can also report bugs and send patches to the mpmath issue tracker,\nhttps://github.com/fredrik-johansson/mpmath/issues\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/mpmath-1.3.0.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "multidict",
        "version": "6.0.4",
        "summary": "multidict implementation",
        "home_page": "https://github.com/aio-libs/multidict",
        "author": "Andrew Svetlov",
        "author_email": "andrew.svetlov@gmail.com",
        "license": "Apache 2",
        "classifier": [
          "License :: OSI Approved :: Apache Software License",
          "Intended Audience :: Developers",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Development Status :: 5 - Production/Stable"
        ],
        "requires_python": ">=3.7",
        "project_url": [
          "Chat: Gitter, https://gitter.im/aio-libs/Lobby",
          "CI: GitHub, https://github.com/aio-libs/multidict/actions",
          "Coverage: codecov, https://codecov.io/github/aio-libs/multidict",
          "Docs: RTD, https://multidict.readthedocs.io",
          "GitHub: issues, https://github.com/aio-libs/multidict/issues",
          "GitHub: repo, https://github.com/aio-libs/multidict"
        ],
        "description": "=========\nmultidict\n=========\n\n.. image:: https://github.com/aio-libs/multidict/workflows/CI/badge.svg\n   :target: https://github.com/aio-libs/multidict/actions?query=workflow%3ACI\n   :alt: GitHub status for master branch\n\n.. image:: https://codecov.io/gh/aio-libs/multidict/branch/master/graph/badge.svg\n   :target: https://codecov.io/gh/aio-libs/multidict\n   :alt: Coverage metrics\n\n.. image:: https://img.shields.io/pypi/v/multidict.svg\n   :target: https://pypi.org/project/multidict\n   :alt: PyPI\n\n.. image:: https://readthedocs.org/projects/multidict/badge/?version=latest\n   :target: http://multidict.readthedocs.org/en/latest/?badge=latest\n   :alt: Documentationb\n\n.. image:: https://img.shields.io/pypi/pyversions/multidict.svg\n   :target: https://pypi.org/project/multidict\n   :alt: Python versions\n\n.. image:: https://badges.gitter.im/Join%20Chat.svg\n   :target: https://gitter.im/aio-libs/Lobby\n   :alt: Chat on Gitter\n\nMultidict is dict-like collection of *key-value pairs* where key\nmight occur more than once in the container.\n\nIntroduction\n------------\n\n*HTTP Headers* and *URL query string* require specific data structure:\n*multidict*. It behaves mostly like a regular ``dict`` but it may have\nseveral *values* for the same *key* and *preserves insertion ordering*.\n\nThe *key* is ``str`` (or ``istr`` for case-insensitive dictionaries).\n\n``multidict`` has four multidict classes:\n``MultiDict``, ``MultiDictProxy``, ``CIMultiDict``\nand ``CIMultiDictProxy``.\n\nImmutable proxies (``MultiDictProxy`` and\n``CIMultiDictProxy``) provide a dynamic view for the\nproxied multidict, the view reflects underlying collection changes. They\nimplement the ``collections.abc.Mapping`` interface.\n\nRegular mutable (``MultiDict`` and ``CIMultiDict``) classes\nimplement ``collections.abc.MutableMapping`` and allows them to change\ntheir own content.\n\n\n*Case insensitive* (``CIMultiDict`` and\n``CIMultiDictProxy``) assume the *keys* are case\ninsensitive, e.g.::\n\n   >>> dct = CIMultiDict(key='val')\n   >>> 'Key' in dct\n   True\n   >>> dct['Key']\n   'val'\n\n*Keys* should be ``str`` or ``istr`` instances.\n\nThe library has optional C Extensions for speed.\n\n\nLicense\n-------\n\nApache 2\n\nLibrary Installation\n--------------------\n\n.. code-block:: bash\n\n   $ pip install multidict\n\nThe library is Python 3 only!\n\nPyPI contains binary wheels for Linux, Windows and MacOS.  If you want to install\n``multidict`` on another operating system (or *Alpine Linux* inside a Docker) the\ntarball will be used to compile the library from source.  It requires a C compiler and\nPython headers to be installed.\n\nTo skip the compilation, please use the `MULTIDICT_NO_EXTENSIONS` environment variable,\ne.g.:\n\n.. code-block:: bash\n\n   $ MULTIDICT_NO_EXTENSIONS=1 pip install multidict\n\nPlease note, the pure Python (uncompiled) version is about 20-50 times slower depending on\nthe usage scenario!!!\n\n\n\nChangelog\n---------\nSee `RTD page <http://multidict.readthedocs.org/en/latest/changes.html>`_.\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/multidict-6.0.4.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "mysqlclient",
        "version": "2.1.1",
        "platform": [
          "ALL"
        ],
        "summary": "Python interface to MySQL",
        "description_content_type": "text/markdown",
        "home_page": "https://github.com/PyMySQL/mysqlclient",
        "author": "Inada Naoki",
        "author_email": "songofacandy@gmail.com",
        "license": "GPL",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Environment :: Other Environment",
          "License :: OSI Approved :: GNU General Public License (GPL)",
          "Operating System :: MacOS :: MacOS X",
          "Operating System :: Microsoft :: Windows :: Windows NT/2000",
          "Operating System :: OS Independent",
          "Operating System :: POSIX",
          "Operating System :: POSIX :: Linux",
          "Operating System :: Unix",
          "Programming Language :: C",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Topic :: Database",
          "Topic :: Database :: Database Engines/Servers"
        ],
        "requires_python": ">=3.5",
        "description": "# mysqlclient\n\nThis project is a fork of [MySQLdb1](https://github.com/farcepest/MySQLdb1).\nThis project adds Python 3 support and fixed many bugs.\n\n* PyPI: https://pypi.org/project/mysqlclient/\n* GitHub: https://github.com/PyMySQL/mysqlclient\n\n\n## Support\n\n**Do Not use Github Issue Tracker to ask help.  OSS Maintainer is not free tech support**\n\nWhen your question looks relating to Python rather than MySQL:\n\n* Python mailing list [python-list](https://mail.python.org/mailman/listinfo/python-list)\n* Slack [pythondev.slack.com](https://pyslackers.com/web/slack)\n\nOr when you have question about MySQL:\n\n* [MySQL Community on Slack](https://lefred.be/mysql-community-on-slack/)\n\n\n## Install\n\n### Windows\n\nBuilding mysqlclient on Windows is very hard.\nBut there are some binary wheels you can install easily.\n\nIf binary wheels do not exist for your version of Python, it may be possible to\nbuild from source, but if this does not work, **do not come asking for support.**\nTo build from source, download the\n[MariaDB C Connector](https://mariadb.com/downloads/#connectors) and install\nit. It must be installed in the default location\n(usually \"C:\\Program Files\\MariaDB\\MariaDB Connector C\" or\n\"C:\\Program Files (x86)\\MariaDB\\MariaDB Connector C\" for 32-bit). If you\nbuild the connector yourself or install it in a different location, set the\nenvironment variable `MYSQLCLIENT_CONNECTOR` before installing. Once you have\nthe connector installed and an appropriate version of Visual Studio for your\nversion of Python:\n\n```\n$ pip install mysqlclient\n```\n\n### macOS (Homebrew)\n\nInstall MySQL and mysqlclient:\n\n```\n# Assume you are activating Python 3 venv\n$ brew install mysql\n$ pip install mysqlclient\n```\n\nIf you don't want to install MySQL server, you can use mysql-client instead:\n\n```\n# Assume you are activating Python 3 venv\n$ brew install mysql-client\n$ echo 'export PATH=\"/usr/local/opt/mysql-client/bin:$PATH\"' >> ~/.bash_profile\n$ export PATH=\"/usr/local/opt/mysql-client/bin:$PATH\"\n$ pip install mysqlclient\n```\n\n### Linux\n\n**Note that this is a basic step.  I can not support complete step for build for all\nenvironment.  If you can see some error, you should fix it by yourself, or ask for\nsupport in some user forum.  Don't file a issue on the issue tracker.**\n\nYou may need to install the Python 3 and MySQL development headers and libraries like so:\n\n* `$ sudo apt-get install python3-dev default-libmysqlclient-dev build-essential`  # Debian / Ubuntu\n* `% sudo yum install python3-devel mysql-devel`  # Red Hat / CentOS\n\nThen you can install mysqlclient via pip now:\n\n```\n$ pip install mysqlclient\n```\n\n### Customize build (POSIX)\n\nmysqlclient uses `mysql_config` or `mariadb_config` by default for finding\ncompiler/linker flags.\n\nYou can use `MYSQLCLIENT_CFLAGS` and `MYSQLCLIENT_LDFLAGS` environment\nvariables to customize compiler/linker options.\n\n```\n$ export MYSQLCLIENT_CFLAGS=`pkg-config mysqlclient --cflags`\n$ export MYSQLCLIENT_LDFLAGS=`pkg-config mysqlclient --libs`\n$ pip install mysqlclient\n```\n\n### Documentation\n\nDocumentation is hosted on [Read The Docs](https://mysqlclient.readthedocs.io/)\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/mysqlclient-2.1.1.dist-info",
      "installer": "pip",
      "requested": true
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "numpy",
        "version": "1.23.5",
        "platform": [
          "Windows",
          "Linux",
          "Solaris",
          "Mac OS-X",
          "Unix"
        ],
        "summary": "NumPy is the fundamental package for array computing with Python.",
        "home_page": "https://www.numpy.org",
        "download_url": "https://pypi.python.org/pypi/numpy",
        "author": "Travis E. Oliphant et al.",
        "maintainer": "NumPy Developers",
        "maintainer_email": "numpy-discussion@python.org",
        "license": "BSD",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Intended Audience :: Science/Research",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: BSD License",
          "Programming Language :: C",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Programming Language :: Python :: 3 :: Only",
          "Programming Language :: Python :: Implementation :: CPython",
          "Topic :: Software Development",
          "Topic :: Scientific/Engineering",
          "Typing :: Typed",
          "Operating System :: Microsoft :: Windows",
          "Operating System :: POSIX",
          "Operating System :: Unix",
          "Operating System :: MacOS"
        ],
        "requires_python": ">=3.8",
        "project_url": [
          "Bug Tracker, https://github.com/numpy/numpy/issues",
          "Documentation, https://numpy.org/doc/1.23",
          "Source Code, https://github.com/numpy/numpy"
        ],
        "description": "It provides:\n\n- a powerful N-dimensional array object\n- sophisticated (broadcasting) functions\n- tools for integrating C/C++ and Fortran code\n- useful linear algebra, Fourier transform, and random number capabilities\n- and much more\n\nBesides its obvious scientific uses, NumPy can also be used as an efficient\nmulti-dimensional container of generic data. Arbitrary data-types can be\ndefined. This allows NumPy to seamlessly and speedily integrate with a wide\nvariety of databases.\n\nAll NumPy wheels distributed on PyPI are BSD licensed.\n\nNumPy requires ``pytest`` and ``hypothesis``.  Tests can then be run after\ninstallation with::\n\n    python -c 'import numpy; numpy.test()'\n\n\n\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/numpy-1.23.5.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "onnx",
        "version": "1.12.0",
        "summary": "Open Neural Network Exchange",
        "description_content_type": "text/markdown",
        "home_page": "https://github.com/onnx/onnx",
        "author": "ONNX",
        "author_email": "onnx-technical-discuss@lists.lfaidata.foundation",
        "license": "Apache License v2.0",
        "classifier": [
          "Programming Language :: Python :: 3"
        ],
        "requires_dist": [
          "numpy (>=1.16.6)",
          "protobuf (<=3.20.1,>=3.12.2)",
          "typing-extensions (>=3.6.2.1)",
          "clang-format (==13.0.0) ; extra == 'lint'",
          "flake8 ; extra == 'lint'",
          "mypy (==0.782) ; extra == 'lint'",
          "types-protobuf (==3.18.4) ; extra == 'lint'"
        ],
        "provides_extra": [
          "lint"
        ],
        "description": "<!--- SPDX-License-Identifier: Apache-2.0 -->\n\n<p align=\"center\"><img width=\"40%\" src=\"https://github.com/onnx/onnx/raw/main/docs/ONNX_logo_main.png\" /></p>\n\n\n[![Build Status](https://dev.azure.com/onnx-pipelines/onnx/_apis/build/status/Windows-CI?branchName=main)](https://dev.azure.com/onnx-pipelines/onnx/_build/latest?definitionId=5&branchName=main)\n[![Build Status](https://dev.azure.com/onnx-pipelines/onnx/_apis/build/status/Linux-CI?branchName=main)](https://dev.azure.com/onnx-pipelines/onnx/_build/latest?definitionId=7&branchName=main)\n[![Build Status](https://dev.azure.com/onnx-pipelines/onnx/_apis/build/status/MacOS-CI?branchName=main)](https://dev.azure.com/onnx-pipelines/onnx/_build/latest?definitionId=6&branchName=main)\n[![CII Best Practices](https://bestpractices.coreinfrastructure.org/projects/3313/badge)](https://bestpractices.coreinfrastructure.org/projects/3313)\n\n[Open Neural Network Exchange (ONNX)](https://onnx.ai) is an open ecosystem that empowers AI developers\nto choose the right tools as their project evolves. ONNX provides an open source format for AI models, both deep learning and traditional ML. It defines an extensible computation graph model, as well as definitions of built-in operators and standard\ndata types. Currently we focus on the capabilities needed for inferencing (scoring).\n\nONNX is [widely supported](http://onnx.ai/supported-tools) and can be found in many frameworks, tools, and hardware. Enabling interoperability between different frameworks and streamlining the path from research to production helps increase the speed of innovation in the AI community. We invite the community to join us and further evolve ONNX.\n\n# Use ONNX\n* [Tutorials for creating ONNX models](https://github.com/onnx/tutorials).\n* [Pre-trained ONNX models](https://github.com/onnx/models)\n\n# Learn about the ONNX spec\n* [Overview](docs/Overview.md)\n* [ONNX intermediate representation spec](docs/IR.md)\n* [Versioning principles of the spec](docs/Versioning.md)\n* [Operators documentation](docs/Operators.md)\n* [Python API Overview](docs/PythonAPIOverview.md)\n\n# Programming utilities for working with ONNX Graphs\n* [Shape and Type Inference](docs/ShapeInference.md)\n* [Graph Optimization](https://github.com/onnx/optimizer)\n* [Opset Version Conversion](docs/VersionConverter.md)\n\n# Contribute\nONNX is a [community project](community/readme.md). We encourage you to join the effort and contribute feedback, ideas, and code. You can participate in the [Special Interest Groups](community/sigs.md) and [Working Groups](community/working-groups.md) to shape the future of ONNX.\n\nCheck out our [contribution guide](docs/CONTRIBUTING.md) to get started.\n\nIf you think some operator should be added to ONNX specification, please read\n[this document](docs/AddNewOp.md).\n\n# Discuss\nWe encourage you to open [Issues](https://github.com/onnx/onnx/issues), or use [Slack](https://lfaifoundation.slack.com/) (If you have not joined yet, please use this [link](https://join.slack.com/t/lfaifoundation/shared_invite/zt-o65errpw-gMTbwNr7FnNbVXNVFkmyNA) to join the group) for more real-time discussion.\n\n# Follow Us\nStay up to date with the latest ONNX news. [[Facebook](https://www.facebook.com/onnxai/)] [[Twitter](https://twitter.com/onnxai)]\n\n\n\n\n\n\n# Installation\n\n## Prerequisites\n\n```\nnumpy >= 1.16.6\nprotobuf >= 3.12.2\ntyping-extensions >= 3.6.2.1\n```\n\n## Official Python packages\nONNX released packages are published in PyPi.\n```\npip install numpy protobuf==3.16.0\npip install onnx\n```\n\n[Weekly packages](https://test.pypi.org/project/onnx-weekly/) are published in test pypi to enable experimentation and early testing.\n\n\n## Conda packages\nA binary build of ONNX is available from [Conda](https://conda.io), in [conda-forge](https://conda-forge.org/):\n```\nconda install -c conda-forge numpy protobuf==3.16.0 libprotobuf=3.16.0\nconda install -c conda-forge onnx\n```\n\nYou can also use the [onnx-dev docker image](https://hub.docker.com/r/onnx/onnx-dev) for a Linux-based installation without having to worry about dependency versioning.\n\n\n## Build ONNX from Source\nBefore building from source uninstall any existing versions of onnx `pip uninstall onnx`.\n\nGenerally speaking, you need to install [protobuf C/C++ libraries and tools](https://github.com/protocolbuffers/protobuf) before proceeding forward. Then depending on how you installed protobuf, you need to set environment variable CMAKE_ARGS to \"-DONNX_USE_PROTOBUF_SHARED_LIBS=ON\" or \"-DONNX_USE_PROTOBUF_SHARED_LIBS=OFF\".  For example, you may need to run the following command:\n\nLinux:\n```bash\nexport CMAKE_ARGS=\"-DONNX_USE_PROTOBUF_SHARED_LIBS=ON\"\n```\nWindows:\n```bat\nset CMAKE_ARGS=\"-DONNX_USE_PROTOBUF_SHARED_LIBS=ON\"\n```\n\nThe ON/OFF depends on what kind of protobuf library you have. Shared libraries are files ending with \\*.dll/\\*.so/\\*.dylib. Static libraries are files ending with \\*.a/\\*.lib. This option depends on how you get your protobuf library and how it was built. And it is default OFF. You don't need to run the commands above if you'd prefer to use a static protobuf library.\n\n\n### Windows\nIf you are building ONNX from source, it is recommended that you also build Protobuf locally as a static library. The version distributed with conda-forge is a DLL, but ONNX expects it to be a static library. Building protobuf locally also lets you control the version of protobuf. The tested and recommended version is 3.16.0.\n\nThe instructions in this README assume you are using Visual Studio.  It is recommended that you run all the commands from a shell started from \"x64 Native Tools Command Prompt for VS 2019\" and keep the build system generator for cmake (e.g., cmake -G \"Visual Studio 16 2019\") consistent while building protobuf as well as ONNX.\n\nYou can get protobuf by running the following commands:\n```bat\ngit clone https://github.com/protocolbuffers/protobuf.git\ncd protobuf\ngit checkout v3.16.0\ncd cmake\ncmake -G \"Visual Studio 16 2019\" -A x64 -DCMAKE_INSTALL_PREFIX=<protobuf_install_dir> -Dprotobuf_MSVC_STATIC_RUNTIME=OFF -Dprotobuf_BUILD_SHARED_LIBS=OFF -Dprotobuf_BUILD_TESTS=OFF -Dprotobuf_BUILD_EXAMPLES=OFF .\nmsbuild protobuf.sln /m /p:Configuration=Release\nmsbuild INSTALL.vcxproj /p:Configuration=Release\n```\nThen it will be built as a static library and installed to <protobuf_install_dir>. Please add the bin directory(which contains protoc.exe) to your PATH.\n\n```bat\nset PATH=<protobuf_install_dir>/bin;%PATH%\n```\n\nPlease note: if your protobuf_install_dir contains spaces, **do not** add quotation marks around it.\n\nAlternative: if you don't want to change your PATH, you can set ONNX_PROTOC_EXECUTABLE instead.\n```bat\nset CMAKE_ARGS=-DONNX_PROTOC_EXECUTABLE=<full_path_to_protoc.exe>\n```\n\nThen you can build ONNX as:\n```\ngit clone https://github.com/onnx/onnx.git\ncd onnx\ngit submodule update --init --recursive\n# prefer lite proto\nset CMAKE_ARGS=-DONNX_USE_LITE_PROTO=ON\npip install -e .\n```\n### Linux\n\nFirst, you need to install protobuf.\n\nUbuntu users: the quickest way to install protobuf is to run\n\n```bash\napt-get install python3-pip python3-dev libprotobuf-dev protobuf-compiler\n```\n\nThen you can build ONNX as:\n```\nexport CMAKE_ARGS=\"-DONNX_USE_PROTOBUF_SHARED_LIBS=ON\"\ngit clone --recursive https://github.com/onnx/onnx.git\ncd onnx\n# prefer lite proto\nset CMAKE_ARGS=-DONNX_USE_LITE_PROTO=ON\npip install -e .\n```\n\nOtherwise, you may need to install it from source. You can use the following commands to do it:\n\nDebian/Ubuntu:\n```\ngit clone https://github.com/protocolbuffers/protobuf.git\ncd protobuf\ngit checkout v3.16.0\ngit submodule update --init --recursive\nmkdir build_source && cd build_source\ncmake ../cmake -Dprotobuf_BUILD_SHARED_LIBS=OFF -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_INSTALL_SYSCONFDIR=/etc -DCMAKE_POSITION_INDEPENDENT_CODE=ON -Dprotobuf_BUILD_TESTS=OFF -DCMAKE_BUILD_TYPE=Release\nmake -j$(nproc)\nmake install\n```\n\nCentOS/RHEL/Fedora:\n```\ngit clone https://github.com/protocolbuffers/protobuf.git\ncd protobuf\ngit checkout v3.16.0\ngit submodule update --init --recursive\nmkdir build_source && cd build_source\ncmake ../cmake  -DCMAKE_INSTALL_LIBDIR=lib64 -Dprotobuf_BUILD_SHARED_LIBS=OFF -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_INSTALL_SYSCONFDIR=/etc -DCMAKE_POSITION_INDEPENDENT_CODE=ON -Dprotobuf_BUILD_TESTS=OFF -DCMAKE_BUILD_TYPE=Release\nmake -j$(nproc)\nmake install\n```\n\nHere \"-DCMAKE_POSITION_INDEPENDENT_CODE=ON\" is crucial. By default static libraries are built without \"-fPIC\" flag, they are not position independent code. But shared libraries must be position independent code. Python C/C++ extensions(like ONNX) are shared libraries. So if a static library was not built with \"-fPIC\", it can't be linked to such a shared library.\n\nOnce build is successful, update PATH to include protobuf paths.\n\nThen you can build ONNX as:\n```\ngit clone https://github.com/onnx/onnx.git\ncd onnx\ngit submodule update --init --recursive\n# prefer lite proto\nset CMAKE_ARGS=-DONNX_USE_LITE_PROTO=ON\npip install -e .\n```\n\n* **Mac**\n```\nexport NUM_CORES=`sysctl -n hw.ncpu`\nbrew update\nbrew install autoconf && brew install automake\nwget https://github.com/protocolbuffers/protobuf/releases/download/v3.16.0/protobuf-cpp-3.16.0.tar.gz\ntar -xvf protobuf-cpp-3.16.0.tar.gz\ncd protobuf-3.16.0\nmkdir build_source && cd build_source\ncmake ../cmake -Dprotobuf_BUILD_SHARED_LIBS=OFF -DCMAKE_POSITION_INDEPENDENT_CODE=ON -Dprotobuf_BUILD_TESTS=OFF -DCMAKE_BUILD_TYPE=Release\nmake -j${NUM_CORES}\nmake install\n```\n\nOnce build is successful, update PATH to include protobuf paths.\n\nThen you can build ONNX as:\n```\ngit clone --recursive https://github.com/onnx/onnx.git\ncd onnx\n# prefer lite proto\nset CMAKE_ARGS=-DONNX_USE_LITE_PROTO=ON\npip install -e .\n```\n\n\n## Verify Installation\nAfter installation, run\n\n```\npython -c \"import onnx\"\n```\n\nto verify it works.\n\n\n## Common Build Options\nFor full list refer to CMakeLists.txt\n**Environment variables**\n* `USE_MSVC_STATIC_RUNTIME` should be 1 or 0, not ON or OFF. When set to 1 onnx links statically to runtime library.\n**Default**: USE_MSVC_STATIC_RUNTIME=0\n\n* `DEBUG` should be 0 or 1. When set to 1 onnx is built in debug mode. or debug versions of the dependencies, you need to open the [CMakeLists file](CMakeLists.txt) and append a letter `d` at the end of the package name lines. For example, `NAMES protobuf-lite` would become `NAMES protobuf-lited`.\n**Default**: Debug=0\n\n**CMake variables**\n* `ONNX_USE_PROTOBUF_SHARED_LIBS` should be ON or OFF.\n**Default**: ONNX_USE_PROTOBUF_SHARED_LIBS=OFF USE_MSVC_STATIC_RUNTIME=0\n`ONNX_USE_PROTOBUF_SHARED_LIBS` determines how onnx links to protobuf libraries.\n    - When set to ON - onnx will dynamically link to protobuf shared libs, PROTOBUF_USE_DLLS will be defined as described [here](https://github.com/protocolbuffers/protobuf/blob/master/cmake/README.md#dlls-vs-static-linking), Protobuf_USE_STATIC_LIBS will be set to OFF and `USE_MSVC_STATIC_RUNTIME` must be 0.\n    - When set to OFF - onnx will link statically to protobuf, and Protobuf_USE_STATIC_LIBS will be set to ON (to force the use of the static libraries) and `USE_MSVC_STATIC_RUNTIME` can be 0 or 1.\n\n* `ONNX_USE_LITE_PROTO` should be ON or OFF. When set to ON onnx uses lite protobuf instead of full protobuf.\n**Default**: ONNX_USE_LITE_PROTO=OFF\n\n* `ONNX_WERROR` should be ON or OFF. When set to ON warnings are treated as errors.\n**Default**: ONNX_WERROR=OFF in local builds, ON in CI and release pipelines.\n\n\n## Common Errors\n* Note: the `import onnx` command does not work from the source checkout directory; in this case you'll see `ModuleNotFoundError: No module named 'onnx.onnx_cpp2py_export'`. Change into another directory to fix this error.\n\n* Building ONNX on Ubuntu works well, but on CentOS/RHEL and other ManyLinux systems, you might need to open the [CMakeLists file][CMakeLists] and replace all instances of `/lib` with `/lib64`.\n\n# Testing\n\nONNX uses [pytest](https://docs.pytest.org) as test driver. In order to run tests, you will first need to install pytest:\n\n```\npip install pytest nbval\n```\n\nAfter installing pytest, use the following command to run tests.\n\n```\npytest\n```\n\n# Development\n\nCheck out the [contributor guide](docs/CONTRIBUTING.md) for instructions.\n\n# License\n\n[Apache License v2.0](LICENSE)\n\n# Code of Conduct\n\n[ONNX Open Source Code of Conduct](https://onnx.ai/codeofconduct.html)\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/onnx-1.12.0.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "opencv-python",
        "version": "4.6.0.66",
        "platform": [
          "UNKNOWN"
        ],
        "summary": "Wrapper package for OpenCV python bindings.",
        "description_content_type": "text/markdown",
        "home_page": "https://github.com/skvark/opencv-python",
        "maintainer": "Olli-Pekka Heinisuo",
        "license": "MIT",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Environment :: Console",
          "Intended Audience :: Developers",
          "Intended Audience :: Education",
          "Intended Audience :: Information Technology",
          "Intended Audience :: Science/Research",
          "License :: OSI Approved :: MIT License",
          "Operating System :: MacOS",
          "Operating System :: Microsoft :: Windows",
          "Operating System :: POSIX",
          "Operating System :: Unix",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3 :: Only",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: C++",
          "Programming Language :: Python :: Implementation :: CPython",
          "Topic :: Scientific/Engineering",
          "Topic :: Scientific/Engineering :: Image Recognition",
          "Topic :: Software Development"
        ],
        "requires_dist": [
          "numpy (>=1.13.3) ; python_version < \"3.7\"",
          "numpy (>=1.21.2) ; python_version >= \"3.10\"",
          "numpy (>=1.21.2) ; python_version >= \"3.6\" and platform_system == \"Darwin\" and platform_machine == \"arm64\"",
          "numpy (>=1.19.3) ; python_version >= \"3.6\" and platform_system == \"Linux\" and platform_machine == \"aarch64\"",
          "numpy (>=1.14.5) ; python_version >= \"3.7\"",
          "numpy (>=1.17.3) ; python_version >= \"3.8\"",
          "numpy (>=1.19.3) ; python_version >= \"3.9\""
        ],
        "requires_python": ">=3.6",
        "description": "[![Downloads](http://pepy.tech/badge/opencv-python)](http://pepy.tech/project/opencv-python)\n\n## OpenCV on Wheels\n\nPre-built CPU-only OpenCV packages for Python.\n\nCheck the manual build section if you wish to compile the bindings from source to enable additional modules such as CUDA.\n\n### Installation and Usage\n\n1. If you have previous/other manually installed (= not installed via ``pip``) version of OpenCV installed (e.g. cv2 module in the root of Python's site-packages), remove it before installation to avoid conflicts.\n2. Make sure that your `pip` version is up-to-date (19.3 is the minimum supported version): `pip install --upgrade pip`. Check version with `pip -V`. For example Linux distributions ship usually with very old `pip` versions which cause a lot of unexpected problems especially with the `manylinux` format.\n3. Select the correct package for your environment:\n\n    There are four different packages (see options 1, 2, 3 and 4 below) and you should **SELECT ONLY ONE OF THEM**. Do not install multiple different packages in the same environment. There is no plugin architecture: all the packages use the same namespace (`cv2`). If you installed multiple different packages in the same environment, uninstall them all with ``pip uninstall`` and reinstall only one package.\n\n    **a.** Packages for standard desktop environments (Windows, macOS, almost any GNU/Linux distribution)\n\n    - Option 1 - Main modules package: ``pip install opencv-python``\n    - Option 2 - Full package (contains both main modules and contrib/extra modules): ``pip install opencv-contrib-python`` (check contrib/extra modules listing from [OpenCV documentation](https://docs.opencv.org/master/))\n\n    **b.** Packages for server (headless) environments (such as Docker, cloud environments etc.), no GUI library dependencies\n\n    These packages are smaller than the two other packages above because they do not contain any GUI functionality (not compiled with Qt / other GUI components). This means that the packages avoid a heavy dependency chain to X11 libraries and you will have for example smaller Docker images as a result. You should always use these packages if you do not use `cv2.imshow` et al. or you are using some other package (such as PyQt) than OpenCV to create your GUI.\n\n    - Option 3 - Headless main modules package: ``pip install opencv-python-headless``\n    - Option 4 - Headless full package (contains both main modules and contrib/extra modules): ``pip install opencv-contrib-python-headless`` (check contrib/extra modules listing from [OpenCV documentation](https://docs.opencv.org/master/))\n\n4. Import the package:\n\n    ``import cv2``\n\n    All packages contain Haar cascade files. ``cv2.data.haarcascades`` can be used as a shortcut to the data folder. For example:\n\n    ``cv2.CascadeClassifier(cv2.data.haarcascades + \"haarcascade_frontalface_default.xml\")``\n\n5. Read [OpenCV documentation](https://docs.opencv.org/master/)\n\n6. Before opening a new issue, read the FAQ below and have a look at the other issues which are already open.\n\nFrequently Asked Questions\n--------------------------\n\n**Q: Do I need to install also OpenCV separately?**\n\nA: No, the packages are special wheel binary packages and they already contain statically built OpenCV binaries.\n\n**Q: Pip install fails with ``ModuleNotFoundError: No module named 'skbuild'``?**\n\nSince ``opencv-python`` version 4.3.0.\\*, ``manylinux1`` wheels were replaced by ``manylinux2014`` wheels. If your pip is too old, it will try to use the new source distribution introduced in 4.3.0.38 to manually build OpenCV because it does not know how to install ``manylinux2014`` wheels. However, source build will also fail because of too old ``pip`` because it does not understand build dependencies in ``pyproject.toml``. To use the new ``manylinux2014`` pre-built wheels (or to build from source), your ``pip`` version must be >= 19.3. Please upgrade ``pip`` with ``pip install --upgrade pip``.\n\n**Q: Import fails on Windows: ``ImportError: DLL load failed: The specified module could not be found.``?**\n\nA: If the import fails on Windows, make sure you have [Visual C++ redistributable 2015](https://www.microsoft.com/en-us/download/details.aspx?id=48145) installed. If you are using older Windows version than Windows 10 and latest system updates are not installed, [Universal C Runtime](https://support.microsoft.com/en-us/help/2999226/update-for-universal-c-runtime-in-windows) might be also required.\n\nWindows N and KN editions do not include Media Feature Pack which is required by OpenCV. If you are using Windows N or KN edition, please install also [Windows Media Feature Pack](https://support.microsoft.com/en-us/help/3145500/media-feature-pack-list-for-windows-n-editions).\n\nIf you have Windows Server 2012+, media DLLs are probably missing too; please install the Feature called \"Media Foundation\" in the Server Manager. Beware, some posts advise to install \"Windows Server Essentials Media Pack\", but this one requires the \"Windows Server Essentials Experience\" role, and this role will deeply affect your Windows Server configuration (by enforcing active directory integration etc.); so just installing the \"Media Foundation\" should be a safer choice.\n\nIf the above does not help, check if you are using Anaconda. Old Anaconda versions have a bug which causes the error, see [this issue](https://github.com/opencv/opencv-python/issues/36) for a manual fix.\n\nIf you still encounter the error after you have checked all the previous solutions, download [Dependencies](https://github.com/lucasg/Dependencies) and open the ``cv2.pyd`` (located usually at ``C:\\Users\\username\\AppData\\Local\\Programs\\Python\\PythonXX\\Lib\\site-packages\\cv2``) file with it to debug missing DLL issues.\n\n**Q: I have some other import errors?**\n\nA: Make sure you have removed old manual installations of OpenCV Python bindings (cv2.so or cv2.pyd in site-packages).\n\n**Q: Function foo() or method bar() returns wrong result, throws exception or crashes interpreter. What should I do?**\n\nA: The repository contains only OpenCV-Python package build scripts, but not OpenCV itself. Python bindings for OpenCV are developed in official OpenCV repository and it's the best place to report issues. Also please check {OpenCV wiki](https://github.com/opencv/opencv/wiki) and [the official OpenCV forum](https://forum.opencv.org/) before file new bugs.\n\n**Q: Why the packages do not include non-free algorithms?**\n\nA: Non-free algorithms such as SURF are not included in these packages because they are patented / non-free and therefore cannot be distributed as built binaries. Note that SIFT is included in the builds due to patent expiration since OpenCV versions 4.3.0 and 3.4.10. See this issue for more info: https://github.com/skvark/opencv-python/issues/126\n\n**Q: Why the package and import are different (opencv-python vs. cv2)?**\n\nA: It's easier for users to understand ``opencv-python`` than ``cv2`` and it makes it easier to find the package with search engines. `cv2` (old interface in old OpenCV versions was named as `cv`) is the name that OpenCV developers chose when they created the binding generators. This is kept as the import name to be consistent with different kind of tutorials around the internet. Changing the import name or behaviour would be also confusing to experienced users who are accustomed to the ``import cv2``.\n\n## Documentation for opencv-python\n\n[![Windows Build Status](https://github.com/opencv/opencv-python/actions/workflows/build_wheels_windows.yml/badge.svg)](https://github.com/opencv/opencv-python/actions/workflows/build_wheels_windows.yml)\n[![(Linux Build status)](https://github.com/opencv/opencv-python/actions/workflows/build_wheels_linux.yml/badge.svg)](https://github.com/opencv/opencv-python/actions/workflows/build_wheels_linux.yml)\n[![(Mac OS Build status)](https://github.com/opencv/opencv-python/actions/workflows/build_wheels_macos.yml/badge.svg)](https://github.com/opencv/opencv-python/actions/workflows/build_wheels_macos.yml)\n\nThe aim of this repository is to provide means to package each new [OpenCV release](https://github.com/opencv/opencv/releases) for the most used Python versions and platforms.\n\n### CI build process\n\nThe project is structured like a normal Python package with a standard ``setup.py`` file.\nThe build process for a single entry in the build matrices is as follows (see for example `.github/workflows/build_wheels_linux.yml` file):\n\n0. In Linux and MacOS build: get OpenCV's optional C dependencies that we compile against\n\n1. Checkout repository and submodules\n\n   -  OpenCV is included as submodule and the version is updated\n      manually by maintainers when a new OpenCV release has been made\n   -  Contrib modules are also included as a submodule\n\n2. Find OpenCV version from the sources\n\n3. Build OpenCV\n\n   -  tests are disabled, otherwise build time increases too much\n   -  there are 4 build matrix entries for each build combination: with and without contrib modules, with and without GUI (headless)\n   -  Linux builds run in manylinux Docker containers (CentOS 5)\n   -  source distributions are separate entries in the build matrix\n\n4. Rearrange OpenCV's build result, add our custom files and generate wheel\n\n5. Linux and macOS wheels are transformed with auditwheel and delocate, correspondingly\n\n6. Install the generated wheel\n7. Test that Python can import the library and run some sanity checks\n8. Use twine to upload the generated wheel to PyPI (only in release builds)\n\nSteps 1--4 are handled by ``pip wheel``.\n\nThe build can be customized with environment variables. In addition to any variables that OpenCV's build accepts, we recognize:\n\n- ``CI_BUILD``. Set to ``1`` to emulate the CI environment build behaviour. Used only in CI builds to force certain build flags on in ``setup.py``. Do not use this unless you know what you are doing.\n- ``ENABLE_CONTRIB`` and ``ENABLE_HEADLESS``. Set to ``1`` to build the contrib and/or headless version\n- ``ENABLE_JAVA``, Set to ``1`` to enable the Java client build.  This is disabled by default.\n- ``CMAKE_ARGS``. Additional arguments for OpenCV's CMake invocation. You can use this to make a custom build.\n\nSee the next section for more info about manual builds outside the CI environment.\n\n### Manual builds\n\nIf some dependency is not enabled in the pre-built wheels, you can also run the build locally to create a custom wheel.\n\n1. Clone this repository: `git clone --recursive https://github.com/opencv/opencv-python.git`\n2. ``cd opencv-python``\n    - you can use `git` to checkout some other version of OpenCV in the `opencv` and `opencv_contrib` submodules if needed\n3. Add custom Cmake flags if needed, for example: `export CMAKE_ARGS=\"-DSOME_FLAG=ON -DSOME_OTHER_FLAG=OFF\"` (in Windows you need to set environment variables differently depending on Command Line or PowerShell)\n4. Select the package flavor which you wish to build with `ENABLE_CONTRIB` and `ENABLE_HEADLESS`: i.e. `export ENABLE_CONTRIB=1` if you wish to build `opencv-contrib-python`\n5. Run ``pip wheel . --verbose``. NOTE: make sure you have the latest ``pip`` version, the ``pip wheel`` command replaces the old ``python setup.py bdist_wheel`` command which does not support ``pyproject.toml``.\n    - this might take anything from 5 minutes to over 2 hours depending on your hardware\n6. You'll have the wheel file in the `dist` folder and you can do with that whatever you wish\n    - Optional: on Linux use some of the `manylinux` images as a build hosts if maximum portability is needed and run `auditwheel` for the wheel after build\n    - Optional: on macOS use ``delocate`` (same as ``auditwheel`` but for macOS) for better portability\n\n#### Manual debug builds\n\nIn order to build `opencv-python` in an unoptimized debug build, you need to side-step the normal process a bit.\n\n1. Install the packages `scikit-build` and `numpy` via pip.\n2. Run the command `python setup.py bdist_wheel --build-type=Debug`.\n3. Install the generated wheel file in the `dist/` folder with `pip install dist/wheelname.whl`.\n\nIf you would like the build produce all compiler commands, then the following combination of flags and environment variables has been tested to work on Linux:\n```\nexport CMAKE_ARGS='-DCMAKE_VERBOSE_MAKEFILE=ON'\nexport VERBOSE=1\n\npython3 setup.py bdist_wheel --build-type=Debug\n```\n\nSee this issue for more discussion: https://github.com/opencv/opencv-python/issues/424\n\n#### Source distributions\n\nSince OpenCV version 4.3.0, also source distributions are provided in PyPI. This means that if your system is not compatible with any of the wheels in PyPI, ``pip`` will attempt to build OpenCV from sources. If you need a OpenCV version which is not available in PyPI as a source distribution, please follow the manual build guidance above instead of this one.\n\nYou can also force ``pip`` to build the wheels from the source distribution. Some examples:\n\n- ``pip install --no-binary opencv-python opencv-python``\n- ``pip install --no-binary :all: opencv-python``\n\nIf you need contrib modules or headless version, just change the package name (step 4 in the previous section is not needed). However, any additional CMake flags can be provided via environment variables as described in step 3 of the manual build section. If none are provided, OpenCV's CMake scripts will attempt to find and enable any suitable dependencies. Headless distributions have hard coded CMake flags which disable all possible GUI dependencies.\n\nOn slow systems such as Raspberry Pi the full build may take several hours. On a 8-core Ryzen 7 3700X the build takes about 6 minutes.\n\n### Licensing\n\nOpencv-python package (scripts in this repository) is available under MIT license.\n\nOpenCV itself is available under [Apache 2](https://github.com/opencv/opencv/blob/master/LICENSE) license.\n\nThird party package licenses are at [LICENSE-3RD-PARTY.txt](https://github.com/opencv/opencv-python/blob/master/LICENSE-3RD-PARTY.txt).\n\nAll wheels ship with [FFmpeg](http://ffmpeg.org) licensed under the [LGPLv2.1](http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html).\n\nNon-headless Linux wheels ship with [Qt 5](http://doc.qt.io/qt-5/lgpl.html) licensed under the [LGPLv3](http://www.gnu.org/licenses/lgpl-3.0.html).\n\nThe packages include also other binaries. Full list of licenses can be found from [LICENSE-3RD-PARTY.txt](https://github.com/opencv/opencv-python/blob/master/LICENSE-3RD-PARTY.txt).\n\n### Versioning\n\n``find_version.py`` script searches for the version information from OpenCV sources and appends also a revision number specific to this repository to the version string. It saves the version information to ``version.py`` file under ``cv2`` in addition to some other flags.\n\n### Releases\n\nA release is made and uploaded to PyPI when a new tag is pushed to master branch. These tags differentiate packages (this repo might have modifications but OpenCV version stays same) and should be incremented sequentially. In practice, release version numbers look like this:\n\n``cv_major.cv_minor.cv_revision.package_revision`` e.g. ``3.1.0.0``\n\nThe master branch follows OpenCV master branch releases. 3.4 branch follows OpenCV 3.4 bugfix releases.\n\n### Development builds\n\nEvery commit to the master branch of this repo will be built. Possible build artifacts use local version identifiers:\n\n``cv_major.cv_minor.cv_revision+git_hash_of_this_repo`` e.g. ``3.1.0+14a8d39``\n\nThese artifacts can't be and will not be uploaded to PyPI.\n\n### Manylinux wheels\n\nLinux wheels are built using [manylinux2014](https://github.com/pypa/manylinux). These wheels should work out of the box for most of the distros (which use GNU C standard library) out there since they are built against an old version of glibc.\n\nThe default ``manylinux2014`` images have been extended with some OpenCV dependencies. See [Docker folder](https://github.com/skvark/opencv-python/tree/master/docker) for more info.\n\n### Supported Python versions\n\nPython 3.x compatible pre-built wheels are provided for the officially supported Python versions (not in EOL):\n\n- 3.6\n- 3.7\n- 3.8\n- 3.9\n- 3.10\n\n### Backward compatibility\n\nStarting from 4.2.0 and 3.4.9 builds the macOS Travis build environment was updated to XCode 9.4. The change effectively dropped support for older than 10.13 macOS versions.\n\nStarting from 4.3.0 and 3.4.10 builds the Linux build environment was updated from `manylinux1` to `manylinux2014`. This dropped support for old Linux distributions.\n\n\n\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/opencv_python-4.6.0.66.dist-info",
      "installer": "pip",
      "requested": true
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "opt-einsum",
        "version": "3.3.0",
        "platform": [
          "UNKNOWN"
        ],
        "summary": "Optimizing numpys einsum function",
        "description_content_type": "text/markdown",
        "home_page": "https://github.com/dgasmith/opt_einsum",
        "author": "Daniel Smith",
        "author_email": "dgasmith@icloud.com",
        "license": "MIT",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Intended Audience :: Science/Research",
          "Intended Audience :: Developers",
          "License :: OSI Approved",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.5",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8"
        ],
        "requires_dist": [
          "numpy (>=1.7)",
          "sphinx (==1.2.3) ; extra == 'docs'",
          "sphinxcontrib-napoleon ; extra == 'docs'",
          "sphinx-rtd-theme ; extra == 'docs'",
          "numpydoc ; extra == 'docs'",
          "pytest ; extra == 'tests'",
          "pytest-cov ; extra == 'tests'",
          "pytest-pep8 ; extra == 'tests'"
        ],
        "requires_python": ">=3.5",
        "provides_extra": [
          "docs",
          "tests"
        ],
        "description": "[![Build Status](https://travis-ci.org/dgasmith/opt_einsum.svg?branch=master)](https://travis-ci.org/dgasmith/opt_einsum)\n[![codecov](https://codecov.io/gh/dgasmith/opt_einsum/branch/master/graph/badge.svg)](https://codecov.io/gh/dgasmith/opt_einsum)\n[![Anaconda-Server Badge](https://anaconda.org/conda-forge/opt_einsum/badges/version.svg)](https://anaconda.org/conda-forge/opt_einsum)\n[![PyPI](https://img.shields.io/pypi/v/opt_einsum.svg)](https://pypi.org/project/opt-einsum/#description)\n[![PyPIStats](https://img.shields.io/pypi/dm/opt_einsum)](https://pypistats.org/packages/opt-einsum)\n[![Documentation Status](https://readthedocs.org/projects/optimized-einsum/badge/?version=latest)](http://optimized-einsum.readthedocs.io/en/latest/?badge=latest)\n[![DOI](http://joss.theoj.org/papers/10.21105/joss.00753/status.svg)](https://doi.org/10.21105/joss.00753)\n\n\nOptimized Einsum: A tensor contraction order optimizer\n======================================================\n\nOptimized einsum can significantly reduce the overall execution time of einsum-like expressions (e.g.,\n[`np.einsum`](https://docs.scipy.org/doc/numpy/reference/generated/numpy.einsum.html),\n[`dask.array.einsum`](https://docs.dask.org/en/latest/array-api.html#dask.array.einsum),\n[`pytorch.einsum`](https://pytorch.org/docs/stable/torch.html#torch.einsum),\n[`tensorflow.einsum`](https://www.tensorflow.org/api_docs/python/tf/einsum),\n)\nby optimizing the expression's contraction order and dispatching many\noperations to canonical BLAS, cuBLAS, or other specialized routines. Optimized\neinsum is agnostic to the backend and can handle NumPy, Dask, PyTorch,\nTensorflow, CuPy, Sparse, Theano, JAX, and Autograd arrays as well as potentially\nany library which conforms to a standard API. See the\n[**documentation**](http://optimized-einsum.readthedocs.io) for more\ninformation.\n\n## Example usage\n\nThe [`opt_einsum.contract`](https://optimized-einsum.readthedocs.io/en/latest/autosummary/opt_einsum.contract.html#opt-einsum-contract)\nfunction can often act as a drop-in replacement for `einsum`\nfunctions without futher changes to the code while providing superior performance.\nHere, a tensor contraction is preformed with and without optimization:\n\n```python\nimport numpy as np\nfrom opt_einsum import contract\n\nN = 10\nC = np.random.rand(N, N)\nI = np.random.rand(N, N, N, N)\n\n%timeit np.einsum('pi,qj,ijkl,rk,sl->pqrs', C, C, I, C, C)\n1 loops, best of 3: 934 ms per loop\n\n%timeit contract('pi,qj,ijkl,rk,sl->pqrs', C, C, I, C, C)\n1000 loops, best of 3: 324 us per loop\n```\n\nIn this particular example, we see a ~3000x performance improvement which is\nnot uncommon when compared against unoptimized contractions. See the [backend\nexamples](https://optimized-einsum.readthedocs.io/en/latest/backends.html)\nfor more information on using other backends.\n\n## Features\n\nThe algorithms found in this repository often power the `einsum` optimizations\nin many of the above projects. For example, the optimization of `np.einsum`\nhas been passed upstream and most of the same features that can be found in\nthis repository can be enabled with `np.einsum(..., optimize=True)`. However,\nthis repository often has more up to date algorithms for complex contractions.\n\nThe following capabilities are enabled by `opt_einsum`:\n\n* Inspect [detailed information](http://optimized-einsum.readthedocs.io/en/latest/path_finding.html) about the path chosen.\n* Perform contractions with [numerous backends](http://optimized-einsum.readthedocs.io/en/latest/backends.html), including on the GPU and with libraries such as [TensorFlow](https://www.tensorflow.org) and [PyTorch](https://pytorch.org).\n* Generate [reusable expressions](http://optimized-einsum.readthedocs.io/en/latest/reusing_paths.html), potentially with [constant tensors](http://optimized-einsum.readthedocs.io/en/latest/reusing_paths.html#specifying-constants), that can be compiled for greater performance.\n* Use an arbitrary number of indices to find contractions for [hundreds or even thousands of tensors](http://optimized-einsum.readthedocs.io/en/latest/ex_large_expr_with_greedy.html).\n* Share [intermediate computations](http://optimized-einsum.readthedocs.io/en/latest/sharing_intermediates.html) among multiple contractions.\n* Compute gradients of tensor contractions using [autograd](https://github.com/HIPS/autograd) or [jax](https://github.com/google/jax)\n\nPlease see the [documentation](http://optimized-einsum.readthedocs.io/en/latest/?badge=latest) for more features!\n\n\n## Installation\n\n`opt_einsum` can either be installed via `pip install opt_einsum` or from conda `conda install opt_einsum -c conda-forge`. See the installation [documenation](http://optimized-einsum.readthedocs.io/en/latest/install.html) for further methods.\n\n## Citation\n\nIf this code has benefited your research, please support us by citing:\n\nDaniel G. A. Smith and Johnnie Gray, opt_einsum - A Python package for optimizing contraction order for einsum-like expressions. *Journal of Open Source Software*, **2018**, 3(26), 753\n\nDOI: https://doi.org/10.21105/joss.00753\n\n## Contributing\n\nAll contributions, bug reports, bug fixes, documentation improvements, enhancements, and ideas are welcome.\n\nA detailed overview on how to contribute can be found in the [contributing guide](https://github.com/dgasmith/opt_einsum/blob/master/.github/CONTRIBUTING.md).\n\n\n\n\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/opt_einsum-3.3.0.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "orjson",
        "version": "3.8.12",
        "summary": "Fast, correct Python JSON library supporting dataclasses, datetimes, and numpy",
        "description_content_type": "text/markdown; charset=UTF-8; variant=GFM",
        "keywords": [
          "fast",
          "json",
          "dataclass",
          "dataclasses",
          "datetime",
          "rfc",
          "8259",
          "3339"
        ],
        "home_page": "https://github.com/ijl/orjson",
        "author": "ijl <ijl@mailbox.org>",
        "author_email": "ijl <ijl@mailbox.org>",
        "license": "Apache-2.0 OR MIT",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: Apache Software License",
          "License :: OSI Approved :: MIT License",
          "Operating System :: MacOS",
          "Operating System :: Microsoft :: Windows",
          "Operating System :: POSIX :: Linux",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Programming Language :: Python :: 3.12",
          "Programming Language :: Python :: Implementation :: CPython",
          "Programming Language :: Python",
          "Programming Language :: Rust",
          "Typing :: Typed"
        ],
        "requires_python": ">=3.7",
        "project_url": [
          "Source Code, https://github.com/ijl/orjson"
        ],
        "description": "# orjson\n\norjson is a fast, correct JSON library for Python. It\n[benchmarks](https://github.com/ijl/orjson#performance) as the fastest Python\nlibrary for JSON and is more correct than the standard json library or other\nthird-party libraries. It serializes\n[dataclass](https://github.com/ijl/orjson#dataclass),\n[datetime](https://github.com/ijl/orjson#datetime),\n[numpy](https://github.com/ijl/orjson#numpy), and\n[UUID](https://github.com/ijl/orjson#uuid) instances natively.\n\nIts features and drawbacks compared to other Python JSON libraries:\n\n* serializes `dataclass` instances 40-50x as fast as other libraries\n* serializes `datetime`, `date`, and `time` instances to RFC 3339 format,\ne.g., \"1970-01-01T00:00:00+00:00\"\n* serializes `numpy.ndarray` instances 4-12x as fast with 0.3x the memory\nusage of other libraries\n* pretty prints 10x to 20x as fast as the standard library\n* serializes to `bytes` rather than `str`, i.e., is not a drop-in replacement\n* serializes `str` without escaping unicode to ASCII, e.g., \"好\" rather than\n\"\\\\\\u597d\"\n* serializes `float` 10x as fast and deserializes twice as fast as other\nlibraries\n* serializes subclasses of `str`, `int`, `list`, and `dict` natively,\nrequiring `default` to specify how to serialize others\n* serializes arbitrary types using a `default` hook\n* has strict UTF-8 conformance, more correct than the standard library\n* has strict JSON conformance in not supporting Nan/Infinity/-Infinity\n* has an option for strict JSON conformance on 53-bit integers with default\nsupport for 64-bit\n* does not provide `load()` or `dump()` functions for reading from/writing to\nfile-like objects\n\norjson supports CPython 3.7, 3.8, 3.9, 3.10, and 3.11. It distributes\nx86_64/amd64, aarch64/armv8, arm7, POWER/ppc64le, and s390x wheels for Linux,\namd64 and aarch64 wheels for macOS, and amd64 wheels for Windows.\norjson  does not support PyPy. Releases follow semantic versioning and\nserializing a new object type without an opt-in flag is considered a\nbreaking change.\n\norjson is licensed under both the Apache 2.0 and MIT licenses. The\nrepository and issue tracker is\n[github.com/ijl/orjson](https://github.com/ijl/orjson), and patches may be\nsubmitted there. There is a\n[CHANGELOG](https://github.com/ijl/orjson/blob/master/CHANGELOG.md)\navailable in the repository.\n\n1. [Usage](https://github.com/ijl/orjson#usage)\n    1. [Install](https://github.com/ijl/orjson#install)\n    2. [Quickstart](https://github.com/ijl/orjson#quickstart)\n    3. [Migrating](https://github.com/ijl/orjson#migrating)\n    4. [Serialize](https://github.com/ijl/orjson#serialize)\n        1. [default](https://github.com/ijl/orjson#default)\n        2. [option](https://github.com/ijl/orjson#option)\n    5. [Deserialize](https://github.com/ijl/orjson#deserialize)\n2. [Types](https://github.com/ijl/orjson#types)\n    1. [dataclass](https://github.com/ijl/orjson#dataclass)\n    2. [datetime](https://github.com/ijl/orjson#datetime)\n    3. [enum](https://github.com/ijl/orjson#enum)\n    4. [float](https://github.com/ijl/orjson#float)\n    5. [int](https://github.com/ijl/orjson#int)\n    6. [numpy](https://github.com/ijl/orjson#numpy)\n    7. [str](https://github.com/ijl/orjson#str)\n    8. [uuid](https://github.com/ijl/orjson#uuid)\n3. [Testing](https://github.com/ijl/orjson#testing)\n4. [Performance](https://github.com/ijl/orjson#performance)\n    1. [Latency](https://github.com/ijl/orjson#latency)\n    2. [Memory](https://github.com/ijl/orjson#memory)\n    3. [Reproducing](https://github.com/ijl/orjson#reproducing)\n5. [Questions](https://github.com/ijl/orjson#questions)\n6. [Packaging](https://github.com/ijl/orjson#packaging)\n7. [License](https://github.com/ijl/orjson#license)\n\n## Usage\n\n### Install\n\nTo install a wheel from PyPI:\n\n```sh\npip install --upgrade \"pip>=20.3\" # manylinux_x_y, universal2 wheel support\npip install --upgrade orjson\n```\n\nTo build a wheel, see [packaging](https://github.com/ijl/orjson#packaging).\n\n### Quickstart\n\nThis is an example of serializing, with options specified, and deserializing:\n\n```python\n>>> import orjson, datetime, numpy\n>>> data = {\n    \"type\": \"job\",\n    \"created_at\": datetime.datetime(1970, 1, 1),\n    \"status\": \"🆗\",\n    \"payload\": numpy.array([[1, 2], [3, 4]]),\n}\n>>> orjson.dumps(data, option=orjson.OPT_NAIVE_UTC | orjson.OPT_SERIALIZE_NUMPY)\nb'{\"type\":\"job\",\"created_at\":\"1970-01-01T00:00:00+00:00\",\"status\":\"\\xf0\\x9f\\x86\\x97\",\"payload\":[[1,2],[3,4]]}'\n>>> orjson.loads(_)\n{'type': 'job', 'created_at': '1970-01-01T00:00:00+00:00', 'status': '🆗', 'payload': [[1, 2], [3, 4]]}\n```\n\n### Migrating\n\norjson version 3 serializes more types than version 2. Subclasses of `str`,\n`int`, `dict`, and `list` are now serialized. This is faster and more similar\nto the standard library. It can be disabled with\n`orjson.OPT_PASSTHROUGH_SUBCLASS`.`dataclasses.dataclass` instances\nare now serialized by default and cannot be customized in a\n`default` function unless `option=orjson.OPT_PASSTHROUGH_DATACLASS` is\nspecified. `uuid.UUID` instances are serialized by default.\nFor any type that is now serialized,\nimplementations in a `default` function and options enabling them can be\nremoved but do not need to be. There was no change in deserialization.\n\nTo migrate from the standard library, the largest difference is that\n`orjson.dumps` returns `bytes` and `json.dumps` returns a `str`. Users with\n`dict` objects using non-`str` keys should specify\n`option=orjson.OPT_NON_STR_KEYS`. `sort_keys` is replaced by\n`option=orjson.OPT_SORT_KEYS`. `indent` is replaced by\n`option=orjson.OPT_INDENT_2` and other levels of indentation are not\nsupported.\n\n### Serialize\n\n```python\ndef dumps(\n    __obj: Any,\n    default: Optional[Callable[[Any], Any]] = ...,\n    option: Optional[int] = ...,\n) -> bytes: ...\n```\n\n`dumps()` serializes Python objects to JSON.\n\nIt natively serializes\n`str`, `dict`, `list`, `tuple`, `int`, `float`, `bool`,\n`dataclasses.dataclass`, `typing.TypedDict`, `datetime.datetime`,\n`datetime.date`, `datetime.time`, `uuid.UUID`, `numpy.ndarray`, and\n`None` instances. It supports arbitrary types through `default`. It\nserializes subclasses of `str`, `int`, `dict`, `list`,\n`dataclasses.dataclass`, and `enum.Enum`. It does not serialize subclasses\nof `tuple` to avoid serializing `namedtuple` objects as arrays. To avoid\nserializing subclasses, specify the option `orjson.OPT_PASSTHROUGH_SUBCLASS`.\n\nThe output is a `bytes` object containing UTF-8.\n\nThe global interpreter lock (GIL) is held for the duration of the call.\n\nIt raises `JSONEncodeError` on an unsupported type. This exception message\ndescribes the invalid object with the error message\n`Type is not JSON serializable: ...`. To fix this, specify\n[default](https://github.com/ijl/orjson#default).\n\nIt raises `JSONEncodeError` on a `str` that contains invalid UTF-8.\n\nIt raises `JSONEncodeError` on an integer that exceeds 64 bits by default or,\nwith `OPT_STRICT_INTEGER`, 53 bits.\n\nIt raises `JSONEncodeError` if a `dict` has a key of a type other than `str`,\nunless `OPT_NON_STR_KEYS` is specified.\n\nIt raises `JSONEncodeError` if the output of `default` recurses to handling by\n`default` more than 254 levels deep.\n\nIt raises `JSONEncodeError` on circular references.\n\nIt raises `JSONEncodeError`  if a `tzinfo` on a datetime object is\nunsupported.\n\n`JSONEncodeError` is a subclass of `TypeError`. This is for compatibility\nwith the standard library.\n\nIf the failure was caused by an exception in `default` then\n`JSONEncodeError` chains the original exception as `__cause__`.\n\n#### default\n\nTo serialize a subclass or arbitrary types, specify `default` as a\ncallable that returns a supported type. `default` may be a function,\nlambda, or callable class instance. To specify that a type was not\nhandled by `default`, raise an exception such as `TypeError`.\n\n```python\n>>> import orjson, decimal\n>>>\ndef default(obj):\n    if isinstance(obj, decimal.Decimal):\n        return str(obj)\n    raise TypeError\n\n>>> orjson.dumps(decimal.Decimal(\"0.0842389659712649442845\"))\nJSONEncodeError: Type is not JSON serializable: decimal.Decimal\n>>> orjson.dumps(decimal.Decimal(\"0.0842389659712649442845\"), default=default)\nb'\"0.0842389659712649442845\"'\n>>> orjson.dumps({1, 2}, default=default)\norjson.JSONEncodeError: Type is not JSON serializable: set\n```\n\nThe `default` callable may return an object that itself\nmust be handled by `default` up to 254 times before an exception\nis raised.\n\nIt is important that `default` raise an exception if a type cannot be handled.\nPython otherwise implicitly returns `None`, which appears to the caller\nlike a legitimate value and is serialized:\n\n```python\n>>> import orjson, json, rapidjson\n>>>\ndef default(obj):\n    if isinstance(obj, decimal.Decimal):\n        return str(obj)\n\n>>> orjson.dumps({\"set\":{1, 2}}, default=default)\nb'{\"set\":null}'\n>>> json.dumps({\"set\":{1, 2}}, default=default)\n'{\"set\":null}'\n>>> rapidjson.dumps({\"set\":{1, 2}}, default=default)\n'{\"set\":null}'\n```\n\n#### option\n\nTo modify how data is serialized, specify `option`. Each `option` is an integer\nconstant in `orjson`. To specify multiple options, mask them together, e.g.,\n`option=orjson.OPT_STRICT_INTEGER | orjson.OPT_NAIVE_UTC`.\n\n##### OPT_APPEND_NEWLINE\n\nAppend `\\n` to the output. This is a convenience and optimization for the\npattern of `dumps(...) + \"\\n\"`. `bytes` objects are immutable and this\npattern copies the original contents.\n\n```python\n>>> import orjson\n>>> orjson.dumps([])\nb\"[]\"\n>>> orjson.dumps([], option=orjson.OPT_APPEND_NEWLINE)\nb\"[]\\n\"\n```\n\n##### OPT_INDENT_2\n\nPretty-print output with an indent of two spaces. This is equivalent to\n`indent=2` in the standard library. Pretty printing is slower and the output\nlarger. orjson is the fastest compared library at pretty printing and has\nmuch less of a slowdown to pretty print than the standard library does. This\noption is compatible with all other options.\n\n```python\n>>> import orjson\n>>> orjson.dumps({\"a\": \"b\", \"c\": {\"d\": True}, \"e\": [1, 2]})\nb'{\"a\":\"b\",\"c\":{\"d\":true},\"e\":[1,2]}'\n>>> orjson.dumps(\n    {\"a\": \"b\", \"c\": {\"d\": True}, \"e\": [1, 2]},\n    option=orjson.OPT_INDENT_2\n)\nb'{\\n  \"a\": \"b\",\\n  \"c\": {\\n    \"d\": true\\n  },\\n  \"e\": [\\n    1,\\n    2\\n  ]\\n}'\n```\n\nIf displayed, the indentation and linebreaks appear like this:\n\n```json\n{\n  \"a\": \"b\",\n  \"c\": {\n    \"d\": true\n  },\n  \"e\": [\n    1,\n    2\n  ]\n}\n```\n\nThis measures serializing the github.json fixture as compact (52KiB) or\npretty (64KiB):\n\n| Library    |   compact (ms) |   pretty (ms) |   vs. orjson |\n|------------|----------------|---------------|--------------|\n| orjson     |           0.03 |          0.04 |          1   |\n| ujson      |           0.18 |          0.19 |          4.6 |\n| rapidjson  |           0.1  |          0.12 |          2.9 |\n| simplejson |           0.25 |          0.89 |         21.4 |\n| json       |           0.18 |          0.71 |         17   |\n\nThis measures serializing the citm_catalog.json fixture, more of a worst\ncase due to the amount of nesting and newlines, as compact (489KiB) or\npretty (1.1MiB):\n\n| Library    |   compact (ms) |   pretty (ms) |   vs. orjson |\n|------------|----------------|---------------|--------------|\n| orjson     |           0.59 |          0.71 |          1   |\n| ujson      |           2.9  |          3.59 |          5   |\n| rapidjson  |           1.81 |          2.8  |          3.9 |\n| simplejson |          10.43 |         42.13 |         59.1 |\n| json       |           4.16 |         33.42 |         46.9 |\n\nThis can be reproduced using the `pyindent` script.\n\n##### OPT_NAIVE_UTC\n\nSerialize `datetime.datetime` objects without a `tzinfo` as UTC. This\nhas no effect on `datetime.datetime` objects that have `tzinfo` set.\n\n```python\n>>> import orjson, datetime\n>>> orjson.dumps(\n        datetime.datetime(1970, 1, 1, 0, 0, 0),\n    )\nb'\"1970-01-01T00:00:00\"'\n>>> orjson.dumps(\n        datetime.datetime(1970, 1, 1, 0, 0, 0),\n        option=orjson.OPT_NAIVE_UTC,\n    )\nb'\"1970-01-01T00:00:00+00:00\"'\n```\n\n##### OPT_NON_STR_KEYS\n\nSerialize `dict` keys of type other than `str`. This allows `dict` keys\nto be one of `str`, `int`, `float`, `bool`, `None`, `datetime.datetime`,\n`datetime.date`, `datetime.time`, `enum.Enum`, and `uuid.UUID`. For comparison,\nthe standard library serializes `str`, `int`, `float`, `bool` or `None` by\ndefault. orjson benchmarks as being faster at serializing non-`str` keys\nthan other libraries. This option is slower for `str` keys than the default.\n\n```python\n>>> import orjson, datetime, uuid\n>>> orjson.dumps(\n        {uuid.UUID(\"7202d115-7ff3-4c81-a7c1-2a1f067b1ece\"): [1, 2, 3]},\n        option=orjson.OPT_NON_STR_KEYS,\n    )\nb'{\"7202d115-7ff3-4c81-a7c1-2a1f067b1ece\":[1,2,3]}'\n>>> orjson.dumps(\n        {datetime.datetime(1970, 1, 1, 0, 0, 0): [1, 2, 3]},\n        option=orjson.OPT_NON_STR_KEYS | orjson.OPT_NAIVE_UTC,\n    )\nb'{\"1970-01-01T00:00:00+00:00\":[1,2,3]}'\n```\n\nThese types are generally serialized how they would be as\nvalues, e.g., `datetime.datetime` is still an RFC 3339 string and respects\noptions affecting it. The exception is that `int` serialization does not\nrespect `OPT_STRICT_INTEGER`.\n\nThis option has the risk of creating duplicate keys. This is because non-`str`\nobjects may serialize to the same `str` as an existing key, e.g.,\n`{\"1\": true, 1: false}`. The last key to be inserted to the `dict` will be\nserialized last and a JSON deserializer will presumably take the last\noccurrence of a key (in the above, `false`). The first value will be lost.\n\nThis option is compatible with `orjson.OPT_SORT_KEYS`. If sorting is used,\nnote the sort is unstable and will be unpredictable for duplicate keys.\n\n```python\n>>> import orjson, datetime\n>>> orjson.dumps(\n    {\"other\": 1, datetime.date(1970, 1, 5): 2, datetime.date(1970, 1, 3): 3},\n    option=orjson.OPT_NON_STR_KEYS | orjson.OPT_SORT_KEYS\n)\nb'{\"1970-01-03\":3,\"1970-01-05\":2,\"other\":1}'\n```\n\nThis measures serializing 589KiB of JSON comprising a `list` of 100 `dict`\nin which each `dict` has both 365 randomly-sorted `int` keys representing epoch\ntimestamps as well as one `str` key and the value for each key is a\nsingle integer. In \"str keys\", the keys were converted to `str` before\nserialization, and orjson still specifes `option=orjson.OPT_NON_STR_KEYS`\n(which is always somewhat slower).\n\n| Library    |   str keys (ms) | int keys (ms)   | int keys sorted (ms)   |\n|------------|-----------------|-----------------|------------------------|\n| orjson     |            1.53 | 2.16            | 4.29                   |\n| ujson      |            3.07 | 5.65            |                        |\n| rapidjson  |            4.29 |                 |                        |\n| simplejson |           11.24 | 14.50           | 21.86                  |\n| json       |            7.17 | 8.49            |                        |\n\nujson is blank for sorting because it segfaults. json is blank because it\nraises `TypeError` on attempting to sort before converting all keys to `str`.\nrapidjson is blank because it does not support non-`str` keys. This can\nbe reproduced using the `pynonstr` script.\n\n##### OPT_OMIT_MICROSECONDS\n\nDo not serialize the `microsecond` field on `datetime.datetime` and\n`datetime.time` instances.\n\n```python\n>>> import orjson, datetime\n>>> orjson.dumps(\n        datetime.datetime(1970, 1, 1, 0, 0, 0, 1),\n    )\nb'\"1970-01-01T00:00:00.000001\"'\n>>> orjson.dumps(\n        datetime.datetime(1970, 1, 1, 0, 0, 0, 1),\n        option=orjson.OPT_OMIT_MICROSECONDS,\n    )\nb'\"1970-01-01T00:00:00\"'\n```\n\n##### OPT_PASSTHROUGH_DATACLASS\n\nPassthrough `dataclasses.dataclass` instances to `default`. This allows\ncustomizing their output but is much slower.\n\n\n```python\n>>> import orjson, dataclasses\n>>>\n@dataclasses.dataclass\nclass User:\n    id: str\n    name: str\n    password: str\n\ndef default(obj):\n    if isinstance(obj, User):\n        return {\"id\": obj.id, \"name\": obj.name}\n    raise TypeError\n\n>>> orjson.dumps(User(\"3b1\", \"asd\", \"zxc\"))\nb'{\"id\":\"3b1\",\"name\":\"asd\",\"password\":\"zxc\"}'\n>>> orjson.dumps(User(\"3b1\", \"asd\", \"zxc\"), option=orjson.OPT_PASSTHROUGH_DATACLASS)\nTypeError: Type is not JSON serializable: User\n>>> orjson.dumps(\n        User(\"3b1\", \"asd\", \"zxc\"),\n        option=orjson.OPT_PASSTHROUGH_DATACLASS,\n        default=default,\n    )\nb'{\"id\":\"3b1\",\"name\":\"asd\"}'\n```\n\n##### OPT_PASSTHROUGH_DATETIME\n\nPassthrough `datetime.datetime`, `datetime.date`, and `datetime.time` instances\nto `default`. This allows serializing datetimes to a custom format, e.g.,\nHTTP dates:\n\n```python\n>>> import orjson, datetime\n>>>\ndef default(obj):\n    if isinstance(obj, datetime.datetime):\n        return obj.strftime(\"%a, %d %b %Y %H:%M:%S GMT\")\n    raise TypeError\n\n>>> orjson.dumps({\"created_at\": datetime.datetime(1970, 1, 1)})\nb'{\"created_at\":\"1970-01-01T00:00:00\"}'\n>>> orjson.dumps({\"created_at\": datetime.datetime(1970, 1, 1)}, option=orjson.OPT_PASSTHROUGH_DATETIME)\nTypeError: Type is not JSON serializable: datetime.datetime\n>>> orjson.dumps(\n        {\"created_at\": datetime.datetime(1970, 1, 1)},\n        option=orjson.OPT_PASSTHROUGH_DATETIME,\n        default=default,\n    )\nb'{\"created_at\":\"Thu, 01 Jan 1970 00:00:00 GMT\"}'\n```\n\nThis does not affect datetimes in `dict` keys if using OPT_NON_STR_KEYS.\n\n##### OPT_PASSTHROUGH_SUBCLASS\n\nPassthrough subclasses of builtin types to `default`.\n\n```python\n>>> import orjson\n>>>\nclass Secret(str):\n    pass\n\ndef default(obj):\n    if isinstance(obj, Secret):\n        return \"******\"\n    raise TypeError\n\n>>> orjson.dumps(Secret(\"zxc\"))\nb'\"zxc\"'\n>>> orjson.dumps(Secret(\"zxc\"), option=orjson.OPT_PASSTHROUGH_SUBCLASS)\nTypeError: Type is not JSON serializable: Secret\n>>> orjson.dumps(Secret(\"zxc\"), option=orjson.OPT_PASSTHROUGH_SUBCLASS, default=default)\nb'\"******\"'\n```\n\nThis does not affect serializing subclasses as `dict` keys if using\nOPT_NON_STR_KEYS.\n\n##### OPT_SERIALIZE_DATACLASS\n\nThis is deprecated and has no effect in version 3. In version 2 this was\nrequired to serialize  `dataclasses.dataclass` instances. For more, see\n[dataclass](https://github.com/ijl/orjson#dataclass).\n\n##### OPT_SERIALIZE_NUMPY\n\nSerialize `numpy.ndarray` instances. For more, see\n[numpy](https://github.com/ijl/orjson#numpy).\n\n##### OPT_SERIALIZE_UUID\n\nThis is deprecated and has no effect in version 3. In version 2 this was\nrequired to serialize `uuid.UUID` instances. For more, see\n[UUID](https://github.com/ijl/orjson#UUID).\n\n##### OPT_SORT_KEYS\n\nSerialize `dict` keys in sorted order. The default is to serialize in an\nunspecified order. This is equivalent to `sort_keys=True` in the standard\nlibrary.\n\nThis can be used to ensure the order is deterministic for hashing or tests.\nIt has a substantial performance penalty and is not recommended in general.\n\n```python\n>>> import orjson\n>>> orjson.dumps({\"b\": 1, \"c\": 2, \"a\": 3})\nb'{\"b\":1,\"c\":2,\"a\":3}'\n>>> orjson.dumps({\"b\": 1, \"c\": 2, \"a\": 3}, option=orjson.OPT_SORT_KEYS)\nb'{\"a\":3,\"b\":1,\"c\":2}'\n```\n\nThis measures serializing the twitter.json fixture unsorted and sorted:\n\n| Library    |   unsorted (ms) |   sorted (ms) |   vs. orjson |\n|------------|-----------------|---------------|--------------|\n| orjson     |            0.32 |          0.54 |          1   |\n| ujson      |            1.6  |          2.07 |          3.8 |\n| rapidjson  |            1.12 |          1.65 |          3.1 |\n| simplejson |            2.25 |          3.13 |          5.8 |\n| json       |            1.78 |          2.32 |          4.3 |\n\nThe benchmark can be reproduced using the `pysort` script.\n\nThe sorting is not collation/locale-aware:\n\n```python\n>>> import orjson\n>>> orjson.dumps({\"a\": 1, \"ä\": 2, \"A\": 3}, option=orjson.OPT_SORT_KEYS)\nb'{\"A\":3,\"a\":1,\"\\xc3\\xa4\":2}'\n```\n\nThis is the same sorting behavior as the standard library, rapidjson,\nsimplejson, and ujson.\n\n`dataclass` also serialize as maps but this has no effect on them.\n\n##### OPT_STRICT_INTEGER\n\nEnforce 53-bit limit on integers. The limit is otherwise 64 bits, the same as\nthe Python standard library. For more, see [int](https://github.com/ijl/orjson#int).\n\n##### OPT_UTC_Z\n\nSerialize a UTC timezone on `datetime.datetime` instances as `Z` instead\nof `+00:00`.\n\n```python\n>>> import orjson, datetime, zoneinfo\n>>> orjson.dumps(\n        datetime.datetime(1970, 1, 1, 0, 0, 0, tzinfo=zoneinfo.ZoneInfo(\"UTC\")),\n    )\nb'\"1970-01-01T00:00:00+00:00\"'\n>>> orjson.dumps(\n        datetime.datetime(1970, 1, 1, 0, 0, 0, tzinfo=zoneinfo.ZoneInfo(\"UTC\")),\n        option=orjson.OPT_UTC_Z\n    )\nb'\"1970-01-01T00:00:00Z\"'\n```\n\n### Deserialize\n\n```python\ndef loads(__obj: Union[bytes, bytearray, memoryview, str]) -> Any: ...\n```\n\n`loads()` deserializes JSON to Python objects. It deserializes to `dict`,\n`list`, `int`, `float`, `str`, `bool`, and `None` objects.\n\n`bytes`, `bytearray`, `memoryview`, and `str` input are accepted. If the input\nexists as a `memoryview`, `bytearray`, or `bytes` object, it is recommended to\npass these directly rather than creating an unnecessary `str` object. That is,\n`orjson.loads(b\"{}\")` instead of `orjson.loads(b\"{}\".decode(\"utf-8\"))`. This\nhas lower memory usage and lower latency.\n\nThe input must be valid UTF-8.\n\norjson maintains a cache of map keys for the duration of the process. This\ncauses a net reduction in memory usage by avoiding duplicate strings. The\nkeys must be at most 64 bytes to be cached and 1024 entries are stored.\n\nThe global interpreter lock (GIL) is held for the duration of the call.\n\nIt raises `JSONDecodeError` if given an invalid type or invalid\nJSON. This includes if the input contains `NaN`, `Infinity`, or `-Infinity`,\nwhich the standard library allows, but is not valid JSON.\n\n`JSONDecodeError` is a subclass of `json.JSONDecodeError` and `ValueError`.\nThis is for compatibility with the standard library.\n\n## Types\n\n### dataclass\n\norjson serializes instances of `dataclasses.dataclass` natively. It serializes\ninstances 40-50x as fast as other libraries and avoids a severe slowdown seen\nin other libraries compared to serializing `dict`.\n\nIt is supported to pass all variants of dataclasses, including dataclasses\nusing `__slots__`, frozen dataclasses, those with optional or default\nattributes, and subclasses. There is a performance benefit to not\nusing `__slots__`.\n\n| Library    | dict (ms)   | dataclass (ms)   | vs. orjson   |\n|------------|-------------|------------------|--------------|\n| orjson     | 1.40        | 1.60             | 1            |\n| ujson      |             |                  |              |\n| rapidjson  | 3.64        | 68.48            | 42           |\n| simplejson | 14.21       | 92.18            | 57           |\n| json       | 13.28       | 94.90            | 59           |\n\nThis measures serializing 555KiB of JSON, orjson natively and other libraries\nusing `default` to serialize the output of `dataclasses.asdict()`. This can be\nreproduced using the `pydataclass` script.\n\nDataclasses are serialized as maps, with every attribute serialized and in\nthe order given on class definition:\n\n```python\n>>> import dataclasses, orjson, typing\n\n@dataclasses.dataclass\nclass Member:\n    id: int\n    active: bool = dataclasses.field(default=False)\n\n@dataclasses.dataclass\nclass Object:\n    id: int\n    name: str\n    members: typing.List[Member]\n\n>>> orjson.dumps(Object(1, \"a\", [Member(1, True), Member(2)]))\nb'{\"id\":1,\"name\":\"a\",\"members\":[{\"id\":1,\"active\":true},{\"id\":2,\"active\":false}]}'\n```\n\n### datetime\n\norjson serializes `datetime.datetime` objects to\n[RFC 3339](https://tools.ietf.org/html/rfc3339) format,\ne.g., \"1970-01-01T00:00:00+00:00\". This is a subset of ISO 8601 and is\ncompatible with `isoformat()` in the standard library.\n\n```python\n>>> import orjson, datetime, zoneinfo\n>>> orjson.dumps(\n    datetime.datetime(2018, 12, 1, 2, 3, 4, 9, tzinfo=zoneinfo.ZoneInfo(\"Australia/Adelaide\"))\n)\nb'\"2018-12-01T02:03:04.000009+10:30\"'\n>>> orjson.dumps(\n    datetime.datetime(2100, 9, 1, 21, 55, 2).replace(tzinfo=zoneinfo.ZoneInfo(\"UTC\"))\n)\nb'\"2100-09-01T21:55:02+00:00\"'\n>>> orjson.dumps(\n    datetime.datetime(2100, 9, 1, 21, 55, 2)\n)\nb'\"2100-09-01T21:55:02\"'\n```\n\n`datetime.datetime` supports instances with a `tzinfo` that is `None`,\n`datetime.timezone.utc`, a timezone instance from the python3.9+ `zoneinfo`\nmodule, or a timezone instance from the third-party `pendulum`, `pytz`, or\n`dateutil`/`arrow` libraries.\n\nIt is fastest to use the standard library's `zoneinfo.ZoneInfo` for timezones.\n\n`datetime.time` objects must not have a `tzinfo`.\n\n```python\n>>> import orjson, datetime\n>>> orjson.dumps(datetime.time(12, 0, 15, 290))\nb'\"12:00:15.000290\"'\n```\n\n`datetime.date` objects will always serialize.\n\n```python\n>>> import orjson, datetime\n>>> orjson.dumps(datetime.date(1900, 1, 2))\nb'\"1900-01-02\"'\n```\n\nErrors with `tzinfo` result in `JSONEncodeError` being raised.\n\nTo disable serialization of `datetime` objects specify the option\n`orjson.OPT_PASSTHROUGH_DATETIME`.\n\nTo use \"Z\" suffix instead of \"+00:00\" to indicate UTC (\"Zulu\") time, use the option\n`orjson.OPT_UTC_Z`.\n\nTo assume datetimes without timezone are UTC, use the option `orjson.OPT_NAIVE_UTC`.\n\n### enum\n\norjson serializes enums natively. Options apply to their values.\n\n```python\n>>> import enum, datetime, orjson\n>>>\nclass DatetimeEnum(enum.Enum):\n    EPOCH = datetime.datetime(1970, 1, 1, 0, 0, 0)\n>>> orjson.dumps(DatetimeEnum.EPOCH)\nb'\"1970-01-01T00:00:00\"'\n>>> orjson.dumps(DatetimeEnum.EPOCH, option=orjson.OPT_NAIVE_UTC)\nb'\"1970-01-01T00:00:00+00:00\"'\n```\n\nEnums with members that are not supported types can be serialized using\n`default`:\n\n```python\n>>> import enum, orjson\n>>>\nclass Custom:\n    def __init__(self, val):\n        self.val = val\n\ndef default(obj):\n    if isinstance(obj, Custom):\n        return obj.val\n    raise TypeError\n\nclass CustomEnum(enum.Enum):\n    ONE = Custom(1)\n\n>>> orjson.dumps(CustomEnum.ONE, default=default)\nb'1'\n```\n\n### float\n\norjson serializes and deserializes double precision floats with no loss of\nprecision and consistent rounding.\n\n`orjson.dumps()` serializes Nan, Infinity, and -Infinity, which are not\ncompliant JSON, as `null`:\n\n```python\n>>> import orjson, ujson, rapidjson, json\n>>> orjson.dumps([float(\"NaN\"), float(\"Infinity\"), float(\"-Infinity\")])\nb'[null,null,null]'\n>>> ujson.dumps([float(\"NaN\"), float(\"Infinity\"), float(\"-Infinity\")])\nOverflowError: Invalid Inf value when encoding double\n>>> rapidjson.dumps([float(\"NaN\"), float(\"Infinity\"), float(\"-Infinity\")])\n'[NaN,Infinity,-Infinity]'\n>>> json.dumps([float(\"NaN\"), float(\"Infinity\"), float(\"-Infinity\")])\n'[NaN, Infinity, -Infinity]'\n```\n\n### int\n\norjson serializes and deserializes 64-bit integers by default. The range\nsupported is a signed 64-bit integer's minimum (-9223372036854775807) to\nan unsigned 64-bit integer's maximum (18446744073709551615). This\nis widely compatible, but there are implementations\nthat only support 53-bits for integers, e.g.,\nweb browsers. For those implementations, `dumps()` can be configured to\nraise a `JSONEncodeError` on values exceeding the 53-bit range.\n\n```python\n>>> import orjson\n>>> orjson.dumps(9007199254740992)\nb'9007199254740992'\n>>> orjson.dumps(9007199254740992, option=orjson.OPT_STRICT_INTEGER)\nJSONEncodeError: Integer exceeds 53-bit range\n>>> orjson.dumps(-9007199254740992, option=orjson.OPT_STRICT_INTEGER)\nJSONEncodeError: Integer exceeds 53-bit range\n```\n\n### numpy\n\norjson natively serializes `numpy.ndarray` and individual `numpy.float64`,\n`numpy.float32`, `numpy.int64`, `numpy.int32`, `numpy.int16`, `numpy.int8`, `numpy.uint64`,\n`numpy.uint32`, `numpy.uint16`, `numpy.uint8`, `numpy.uintp`, or `numpy.intp`, and\n`numpy.datetime64` instances.\n\norjson is faster than all compared libraries at serializing\nnumpy instances. Serializing numpy data requires specifying\n`option=orjson.OPT_SERIALIZE_NUMPY`.\n\n```python\n>>> import orjson, numpy\n>>> orjson.dumps(\n        numpy.array([[1, 2, 3], [4, 5, 6]]),\n        option=orjson.OPT_SERIALIZE_NUMPY,\n)\nb'[[1,2,3],[4,5,6]]'\n```\n\nThe array must be a contiguous C array (`C_CONTIGUOUS`) and one of the\nsupported datatypes.\n\nNote a difference between serializing `numpy.float32` using `ndarray.tolist()`\nor `orjson.dumps(..., option=orjson.OPT_SERIALIZE_NUMPY)`: `tolist()` converts\nto a `double` before serializing and orjson's native path does not. This\ncan result in different rounding.\n\n`numpy.datetime64` instances are serialized as RFC 3339 strings and\ndatetime options affect them.\n\n```python\n>>> import orjson, numpy\n>>> orjson.dumps(\n        numpy.datetime64(\"2021-01-01T00:00:00.172\"),\n        option=orjson.OPT_SERIALIZE_NUMPY,\n)\nb'\"2021-01-01T00:00:00.172000\"'\n>>> orjson.dumps(\n        numpy.datetime64(\"2021-01-01T00:00:00.172\"),\n        option=(\n            orjson.OPT_SERIALIZE_NUMPY |\n            orjson.OPT_NAIVE_UTC |\n            orjson.OPT_OMIT_MICROSECONDS\n        ),\n)\nb'\"2021-01-01T00:00:00+00:00\"'\n```\n\nIf an array is not a contiguous C array, contains an unsupported datatype,\nor contains a `numpy.datetime64` using an unsupported representation\n(e.g., picoseconds), orjson falls through to `default`. In `default`,\n`obj.tolist()` can be specified. If an array is malformed, which\nis not expected, `orjson.JSONEncodeError` is raised.\n\nThis measures serializing 92MiB of JSON from an `numpy.ndarray` with\ndimensions of `(50000, 100)` and `numpy.float64` values:\n\n| Library    | Latency (ms)   | RSS diff (MiB)   | vs. orjson   |\n|------------|----------------|------------------|--------------|\n| orjson     | 194            | 99               | 1.0          |\n| ujson      |                |                  |              |\n| rapidjson  | 3,048          | 309              | 15.7         |\n| simplejson | 3,023          | 297              | 15.6         |\n| json       | 3,133          | 297              | 16.1         |\n\nThis measures serializing 100MiB of JSON from an `numpy.ndarray` with\ndimensions of `(100000, 100)` and `numpy.int32` values:\n\n| Library    | Latency (ms)   | RSS diff (MiB)   | vs. orjson   |\n|------------|----------------|------------------|--------------|\n| orjson     | 178            | 115              | 1.0          |\n| ujson      |                |                  |              |\n| rapidjson  | 1,512          | 551              | 8.5          |\n| simplejson | 1,606          | 504              | 9.0          |\n| json       | 1,506          | 503              | 8.4          |\n\nThis measures serializing 105MiB of JSON from an `numpy.ndarray` with\ndimensions of `(100000, 200)` and `numpy.bool` values:\n\n| Library    | Latency (ms)   | RSS diff (MiB)   | vs. orjson   |\n|------------|----------------|------------------|--------------|\n| orjson     | 157            | 120              | 1.0          |\n| ujson      |                |                  |              |\n| rapidjson  | 710            | 327              | 4.5          |\n| simplejson | 931            | 398              | 5.9          |\n| json       | 996            | 400              | 6.3          |\n\nIn these benchmarks, orjson serializes natively, ujson is blank because it\ndoes not support a `default` parameter, and the other libraries serialize\n`ndarray.tolist()` via `default`. The RSS column measures peak memory\nusage during serialization. This can be reproduced using the `pynumpy` script.\n\norjson does not have an installation or compilation dependency on numpy. The\nimplementation is independent, reading `numpy.ndarray` using\n`PyArrayInterface`.\n\n### str\n\norjson is strict about UTF-8 conformance. This is stricter than the standard\nlibrary's json module, which will serialize and deserialize UTF-16 surrogates,\ne.g., \"\\ud800\", that are invalid UTF-8.\n\nIf `orjson.dumps()` is given a `str` that does not contain valid UTF-8,\n`orjson.JSONEncodeError` is raised. If `loads()` receives invalid UTF-8,\n`orjson.JSONDecodeError` is raised.\n\norjson and rapidjson are the only compared JSON libraries to consistently\nerror on bad input.\n\n```python\n>>> import orjson, ujson, rapidjson, json\n>>> orjson.dumps('\\ud800')\nJSONEncodeError: str is not valid UTF-8: surrogates not allowed\n>>> ujson.dumps('\\ud800')\nUnicodeEncodeError: 'utf-8' codec ...\n>>> rapidjson.dumps('\\ud800')\nUnicodeEncodeError: 'utf-8' codec ...\n>>> json.dumps('\\ud800')\n'\"\\\\ud800\"'\n>>> orjson.loads('\"\\\\ud800\"')\nJSONDecodeError: unexpected end of hex escape at line 1 column 8: line 1 column 1 (char 0)\n>>> ujson.loads('\"\\\\ud800\"')\n''\n>>> rapidjson.loads('\"\\\\ud800\"')\nValueError: Parse error at offset 1: The surrogate pair in string is invalid.\n>>> json.loads('\"\\\\ud800\"')\n'\\ud800'\n```\n\nTo make a best effort at deserializing bad input, first decode `bytes` using\nthe `replace` or `lossy` argument for `errors`:\n\n```python\n>>> import orjson\n>>> orjson.loads(b'\"\\xed\\xa0\\x80\"')\nJSONDecodeError: str is not valid UTF-8: surrogates not allowed\n>>> orjson.loads(b'\"\\xed\\xa0\\x80\"'.decode(\"utf-8\", \"replace\"))\n'���'\n```\n\n### uuid\n\norjson serializes `uuid.UUID` instances to\n[RFC 4122](https://tools.ietf.org/html/rfc4122) format, e.g.,\n\"f81d4fae-7dec-11d0-a765-00a0c91e6bf6\".\n\n``` python\n>>> import orjson, uuid\n>>> orjson.dumps(uuid.UUID('f81d4fae-7dec-11d0-a765-00a0c91e6bf6'))\nb'\"f81d4fae-7dec-11d0-a765-00a0c91e6bf6\"'\n>>> orjson.dumps(uuid.uuid5(uuid.NAMESPACE_DNS, \"python.org\"))\nb'\"886313e1-3b8a-5372-9b90-0c9aee199e5d\"'\n```\n\n## Testing\n\nThe library has comprehensive tests. There are tests against fixtures in the\n[JSONTestSuite](https://github.com/nst/JSONTestSuite) and\n[nativejson-benchmark](https://github.com/miloyip/nativejson-benchmark)\nrepositories. It is tested to not crash against the\n[Big List of Naughty Strings](https://github.com/minimaxir/big-list-of-naughty-strings).\nIt is tested to not leak memory. It is tested to not crash\nagainst and not accept invalid UTF-8. There are integration tests\nexercising the library's use in web servers (gunicorn using multiprocess/forked\nworkers) and when\nmultithreaded. It also uses some tests from the ultrajson library.\n\norjson is the most correct of the compared libraries. This graph shows how each\nlibrary handles a combined 342 JSON fixtures from the\n[JSONTestSuite](https://github.com/nst/JSONTestSuite) and\n[nativejson-benchmark](https://github.com/miloyip/nativejson-benchmark) tests:\n\n| Library    |   Invalid JSON documents not rejected |   Valid JSON documents not deserialized |\n|------------|---------------------------------------|-----------------------------------------|\n| orjson     |                                     0 |                                       0 |\n| ujson      |                                    38 |                                       0 |\n| rapidjson  |                                     6 |                                       0 |\n| simplejson |                                    13 |                                       0 |\n| json       |                                    17 |                                       0 |\n\nThis shows that all libraries deserialize valid JSON but only orjson\ncorrectly rejects the given invalid JSON fixtures. Errors are largely due to\naccepting invalid strings and numbers.\n\nThe graph above can be reproduced using the `pycorrectness` script.\n\n## Performance\n\nSerialization and deserialization performance of orjson is better than\nultrajson, rapidjson, simplejson, or json. The benchmarks are done on\nfixtures of real data:\n\n* twitter.json, 631.5KiB, results of a search on Twitter for \"一\", containing\nCJK strings, dictionaries of strings and arrays of dictionaries, indented.\n\n* github.json, 55.8KiB, a GitHub activity feed, containing dictionaries of\nstrings and arrays of dictionaries, not indented.\n\n* citm_catalog.json, 1.7MiB, concert data, containing nested dictionaries of\nstrings and arrays of integers, indented.\n\n* canada.json, 2.2MiB, coordinates of the Canadian border in GeoJSON\nformat, containing floats and arrays, indented.\n\n### Latency\n\n#### twitter.json serialization\n\n| Library    |   Median latency (milliseconds) |   Operations per second |   Relative (latency) |\n|------------|---------------------------------|-------------------------|----------------------|\n| orjson     |                            0.33 |                  3069.4 |                 1    |\n| ujson      |                            1.68 |                   592.8 |                 5.15 |\n| rapidjson  |                            1.12 |                   891   |                 3.45 |\n| simplejson |                            2.29 |                   436.2 |                 7.03 |\n| json       |                            1.8  |                   556.6 |                 5.52 |\n\n#### twitter.json deserialization\n\n| Library    |   Median latency (milliseconds) |   Operations per second |   Relative (latency) |\n|------------|---------------------------------|-------------------------|----------------------|\n| orjson     |                            0.81 |                  1237.6 |                 1    |\n| ujson      |                            1.87 |                   533.9 |                 2.32 |\n| rapidjson  |                            2.97 |                   335.8 |                 3.67 |\n| simplejson |                            2.15 |                   463.8 |                 2.66 |\n| json       |                            2.45 |                   408.2 |                 3.03 |\n\n#### github.json serialization\n\n| Library    |   Median latency (milliseconds) |   Operations per second |   Relative (latency) |\n|------------|---------------------------------|-------------------------|----------------------|\n| orjson     |                            0.03 |                 28817.3 |                 1    |\n| ujson      |                            0.18 |                  5478.2 |                 5.26 |\n| rapidjson  |                            0.1  |                  9686.4 |                 2.98 |\n| simplejson |                            0.26 |                  3901.3 |                 7.39 |\n| json       |                            0.18 |                  5437   |                 5.27 |\n\n#### github.json deserialization\n\n| Library    |   Median latency (milliseconds) |   Operations per second |   Relative (latency) |\n|------------|---------------------------------|-------------------------|----------------------|\n| orjson     |                            0.07 |                 15270   |                 1    |\n| ujson      |                            0.19 |                  5374.8 |                 2.84 |\n| rapidjson  |                            0.17 |                  5854.9 |                 2.59 |\n| simplejson |                            0.15 |                  6707.4 |                 2.27 |\n| json       |                            0.16 |                  6397.3 |                 2.39 |\n\n#### citm_catalog.json serialization\n\n| Library    |   Median latency (milliseconds) |   Operations per second |   Relative (latency) |\n|------------|---------------------------------|-------------------------|----------------------|\n| orjson     |                            0.58 |                  1722.5 |                 1    |\n| ujson      |                            2.89 |                   345.6 |                 4.99 |\n| rapidjson  |                            1.83 |                   546.4 |                 3.15 |\n| simplejson |                           10.39 |                    95.9 |                17.89 |\n| json       |                            3.93 |                   254.6 |                 6.77 |\n\n#### citm_catalog.json deserialization\n\n| Library    |   Median latency (milliseconds) |   Operations per second |   Relative (latency) |\n|------------|---------------------------------|-------------------------|----------------------|\n| orjson     |                            1.76 |                   569.2 |                 1    |\n| ujson      |                            3.5  |                   284.3 |                 1.99 |\n| rapidjson  |                            5.77 |                   173.2 |                 3.28 |\n| simplejson |                            5.13 |                   194.7 |                 2.92 |\n| json       |                            4.99 |                   200.5 |                 2.84 |\n\n#### canada.json serialization\n\n| Library    |   Median latency (milliseconds) |   Operations per second |   Relative (latency) |\n|------------|---------------------------------|-------------------------|----------------------|\n| orjson     |                            3.62 |                   276.3 |                 1    |\n| ujson      |                           14.16 |                    70.6 |                 3.91 |\n| rapidjson  |                           33.64 |                    29.7 |                 9.29 |\n| simplejson |                           57.46 |                    17.4 |                15.88 |\n| json       |                           35.7  |                    28   |                 9.86 |\n\n#### canada.json deserialization\n\n| Library    |   Median latency (milliseconds) |   Operations per second |   Relative (latency) |\n|------------|---------------------------------|-------------------------|----------------------|\n| orjson     |                            3.89 |                   256.6 |                 1    |\n| ujson      |                            8.73 |                   114.3 |                 2.24 |\n| rapidjson  |                           23.33 |                    42.8 |                 5.99 |\n| simplejson |                           23.99 |                    41.7 |                 6.16 |\n| json       |                           21.1  |                    47.4 |                 5.42 |\n\n### Memory\n\norjson as of 3.7.0 has higher baseline memory usage than other libraries\ndue to a persistent buffer used for parsing. Incremental memory usage when\ndeserializing is similar to the standard library and other third-party\nlibraries.\n\nThis measures, in the first column, RSS after importing a library and reading\nthe fixture, and in the second column, increases in RSS after repeatedly\ncalling `loads()` on the fixture.\n\n#### twitter.json\n\n| Library    |   import, read() RSS (MiB) |   loads() increase in RSS (MiB) |\n|------------|----------------------------|---------------------------------|\n| orjson     |                       21.8 |                             2.8 |\n| ujson      |                       14.3 |                             4.8 |\n| rapidjson  |                       14.9 |                             4.6 |\n| simplejson |                       13.4 |                             2.4 |\n| json       |                       13.1 |                             2.3 |\n\n#### github.json\n\n| Library    |   import, read() RSS (MiB) |   loads() increase in RSS (MiB) |\n|------------|----------------------------|---------------------------------|\n| orjson     |                       21.2 |                             0.5 |\n| ujson      |                       13.6 |                             0.6 |\n| rapidjson  |                       14.1 |                             0.5 |\n| simplejson |                       12.5 |                             0.3 |\n| json       |                       12.4 |                             0.3 |\n\n#### citm_catalog.json\n\n| Library    |   import, read() RSS (MiB) |   loads() increase in RSS (MiB) |\n|------------|----------------------------|---------------------------------|\n| orjson     |                       23   |                            10.6 |\n| ujson      |                       15.2 |                            11.2 |\n| rapidjson  |                       15.8 |                            29.7 |\n| simplejson |                       14.4 |                            24.7 |\n| json       |                       13.9 |                            24.7 |\n\n#### canada.json\n\n| Library    |   import, read() RSS (MiB) |   loads() increase in RSS (MiB) |\n|------------|----------------------------|---------------------------------|\n| orjson     |                       23.2 |                            21.3 |\n| ujson      |                       15.6 |                            19.2 |\n| rapidjson  |                       16.3 |                            23.4 |\n| simplejson |                       15   |                            21.1 |\n| json       |                       14.3 |                            20.9 |\n\n### Reproducing\n\nThe above was measured using Python 3.10.5 on Linux (amd64) with\norjson 3.7.9, ujson 5.4.0, python-rapidson 1.8, and simplejson 3.17.6.\n\nThe latency results can be reproduced using the `pybench` and `graph`\nscripts. The memory results can be reproduced using the `pymem` script.\n\n## Questions\n\n### Why can't I install it from PyPI?\n\nProbably `pip` needs to be upgraded to version 20.3 or later to support\nthe latest manylinux_x_y or universal2 wheel formats.\n\n### \"Cargo, the Rust package manager, is not installed or is not on PATH.\"\n\nThis happens when there are no binary wheels (like manylinux) for your\nplatform on PyPI. You can install [Rust](https://www.rust-lang.org/) through\n`rustup` or a package manager and then it will compile.\n\n### Will it deserialize to dataclasses, UUIDs, decimals, etc or support object_hook?\n\nNo. This requires a schema specifying what types are expected and how to\nhandle errors etc. This is addressed by data validation libraries a\nlevel above this.\n\n### Will it serialize to `str`?\n\nNo. `bytes` is the correct type for a serialized blob.\n\n### Will it support PyPy?\n\nProbably not.\n\n## Packaging\n\nTo package orjson requires at least [Rust](https://www.rust-lang.org/) 1.60\nand the [maturin](https://github.com/PyO3/maturin) build tool. The recommended\nbuild command is:\n\n```sh\nmaturin build --release --strip\n```\n\nIt benefits from also having a C build environment to compile a faster\ndeserialization backend. See this project's `manylinux_2_28` builds for an\nexample using clang and LTO.\n\nThe project's own CI tests against `nightly-2023-05-07` and stable 1.60. It\nis prudent to pin the nightly version because that channel can introduce\nbreaking changes.\n\norjson is tested for amd64, aarch64, arm7, ppc64le, and s390x on Linux. It\nis tested for amd64 on macOS and cross-compiles for aarch64. For Windows\nit is tested on amd64.\n\nThere are no runtime dependencies other than libc.\n\norjson's tests are included in the source distribution on PyPI. The\nrequirements to run the tests are specified in `test/requirements.txt`. The\ntests should be run as part of the build. It can be run with\n`pytest -q test`.\n\n## License\n\norjson was written by ijl <<ijl@mailbox.org>>, copyright 2018 - 2023, licensed\nunder both the Apache 2 and MIT licenses.\n\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/orjson-3.8.12.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "package-name",
        "version": "0.1",
        "summary": "Package Description",
        "home_page": "https://github.com/yourself/package_name"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/package_name-0.1.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "packaging",
        "version": "23.1",
        "summary": "Core utilities for Python packages",
        "description_content_type": "text/x-rst",
        "author_email": "Donald Stufft <donald@stufft.io>",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: Apache Software License",
          "License :: OSI Approved :: BSD License",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3 :: Only",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Programming Language :: Python :: Implementation :: CPython",
          "Programming Language :: Python :: Implementation :: PyPy",
          "Typing :: Typed"
        ],
        "requires_python": ">=3.7",
        "project_url": [
          "Documentation, https://packaging.pypa.io/",
          "Source, https://github.com/pypa/packaging"
        ],
        "description": "packaging\n=========\n\n.. start-intro\n\nReusable core utilities for various Python Packaging\n`interoperability specifications <https://packaging.python.org/specifications/>`_.\n\nThis library provides utilities that implement the interoperability\nspecifications which have clearly one correct behaviour (eg: :pep:`440`)\nor benefit greatly from having a single shared implementation (eg: :pep:`425`).\n\n.. end-intro\n\nThe ``packaging`` project includes the following: version handling, specifiers,\nmarkers, requirements, tags, utilities.\n\nDocumentation\n-------------\n\nThe `documentation`_ provides information and the API for the following:\n\n- Version Handling\n- Specifiers\n- Markers\n- Requirements\n- Tags\n- Utilities\n\nInstallation\n------------\n\nUse ``pip`` to install these utilities::\n\n    pip install packaging\n\nDiscussion\n----------\n\nIf you run into bugs, you can file them in our `issue tracker`_.\n\nYou can also join ``#pypa`` on Freenode to ask questions or get involved.\n\n\n.. _`documentation`: https://packaging.pypa.io/\n.. _`issue tracker`: https://github.com/pypa/packaging/issues\n\n\nCode of Conduct\n---------------\n\nEveryone interacting in the packaging project's codebases, issue trackers, chat\nrooms, and mailing lists is expected to follow the `PSF Code of Conduct`_.\n\n.. _PSF Code of Conduct: https://github.com/pypa/.github/blob/main/CODE_OF_CONDUCT.md\n\nContributing\n------------\n\nThe ``CONTRIBUTING.rst`` file outlines how to contribute to this project as\nwell as how to report a potential security issue. The documentation for this\nproject also covers information about `project development`_ and `security`_.\n\n.. _`project development`: https://packaging.pypa.io/en/latest/development/\n.. _`security`: https://packaging.pypa.io/en/latest/security/\n\nProject History\n---------------\n\nPlease review the ``CHANGELOG.rst`` file or the `Changelog documentation`_ for\nrecent changes and project history.\n\n.. _`Changelog documentation`: https://packaging.pypa.io/en/latest/changelog/\n\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/packaging-23.1.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "paddle2onnx",
        "version": "1.0.6",
        "summary": "Export PaddlePaddle to ONNX",
        "home_page": "https://github.com/PaddlePaddle/Paddle2ONNX.git",
        "author": "paddle-infer",
        "author_email": "paddle-infer@baidu.com",
        "license": "Apache 2.0",
        "classifier": [
          "Programming Language :: Python :: 3",
          "License :: OSI Approved :: Apache Software License",
          "Operating System :: OS Independent"
        ],
        "requires_dist": [
          "mypy (==0.600) ; extra == 'mypy'"
        ],
        "provides_extra": [
          "mypy"
        ]
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/paddle2onnx-1.0.6.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "paddle-bfloat",
        "version": "0.1.7",
        "platform": [
          "UNKNOWN"
        ],
        "summary": "Paddle numpy bfloat16 package",
        "author": "Jakub Piasecki",
        "author_email": "jakub1.piasecki@intel.com",
        "license": "Apache",
        "description": "UNKNOWN\n\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/paddle_bfloat-0.1.7.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "paddleclas",
        "version": "2.5.1",
        "summary": "A treasure chest for visual recognition powered by PaddlePaddle.",
        "description_content_type": "text/markdown",
        "keywords": [
          "image-classification",
          "image-recognition",
          "pretrained-models",
          "knowledge-distillation",
          "product-recognition",
          "autoaugment",
          "cutmix",
          "randaugment",
          "gridmask",
          "deit",
          "repvgg",
          "swin-transformer",
          "image-retrieval-system"
        ],
        "home_page": "https://github.com/PaddlePaddle/PaddleClas",
        "download_url": "https://github.com/PaddlePaddle/PaddleClas.git",
        "license": "Apache License 2.0",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Operating System :: OS Independent",
          "Intended Audience :: Developers",
          "Intended Audience :: Education",
          "Intended Audience :: Science/Research",
          "License :: OSI Approved :: Apache Software License",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9"
        ],
        "requires_dist": [
          "prettytable",
          "ujson",
          "opencv-python",
          "pillow",
          "tqdm",
          "PyYAML (>=5.1)",
          "visualdl (>=2.2.0)",
          "scipy (>=1.0.0)",
          "scikit-learn (>=0.21.0)",
          "gast (==0.3.3)",
          "faiss-cpu (==1.7.1.post2)",
          "easydict"
        ],
        "description": "# PaddleClas wheel package\n\nPaddleClas supports Python wheel package for prediction. At present, PaddleClas wheel supports image classification including ImagetNet1k models and PULC models, but does not support mainbody detection, feature extraction and vector retrieval.\n\n---\n\n## Catalogue\n\n- [1. Installation](#1)\n- [2. Quick Start](#2)\n   - [2.1 ImageNet1k models](#2.1)\n   - [2.2 PULC models](#2.2)\n- [3. Definition of Parameters](#3)\n- [4. More usage](#4)\n   - [4.1 View help information](#4.1)\n   - [4.2 Prediction using inference model provide by PaddleClas](#4.2)\n   - [4.3 Prediction using local model files](#4.3)\n   - [4.4 Prediction by batch](#4.4)\n   - [4.5 Prediction of Internet image](#4.5)\n   - [4.6 Prediction of `NumPy.array` format image](#4.6)\n   - [4.7 Save the prediction result(s)](#4.7)\n   - [4.8 Specify the mapping between class id and label name](#4.8)\n\n<a name=\"1\"></a>\n\n## 1. Installation\n\n* **[Recommended]** Installing from PyPI:\n\n```bash\npip3 install paddleclas\n```\n\n* Please build and install locally if you need to use the develop branch of PaddleClas to experience the latest functions, or need to redevelop based on PaddleClas. The command is as follows:\n\n```bash\npython3 setup.py install\n```\n\n<a name=\"2\"></a>\n\n## 2. Quick Start\n\n<a name=\"2.1\"></a>\n\n### 2.1 ImageNet1k models\n\nUsing the `ResNet50` model provided by PaddleClas, the following image(`'docs/images/inference_deployment/whl_demo.jpg'`) as an example.\n\n![](../../images/inference_deployment/whl_demo.jpg)\n\n* Python\n```python\nfrom paddleclas import PaddleClas\nclas = PaddleClas(model_name='ResNet50')\ninfer_imgs='docs/images/inference_deployment/whl_demo.jpg'\nresult=clas.predict(infer_imgs)\nprint(next(result))\n```\n\n**Note**: `PaddleClas.predict()` is a `generator`. Therefore you need to use `next()` or `for` call it iteratively. It will perform a prediction by `batch_size` and return the prediction result(s) when called. Examples of returned results are as follows:\n\n```\n>>> result\n[{'class_ids': [8, 7, 86, 82, 80], 'scores': [0.97968, 0.02028, 3e-05, 1e-05, 0.0], 'label_names': ['hen', 'cock', 'partridge', 'ruffed grouse, partridge, Bonasa umbellus', 'black grouse'], 'filename': 'docs/images/inference_deployment/whl_demo.jpg'}]\n```\n\n* CLI\n```bash\npaddleclas --model_name=ResNet50  --infer_imgs=\"docs/images/inference_deployment/whl_demo.jpg\"\n```\n\n```\n>>> result\nclass_ids: [8, 7, 86, 82, 80], scores: [0.97968, 0.02028, 3e-05, 1e-05, 0.0], label_names: ['hen', 'cock', 'partridge', 'ruffed grouse, partridge, Bonasa umbellus', 'black grouse'], filename: docs/images/inference_deployment/whl_demo.jpg\nPredict complete!\n```\n\n<a name=\"2.2\"></a>\n\n### 2.2 PULC models\n\nPULC integrates various state-of-the-art algorithms such as backbone network, data augmentation and distillation, etc., and finally can automatically obtain a lightweight and high-precision image classification model.\n\nPaddleClas provides a series of test cases, which contain demos of different scenes about people, cars, OCR, etc. Click [here](https://paddleclas.bj.bcebos.com/data/PULC/pulc_demo_imgs.zip) to download the data.\n\nPrection using the PULC \"Human Exists Classification\" model provided by PaddleClas:\n\n* Python\n\n```python\nimport paddleclas\nmodel = paddleclas.PaddleClas(model_name=\"person_exists\")\nresult = model.predict(input_data=\"pulc_demo_imgs/person_exists/objects365_01780782.jpg\")\nprint(next(result))\n```\n\n```\n>>> result\n[{'class_ids': [0], 'scores': [0.9955421453341842], 'label_names': ['nobody'], 'filename': 'pulc_demo_imgs/person_exists/objects365_01780782.jpg'}]\n```\n\n`Nobody` means there is no one in the image, `someone` means there is someone in the image. Therefore, the prediction result indicates that there is no one in the figure.\n\n**Note**: `model.predict()` is a generator, so `next()` or `for` is needed to call it. This would to predict by batch that length is `batch_size`, default by 1. You can specify the argument `batch_size` and `model_name` when instantiating PaddleClas object, for example: `model = paddleclas.PaddleClas(model_name=\"person_exists\",  batch_size=2)`. Please refer to [Supported Model List](#PULC_Models) for the supported model list.\n\n* CLI\n\n```bash\npaddleclas --model_name=person_exists --infer_imgs=pulc_demo_imgs/person_exists/objects365_01780782.jpg\n```\n\n```\n>>> result\nclass_ids: [0], scores: [0.9955421453341842], label_names: ['nobody'], filename: pulc_demo_imgs/person_exists/objects365_01780782.jpg\nPredict complete!\n```\n\n**Note**: The \"--infer_imgs\" argument specify the image(s) to be predict, and you can also specify a directoy contains images. If use other model, you can specify the `--model_name` argument. Please refer to [Supported Model List](#PULC_Models) for the supported model list.\n\n<a name=\"PULC_Models\"></a>\n\n**Supported Model List**\n\nThe name of PULC series models are as follows:\n\n| Name | Intro |\n| --- | --- |\n| person_exists | Human Exists Classification |\n| person_attribute | Pedestrian Attribute Classification |\n| safety_helmet | Classification of Wheather Wearing Safety Helmet |\n| traffic_sign | Traffic Sign Classification |\n| vehicle_attribute | Vehicle Attribute Classification |\n| car_exists | Car Exists Classification |\n| text_image_orientation | Text Image Orientation Classification |\n| textline_orientation | Text-line Orientation Classification |\n| language_classification | Language Classification |\n\nPlease refer to [Human Exists Classification](../PULC/PULC_person_exists_en.md)、[Pedestrian Attribute Classification](../PULC/PULC_person_attribute_en.md)、[Classification of Wheather Wearing Safety Helmet](../PULC/PULC_safety_helmet_en.md)、[Traffic Sign Classification](../PULC/PULC_traffic_sign_en.md)、[Vehicle Attribute Classification](../PULC/PULC_vehicle_attribute_en.md)、[Car Exists Classification](../PULC/PULC_car_exists_en.md)、[Text Image Orientation Classification](../PULC/PULC_text_image_orientation_en.md)、[Text-line Orientation Classification](../PULC/PULC_textline_orientation_en.md)、[Language Classification](../PULC/PULC_language_classification_en.md) for more information about different scenarios.\n\n<a name=\"3\"></a>\n\n## 3. Definition of Parameters\n\nThe following parameters can be specified in Command Line or used as parameters of the constructor when instantiating the PaddleClas object in Python.\n* model_name(str): If using inference model based on ImageNet1k provided by Paddle, please specify the model's name by the parameter.\n* inference_model_dir(str): Local model files directory, which is valid when `model_name` is not specified. The directory should contain `inference.pdmodel` and `inference.pdiparams`.\n* infer_imgs(str): The path of image to be predicted, or the directory containing the image files, or the URL of the image from Internet.\n* use_gpu(bool): Whether to use GPU or not.\n* gpu_mem(int): GPU memory usages.\n* use_tensorrt(bool): Whether to open TensorRT or not. Using it can greatly promote predict preformance.\n* enable_mkldnn(bool): Whether enable MKLDNN or not.\n* cpu_num_threads(int): Assign number of cpu threads, valid when `--use_gpu` is `False` and `--enable_mkldnn` is `True`.\n* batch_size(int): Batch size.\n* resize_short(int): Resize the minima between height and width into `resize_short`.\n* crop_size(int): Center crop image to `crop_size`.\n* topk(int): Print (return) the `topk` prediction results when Topk postprocess is used.\n* threshold(float): The threshold of ThreshOutput when postprocess is used.\n* class_id_map_file(str): The mapping file between class ID and label.\n* save_dir(str): The directory to save the prediction results that can be used as pre-label.\n\n**Note**: If you want to use `Transformer series models`, such as `DeiT_***_384`, `ViT_***_384`, etc., please pay attention to the input size of model, and need to set `resize_short=384`, `resize=384`. The following is a demo.\n\n* CLI:\n```bash\nfrom paddleclas import PaddleClas, get_default_confg\npaddleclas --model_name=ViT_base_patch16_384 --infer_imgs='docs/images/inference_deployment/whl_demo.jpg' --resize_short=384 --crop_size=384\n```\n\n* Python:\n```python\nfrom paddleclas import PaddleClas\nclas = PaddleClas(model_name='ViT_base_patch16_384', resize_short=384, crop_size=384)\n```\n\n<a name=\"4\"></a>\n\n## 4. Usage\n\nPaddleClas provides two ways to use:\n1. Python interative programming;\n2. Bash command line programming.\n\n<a name=\"4.1\"></a>\n\n### 4.1 View help information\n\n* CLI\n```bash\npaddleclas -h\n```\n\n<a name=\"4.2\"></a>\n\n### 4.2 Prediction using inference model provide by PaddleClas\nYou can use the inference model provided by PaddleClas to predict, and only need to specify `model_name`. In this case, PaddleClas will automatically download files of specified model and save them in the directory `~/.paddleclas/`.\n\n* Python\n```python\nfrom paddleclas import PaddleClas\nclas = PaddleClas(model_name='ResNet50')\ninfer_imgs = 'docs/images/inference_deployment/whl_demo.jpg'\nresult=clas.predict(infer_imgs)\nprint(next(result))\n```\n\n* CLI\n```bash\npaddleclas --model_name='ResNet50' --infer_imgs='docs/images/inference_deployment/whl_demo.jpg'\n```\n\n<a name=\"4.3\"></a>\n\n### 4.3 Prediction using local model files\nYou can use the local model files trained by yourself to predict, and only need to specify `inference_model_dir`. Note that the directory must contain `inference.pdmodel` and `inference.pdiparams`.\n\n* Python\n```python\nfrom paddleclas import PaddleClas\nclas = PaddleClas(inference_model_dir='./inference/')\ninfer_imgs = 'docs/images/inference_deployment/whl_demo.jpg'\nresult=clas.predict(infer_imgs)\nprint(next(result))\n```\n\n* CLI\n```bash\npaddleclas --inference_model_dir='./inference/' --infer_imgs='docs/images/inference_deployment/whl_demo.jpg'\n```\n\n<a name=\"4.4\"></a>\n\n### 4.4 Prediction by batch\nYou can predict by batch, only need to specify `batch_size` when `infer_imgs` is direcotry contain image files.\n\n* Python\n```python\nfrom paddleclas import PaddleClas\nclas = PaddleClas(model_name='ResNet50', batch_size=2)\ninfer_imgs = 'docs/images/'\nresult=clas.predict(infer_imgs)\nfor r in result:\n    print(r)\n```\n\n* CLI\n```bash\npaddleclas --model_name='ResNet50' --infer_imgs='docs/images/' --batch_size 2\n```\n\n<a name=\"4.5\"></a>\n\n### 4.5 Prediction of Internet image\nYou can predict the Internet image, only need to specify URL of Internet image by `infer_imgs`. In this case, the image file will be downloaded and saved in the directory `~/.paddleclas/images/`.\n\n* Python\n```python\nfrom paddleclas import PaddleClas\nclas = PaddleClas(model_name='ResNet50')\ninfer_imgs = 'https://raw.githubusercontent.com/paddlepaddle/paddleclas/release/2.2/docs/images/inference_deployment/whl_demo.jpg'\nresult=clas.predict(infer_imgs)\nprint(next(result))\n```\n\n* CLI\n```bash\npaddleclas --model_name='ResNet50' --infer_imgs='https://raw.githubusercontent.com/paddlepaddle/paddleclas/release/2.2/docs/images/inference_deployment/whl_demo.jpg'\n```\n\n<a name=\"4.6\"></a>\n\n### 4.6 Prediction of NumPy.array format image\nIn Python code, you can predict the `NumPy.array` format image, only need to use the `infer_imgs` to transfer variable of image data. Note that the models in PaddleClas only support to predict 3 channels image data, and channels order is `RGB`.\n\n* python\n```python\nimport cv2\nfrom paddleclas import PaddleClas\nclas = PaddleClas(model_name='ResNet50')\ninfer_imgs = cv2.imread(\"docs/en/inference_deployment/whl_deploy_en.md\")[:, :, ::-1]\nresult=clas.predict(infer_imgs)\nprint(next(result))\n```\n\n<a name=\"4.7\"></a>\n\n### 4.7 Save the prediction result(s)\nYou can save the prediction result(s) as pre-label, only need to use `pre_label_out_dir` to specify the directory to save.\n\n* python\n```python\nfrom paddleclas import PaddleClas\nclas = PaddleClas(model_name='ResNet50', save_dir='./output_pre_label/')\ninfer_imgs = 'docs/images/' # it can be infer_imgs folder path which contains all of images you want to predict.\nresult=clas.predict(infer_imgs)\nprint(next(result))\n```\n\n* CLI\n```bash\npaddleclas --model_name='ResNet50' --infer_imgs='docs/images/' --save_dir='./output_pre_label/'\n```\n\n<a name=\"4.8\"></a>\n\n### 4.8 Specify the mapping between class id and label name\nYou can specify the mapping between class id and label name, only need to use `class_id_map_file` to specify the mapping file. PaddleClas uses ImageNet1K's mapping by default.\n\nThe content format of mapping file shall be:\n\n```\nclass_id<space>class_name<\\n>\n```\n\nFor example:\n\n```\n0 tench, Tinca tinca\n1 goldfish, Carassius auratus\n2 great white shark, white shark, man-eater, man-eating shark, Carcharodon carcharias\n......\n```\n\n* Python\n```python\nfrom paddleclas import PaddleClas\nclas = PaddleClas(model_name='ResNet50', class_id_map_file='./ppcls/utils/imagenet1k_label_list.txt')\ninfer_imgs = 'docs/images/inference_deployment/whl_demo.jpg'\nresult=clas.predict(infer_imgs)\nprint(next(result))\n```\n\n* CLI\n```bash\npaddleclas --model_name='ResNet50' --infer_imgs='docs/images/inference_deployment/whl_demo.jpg' --class_id_map_file='./ppcls/utils/imagenet1k_label_list.txt'\n```\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/paddleclas-2.5.1.dist-info",
      "installer": "pip",
      "requested": true
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "paddlepaddle",
        "version": "2.4.2",
        "platform": [
          "UNKNOWN"
        ],
        "summary": "Parallel Distributed Deep Learning",
        "description_content_type": "text/markdown",
        "author_email": "Paddle-better@baidu.com",
        "maintainer": "PaddlePaddle",
        "maintainer_email": "Paddle-better@baidu.com",
        "license": "Apache Software License",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Operating System :: OS Independent",
          "Intended Audience :: Developers",
          "Intended Audience :: Education",
          "Intended Audience :: Science/Research",
          "License :: OSI Approved :: Apache Software License",
          "Programming Language :: C++",
          "Programming Language :: Python :: 2.7",
          "Programming Language :: Python :: 3.5",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8"
        ],
        "requires_dist": [
          "requests (>=2.20.0)",
          "numpy (>=1.13)",
          "protobuf (<=3.20.0,>=3.1.0)",
          "Pillow",
          "six",
          "decorator",
          "astor",
          "paddle-bfloat (==0.1.7)",
          "opt-einsum (==3.3.0)"
        ],
        "project_url": [
          "Homepage, https://www.paddlepaddle.org.cn/",
          "Downloads, https://github.com/paddlepaddle/paddle"
        ],
        "description": "\n--------------------------------------------------------------------------------\n\n[![Build Status](https://travis-ci.org/PaddlePaddle/Paddle.svg?branch=develop)](https://travis-ci.org/PaddlePaddle/Paddle)\n[![Documentation Status](https://img.shields.io/badge/docs-latest-brightgreen.svg?style=flat)](http://www.paddlepaddle.org.cn/documentation/docs/en/1.8/beginners_guide/index_en.html)\n[![Documentation Status](https://img.shields.io/badge/中文文档-最新-brightgreen.svg)](http://www.paddlepaddle.org.cn/documentation/docs/zh/1.8/beginners_guide/index_cn.html)\n[![Release](https://img.shields.io/github/release/PaddlePaddle/Paddle.svg)](https://github.com/PaddlePaddle/Paddle/releases)\n[![License](https://img.shields.io/badge/license-Apache%202-blue.svg)](LICENSE)\n\nWelcome to the PaddlePaddle GitHub.\n\nPaddlePaddle, as the only independent R&D deep learning platform in China, has been officially open-sourced to professional communities since 2016. It is an industrial platform with advanced technologies and rich features that cover core deep learning frameworks, basic model libraries, end-to-end development kits, tools & components as well as service platforms.\nPaddlePaddle is originated from industrial practices with dedication and commitments to industrialization. It has been widely adopted by a wide range of sectors including manufacturing, agriculture, enterprise service, and so on while serving more than 2.3 million developers. With such advantages, PaddlePaddle has helped an increasing number of partners commercialize AI.\n\n\n\n## Installation\n\nWe provide users with four installation methods ,which are pip, conda, docker and install with source code.\n\n### PIP Installation\n\n#### <a id=\"PREQUISITES\">PREQUISTIES</a>\n\n##### On Windows:\n\n- **Windows 7/8/10 Pro/Enterprise (64bit)**\n  - **GPU version support CUDA 9.0/9.1/9.2/10.0/10.1，only supports single card**\n- **Python version 2.7.15+/3.5.1+/3.6/3.7/3.8 (64 bit)**\n- **pip version 9.0.1+ (64 bit)**\n\n##### On Linux:\n\n- **Linux Version (64 bit)**\n  - **CentOS 6 (GPU Version Supports CUDA 9.0/9.1/9.2/10.0/10.1, only supports single card**)**\n  - **CentOS 7 (GPUVersion Supports CUDA 9.0/9.1/9.2/10.0/10.1, CUDA 9.1 only supports single card**)**\n  - **Ubuntu 14.04 (GPUVersion Supports CUDA 10.0/10.1)**\n  - **Ubuntu 16.04 (GPUVersion Supports CUDA 9.0/9.1/9.2/10.0/10.1)**\n  - **Ubuntu 18.04 (GPUVersion Supports CUDA 10.0/10.1)**\n- **Python Version: 2.7.15+/3.5.1+/3.6/3.7/3.8 (64 bit)**\n- **pip or pip3 Version 20.2.2+ (64 bit)**\n\n##### On MacOS:\n\n- **MacOS version 10.11/10.12/10.13/10.14 (64 bit) (not support GPU version yet)**\n\n- **Python version 2.7.15+/3.5.1+/3.6/3.7/3.8 (64 bit)**\n\n- **pip or pip3 version 9.0.1+ (64 bit)**\n\n  \n\n#### <a id=\"Commands to install\">Commands to install</a>\n\n###### cpu:\n\npython2:\n\n```python -m pip install paddlepaddle```\n\npython3:\n\n```python3 -m pip install paddlepaddle```\n\n\n\n###### gpu-cuda10.2:\n\npython2:\n\n```python -m pip install paddlepaddle-gpu```\n\npython3:\n\n```python3 -m pip install paddlepaddle-gpu```\n\n\n\n###### gpu-cuda9、10.0、10.1、11:\n\nWe only release paddlepaddle-gpu cuda10.2 on pypi.\n\nIf you want to install paddlepaddle-gpu with cuda version of 9.0 ,10.0 ,10.1 ,or 11.0, commands to install are on our website: [Installation Document](https://www.paddlepaddle.org.cn/)\n\n\n\n#### <a id=\"Verify installation\">Verify installation\t</a>\n\nAfter the installation is complete, you can use `python` or `python3` to enter the Python interpreter and then use `import paddle.fluid` and `fluid.install_check.run_check()`\n\nIf `Your Paddle Fluid is installed successfully!` appears, to verify that the installation was successful.\n\n\n\n### Other installation methods\n\nIf you want to install witch conda or docker or pip,please see commands to install on our website: [Installation Document](https://www.paddlepaddle.org.cn/)\n\n\n\n## FOUR LEADING TECHNOLOGIES\n\n- **Agile Framework for Industrial Development of Deep Neural Networks**\n\n    The PaddlePaddle deep learning framework facilitates the development while lowering the technical burden, through leveraging a programmable scheme to architect the neural networks. It supports both declarative programming and imperative programming with both development flexibility and high runtime performance preserved.  The neural architectures could be automatically designed by algorithms with better performance than the ones designed by human experts.\n\n\n-  **Support Ultra-Large-Scale Training of Deep Neural Networks**\n\n    PaddlePaddle has made breakthroughs in ultra-large-scale deep neural networks training. It launched the world's first large-scale open-source training platform that supports the training of deep networks with 100 billions of features and trillions of parameters using data sources distributed over hundreds of nodes. PaddlePaddle overcomes the online deep learning challenges for ultra-large-scale deep learning models, and further achieved the real-time model updating with more than 1 trillion parameters.\n     [Click here to learn more](https://github.com/PaddlePaddle/Fleet)\n\n\n- **Accelerated High-Performance Inference over Ubiquitous Deployments**\n\n    PaddlePaddle is not only compatible with other open-source frameworks for models training, but also works well on the ubiquitous developments, varying from platforms to devices. More specifically, PaddlePaddle accelerates the inference procedure with the fastest speed-up. Note that, a recent breakthrough of inference speed has been made by PaddlePaddle on Huawei's Kirin NPU, through the hardware/software co-optimization.\n     [Click here to learn more](https://github.com/PaddlePaddle/Paddle-Lite)\n    \n- **Industry-Oriented Models and Libraries with Open Source Repositories**\n\n     PaddlePaddle includes and maintains more than 100 mainstream models that have been practiced and polished for a long time in the industry. Some of these models have won major prizes from key international competitions. In the meanwhile, PaddlePaddle has further more than 200 pre-training models (some of them with source codes) to facilitate the rapid development of industrial applications.\n     [Click here to learn more](https://github.com/PaddlePaddle/models)\n     \n\n## Documentation\n\nWe provide [English](http://www.paddlepaddle.org.cn/documentation/docs/en/1.8/beginners_guide/index_en.html) and\n[Chinese](http://www.paddlepaddle.org.cn/documentation/docs/zh/1.8/beginners_guide/index_cn.html) documentation.\n\n- [Basic Deep Learning Models](https://www.paddlepaddle.org.cn/documentation/docs/en/beginners_guide/index_en.html)\n\n  You might want to start from how to implement deep learning basics with PaddlePaddle.\n\n\n- [User Guides](https://www.paddlepaddle.org.cn/documentation/docs/en/user_guides/index_en.html)\n\n  You might have got the hang of Beginner’s Guide, and wish to model practical problems and build your original networks.\n  \n- [Advanced User Guides](https://www.paddlepaddle.org.cn/documentation/docs/en/advanced_guide/index_en.html)\n\n  So far you have already been familiar with Fluid. And the next step should be building a more efficient model or inventing your original Operator. \n\n\n- [API Reference](https://www.paddlepaddle.org.cn/documentation/docs/en/api/index_en.html)\n\n   Our new API enables much shorter programs.\n\n\n- [How to Contribute](https://www.paddlepaddle.org.cn/documentation/docs/en/advanced_guide/addon_development/contribute_code/index_en.html)\n\n   We appreciate your contributions!\n\n## Communication\n\n- [Github Issues](https://github.com/PaddlePaddle/Paddle/issues): bug reports, feature requests, install issues, usage issues, etc.\n- QQ discussion group: 796771754 (PaddlePaddle).\n- [Forums](http://ai.baidu.com/forum/topic/list/168?pageNo=1): discuss implementations, research, etc.\n\n## Copyright and License\nPaddlePaddle is provided under the [Apache-2.0 license](LICENSE).\n\n\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/paddlepaddle-2.4.2.dist-info",
      "installer": "pip",
      "requested": true
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "pandas",
        "version": "1.5.3",
        "platform": [
          "any"
        ],
        "summary": "Powerful data structures for data analysis, time series, and statistics",
        "description_content_type": "text/markdown",
        "home_page": "https://pandas.pydata.org",
        "author": "The Pandas Development Team",
        "author_email": "pandas-dev@python.org",
        "license": "BSD-3-Clause",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Environment :: Console",
          "Intended Audience :: Science/Research",
          "License :: OSI Approved :: BSD License",
          "Operating System :: OS Independent",
          "Programming Language :: Cython",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3 :: Only",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Topic :: Scientific/Engineering"
        ],
        "requires_dist": [
          "python-dateutil (>=2.8.1)",
          "pytz (>=2020.1)",
          "numpy (>=1.20.3) ; python_version < \"3.10\"",
          "numpy (>=1.21.0) ; python_version >= \"3.10\"",
          "numpy (>=1.23.2) ; python_version >= \"3.11\"",
          "hypothesis (>=5.5.3) ; extra == 'test'",
          "pytest (>=6.0) ; extra == 'test'",
          "pytest-xdist (>=1.31) ; extra == 'test'"
        ],
        "requires_python": ">=3.8",
        "project_url": [
          "Bug Tracker, https://github.com/pandas-dev/pandas/issues",
          "Documentation, https://pandas.pydata.org/docs/",
          "Source Code, https://github.com/pandas-dev/pandas"
        ],
        "provides_extra": [
          "test"
        ],
        "description": "<div align=\"center\">\n  <img src=\"https://pandas.pydata.org/static/img/pandas.svg\"><br>\n</div>\n\n-----------------\n\n# pandas: powerful Python data analysis toolkit\n[![PyPI Latest Release](https://img.shields.io/pypi/v/pandas.svg)](https://pypi.org/project/pandas/)\n[![Conda Latest Release](https://anaconda.org/conda-forge/pandas/badges/version.svg)](https://anaconda.org/anaconda/pandas/)\n[![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.3509134.svg)](https://doi.org/10.5281/zenodo.3509134)\n[![Package Status](https://img.shields.io/pypi/status/pandas.svg)](https://pypi.org/project/pandas/)\n[![License](https://img.shields.io/pypi/l/pandas.svg)](https://github.com/pandas-dev/pandas/blob/main/LICENSE)\n[![Coverage](https://codecov.io/github/pandas-dev/pandas/coverage.svg?branch=main)](https://codecov.io/gh/pandas-dev/pandas)\n[![Downloads](https://static.pepy.tech/personalized-badge/pandas?period=month&units=international_system&left_color=black&right_color=orange&left_text=PyPI%20downloads%20per%20month)](https://pepy.tech/project/pandas)\n[![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/pydata/pandas)\n[![Powered by NumFOCUS](https://img.shields.io/badge/powered%20by-NumFOCUS-orange.svg?style=flat&colorA=E1523D&colorB=007D8A)](https://numfocus.org)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n[![Imports: isort](https://img.shields.io/badge/%20imports-isort-%231674b1?style=flat&labelColor=ef8336)](https://pycqa.github.io/isort/)\n\n## What is it?\n\n**pandas** is a Python package that provides fast, flexible, and expressive data\nstructures designed to make working with \"relational\" or \"labeled\" data both\neasy and intuitive. It aims to be the fundamental high-level building block for\ndoing practical, **real world** data analysis in Python. Additionally, it has\nthe broader goal of becoming **the most powerful and flexible open source data\nanalysis / manipulation tool available in any language**. It is already well on\nits way towards this goal.\n\n## Main Features\nHere are just a few of the things that pandas does well:\n\n  - Easy handling of [**missing data**][missing-data] (represented as\n    `NaN`, `NA`, or `NaT`) in floating point as well as non-floating point data\n  - Size mutability: columns can be [**inserted and\n    deleted**][insertion-deletion] from DataFrame and higher dimensional\n    objects\n  - Automatic and explicit [**data alignment**][alignment]: objects can\n    be explicitly aligned to a set of labels, or the user can simply\n    ignore the labels and let `Series`, `DataFrame`, etc. automatically\n    align the data for you in computations\n  - Powerful, flexible [**group by**][groupby] functionality to perform\n    split-apply-combine operations on data sets, for both aggregating\n    and transforming data\n  - Make it [**easy to convert**][conversion] ragged,\n    differently-indexed data in other Python and NumPy data structures\n    into DataFrame objects\n  - Intelligent label-based [**slicing**][slicing], [**fancy\n    indexing**][fancy-indexing], and [**subsetting**][subsetting] of\n    large data sets\n  - Intuitive [**merging**][merging] and [**joining**][joining] data\n    sets\n  - Flexible [**reshaping**][reshape] and [**pivoting**][pivot-table] of\n    data sets\n  - [**Hierarchical**][mi] labeling of axes (possible to have multiple\n    labels per tick)\n  - Robust IO tools for loading data from [**flat files**][flat-files]\n    (CSV and delimited), [**Excel files**][excel], [**databases**][db],\n    and saving/loading data from the ultrafast [**HDF5 format**][hdfstore]\n  - [**Time series**][timeseries]-specific functionality: date range\n    generation and frequency conversion, moving window statistics,\n    date shifting and lagging\n\n\n   [missing-data]: https://pandas.pydata.org/pandas-docs/stable/user_guide/missing_data.html\n   [insertion-deletion]: https://pandas.pydata.org/pandas-docs/stable/user_guide/dsintro.html#column-selection-addition-deletion\n   [alignment]: https://pandas.pydata.org/pandas-docs/stable/user_guide/dsintro.html?highlight=alignment#intro-to-data-structures\n   [groupby]: https://pandas.pydata.org/pandas-docs/stable/user_guide/groupby.html#group-by-split-apply-combine\n   [conversion]: https://pandas.pydata.org/pandas-docs/stable/user_guide/dsintro.html#dataframe\n   [slicing]: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#slicing-ranges\n   [fancy-indexing]: https://pandas.pydata.org/pandas-docs/stable/user_guide/advanced.html#advanced\n   [subsetting]: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#boolean-indexing\n   [merging]: https://pandas.pydata.org/pandas-docs/stable/user_guide/merging.html#database-style-dataframe-or-named-series-joining-merging\n   [joining]: https://pandas.pydata.org/pandas-docs/stable/user_guide/merging.html#joining-on-index\n   [reshape]: https://pandas.pydata.org/pandas-docs/stable/user_guide/reshaping.html\n   [pivot-table]: https://pandas.pydata.org/pandas-docs/stable/user_guide/reshaping.html\n   [mi]: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#hierarchical-indexing-multiindex\n   [flat-files]: https://pandas.pydata.org/pandas-docs/stable/user_guide/io.html#csv-text-files\n   [excel]: https://pandas.pydata.org/pandas-docs/stable/user_guide/io.html#excel-files\n   [db]: https://pandas.pydata.org/pandas-docs/stable/user_guide/io.html#sql-queries\n   [hdfstore]: https://pandas.pydata.org/pandas-docs/stable/user_guide/io.html#hdf5-pytables\n   [timeseries]: https://pandas.pydata.org/pandas-docs/stable/user_guide/timeseries.html#time-series-date-functionality\n\n## Where to get it\nThe source code is currently hosted on GitHub at:\nhttps://github.com/pandas-dev/pandas\n\nBinary installers for the latest released version are available at the [Python\nPackage Index (PyPI)](https://pypi.org/project/pandas) and on [Conda](https://docs.conda.io/en/latest/).\n\n```sh\n# conda\nconda install pandas\n```\n\n```sh\n# or PyPI\npip install pandas\n```\n\n## Dependencies\n- [NumPy - Adds support for large, multi-dimensional arrays, matrices and high-level mathematical functions to operate on these arrays](https://www.numpy.org)\n- [python-dateutil - Provides powerful extensions to the standard datetime module](https://dateutil.readthedocs.io/en/stable/index.html)\n- [pytz - Brings the Olson tz database into Python which allows accurate and cross platform timezone calculations](https://github.com/stub42/pytz)\n\nSee the [full installation instructions](https://pandas.pydata.org/pandas-docs/stable/install.html#dependencies) for minimum supported versions of required, recommended and optional dependencies.\n\n## Installation from sources\nTo install pandas from source you need [Cython](https://cython.org/) in addition to the normal\ndependencies above. Cython can be installed from PyPI:\n\n```sh\npip install cython\n```\n\nIn the `pandas` directory (same one where you found this file after\ncloning the git repo), execute:\n\n```sh\npython setup.py install\n```\n\nor for installing in [development mode](https://pip.pypa.io/en/latest/cli/pip_install/#install-editable):\n\n\n```sh\npython -m pip install -e . --no-build-isolation --no-use-pep517\n```\n\nIf you have `make`, you can also use `make develop` to run the same command.\n\nor alternatively\n\n```sh\npython setup.py develop\n```\n\nSee the full instructions for [installing from source](https://pandas.pydata.org/pandas-docs/stable/getting_started/install.html#installing-from-source).\n\n## License\n[BSD 3](LICENSE)\n\n## Documentation\nThe official documentation is hosted on PyData.org: https://pandas.pydata.org/pandas-docs/stable\n\n## Background\nWork on ``pandas`` started at [AQR](https://www.aqr.com/) (a quantitative hedge fund) in 2008 and\nhas been under active development since then.\n\n## Getting Help\n\nFor usage questions, the best place to go to is [StackOverflow](https://stackoverflow.com/questions/tagged/pandas).\nFurther, general questions and discussions can also take place on the [pydata mailing list](https://groups.google.com/forum/?fromgroups#!forum/pydata).\n\n## Discussion and Development\nMost development discussions take place on GitHub in this repo. Further, the [pandas-dev mailing list](https://mail.python.org/mailman/listinfo/pandas-dev) can also be used for specialized discussions or design issues, and a [Gitter channel](https://gitter.im/pydata/pandas) is available for quick development related questions.\n\n## Contributing to pandas [![Open Source Helpers](https://www.codetriage.com/pandas-dev/pandas/badges/users.svg)](https://www.codetriage.com/pandas-dev/pandas)\n\nAll contributions, bug reports, bug fixes, documentation improvements, enhancements, and ideas are welcome.\n\nA detailed overview on how to contribute can be found in the **[contributing guide](https://pandas.pydata.org/docs/dev/development/contributing.html)**.\n\nIf you are simply looking to start working with the pandas codebase, navigate to the [GitHub \"issues\" tab](https://github.com/pandas-dev/pandas/issues) and start looking through interesting issues. There are a number of issues listed under [Docs](https://github.com/pandas-dev/pandas/issues?labels=Docs&sort=updated&state=open) and [good first issue](https://github.com/pandas-dev/pandas/issues?labels=good+first+issue&sort=updated&state=open) where you could start out.\n\nYou can also triage issues which may include reproducing bug reports, or asking for vital information such as version numbers or reproduction instructions. If you would like to start triaging issues, one easy way to get started is to [subscribe to pandas on CodeTriage](https://www.codetriage.com/pandas-dev/pandas).\n\nOr maybe through using pandas you have an idea of your own or are looking for something in the documentation and thinking ‘this can be improved’...you can do something about it!\n\nFeel free to ask questions on the [mailing list](https://groups.google.com/forum/?fromgroups#!forum/pydata) or on [Gitter](https://gitter.im/pydata/pandas).\n\nAs contributors and maintainers to this project, you are expected to abide by pandas' code of conduct. More information can be found at: [Contributor Code of Conduct](https://github.com/pandas-dev/.github/blob/master/CODE_OF_CONDUCT.md)\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/pandas-1.5.3.dist-info",
      "installer": "pip",
      "requested": true
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "paramiko",
        "version": "3.1.0",
        "platform": [
          "Posix; MacOS X; Windows"
        ],
        "summary": "SSH2 protocol library",
        "home_page": "https://paramiko.org",
        "author": "Jeff Forcier",
        "author_email": "jeff@bitprophet.org",
        "license": "LGPL",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: GNU Library or Lesser General Public License (LGPL)",
          "Operating System :: OS Independent",
          "Topic :: Internet",
          "Topic :: Security :: Cryptography",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3 :: Only",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11"
        ],
        "requires_dist": [
          "bcrypt (>=3.2)",
          "cryptography (>=3.3)",
          "pynacl (>=1.5)",
          "pyasn1 (>=0.1.7) ; extra == 'all'",
          "invoke (>=2.0) ; extra == 'all'",
          "gssapi (>=1.4.1) ; (platform_system != \"Windows\") and extra == 'all'",
          "pywin32 (>=2.1.8) ; (platform_system == \"Windows\") and extra == 'all'",
          "pyasn1 (>=0.1.7) ; extra == 'gssapi'",
          "gssapi (>=1.4.1) ; (platform_system != \"Windows\") and extra == 'gssapi'",
          "pywin32 (>=2.1.8) ; (platform_system == \"Windows\") and extra == 'gssapi'",
          "invoke (>=2.0) ; extra == 'invoke'"
        ],
        "requires_python": ">=3.6",
        "project_url": [
          "Docs, https://docs.paramiko.org",
          "Source, https://github.com/paramiko/paramiko",
          "Issues, https://github.com/paramiko/paramiko/issues",
          "Changelog, https://www.paramiko.org/changelog.html",
          "CI, https://app.circleci.com/pipelines/github/paramiko/paramiko"
        ],
        "provides_extra": [
          "all",
          "ed25519",
          "gssapi",
          "invoke"
        ],
        "description": "|version| |python| |license| |ci| |coverage|\n\n.. |version| image:: https://img.shields.io/pypi/v/paramiko\n    :target: https://pypi.org/project/paramiko/\n    :alt: PyPI - Package Version\n.. |python| image:: https://img.shields.io/pypi/pyversions/paramiko\n    :target: https://pypi.org/project/paramiko/\n    :alt: PyPI - Python Version\n.. |license| image:: https://img.shields.io/pypi/l/paramiko\n    :target: https://github.com/paramiko/paramiko/blob/main/LICENSE\n    :alt: PyPI - License\n.. |ci| image:: https://img.shields.io/circleci/build/github/paramiko/paramiko/main\n    :target: https://app.circleci.com/pipelines/github/paramiko/paramiko\n    :alt: CircleCI\n.. |coverage| image:: https://img.shields.io/codecov/c/gh/paramiko/paramiko\n    :target: https://app.codecov.io/gh/paramiko/paramiko\n    :alt: Codecov\n\nWelcome to Paramiko!\n====================\n\nParamiko is a pure-Python [#]_ (3.6+) implementation of the SSHv2 protocol\n[#]_, providing both client and server functionality. It provides the\nfoundation for the high-level SSH library `Fabric <https://fabfile.org>`_,\nwhich is what we recommend you use for common client use-cases such as running\nremote shell commands or transferring files.\n\nDirect use of Paramiko itself is only intended for users who need\nadvanced/low-level primitives or want to run an in-Python sshd.\n\nFor installation information, changelogs, FAQs and similar, please visit `our\nmain project website <https://paramiko.org>`_; for API details, see `the\nversioned docs <https://docs.paramiko.org>`_. Additionally, the project\nmaintainer keeps a `roadmap <http://bitprophet.org/projects#roadmap>`_ on his\npersonal site.\n\n.. [#]\n    Paramiko relies on `cryptography <https://cryptography.io>`_ for crypto\n    functionality, which makes use of C and Rust extensions but has many\n    precompiled options available. See `our installation page\n    <https://www.paramiko.org/installing.html>`_ for details.\n\n.. [#]\n    SSH is defined in :rfc-reference:`4251`, :rfc-reference:`4252`,\n    :rfc-reference:`4253` and :rfc-reference:`4254`. The primary working\n    implementation of the protocol is the `OpenSSH project\n    <http://openssh.org>`_.  Paramiko implements a large portion of the SSH\n    feature set, but there are occasional gaps.\n\n\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/paramiko-3.1.0.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "pip",
        "version": "23.1.2",
        "summary": "The PyPA recommended tool for installing Python packages.",
        "home_page": "https://pip.pypa.io/",
        "author": "The pip developers",
        "author_email": "distutils-sig@python.org",
        "license": "MIT",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: MIT License",
          "Topic :: Software Development :: Build Tools",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3 :: Only",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Programming Language :: Python :: Implementation :: CPython",
          "Programming Language :: Python :: Implementation :: PyPy"
        ],
        "requires_python": ">=3.7",
        "project_url": [
          "Documentation, https://pip.pypa.io",
          "Source, https://github.com/pypa/pip",
          "Changelog, https://pip.pypa.io/en/stable/news/"
        ],
        "description": "pip - The Python Package Installer\n==================================\n\n.. image:: https://img.shields.io/pypi/v/pip.svg\n   :target: https://pypi.org/project/pip/\n\n.. image:: https://readthedocs.org/projects/pip/badge/?version=latest\n   :target: https://pip.pypa.io/en/latest\n\npip is the `package installer`_ for Python. You can use pip to install packages from the `Python Package Index`_ and other indexes.\n\nPlease take a look at our documentation for how to install and use pip:\n\n* `Installation`_\n* `Usage`_\n\nWe release updates regularly, with a new version every 3 months. Find more details in our documentation:\n\n* `Release notes`_\n* `Release process`_\n\nIn pip 20.3, we've `made a big improvement to the heart of pip`_; `learn more`_. We want your input, so `sign up for our user experience research studies`_ to help us do it right.\n\n**Note**: pip 21.0, in January 2021, removed Python 2 support, per pip's `Python 2 support policy`_. Please migrate to Python 3.\n\nIf you find bugs, need help, or want to talk to the developers, please use our mailing lists or chat rooms:\n\n* `Issue tracking`_\n* `Discourse channel`_\n* `User IRC`_\n\nIf you want to get involved head over to GitHub to get the source code, look at our development documentation and feel free to jump on the developer mailing lists and chat rooms:\n\n* `GitHub page`_\n* `Development documentation`_\n* `Development IRC`_\n\nCode of Conduct\n---------------\n\nEveryone interacting in the pip project's codebases, issue trackers, chat\nrooms, and mailing lists is expected to follow the `PSF Code of Conduct`_.\n\n.. _package installer: https://packaging.python.org/guides/tool-recommendations/\n.. _Python Package Index: https://pypi.org\n.. _Installation: https://pip.pypa.io/en/stable/installation/\n.. _Usage: https://pip.pypa.io/en/stable/\n.. _Release notes: https://pip.pypa.io/en/stable/news.html\n.. _Release process: https://pip.pypa.io/en/latest/development/release-process/\n.. _GitHub page: https://github.com/pypa/pip\n.. _Development documentation: https://pip.pypa.io/en/latest/development\n.. _made a big improvement to the heart of pip: https://pyfound.blogspot.com/2020/11/pip-20-3-new-resolver.html\n.. _learn more: https://pip.pypa.io/en/latest/user_guide/#changes-to-the-pip-dependency-resolver-in-20-3-2020\n.. _sign up for our user experience research studies: https://pyfound.blogspot.com/2020/03/new-pip-resolver-to-roll-out-this-year.html\n.. _Python 2 support policy: https://pip.pypa.io/en/latest/development/release-process/#python-2-support\n.. _Issue tracking: https://github.com/pypa/pip/issues\n.. _Discourse channel: https://discuss.python.org/c/packaging\n.. _User IRC: https://kiwiirc.com/nextclient/#ircs://irc.libera.chat:+6697/pypa\n.. _Development IRC: https://kiwiirc.com/nextclient/#ircs://irc.libera.chat:+6697/pypa-dev\n.. _PSF Code of Conduct: https://github.com/pypa/.github/blob/main/CODE_OF_CONDUCT.md\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/pip-23.1.2.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "platformdirs",
        "version": "3.5.1",
        "summary": "A small Python package for determining appropriate platform-specific dirs, e.g. a \"user data dir\".",
        "description_content_type": "text/x-rst",
        "keywords": [
          "appdirs",
          "application",
          "cache",
          "directory",
          "log",
          "user"
        ],
        "maintainer_email": "Bernát Gábor <gaborjbernat@gmail.com>, Julian Berman <Julian@GrayVines.com>, Ofek Lev <oss@ofek.dev>, Ronny Pfannschmidt <opensource@ronnypfannschmidt.de>",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: MIT License",
          "Operating System :: OS Independent",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3 :: Only",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Programming Language :: Python :: 3.12",
          "Programming Language :: Python :: Implementation :: CPython",
          "Programming Language :: Python :: Implementation :: PyPy",
          "Topic :: Software Development :: Libraries :: Python Modules"
        ],
        "requires_dist": [
          "typing-extensions>=4.5; python_version < '3.8'",
          "furo>=2023.3.27; extra == 'docs'",
          "proselint>=0.13; extra == 'docs'",
          "sphinx-autodoc-typehints!=1.23.4,>=1.23; extra == 'docs'",
          "sphinx>=6.2.1; extra == 'docs'",
          "appdirs==1.4.4; extra == 'test'",
          "covdefaults>=2.3; extra == 'test'",
          "pytest-cov>=4; extra == 'test'",
          "pytest-mock>=3.10; extra == 'test'",
          "pytest>=7.3.1; extra == 'test'"
        ],
        "requires_python": ">=3.7",
        "project_url": [
          "Documentation, https://platformdirs.readthedocs.io",
          "Homepage, https://github.com/platformdirs/platformdirs",
          "Source, https://github.com/platformdirs/platformdirs",
          "Tracker, https://github.com/platformdirs/platformdirs/issues"
        ],
        "provides_extra": [
          "docs",
          "test"
        ],
        "description": "The problem\n===========\n\n.. image:: https://github.com/platformdirs/platformdirs/workflows/Test/badge.svg\n   :target: https://github.com/platformdirs/platformdirs/actions?query=workflow%3ATest\n\nWhen writing desktop application, finding the right location to store user data\nand configuration varies per platform. Even for single-platform apps, there\nmay by plenty of nuances in figuring out the right location.\n\nFor example, if running on macOS, you should use::\n\n    ~/Library/Application Support/<AppName>\n\nIf on Windows (at least English Win) that should be::\n\n    C:\\Documents and Settings\\<User>\\Application Data\\Local Settings\\<AppAuthor>\\<AppName>\n\nor possibly::\n\n    C:\\Documents and Settings\\<User>\\Application Data\\<AppAuthor>\\<AppName>\n\nfor `roaming profiles <https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-vista/cc766489(v=ws.10)>`_ but that is another story.\n\nOn Linux (and other Unices), according to the `XDG Basedir Spec`_, it should be::\n\n    ~/.local/share/<AppName>\n\n.. _XDG Basedir Spec: https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html\n\n``platformdirs`` to the rescue\n==============================\n\nThis kind of thing is what the ``platformdirs`` package is for.\n``platformdirs`` will help you choose an appropriate:\n\n- user data dir (``user_data_dir``)\n- user config dir (``user_config_dir``)\n- user cache dir (``user_cache_dir``)\n- site data dir (``site_data_dir``)\n- site config dir (``site_config_dir``)\n- user log dir (``user_log_dir``)\n- user documents dir (``user_documents_dir``)\n- user runtime dir (``user_runtime_dir``)\n\nAnd also:\n\n- Is slightly opinionated on the directory names used. Look for \"OPINION\" in\n  documentation and code for when an opinion is being applied.\n\nExample output\n==============\n\nOn macOS:\n\n.. code-block:: pycon\n\n    >>> from platformdirs import *\n    >>> appname = \"SuperApp\"\n    >>> appauthor = \"Acme\"\n    >>> user_data_dir(appname, appauthor)\n    '/Users/trentm/Library/Application Support/SuperApp'\n    >>> site_data_dir(appname, appauthor)\n    '/Library/Application Support/SuperApp'\n    >>> user_cache_dir(appname, appauthor)\n    '/Users/trentm/Library/Caches/SuperApp'\n    >>> user_log_dir(appname, appauthor)\n    '/Users/trentm/Library/Logs/SuperApp'\n    >>> user_documents_dir()\n    '/Users/trentm/Documents'\n    >>> user_runtime_dir(appname, appauthor)\n    '/Users/trentm/Library/Caches/TemporaryItems/SuperApp'\n\nOn Windows:\n\n.. code-block:: pycon\n\n    >>> from platformdirs import *\n    >>> appname = \"SuperApp\"\n    >>> appauthor = \"Acme\"\n    >>> user_data_dir(appname, appauthor)\n    'C:\\\\Users\\\\trentm\\\\AppData\\\\Local\\\\Acme\\\\SuperApp'\n    >>> user_data_dir(appname, appauthor, roaming=True)\n    'C:\\\\Users\\\\trentm\\\\AppData\\\\Roaming\\\\Acme\\\\SuperApp'\n    >>> user_cache_dir(appname, appauthor)\n    'C:\\\\Users\\\\trentm\\\\AppData\\\\Local\\\\Acme\\\\SuperApp\\\\Cache'\n    >>> user_log_dir(appname, appauthor)\n    'C:\\\\Users\\\\trentm\\\\AppData\\\\Local\\\\Acme\\\\SuperApp\\\\Logs'\n    >>> user_documents_dir()\n    'C:\\\\Users\\\\trentm\\\\Documents'\n    >>> user_runtime_dir(appname, appauthor)\n    'C:\\\\Users\\\\trentm\\\\AppData\\\\Local\\\\Temp\\\\Acme\\\\SuperApp'\n\nOn Linux:\n\n.. code-block:: pycon\n\n    >>> from platformdirs import *\n    >>> appname = \"SuperApp\"\n    >>> appauthor = \"Acme\"\n    >>> user_data_dir(appname, appauthor)\n    '/home/trentm/.local/share/SuperApp'\n    >>> site_data_dir(appname, appauthor)\n    '/usr/local/share/SuperApp'\n    >>> site_data_dir(appname, appauthor, multipath=True)\n    '/usr/local/share/SuperApp:/usr/share/SuperApp'\n    >>> user_cache_dir(appname, appauthor)\n    '/home/trentm/.cache/SuperApp'\n    >>> user_log_dir(appname, appauthor)\n    '/home/trentm/.cache/SuperApp/log'\n    >>> user_config_dir(appname)\n    '/home/trentm/.config/SuperApp'\n    >>> user_documents_dir()\n    '/home/trentm/Documents'\n    >>> user_runtime_dir(appname, appauthor)\n    '/run/user/{os.getuid()}/SuperApp'\n    >>> site_config_dir(appname)\n    '/etc/xdg/SuperApp'\n    >>> os.environ[\"XDG_CONFIG_DIRS\"] = \"/etc:/usr/local/etc\"\n    >>> site_config_dir(appname, multipath=True)\n    '/etc/SuperApp:/usr/local/etc/SuperApp'\n\nOn Android::\n\n    >>> from platformdirs import *\n    >>> appname = \"SuperApp\"\n    >>> appauthor = \"Acme\"\n    >>> user_data_dir(appname, appauthor)\n    '/data/data/com.myApp/files/SuperApp'\n    >>> user_cache_dir(appname, appauthor)\n    '/data/data/com.myApp/cache/SuperApp'\n    >>> user_log_dir(appname, appauthor)\n    '/data/data/com.myApp/cache/SuperApp/log'\n    >>> user_config_dir(appname)\n    '/data/data/com.myApp/shared_prefs/SuperApp'\n    >>> user_documents_dir()\n    '/storage/emulated/0/Documents'\n    >>> user_runtime_dir(appname, appauthor)\n    '/data/data/com.myApp/cache/SuperApp/tmp'\n\nNote: Some android apps like Termux and Pydroid are used as shells. These\napps are used by the end user to emulate Linux environment. Presence of\n``SHELL`` environment variable is used by Platformdirs to differentiate\nbetween general android apps and android apps used as shells. Shell android\napps also support ``XDG_*`` environment variables.\n\n\n``PlatformDirs`` for convenience\n================================\n\n.. code-block:: pycon\n\n    >>> from platformdirs import PlatformDirs\n    >>> dirs = PlatformDirs(\"SuperApp\", \"Acme\")\n    >>> dirs.user_data_dir\n    '/Users/trentm/Library/Application Support/SuperApp'\n    >>> dirs.site_data_dir\n    '/Library/Application Support/SuperApp'\n    >>> dirs.user_cache_dir\n    '/Users/trentm/Library/Caches/SuperApp'\n    >>> dirs.user_log_dir\n    '/Users/trentm/Library/Logs/SuperApp'\n    >>> dirs.user_documents_dir\n    '/Users/trentm/Documents'\n    >>> dirs.user_runtime_dir\n    '/Users/trentm/Library/Caches/TemporaryItems/SuperApp'\n\nPer-version isolation\n=====================\n\nIf you have multiple versions of your app in use that you want to be\nable to run side-by-side, then you may want version-isolation for these\ndirs::\n\n    >>> from platformdirs import PlatformDirs\n    >>> dirs = PlatformDirs(\"SuperApp\", \"Acme\", version=\"1.0\")\n    >>> dirs.user_data_dir\n    '/Users/trentm/Library/Application Support/SuperApp/1.0'\n    >>> dirs.site_data_dir\n    '/Library/Application Support/SuperApp/1.0'\n    >>> dirs.user_cache_dir\n    '/Users/trentm/Library/Caches/SuperApp/1.0'\n    >>> dirs.user_log_dir\n    '/Users/trentm/Library/Logs/SuperApp/1.0'\n    >>> dirs.user_documents_dir\n    '/Users/trentm/Documents'\n    >>> dirs.user_runtime_dir\n    '/Users/trentm/Library/Caches/TemporaryItems/SuperApp/1.0'\n\nBe wary of using this for configuration files though; you'll need to handle\nmigrating configuration files manually.\n\nWhy this Fork?\n==============\n\nThis repository is a friendly fork of the wonderful work started by\n`ActiveState <https://github.com/ActiveState/appdirs>`_ who created\n``appdirs``, this package's ancestor.\n\nMaintaining an open source project is no easy task, particularly\nfrom within an organization, and the Python community is indebted\nto ``appdirs`` (and to Trent Mick and Jeff Rouse in particular) for\ncreating an incredibly useful simple module, as evidenced by the wide\nnumber of users it has attracted over the years.\n\nNonetheless, given the number of long-standing open issues\nand pull requests, and no clear path towards `ensuring\nthat maintenance of the package would continue or grow\n<https://github.com/ActiveState/appdirs/issues/79>`_, this fork was\ncreated.\n\nContributions are most welcome.\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/platformdirs-3.5.1.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "prettytable",
        "version": "3.7.0",
        "summary": "A simple Python library for easily displaying tabular data in a visually appealing ASCII table format",
        "description_content_type": "text/markdown",
        "author_email": "Luke Maurits <luke@maurits.id.au>",
        "maintainer": "Jazzband",
        "license": "BSD (3 clause)",
        "classifier": [
          "License :: OSI Approved :: BSD License",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3 :: Only",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Programming Language :: Python :: 3.12",
          "Programming Language :: Python :: Implementation :: CPython",
          "Programming Language :: Python :: Implementation :: PyPy",
          "Topic :: Text Processing",
          "Typing :: Typed"
        ],
        "requires_dist": [
          "importlib-metadata; python_version < '3.8'",
          "wcwidth",
          "pytest; extra == 'tests'",
          "pytest-cov; extra == 'tests'",
          "pytest-lazy-fixture; extra == 'tests'"
        ],
        "requires_python": ">=3.7",
        "project_url": [
          "Changelog, https://github.com/jazzband/prettytable/releases",
          "Homepage, https://github.com/jazzband/prettytable",
          "Source, https://github.com/jazzband/prettytable"
        ],
        "provides_extra": [
          "tests"
        ],
        "description": "# PrettyTable\n\n[![Jazzband](https://jazzband.co/static/img/badge.svg)](https://jazzband.co/)\n[![PyPI version](https://img.shields.io/pypi/v/prettytable.svg?logo=pypi&logoColor=FFE873)](https://pypi.org/project/prettytable/)\n[![Supported Python versions](https://img.shields.io/pypi/pyversions/prettytable.svg?logo=python&logoColor=FFE873)](https://pypi.org/project/prettytable/)\n[![PyPI downloads](https://img.shields.io/pypi/dm/prettytable.svg)](https://pypistats.org/packages/prettytable)\n[![GitHub Actions status](https://github.com/jazzband/prettytable/workflows/Test/badge.svg)](https://github.com/jazzband/prettytable/actions)\n[![codecov](https://codecov.io/gh/jazzband/prettytable/branch/main/graph/badge.svg)](https://codecov.io/gh/jazzband/prettytable)\n[![Code style: Black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n\nPrettyTable lets you print tables in an attractive ASCII form:\n\n```\n+-----------+------+------------+-----------------+\n| City name | Area | Population | Annual Rainfall |\n+-----------+------+------------+-----------------+\n| Adelaide  | 1295 |  1158259   |      600.5      |\n| Brisbane  | 5905 |  1857594   |      1146.4     |\n| Darwin    | 112  |   120900   |      1714.7     |\n| Hobart    | 1357 |   205556   |      619.5      |\n| Melbourne | 1566 |  3806092   |      646.9      |\n| Perth     | 5386 |  1554769   |      869.4      |\n| Sydney    | 2058 |  4336374   |      1214.8     |\n+-----------+------+------------+-----------------+\n```\n\n## Installation\n\nInstall via pip:\n\n    python -m pip install -U prettytable\n\nInstall latest development version:\n\n    python -m pip install -U git+https://github.com/jazzband/prettytable\n\nOr from `requirements.txt`:\n\n    -e git://github.com/jazzband/prettytable.git#egg=prettytable\n\n## Tutorial on how to use the PrettyTable API\n\n### Getting your data into (and out of) the table\n\nLet's suppose you have a shiny new PrettyTable:\n\n```python\nfrom prettytable import PrettyTable\nx = PrettyTable()\n```\n\nand you want to put some data into it. You have a few options.\n\n#### Row by row\n\nYou can add data one row at a time. To do this you can set the field names first using\nthe `field_names` attribute, and then add the rows one at a time using the `add_row`\nmethod:\n\n```python\nx.field_names = [\"City name\", \"Area\", \"Population\", \"Annual Rainfall\"]\nx.add_row([\"Adelaide\", 1295, 1158259, 600.5])\nx.add_row([\"Brisbane\", 5905, 1857594, 1146.4])\nx.add_row([\"Darwin\", 112, 120900, 1714.7])\nx.add_row([\"Hobart\", 1357, 205556, 619.5])\nx.add_row([\"Sydney\", 2058, 4336374, 1214.8])\nx.add_row([\"Melbourne\", 1566, 3806092, 646.9])\nx.add_row([\"Perth\", 5386, 1554769, 869.4])\n```\n\n#### All rows at once\n\nWhen you have a list of rows, you can add them in one go with `add_rows`:\n\n```python\nx.field_names = [\"City name\", \"Area\", \"Population\", \"Annual Rainfall\"]\nx.add_rows(\n    [\n        [\"Adelaide\", 1295, 1158259, 600.5],\n        [\"Brisbane\", 5905, 1857594, 1146.4],\n        [\"Darwin\", 112, 120900, 1714.7],\n        [\"Hobart\", 1357, 205556, 619.5],\n        [\"Sydney\", 2058, 4336374, 1214.8],\n        [\"Melbourne\", 1566, 3806092, 646.9],\n        [\"Perth\", 5386, 1554769, 869.4],\n    ]\n)\n```\n\n#### Column by column\n\nYou can add data one column at a time as well. To do this you use the `add_column`\nmethod, which takes two arguments - a string which is the name for the field the column\nyou are adding corresponds to, and a list or tuple which contains the column data:\n\n```python\nx.add_column(\"City name\",\n[\"Adelaide\",\"Brisbane\",\"Darwin\",\"Hobart\",\"Sydney\",\"Melbourne\",\"Perth\"])\nx.add_column(\"Area\", [1295, 5905, 112, 1357, 2058, 1566, 5386])\nx.add_column(\"Population\", [1158259, 1857594, 120900, 205556, 4336374, 3806092,\n1554769])\nx.add_column(\"Annual Rainfall\",[600.5, 1146.4, 1714.7, 619.5, 1214.8, 646.9,\n869.4])\n```\n\n#### Mixing and matching\n\nIf you really want to, you can even mix and match `add_row` and `add_column` and build\nsome of your table in one way and some of it in the other. Tables built this way are\nkind of confusing for other people to read, though, so don't do this unless you have a\ngood reason.\n\n#### Importing data from a CSV file\n\nIf you have your table data in a comma-separated values file (.csv), you can read this\ndata into a PrettyTable like this:\n\n```python\nfrom prettytable import from_csv\nwith open(\"myfile.csv\") as fp:\n    mytable = from_csv(fp)\n```\n\n#### Importing data from a database cursor\n\nIf you have your table data in a database which you can access using a library which\nconfirms to the Python DB-API (e.g. an SQLite database accessible using the `sqlite`\nmodule), then you can build a PrettyTable using a cursor object, like this:\n\n```python\nimport sqlite3\nfrom prettytable import from_db_cursor\n\nconnection = sqlite3.connect(\"mydb.db\")\ncursor = connection.cursor()\ncursor.execute(\"SELECT field1, field2, field3 FROM my_table\")\nmytable = from_db_cursor(cursor)\n```\n\n#### Getting data out\n\nThere are three ways to get data out of a PrettyTable, in increasing order of\ncompleteness:\n\n- The `del_row` method takes an integer index of a single row to delete.\n- The `del_column` method takes a field name of a single column to delete.\n- The `clear_rows` method takes no arguments and deletes all the rows in the table - but\n  keeps the field names as they were so you that you can repopulate it with the same\n  kind of data.\n- The `clear` method takes no arguments and deletes all rows and all field names. It's\n  not quite the same as creating a fresh table instance, though - style related\n  settings, discussed later, are maintained.\n\n### Displaying your table in ASCII form\n\nPrettyTable's main goal is to let you print tables in an attractive ASCII form, like\nthis:\n\n```\n+-----------+------+------------+-----------------+\n| City name | Area | Population | Annual Rainfall |\n+-----------+------+------------+-----------------+\n| Adelaide  | 1295 |  1158259   |      600.5      |\n| Brisbane  | 5905 |  1857594   |      1146.4     |\n| Darwin    | 112  |   120900   |      1714.7     |\n| Hobart    | 1357 |   205556   |      619.5      |\n| Melbourne | 1566 |  3806092   |      646.9      |\n| Perth     | 5386 |  1554769   |      869.4      |\n| Sydney    | 2058 |  4336374   |      1214.8     |\n+-----------+------+------------+-----------------+\n```\n\nYou can print tables like this to `stdout` or get string representations of them.\n\n#### Printing\n\nTo print a table in ASCII form, you can just do this:\n\n```python\nprint(x)\n```\n\nThe old `x.printt()` method from versions 0.5 and earlier has been removed.\n\nTo pass options changing the look of the table, use the `get_string()` method documented\nbelow:\n\n```python\nprint(x.get_string())\n```\n\n#### Stringing\n\nIf you don't want to actually print your table in ASCII form but just get a string\ncontaining what _would_ be printed if you use `print(x)`, you can use the `get_string`\nmethod:\n\n```python\nmystring = x.get_string()\n```\n\nThis string is guaranteed to look exactly the same as what would be printed by doing\n`print(x)`. You can now do all the usual things you can do with a string, like write\nyour table to a file or insert it into a GUI.\n\n#### Controlling which data gets displayed\n\nIf you like, you can restrict the output of `print(x)` or `x.get_string` to only the\nfields or rows you like.\n\nThe `fields` argument to these methods takes a list of field names to be printed:\n\n```python\nprint(x.get_string(fields=[\"City name\", \"Population\"]))\n```\n\ngives:\n\n```\n+-----------+------------+\n| City name | Population |\n+-----------+------------+\n| Adelaide  |  1158259   |\n| Brisbane  |  1857594   |\n| Darwin    |   120900   |\n| Hobart    |   205556   |\n| Melbourne |  3806092   |\n| Perth     |  1554769   |\n| Sydney    |  4336374   |\n+-----------+------------+\n```\n\nThe `start` and `end` arguments take the index of the first and last row to print\nrespectively. Note that the indexing works like Python list slicing - to print the 2nd,\n3rd and 4th rows of the table, set `start` to 1 (the first row is row 0, so the second\nis row 1) and set `end` to 4 (the index of the 4th row, plus 1):\n\n```python\nprint(x.get_string(start=1, end=4))\n```\n\nprints:\n\n```\n+-----------+------+------------+-----------------+\n| City name | Area | Population | Annual Rainfall |\n+-----------+------+------------+-----------------+\n| Brisbane  | 5905 |    1857594 | 1146.4          |\n| Darwin    | 112  |     120900 | 1714.7          |\n| Hobart    | 1357 |     205556 | 619.5           |\n+-----------+------+------------+-----------------+\n```\n\n#### Changing the alignment of columns\n\nBy default, all columns in a table are centre aligned.\n\n##### All columns at once\n\nYou can change the alignment of all the columns in a table at once by assigning a one\ncharacter string to the `align` attribute. The allowed strings are `\"l\"`, `\"r\"` and\n`\"c\"` for left, right and centre alignment, respectively:\n\n```python\nx.align = \"r\"\nprint(x)\n```\n\ngives:\n\n```\n+-----------+------+------------+-----------------+\n| City name | Area | Population | Annual Rainfall |\n+-----------+------+------------+-----------------+\n|  Adelaide | 1295 |    1158259 |           600.5 |\n|  Brisbane | 5905 |    1857594 |          1146.4 |\n|    Darwin |  112 |     120900 |          1714.7 |\n|    Hobart | 1357 |     205556 |           619.5 |\n| Melbourne | 1566 |    3806092 |           646.9 |\n|     Perth | 5386 |    1554769 |           869.4 |\n|    Sydney | 2058 |    4336374 |          1214.8 |\n+-----------+------+------------+-----------------+\n```\n\n##### One column at a time\n\nYou can also change the alignment of individual columns based on the corresponding field\nname by treating the `align` attribute as if it were a dictionary.\n\n```python\nx.align[\"City name\"] = \"l\"\nx.align[\"Area\"] = \"c\"\nx.align[\"Population\"] = \"r\"\nx.align[\"Annual Rainfall\"] = \"c\"\nprint(x)\n```\n\ngives:\n\n```\n+-----------+------+------------+-----------------+\n| City name | Area | Population | Annual Rainfall |\n+-----------+------+------------+-----------------+\n| Adelaide  | 1295 |    1158259 |      600.5      |\n| Brisbane  | 5905 |    1857594 |      1146.4     |\n| Darwin    | 112  |     120900 |      1714.7     |\n| Hobart    | 1357 |     205556 |      619.5      |\n| Melbourne | 1566 |    3806092 |      646.9      |\n| Perth     | 5386 |    1554769 |      869.4      |\n| Sydney    | 2058 |    4336374 |      1214.8     |\n+-----------+------+------------+-----------------+\n```\n\n##### Sorting your table by a field\n\nYou can make sure that your ASCII tables are produced with the data sorted by one\nparticular field by giving `get_string` a `sortby` keyword argument, which must be a\nstring containing the name of one field.\n\nFor example, to print the example table we built earlier of Australian capital city\ndata, so that the most populated city comes last, we can do this:\n\n```python\nprint(x.get_string(sortby=\"Population\"))\n```\n\nto get:\n\n```\n+-----------+------+------------+-----------------+\n| City name | Area | Population | Annual Rainfall |\n+-----------+------+------------+-----------------+\n| Darwin    | 112  |   120900   |      1714.7     |\n| Hobart    | 1357 |   205556   |      619.5      |\n| Adelaide  | 1295 |  1158259   |      600.5      |\n| Perth     | 5386 |  1554769   |      869.4      |\n| Brisbane  | 5905 |  1857594   |      1146.4     |\n| Melbourne | 1566 |  3806092   |      646.9      |\n| Sydney    | 2058 |  4336374   |      1214.8     |\n+-----------+------+------------+-----------------+\n```\n\nIf we want the most populated city to come _first_, we can also give a\n`reversesort=True` argument.\n\nIf you _always_ want your tables to be sorted in a certain way, you can make the setting\nlong-term like this:\n\n```python\nx.sortby = \"Population\"\nprint(x)\nprint(x)\nprint(x)\n```\n\nAll three tables printed by this code will be sorted by population (you could do\n`x.reversesort = True` as well, if you wanted). The behaviour will persist until you\nturn it off:\n\n```python\nx.sortby = None\n```\n\nIf you want to specify a custom sorting function, you can use the `sort_key` keyword\nargument. Pass this a function which accepts two lists of values and returns a negative\nor positive value depending on whether the first list should appear before or after the\nsecond one. If your table has n columns, each list will have n+1 elements. Each list\ncorresponds to one row of the table. The first element will be whatever data is in the\nrelevant row, in the column specified by the `sort_by` argument. The remaining n\nelements are the data in each of the table's columns, in order, including a repeated\ninstance of the data in the `sort_by` column.\n\n#### Adding sections to a table\n\nYou can divide your table into different sections using the `divider` argument. This\nwill add a dividing line into the table under the row who has this field set. So we can\nset up a table like this:\n\n```python\nx = PrettyTable()\nx.field_names = [\"City name\", \"Area\", \"Population\", \"Annual Rainfall\"]\nx.add_row([\"Adelaide\", 1295, 1158259, 600.5])\nx.add_row([\"Brisbane\", 5905, 1857594, 1146.4])\nx.add_row([\"Darwin\", 112, 120900, 1714.7])\nx.add_row([\"Hobart\", 1357, 205556, 619.5], divider=True)\nx.add_row([\"Melbourne\", 1566, 3806092, 646.9])\nx.add_row([\"Perth\", 5386, 1554769, 869.4])\nx.add_row([\"Sydney\", 2058, 4336374, 1214.8])\n```\n\nto get a table like this:\n\n```\n+-----------+------+------------+-----------------+\n| City name | Area | Population | Annual Rainfall |\n+-----------+------+------------+-----------------+\n|  Adelaide | 1295 |  1158259   |      600.5      |\n|  Brisbane | 5905 |  1857594   |      1146.4     |\n|   Darwin  | 112  |   120900   |      1714.7     |\n|   Hobart  | 1357 |   205556   |      619.5      |\n+-----------+------+------------+-----------------+\n| Melbourne | 1566 |  3806092   |      646.9      |\n|   Perth   | 5386 |  1554769   |      869.4      |\n|   Sydney  | 2058 |  4336374   |      1214.8     |\n+-----------+------+------------+-----------------+\n```\n\nAny added dividers will be removed if a table is sorted.\n\n### Changing the appearance of your table - the easy way\n\nBy default, PrettyTable produces ASCII tables that look like the ones used in SQL\ndatabase shells. But it can print them in a variety of other formats as well. If the\nformat you want to use is common, PrettyTable makes this easy for you to do using the\n`set_style` method. If you want to produce an uncommon table, you'll have to do things\nslightly harder (see later).\n\n#### Setting a table style\n\nYou can set the style for your table using the `set_style` method before any calls to\n`print` or `get_string`. Here's how to print a table in a format which works nicely with\nMicrosoft Word's \"Convert to table\" feature:\n\n```python\nfrom prettytable import MSWORD_FRIENDLY\nx.set_style(MSWORD_FRIENDLY)\nprint(x)\n```\n\nIn addition to `MSWORD_FRIENDLY` you can use these in-built styles for your tables:\n\n- `DEFAULT` - The default look, used to undo any style changes you may have made\n- `PLAIN_COLUMNS` - A borderless style that works well with command line programs for\n  columnar data\n- `MARKDOWN` - A style that follows Markdown syntax\n- `ORGMODE` - A table style that fits [Org mode](https://orgmode.org/) syntax\n- `SINGLE_BORDER` and `DOUBLE_BORDER` - Styles that use continuous single/double border\n  lines with Box drawing characters for a fancier display on terminal\n\nOther styles are likely to appear in future releases.\n\n### Changing the appearance of your table - the hard way\n\nIf you want to display your table in a style other than one of the in-built styles\nlisted above, you'll have to set things up the hard way.\n\nDon't worry, it's not really that hard!\n\n#### Style options\n\nPrettyTable has a number of style options which control various aspects of how tables\nare displayed. You have the freedom to set each of these options individually to\nwhatever you prefer. The `set_style` method just does this automatically for you.\n\nThe options are these:\n\n- `border` - A boolean option (must be `True` or `False`). Controls whether a border is\n  drawn inside and around the table.\n- `preserve_internal_border` - A boolean option (must be `True` or `False`). Controls\n  whether borders are still drawn within the table even when `border=False`.\n- `header` - A boolean option (must be `True` or `False`). Controls whether the first\n  row of the table is a header showing the names of all the fields.\n- `hrules` - Controls printing of horizontal rules after rows. Allowed values: `FRAME`,\n  `HEADER`, `ALL`, `NONE` - note that these are variables defined inside the\n  `prettytable` module so make sure you import them or use `prettytable.FRAME` etc.\n- `vrules` - Controls printing of vertical rules between columns. Allowed values:\n  `FRAME`, `ALL`, `NONE`.\n- `int_format` - A string which controls the way integer data is printed. This works\n  like: `print(\"%<int_format>d\" % data)`\n- `float_format` - A string which controls the way floating point data is printed. This\n  works like: `print(\"%<float_format>f\" % data)`\n- `custom_format` - A Dictionary of field and callable. This allows you to set any\n  format you want `pf.custom_format[\"my_col_int\"] = ()lambda f, v: f\"{v:,}\"`. The type\n  of the callable if `callable[[str, Any], str]`\n- `padding_width` - Number of spaces on either side of column data (only used if left\n  and right paddings are `None`).\n- `left_padding_width` - Number of spaces on left-hand side of column data.\n- `right_padding_width` - Number of spaces on right-hand side of column data.\n- `vertical_char` - Single character string used to draw vertical lines. Default is `|`.\n- `horizontal_char` - Single character string used to draw horizontal lines. Default is\n  `-`.\n- `_horizontal_align_char` - single character string used to indicate column alignment\n  in horizontal lines. Default is `:` for Markdown, otherwise `None`.\n- `junction_char` - Single character string used to draw line junctions. Default is `+`.\n- `top_junction_char` - single character string used to draw top line junctions. Default\n  is `junction_char`.\n- `bottom_junction_char` - single character string used to draw bottom line junctions.\n  Default is `junction_char`.\n- `right_junction_char` - single character string used to draw right line junctions.\n  Default is `junction_char`.\n- `left_junction_char` - single character string used to draw left line junctions.\n  Default is `junction_char`.\n- `top_right_junction_char` - single character string used to draw top-right line\n  junctions. Default is `junction_char`.\n- `top_left_junction_char` - single character string used to draw top-left line\n  junctions. Default is `junction_char`.\n- `bottom_right_junction_char` - single character string used to draw bottom-right line\n  junctions. Default is `junction_char`\n- `bottom_left_junction_char` - single character string used to draw bottom-left line\n  junctions. Default is `junction_char`.\n\nYou can set the style options to your own settings in two ways:\n\n#### Setting style options for the long term\n\nIf you want to print your table with a different style several times, you can set your\noption for the long term just by changing the appropriate attributes. If you never want\nyour tables to have borders you can do this:\n\n```python\nx.border = False\nprint(x)\nprint(x)\nprint(x)\n```\n\nNeither of the 3 tables printed by this will have borders, even if you do things like\nadd extra rows in between them. The lack of borders will last until you do:\n\n```python\nx.border = True\n```\n\nto turn them on again. This sort of long-term setting is exactly how `set_style` works.\n`set_style` just sets a bunch of attributes to pre-set values for you.\n\nNote that if you know what style options you want at the moment you are creating your\ntable, you can specify them using keyword arguments to the constructor. For example, the\nfollowing two code blocks are equivalent:\n\n```python\nx = PrettyTable()\nx.border = False\nx.header = False\nx.padding_width = 5\n\nx = PrettyTable(border=False, header=False, padding_width=5)\n```\n\n#### Changing style options just once\n\nIf you don't want to make long-term style changes by changing an attribute like in the\nprevious section, you can make changes that last for just one `get_string` by giving\nthose methods keyword arguments. To print two \"normal\" tables with one borderless table\nbetween them, you could do this:\n\n```python\nprint(x)\nprint(x.get_string(border=False))\nprint(x)\n```\n\n### Changing the appearance of your table - with _colors_!\n\nPrettyTable has the functionality of printing your table with ANSI color codes. This\nincludes support for most Windows versions through\n[Colorama](https://pypi.org/project/colorama/). To get started, import the `ColorTable`\nclass instead of `PrettyTable`.\n\n```diff\n-from prettytable import PrettyTable\n+from prettytable.colortable import ColorTable\n```\n\nThe `ColorTable` class can be used the same as `PrettyTable`, but it adds an extra\nproperty. You can now specify a custom _theme_ that will format your table with colors.\n\n```python\nfrom prettytable.colortable import ColorTable, Themes\n\nx = ColorTable(theme=Themes.OCEAN)\n\nprint(x)\n```\n\n#### Creating a custom theme\n\nThe `Theme` class allows you to customize both the characters and colors used in your\ntable.\n\n| Argument                                                   | Description                                               |\n| ---------------------------------------------------------- | --------------------------------------------------------- |\n| `default_color`                                            | The color to use as default                               |\n| `vertical_char`, `horizontal_char`, and `junction_char`    | The characters used for creating the outline of the table |\n| `vertical_color`, `horizontal_color`, and `junction_color` | The colors used to style each character.                  |\n\n> **Note:** Colors are formatted with the `Theme.format_code(s: str)` function. It\n> accepts a string. If the string starts with an escape code (like `\\x1b`) then it will\n> return the given string. If the string is just whitespace, it will return `\"\"`. If the\n> string is a number (like `\"34\"`), it will automatically format it into an escape code.\n> I recommend you look into the source code for more information.\n\n### Displaying your table in JSON\n\nPrettyTable will also print your tables in JSON, as a list of fields and an array of\nrows. Just like in ASCII form, you can actually get a string representation - just use\n`get_json_string()`.\n\n### Displaying your table in HTML form\n\nPrettyTable will also print your tables in HTML form, as `<table>`s. Just like in ASCII\nform, you can actually get a string representation - just use `get_html_string()`. HTML\nprinting supports the `fields`, `start`, `end`, `sortby` and `reversesort` arguments in\nexactly the same way as ASCII printing.\n\n#### Styling HTML tables\n\nBy default, PrettyTable outputs HTML for \"vanilla\" tables. The HTML code is quite\nsimple. It looks like this:\n\n```html\n<table>\n  <thead>\n    <tr>\n      <th>City name</th>\n      <th>Area</th>\n      <th>Population</th>\n      <th>Annual Rainfall</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>Adelaide</td>\n      <td>1295</td>\n      <td>1158259</td>\n      <td>600.5</td>\n    </tr>\n    <tr>\n      <td>Brisbane</td>\n      <td>5905</td>\n      <td>1857594</td>\n      <td>1146.4</td>\n      ...\n    </tr>\n  </tbody>\n</table>\n```\n\nIf you like, you can ask PrettyTable to do its best to mimic the style options that your\ntable has set using inline CSS. This is done by giving a `format=True` keyword argument\nto `get_html_string` method. Note that if you _always_ want to print formatted HTML you\ncan do:\n\n```python\nx.format = True\n```\n\nand the setting will persist until you turn it off.\n\nJust like with ASCII tables, if you want to change the table's style for just one\n`get_html_string` you can pass those methods' keyword arguments - exactly like `print`\nand `get_string`.\n\n#### Setting HTML attributes\n\nYou can provide a dictionary of HTML attribute name/value pairs to the `get_html_string`\nmethod using the `attributes` keyword argument. This lets you specify common HTML\nattributes like `id` and `class` that can be used for linking to your tables or\ncustomising their appearance using CSS. For example:\n\n```python\nprint(x.get_html_string(attributes={\"id\":\"my_table\", \"class\":\"red_table\"}))\n```\n\nwill print:\n\n```html\n<table id=\"my_table\" class=\"red_table\">\n  <thead>\n    <tr>\n      <th>City name</th>\n      <th>Area</th>\n      <th>Population</th>\n      <th>Annual Rainfall</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      ... ... ...\n    </tr>\n  </tbody>\n</table>\n```\n\n### Miscellaneous things\n\n#### Copying a table\n\nYou can call the `copy` method on a PrettyTable object without arguments to return an\nidentical independent copy of the table.\n\nIf you want a copy of a PrettyTable object with just a subset of the rows, you can use\nlist slicing notation:\n\n```python\nnew_table = old_table[0:5]\n```\n\n## Contributing\n\nAfter editing files, use the [Black](https://github.com/psf/black) linter to auto-format\nchanged lines.\n\n```sh\npython -m pip install black\nblack prettytable*.py\n```\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/prettytable-3.7.0.dist-info",
      "installer": "pip",
      "requested": true
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "protobuf",
        "version": "3.20.0",
        "platform": [
          "UNKNOWN"
        ],
        "summary": "Protocol Buffers",
        "home_page": "https://developers.google.com/protocol-buffers/",
        "download_url": "https://github.com/protocolbuffers/protobuf/releases",
        "maintainer": "protobuf@googlegroups.com",
        "maintainer_email": "protobuf@googlegroups.com",
        "license": "BSD-3-Clause",
        "classifier": [
          "Programming Language :: Python",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10"
        ],
        "requires_python": ">=3.7",
        "description": "Protocol Buffers are Google's data interchange format\n\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/protobuf-3.20.0.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "psutil",
        "version": "5.9.5",
        "platform": [
          "Platform Independent"
        ],
        "summary": "Cross-platform lib for process and system monitoring in Python.",
        "description_content_type": "text/x-rst",
        "keywords": [
          "ps",
          "top",
          "kill",
          "free",
          "lsof",
          "netstat",
          "nice",
          "tty",
          "ionice",
          "uptime",
          "taskmgr",
          "process",
          "df",
          "iotop",
          "iostat",
          "ifconfig",
          "taskset",
          "who",
          "pidof",
          "pmap",
          "smem",
          "pstree",
          "monitoring",
          "ulimit",
          "prlimit",
          "smem",
          "performance",
          "metrics",
          "agent",
          "observability"
        ],
        "home_page": "https://github.com/giampaolo/psutil",
        "author": "Giampaolo Rodola",
        "author_email": "g.rodola@gmail.com",
        "license": "BSD-3-Clause",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Environment :: Console",
          "Environment :: Win32 (MS Windows)",
          "Intended Audience :: Developers",
          "Intended Audience :: Information Technology",
          "Intended Audience :: System Administrators",
          "License :: OSI Approved :: BSD License",
          "Operating System :: MacOS :: MacOS X",
          "Operating System :: Microsoft :: Windows :: Windows 10",
          "Operating System :: Microsoft :: Windows :: Windows 7",
          "Operating System :: Microsoft :: Windows :: Windows 8",
          "Operating System :: Microsoft :: Windows :: Windows 8.1",
          "Operating System :: Microsoft :: Windows :: Windows Server 2003",
          "Operating System :: Microsoft :: Windows :: Windows Server 2008",
          "Operating System :: Microsoft :: Windows :: Windows Vista",
          "Operating System :: Microsoft",
          "Operating System :: OS Independent",
          "Operating System :: POSIX :: AIX",
          "Operating System :: POSIX :: BSD :: FreeBSD",
          "Operating System :: POSIX :: BSD :: NetBSD",
          "Operating System :: POSIX :: BSD :: OpenBSD",
          "Operating System :: POSIX :: BSD",
          "Operating System :: POSIX :: Linux",
          "Operating System :: POSIX :: SunOS/Solaris",
          "Operating System :: POSIX",
          "Programming Language :: C",
          "Programming Language :: Python :: 2",
          "Programming Language :: Python :: 2.7",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: Implementation :: CPython",
          "Programming Language :: Python :: Implementation :: PyPy",
          "Programming Language :: Python",
          "Topic :: Software Development :: Libraries :: Python Modules",
          "Topic :: Software Development :: Libraries",
          "Topic :: System :: Benchmark",
          "Topic :: System :: Hardware :: Hardware Drivers",
          "Topic :: System :: Hardware",
          "Topic :: System :: Monitoring",
          "Topic :: System :: Networking :: Monitoring :: Hardware Watchdog",
          "Topic :: System :: Networking :: Monitoring",
          "Topic :: System :: Networking",
          "Topic :: System :: Operating System",
          "Topic :: System :: Systems Administration",
          "Topic :: Utilities"
        ],
        "requires_dist": [
          "ipaddress ; (python_version < \"3.0\") and extra == 'test'",
          "mock ; (python_version < \"3.0\") and extra == 'test'",
          "enum34 ; (python_version <= \"3.4\") and extra == 'test'",
          "pywin32 ; (sys_platform == \"win32\") and extra == 'test'",
          "wmi ; (sys_platform == \"win32\") and extra == 'test'"
        ],
        "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*",
        "provides_extra": [
          "test"
        ],
        "description": "|  |downloads| |stars| |forks| |contributors| |coverage|\n|  |version| |py-versions| |packages| |license|\n|  |github-actions-wheels|  |github-actions-bsd| |appveyor| |doc| |twitter| |tidelift|\n\n.. |downloads| image:: https://img.shields.io/pypi/dm/psutil.svg\n    :target: https://pepy.tech/project/psutil\n    :alt: Downloads\n\n.. |stars| image:: https://img.shields.io/github/stars/giampaolo/psutil.svg\n    :target: https://github.com/giampaolo/psutil/stargazers\n    :alt: Github stars\n\n.. |forks| image:: https://img.shields.io/github/forks/giampaolo/psutil.svg\n    :target: https://github.com/giampaolo/psutil/network/members\n    :alt: Github forks\n\n.. |contributors| image:: https://img.shields.io/github/contributors/giampaolo/psutil.svg\n    :target: https://github.com/giampaolo/psutil/graphs/contributors\n    :alt: Contributors\n\n.. |github-actions-wheels| image:: https://img.shields.io/github/actions/workflow/status/giampaolo/psutil/.github/workflows/build.yml?label=Linux%2C%20macOS%2C%20Windows\n    :target: https://github.com/giampaolo/psutil/actions?query=workflow%3Abuild\n    :alt: Linux, macOS, Windows\n\n.. |github-actions-bsd| image:: https://img.shields.io/github/actions/workflow/status/giampaolo/psutil/.github/workflows/bsd.yml?label=FreeBSD,%20NetBSD,%20OpenBSD\n    :target: https://github.com/giampaolo/psutil/actions?query=workflow%3Absd-tests\n    :alt: FreeBSD, NetBSD, OpenBSD\n\n.. |appveyor| image:: https://img.shields.io/appveyor/build/giampaolo/psutil/master.svg?maxAge=3600&label=Windows%20(py2)\n    :target: https://ci.appveyor.com/project/giampaolo/psutil\n    :alt: Windows (Appveyor)\n\n.. |coverage| image:: https://coveralls.io/repos/github/giampaolo/psutil/badge.svg?branch=master\n    :target: https://coveralls.io/github/giampaolo/psutil?branch=master\n    :alt: Test coverage (coverall.io)\n\n.. |doc| image:: https://readthedocs.org/projects/psutil/badge/?version=latest\n    :target: https://psutil.readthedocs.io/en/latest/\n    :alt: Documentation Status\n\n.. |version| image:: https://img.shields.io/pypi/v/psutil.svg?label=pypi\n    :target: https://pypi.org/project/psutil\n    :alt: Latest version\n\n.. |py-versions| image:: https://img.shields.io/pypi/pyversions/psutil.svg\n    :alt: Supported Python versions\n\n.. |packages| image:: https://repology.org/badge/tiny-repos/python:psutil.svg\n    :target: https://repology.org/metapackage/python:psutil/versions\n    :alt: Binary packages\n\n.. |license| image:: https://img.shields.io/pypi/l/psutil.svg\n    :target: https://github.com/giampaolo/psutil/blob/master/LICENSE\n    :alt: License\n\n.. |twitter| image:: https://img.shields.io/twitter/follow/grodola.svg?label=follow&style=flat&logo=twitter&logoColor=4FADFF\n    :target: https://twitter.com/grodola\n    :alt: Twitter Follow\n\n.. |tidelift| image:: https://tidelift.com/badges/github/giampaolo/psutil?style=flat\n    :target: https://tidelift.com/subscription/pkg/pypi-psutil?utm_source=pypi-psutil&utm_medium=referral&utm_campaign=readme\n    :alt: Tidelift\n\n-----\n\nQuick links\n===========\n\n- `Home page <https://github.com/giampaolo/psutil>`_\n- `Install <https://github.com/giampaolo/psutil/blob/master/INSTALL.rst>`_\n- `Documentation <http://psutil.readthedocs.io>`_\n- `Download <https://pypi.org/project/psutil/#files>`_\n- `Forum <http://groups.google.com/group/psutil/topics>`_\n- `StackOverflow <https://stackoverflow.com/questions/tagged/psutil>`_\n- `Blog <https://gmpy.dev/tags/psutil>`_\n- `What's new <https://github.com/giampaolo/psutil/blob/master/HISTORY.rst>`_\n\n\nSummary\n=======\n\npsutil (process and system utilities) is a cross-platform library for\nretrieving information on **running processes** and **system utilization**\n(CPU, memory, disks, network, sensors) in Python.\nIt is useful mainly for **system monitoring**, **profiling and limiting process\nresources** and **management of running processes**.\nIt implements many functionalities offered by classic UNIX command line tools\nsuch as *ps, top, iotop, lsof, netstat, ifconfig, free* and others.\npsutil currently supports the following platforms:\n\n- **Linux**\n- **Windows**\n- **macOS**\n- **FreeBSD, OpenBSD**, **NetBSD**\n- **Sun Solaris**\n- **AIX**\n\nSupported Python versions are **2.7**, **3.4+** and\n`PyPy <http://pypy.org/>`__.\n\nFunding\n=======\n\nWhile psutil is free software and will always be, the project would benefit\nimmensely from some funding.\nKeeping up with bug reports and maintenance has become hardly sustainable for\nme alone in terms of time.\nIf you're a company that's making significant use of psutil you can consider\nbecoming a sponsor via `GitHub Sponsors <https://github.com/sponsors/giampaolo>`__,\n`Open Collective <https://opencollective.com/psutil>`__ or\n`PayPal <https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=A9ZS7PKKRM3S8>`__\nand have your logo displayed in here and psutil `doc <https://psutil.readthedocs.io>`__.\n\nSponsors\n========\n\n.. image:: https://github.com/giampaolo/psutil/raw/master/docs/_static/tidelift-logo.png\n  :width: 200\n  :alt: Alternative text\n\n`Add your logo <https://github.com/sponsors/giampaolo>`__.\n\nExample usages\n==============\n\nThis represents pretty much the whole psutil API.\n\nCPU\n---\n\n.. code-block:: python\n\n    >>> import psutil\n    >>>\n    >>> psutil.cpu_times()\n    scputimes(user=3961.46, nice=169.729, system=2150.659, idle=16900.540, iowait=629.59, irq=0.0, softirq=19.42, steal=0.0, guest=0, nice=0.0)\n    >>>\n    >>> for x in range(3):\n    ...     psutil.cpu_percent(interval=1)\n    ...\n    4.0\n    5.9\n    3.8\n    >>>\n    >>> for x in range(3):\n    ...     psutil.cpu_percent(interval=1, percpu=True)\n    ...\n    [4.0, 6.9, 3.7, 9.2]\n    [7.0, 8.5, 2.4, 2.1]\n    [1.2, 9.0, 9.9, 7.2]\n    >>>\n    >>> for x in range(3):\n    ...     psutil.cpu_times_percent(interval=1, percpu=False)\n    ...\n    scputimes(user=1.5, nice=0.0, system=0.5, idle=96.5, iowait=1.5, irq=0.0, softirq=0.0, steal=0.0, guest=0.0, guest_nice=0.0)\n    scputimes(user=1.0, nice=0.0, system=0.0, idle=99.0, iowait=0.0, irq=0.0, softirq=0.0, steal=0.0, guest=0.0, guest_nice=0.0)\n    scputimes(user=2.0, nice=0.0, system=0.0, idle=98.0, iowait=0.0, irq=0.0, softirq=0.0, steal=0.0, guest=0.0, guest_nice=0.0)\n    >>>\n    >>> psutil.cpu_count()\n    4\n    >>> psutil.cpu_count(logical=False)\n    2\n    >>>\n    >>> psutil.cpu_stats()\n    scpustats(ctx_switches=20455687, interrupts=6598984, soft_interrupts=2134212, syscalls=0)\n    >>>\n    >>> psutil.cpu_freq()\n    scpufreq(current=931.42925, min=800.0, max=3500.0)\n    >>>\n    >>> psutil.getloadavg()  # also on Windows (emulated)\n    (3.14, 3.89, 4.67)\n\nMemory\n------\n\n.. code-block:: python\n\n    >>> psutil.virtual_memory()\n    svmem(total=10367352832, available=6472179712, percent=37.6, used=8186245120, free=2181107712, active=4748992512, inactive=2758115328, buffers=790724608, cached=3500347392, shared=787554304)\n    >>> psutil.swap_memory()\n    sswap(total=2097147904, used=296128512, free=1801019392, percent=14.1, sin=304193536, sout=677842944)\n    >>>\n\nDisks\n-----\n\n.. code-block:: python\n\n    >>> psutil.disk_partitions()\n    [sdiskpart(device='/dev/sda1', mountpoint='/', fstype='ext4', opts='rw,nosuid', maxfile=255, maxpath=4096),\n     sdiskpart(device='/dev/sda2', mountpoint='/home', fstype='ext', opts='rw', maxfile=255, maxpath=4096)]\n    >>>\n    >>> psutil.disk_usage('/')\n    sdiskusage(total=21378641920, used=4809781248, free=15482871808, percent=22.5)\n    >>>\n    >>> psutil.disk_io_counters(perdisk=False)\n    sdiskio(read_count=719566, write_count=1082197, read_bytes=18626220032, write_bytes=24081764352, read_time=5023392, write_time=63199568, read_merged_count=619166, write_merged_count=812396, busy_time=4523412)\n    >>>\n\nNetwork\n-------\n\n.. code-block:: python\n\n    >>> psutil.net_io_counters(pernic=True)\n    {'eth0': netio(bytes_sent=485291293, bytes_recv=6004858642, packets_sent=3251564, packets_recv=4787798, errin=0, errout=0, dropin=0, dropout=0),\n     'lo': netio(bytes_sent=2838627, bytes_recv=2838627, packets_sent=30567, packets_recv=30567, errin=0, errout=0, dropin=0, dropout=0)}\n    >>>\n    >>> psutil.net_connections(kind='tcp')\n    [sconn(fd=115, family=<AddressFamily.AF_INET: 2>, type=<SocketType.SOCK_STREAM: 1>, laddr=addr(ip='10.0.0.1', port=48776), raddr=addr(ip='93.186.135.91', port=80), status='ESTABLISHED', pid=1254),\n     sconn(fd=117, family=<AddressFamily.AF_INET: 2>, type=<SocketType.SOCK_STREAM: 1>, laddr=addr(ip='10.0.0.1', port=43761), raddr=addr(ip='72.14.234.100', port=80), status='CLOSING', pid=2987),\n     ...]\n    >>>\n    >>> psutil.net_if_addrs()\n    {'lo': [snicaddr(family=<AddressFamily.AF_INET: 2>, address='127.0.0.1', netmask='255.0.0.0', broadcast='127.0.0.1', ptp=None),\n            snicaddr(family=<AddressFamily.AF_INET6: 10>, address='::1', netmask='ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff', broadcast=None, ptp=None),\n            snicaddr(family=<AddressFamily.AF_LINK: 17>, address='00:00:00:00:00:00', netmask=None, broadcast='00:00:00:00:00:00', ptp=None)],\n     'wlan0': [snicaddr(family=<AddressFamily.AF_INET: 2>, address='192.168.1.3', netmask='255.255.255.0', broadcast='192.168.1.255', ptp=None),\n               snicaddr(family=<AddressFamily.AF_INET6: 10>, address='fe80::c685:8ff:fe45:641%wlan0', netmask='ffff:ffff:ffff:ffff::', broadcast=None, ptp=None),\n               snicaddr(family=<AddressFamily.AF_LINK: 17>, address='c4:85:08:45:06:41', netmask=None, broadcast='ff:ff:ff:ff:ff:ff', ptp=None)]}\n    >>>\n    >>> psutil.net_if_stats()\n    {'lo': snicstats(isup=True, duplex=<NicDuplex.NIC_DUPLEX_UNKNOWN: 0>, speed=0, mtu=65536, flags='up,loopback,running'),\n     'wlan0': snicstats(isup=True, duplex=<NicDuplex.NIC_DUPLEX_FULL: 2>, speed=100, mtu=1500, flags='up,broadcast,running,multicast')}\n    >>>\n\nSensors\n-------\n\n.. code-block:: python\n\n    >>> import psutil\n    >>> psutil.sensors_temperatures()\n    {'acpitz': [shwtemp(label='', current=47.0, high=103.0, critical=103.0)],\n     'asus': [shwtemp(label='', current=47.0, high=None, critical=None)],\n     'coretemp': [shwtemp(label='Physical id 0', current=52.0, high=100.0, critical=100.0),\n                  shwtemp(label='Core 0', current=45.0, high=100.0, critical=100.0)]}\n    >>>\n    >>> psutil.sensors_fans()\n    {'asus': [sfan(label='cpu_fan', current=3200)]}\n    >>>\n    >>> psutil.sensors_battery()\n    sbattery(percent=93, secsleft=16628, power_plugged=False)\n    >>>\n\nOther system info\n-----------------\n\n.. code-block:: python\n\n    >>> import psutil\n    >>> psutil.users()\n    [suser(name='giampaolo', terminal='pts/2', host='localhost', started=1340737536.0, pid=1352),\n     suser(name='giampaolo', terminal='pts/3', host='localhost', started=1340737792.0, pid=1788)]\n    >>>\n    >>> psutil.boot_time()\n    1365519115.0\n    >>>\n\nProcess management\n------------------\n\n.. code-block:: python\n\n    >>> import psutil\n    >>> psutil.pids()\n    [1, 2, 3, 4, 5, 6, 7, 46, 48, 50, 51, 178, 182, 222, 223, 224, 268, 1215,\n     1216, 1220, 1221, 1243, 1244, 1301, 1601, 2237, 2355, 2637, 2774, 3932,\n     4176, 4177, 4185, 4187, 4189, 4225, 4243, 4245, 4263, 4282, 4306, 4311,\n     4312, 4313, 4314, 4337, 4339, 4357, 4358, 4363, 4383, 4395, 4408, 4433,\n     4443, 4445, 4446, 5167, 5234, 5235, 5252, 5318, 5424, 5644, 6987, 7054,\n     7055, 7071]\n    >>>\n    >>> p = psutil.Process(7055)\n    >>> p\n    psutil.Process(pid=7055, name='python3', status='running', started='09:04:44')\n    >>> p.name()\n    'python3'\n    >>> p.exe()\n    '/usr/bin/python3'\n    >>> p.cwd()\n    '/home/giampaolo'\n    >>> p.cmdline()\n    ['/usr/bin/python', 'main.py']\n    >>>\n    >>> p.pid\n    7055\n    >>> p.ppid()\n    7054\n    >>> p.children(recursive=True)\n    [psutil.Process(pid=29835, name='python3', status='sleeping', started='11:45:38'),\n     psutil.Process(pid=29836, name='python3', status='waking', started='11:43:39')]\n    >>>\n    >>> p.parent()\n    psutil.Process(pid=4699, name='bash', status='sleeping', started='09:06:44')\n    >>> p.parents()\n    [psutil.Process(pid=4699, name='bash', started='09:06:44'),\n     psutil.Process(pid=4689, name='gnome-terminal-server', status='sleeping', started='0:06:44'),\n     psutil.Process(pid=1, name='systemd', status='sleeping', started='05:56:55')]\n    >>>\n    >>> p.status()\n    'running'\n    >>> p.username()\n    'giampaolo'\n    >>> p.create_time()\n    1267551141.5019531\n    >>> p.terminal()\n    '/dev/pts/0'\n    >>>\n    >>> p.uids()\n    puids(real=1000, effective=1000, saved=1000)\n    >>> p.gids()\n    pgids(real=1000, effective=1000, saved=1000)\n    >>>\n    >>> p.cpu_times()\n    pcputimes(user=1.02, system=0.31, children_user=0.32, children_system=0.1, iowait=0.0)\n    >>> p.cpu_percent(interval=1.0)\n    12.1\n    >>> p.cpu_affinity()\n    [0, 1, 2, 3]\n    >>> p.cpu_affinity([0, 1])  # set\n    >>> p.cpu_num()\n    1\n    >>>\n    >>> p.memory_info()\n    pmem(rss=10915840, vms=67608576, shared=3313664, text=2310144, lib=0, data=7262208, dirty=0)\n    >>> p.memory_full_info()  # \"real\" USS memory usage (Linux, macOS, Win only)\n    pfullmem(rss=10199040, vms=52133888, shared=3887104, text=2867200, lib=0, data=5967872, dirty=0, uss=6545408, pss=6872064, swap=0)\n    >>> p.memory_percent()\n    0.7823\n    >>> p.memory_maps()\n    [pmmap_grouped(path='/lib/x8664-linux-gnu/libutil-2.15.so', rss=32768, size=2125824, pss=32768, shared_clean=0, shared_dirty=0, private_clean=20480, private_dirty=12288, referenced=32768, anonymous=12288, swap=0),\n     pmmap_grouped(path='/lib/x8664-linux-gnu/libc-2.15.so', rss=3821568, size=3842048, pss=3821568, shared_clean=0, shared_dirty=0, private_clean=0, private_dirty=3821568, referenced=3575808, anonymous=3821568, swap=0),\n     pmmap_grouped(path='[heap]',  rss=32768, size=139264, pss=32768, shared_clean=0, shared_dirty=0, private_clean=0, private_dirty=32768, referenced=32768, anonymous=32768, swap=0),\n     pmmap_grouped(path='[stack]', rss=2465792, size=2494464, pss=2465792, shared_clean=0, shared_dirty=0, private_clean=0, private_dirty=2465792, referenced=2277376, anonymous=2465792, swap=0),\n     ...]\n    >>>\n    >>> p.io_counters()\n    pio(read_count=478001, write_count=59371, read_bytes=700416, write_bytes=69632, read_chars=456232, write_chars=517543)\n    >>>\n    >>> p.open_files()\n    [popenfile(path='/home/giampaolo/monit.py', fd=3, position=0, mode='r', flags=32768),\n     popenfile(path='/var/log/monit.log', fd=4, position=235542, mode='a', flags=33793)]\n    >>>\n    >>> p.connections(kind='tcp')\n    [pconn(fd=115, family=<AddressFamily.AF_INET: 2>, type=<SocketType.SOCK_STREAM: 1>, laddr=addr(ip='10.0.0.1', port=48776), raddr=addr(ip='93.186.135.91', port=80), status='ESTABLISHED'),\n     pconn(fd=117, family=<AddressFamily.AF_INET: 2>, type=<SocketType.SOCK_STREAM: 1>, laddr=addr(ip='10.0.0.1', port=43761), raddr=addr(ip='72.14.234.100', port=80), status='CLOSING')]\n    >>>\n    >>> p.num_threads()\n    4\n    >>> p.num_fds()\n    8\n    >>> p.threads()\n    [pthread(id=5234, user_time=22.5, system_time=9.2891),\n     pthread(id=5237, user_time=0.0707, system_time=1.1)]\n    >>>\n    >>> p.num_ctx_switches()\n    pctxsw(voluntary=78, involuntary=19)\n    >>>\n    >>> p.nice()\n    0\n    >>> p.nice(10)  # set\n    >>>\n    >>> p.ionice(psutil.IOPRIO_CLASS_IDLE)  # IO priority (Win and Linux only)\n    >>> p.ionice()\n    pionice(ioclass=<IOPriority.IOPRIO_CLASS_IDLE: 3>, value=0)\n    >>>\n    >>> p.rlimit(psutil.RLIMIT_NOFILE, (5, 5))  # set resource limits (Linux only)\n    >>> p.rlimit(psutil.RLIMIT_NOFILE)\n    (5, 5)\n    >>>\n    >>> p.environ()\n    {'LC_PAPER': 'it_IT.UTF-8', 'SHELL': '/bin/bash', 'GREP_OPTIONS': '--color=auto',\n    'XDG_CONFIG_DIRS': '/etc/xdg/xdg-ubuntu:/usr/share/upstart/xdg:/etc/xdg',\n     ...}\n    >>>\n    >>> p.as_dict()\n    {'status': 'running', 'num_ctx_switches': pctxsw(voluntary=63, involuntary=1), 'pid': 5457, ...}\n    >>> p.is_running()\n    True\n    >>> p.suspend()\n    >>> p.resume()\n    >>>\n    >>> p.terminate()\n    >>> p.kill()\n    >>> p.wait(timeout=3)\n    <Exitcode.EX_OK: 0>\n    >>>\n    >>> psutil.test()\n    USER         PID %CPU %MEM     VSZ     RSS TTY        START    TIME  COMMAND\n    root           1  0.0  0.0   24584    2240            Jun17   00:00  init\n    root           2  0.0  0.0       0       0            Jun17   00:00  kthreadd\n    ...\n    giampaolo  31475  0.0  0.0   20760    3024 /dev/pts/0 Jun19   00:00  python2.4\n    giampaolo  31721  0.0  2.2  773060  181896            00:04   10:30  chrome\n    root       31763  0.0  0.0       0       0            00:05   00:00  kworker/0:1\n    >>>\n\nFurther process APIs\n--------------------\n\n.. code-block:: python\n\n    >>> import psutil\n    >>> for proc in psutil.process_iter(['pid', 'name']):\n    ...     print(proc.info)\n    ...\n    {'pid': 1, 'name': 'systemd'}\n    {'pid': 2, 'name': 'kthreadd'}\n    {'pid': 3, 'name': 'ksoftirqd/0'}\n    ...\n    >>>\n    >>> psutil.pid_exists(3)\n    True\n    >>>\n    >>> def on_terminate(proc):\n    ...     print(\"process {} terminated\".format(proc))\n    ...\n    >>> # waits for multiple processes to terminate\n    >>> gone, alive = psutil.wait_procs(procs_list, timeout=3, callback=on_terminate)\n    >>>\n\nWindows services\n----------------\n\n.. code-block:: python\n\n    >>> list(psutil.win_service_iter())\n    [<WindowsService(name='AeLookupSvc', display_name='Application Experience') at 38850096>,\n     <WindowsService(name='ALG', display_name='Application Layer Gateway Service') at 38850128>,\n     <WindowsService(name='APNMCP', display_name='Ask Update Service') at 38850160>,\n     <WindowsService(name='AppIDSvc', display_name='Application Identity') at 38850192>,\n     ...]\n    >>> s = psutil.win_service_get('alg')\n    >>> s.as_dict()\n    {'binpath': 'C:\\\\Windows\\\\System32\\\\alg.exe',\n     'description': 'Provides support for 3rd party protocol plug-ins for Internet Connection Sharing',\n     'display_name': 'Application Layer Gateway Service',\n     'name': 'alg',\n     'pid': None,\n     'start_type': 'manual',\n     'status': 'stopped',\n     'username': 'NT AUTHORITY\\\\LocalService'}\n\nProjects using psutil\n=====================\n\nHere's some I find particularly interesting:\n\n- https://github.com/google/grr\n- https://github.com/facebook/osquery/\n- https://github.com/nicolargo/glances\n- https://github.com/Jahaja/psdash\n- https://github.com/ajenti/ajenti\n- https://github.com/home-assistant/home-assistant/\n\nPortings\n========\n\n- Go: https://github.com/shirou/gopsutil\n- C: https://github.com/hamon-in/cpslib\n- Rust: https://github.com/rust-psutil/rust-psutil\n- Nim: https://github.com/johnscillieri/psutil-nim\n\n\n\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/psutil-5.9.5.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "pyarrow",
        "version": "12.0.0",
        "summary": "Python library for Apache Arrow",
        "description_content_type": "text/markdown",
        "home_page": "https://arrow.apache.org/",
        "maintainer": "Apache Arrow Developers",
        "maintainer_email": "dev@arrow.apache.org",
        "license": "Apache License, Version 2.0",
        "classifier": [
          "License :: OSI Approved :: Apache Software License",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11"
        ],
        "requires_dist": [
          "numpy (>=1.16.6)"
        ],
        "requires_python": ">=3.7",
        "project_url": [
          "Documentation, https://arrow.apache.org/docs/python",
          "Source, https://github.com/apache/arrow"
        ],
        "description": "<!---\n  Licensed to the Apache Software Foundation (ASF) under one\n  or more contributor license agreements.  See the NOTICE file\n  distributed with this work for additional information\n  regarding copyright ownership.  The ASF licenses this file\n  to you under the Apache License, Version 2.0 (the\n  \"License\"); you may not use this file except in compliance\n  with the License.  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing,\n  software distributed under the License is distributed on an\n  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n  KIND, either express or implied.  See the License for the\n  specific language governing permissions and limitations\n  under the License.\n-->\n\n## Python library for Apache Arrow\n\n[![pypi](https://img.shields.io/pypi/v/pyarrow.svg)](https://pypi.org/project/pyarrow/) [![conda-forge](https://img.shields.io/conda/vn/conda-forge/pyarrow.svg)](https://anaconda.org/conda-forge/pyarrow)\n\nThis library provides a Python API for functionality provided by the Arrow C++\nlibraries, along with tools for Arrow integration and interoperability with\npandas, NumPy, and other software in the Python ecosystem.\n\n## Installing\n\nAcross platforms, you can install a recent version of pyarrow with the conda\npackage manager:\n\n```shell\nconda install pyarrow -c conda-forge\n```\n\nOn Linux, macOS, and Windows, you can also install binary wheels from PyPI with\npip:\n\n```shell\npip install pyarrow\n```\n\nIf you encounter any issues importing the pip wheels on Windows, you may need\nto install the [Visual C++ Redistributable for Visual Studio 2015][6].\n\n## Development\n\nSee [Python Development][2] in the documentation subproject.\n\n### Building the documentation\n\nSee [documentation build instructions][1] in the documentation subproject.\n\n[1]: https://github.com/apache/arrow/blob/main/docs/source/developers/documentation.rst\n[2]: https://github.com/apache/arrow/blob/main/docs/source/developers/python.rst\n[3]: https://github.com/pandas-dev/pandas\n[5]: https://arrow.apache.org/docs/latest/python/benchmarks.html\n[6]: https://www.microsoft.com/en-us/download/details.aspx?id=48145\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/pyarrow-12.0.0.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "pycparser",
        "version": "2.21",
        "platform": [
          "Cross Platform"
        ],
        "summary": "C parser in Python",
        "home_page": "https://github.com/eliben/pycparser",
        "author": "Eli Bendersky",
        "author_email": "eliben@gmail.com",
        "maintainer": "Eli Bendersky",
        "license": "BSD",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "License :: OSI Approved :: BSD License",
          "Programming Language :: Python :: 2",
          "Programming Language :: Python :: 2.7",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.4",
          "Programming Language :: Python :: 3.5",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10"
        ],
        "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*",
        "description": "\npycparser is a complete parser of the C language, written in\npure Python using the PLY parsing library.\nIt parses C code into an AST and can serve as a front-end for\nC compilers or analysis tools.\n\n\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/pycparser-2.21.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "pycryptodome",
        "version": "3.17",
        "platform": [
          "Posix; MacOS X; Windows"
        ],
        "summary": "Cryptographic library for Python",
        "home_page": "https://www.pycryptodome.org",
        "author": "Helder Eijs",
        "author_email": "helderijs@gmail.com",
        "license": "BSD, Public Domain",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "License :: OSI Approved :: BSD License",
          "License :: OSI Approved :: Apache Software License",
          "License :: Public Domain",
          "Intended Audience :: Developers",
          "Operating System :: Unix",
          "Operating System :: Microsoft :: Windows",
          "Operating System :: MacOS :: MacOS X",
          "Topic :: Security :: Cryptography",
          "Programming Language :: Python :: 2",
          "Programming Language :: Python :: 2.7",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.5",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11"
        ],
        "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*",
        "project_url": [
          "Source, https://github.com/Legrandin/pycryptodome/"
        ],
        "description": "\nPyCryptodome\n============\n\nPyCryptodome is a self-contained Python package of low-level\ncryptographic primitives.\n\nIt supports Python 2.7, Python 3.5 and newer, and PyPy.\n\nYou can install it with::\n\n    pip install pycryptodome\n\nAll modules are installed under the ``Crypto`` package.\n\nCheck the pycryptodomex_ project for the equivalent library that\nworks under the ``Cryptodome`` package.\n\nPyCryptodome is a fork of PyCrypto. It brings several enhancements\nwith respect to the last official version of PyCrypto (2.6.1),\nfor instance:\n\n* Authenticated encryption modes (GCM, CCM, EAX, SIV, OCB)\n* Accelerated AES on Intel platforms via AES-NI\n* First class support for PyPy\n* Elliptic curves cryptography (NIST P-curves; Ed25519, Ed448)\n* Better and more compact API (`nonce` and `iv` attributes for ciphers,\n  automatic generation of random nonces and IVs, simplified CTR cipher mode,\n  and more)\n* SHA-3 (including SHAKE XOFs) and BLAKE2 hash algorithms\n* Salsa20 and ChaCha20 stream ciphers\n* scrypt and HKDF\n* Deterministic (EC)DSA and EdDSA\n* Password-protected PKCS#8 key containers\n* Shamir's Secret Sharing scheme\n* Random numbers get sourced directly from the OS (and not from a CSPRNG in userspace)\n* Simplified install process, including better support for Windows\n* Cleaner RSA and DSA key generation (largely based on FIPS 186-4)\n* Major clean ups and simplification of the code base\n\nPyCryptodome is not a wrapper to a separate C library like *OpenSSL*.\nTo the largest possible extent, algorithms are implemented in pure Python.\nOnly the pieces that are extremely critical to performance (e.g. block ciphers)\nare implemented as C extensions.\n\nFor more information, see the `homepage`_.\n\nAll the code can be downloaded from `GitHub`_.\n\n.. _pycryptodomex: https://pypi.python.org/pypi/pycryptodomex\n.. _`homepage`: http://www.pycryptodome.org\n.. _GitHub: https://github.com/Legrandin/pycryptodome\n\n\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/pycryptodome-3.17.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "pydantic",
        "version": "1.10.7",
        "summary": "Data validation and settings management using python type hints",
        "description_content_type": "text/markdown",
        "home_page": "https://github.com/pydantic/pydantic",
        "author": "Samuel Colvin",
        "author_email": "s@muelcolvin.com",
        "license": "MIT",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3 :: Only",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Intended Audience :: Developers",
          "Intended Audience :: Information Technology",
          "Intended Audience :: System Administrators",
          "License :: OSI Approved :: MIT License",
          "Operating System :: Unix",
          "Operating System :: POSIX :: Linux",
          "Environment :: Console",
          "Environment :: MacOS X",
          "Framework :: Hypothesis",
          "Topic :: Software Development :: Libraries :: Python Modules",
          "Topic :: Internet"
        ],
        "requires_dist": [
          "typing-extensions (>=4.2.0)",
          "python-dotenv (>=0.10.4) ; extra == 'dotenv'",
          "email-validator (>=1.0.3) ; extra == 'email'"
        ],
        "requires_python": ">=3.7",
        "provides_extra": [
          "dotenv",
          "email"
        ],
        "description": "# pydantic\n\n[![CI](https://github.com/pydantic/pydantic/workflows/CI/badge.svg?event=push)](https://github.com/pydantic/pydantic/actions?query=event%3Apush+branch%3Amain+workflow%3ACI)\n[![Coverage](https://coverage-badge.samuelcolvin.workers.dev/pydantic/pydantic.svg?branch=1.10.X-fixes)](https://coverage-badge.samuelcolvin.workers.dev/redirect/pydantic/pydantic?branch=1.10.X-fixes)\n[![pypi](https://img.shields.io/pypi/v/pydantic.svg)](https://pypi.python.org/pypi/pydantic)\n[![CondaForge](https://img.shields.io/conda/v/conda-forge/pydantic.svg)](https://anaconda.org/conda-forge/pydantic)\n[![downloads](https://pepy.tech/badge/pydantic/month)](https://pepy.tech/project/pydantic)\n[![versions](https://img.shields.io/pypi/pyversions/pydantic.svg)](https://github.com/pydantic/pydantic)\n[![license](https://img.shields.io/github/license/pydantic/pydantic.svg)](https://github.com/pydantic/pydantic/blob/main/LICENSE)\n\nData validation and settings management using Python type hints.\n\nFast and extensible, *pydantic* plays nicely with your linters/IDE/brain.\nDefine how data should be in pure, canonical Python 3.7+; validate it with *pydantic*.\n\n## Pydantic Company :rocket:\n\nWe've started a company based on the principles that I believe have led to Pydantic's success.\nLearning more from the [Company Announcement](https://pydantic.dev/announcement/).\n\n## Help\n\nSee [documentation](https://docs.pydantic.dev/) for more details.\n\n## Installation\n\nInstall using `pip install -U pydantic` or `conda install pydantic -c conda-forge`.\nFor more installation options to make *pydantic* even faster,\nsee the [Install](https://docs.pydantic.dev/install/) section in the documentation.\n\n## A Simple Example\n\n```py\nfrom datetime import datetime\nfrom typing import List, Optional\nfrom pydantic import BaseModel\n\nclass User(BaseModel):\n    id: int\n    name = 'John Doe'\n    signup_ts: Optional[datetime] = None\n    friends: List[int] = []\n\nexternal_data = {'id': '123', 'signup_ts': '2017-06-01 12:22', 'friends': [1, '2', b'3']}\nuser = User(**external_data)\nprint(user)\n#> User id=123 name='John Doe' signup_ts=datetime.datetime(2017, 6, 1, 12, 22) friends=[1, 2, 3]\nprint(user.id)\n#> 123\n```\n\n## Contributing\n\nFor guidance on setting up a development environment and how to make a\ncontribution to *pydantic*, see\n[Contributing to Pydantic](https://docs.pydantic.dev/contributing/).\n\n## Reporting a Security Vulnerability\n\nSee our [security policy](https://github.com/pydantic/pydantic/security/policy).\n\n\n## v1.10.7 (2023-03-22)\n\n* Fix creating schema from model using `ConstrainedStr` with `regex` as dict key, [#5223](https://github.com/pydantic/pydantic/issues/5223) by [@matejetz](https://github.com/matejetz)\n* Address bug in mypy plugin caused by explicit_package_bases=True, [#5191](https://github.com/pydantic/pydantic/issues/5191) by [@dmontagu](https://github.com/dmontagu)\n* Add implicit defaults in the mypy plugin for Field with no default argument, [#5190](https://github.com/pydantic/pydantic/issues/5190) by [@dmontagu](https://github.com/dmontagu)\n* Fix schema generated for Enum values used as Literals in discriminated unions, [#5188](https://github.com/pydantic/pydantic/issues/5188) by [@javibookline](https://github.com/javibookline)\n* Fix mypy failures caused by the pydantic mypy plugin when users define `from_orm` in their own classes, [#5187](https://github.com/pydantic/pydantic/issues/5187) by [@dmontagu](https://github.com/dmontagu)\n* Fix `InitVar` usage with pydantic dataclasses, mypy version `1.1.1` and the custom mypy plugin, [#5162](https://github.com/pydantic/pydantic/issues/5162) by [@cdce8p](https://github.com/cdce8p)\n\n## v1.10.6 (2023-03-08)\n\n* Implement logic to support creating validators from non standard callables by using defaults to identify them and unwrapping `functools.partial` and `functools.partialmethod` when checking the signature, [#5126](https://github.com/pydantic/pydantic/issues/5126) by [@JensHeinrich](https://github.com/JensHeinrich)\n* Fix mypy plugin for v1.1.1, and fix `dataclass_transform` decorator for pydantic dataclasses, [#5111](https://github.com/pydantic/pydantic/issues/5111) by [@cdce8p](https://github.com/cdce8p)\n* Raise `ValidationError`, not `ConfigError`, when a discriminator value is unhashable, [#4773](https://github.com/pydantic/pydantic/issues/4773) by [@kurtmckee](https://github.com/kurtmckee)\n\n## v1.10.5 (2023-02-15)\n\n* Fix broken parametrized bases handling with `GenericModel`s with complex sets of models, [#5052](https://github.com/pydantic/pydantic/issues/5052) by [@MarkusSintonen](https://github.com/MarkusSintonen)\n* Invalidate mypy cache if plugin config changes, [#5007](https://github.com/pydantic/pydantic/issues/5007) by [@cdce8p](https://github.com/cdce8p)\n* Fix `RecursionError` when deep-copying dataclass types wrapped by pydantic, [#4949](https://github.com/pydantic/pydantic/issues/4949) by [@mbillingr](https://github.com/mbillingr)\n* Fix `X | Y` union syntax breaking `GenericModel`, [#4146](https://github.com/pydantic/pydantic/issues/4146) by [@thenx](https://github.com/thenx)\n* Switch coverage badge to show coverage for this branch/release, [#5060](https://github.com/pydantic/pydantic/issues/5060) by [@samuelcolvin](https://github.com/samuelcolvin)\n\n## v1.10.4 (2022-12-30)\n\n* Change dependency to `typing-extensions>=4.2.0`, [#4885](https://github.com/pydantic/pydantic/issues/4885) by [@samuelcolvin](https://github.com/samuelcolvin)\n\n## v1.10.3 (2022-12-29)\n\n**NOTE: v1.10.3 was [\"yanked\"](https://pypi.org/help/#yanked) from PyPI due to [#4885](https://github.com/pydantic/pydantic/issues/4885) which is fixed in v1.10.4**\n\n* fix parsing of custom root models, [#4883](https://github.com/pydantic/pydantic/issues/4883) by [@gou177](https://github.com/gou177)\n* fix: use dataclass proxy for frozen or empty dataclasses, [#4878](https://github.com/pydantic/pydantic/issues/4878) by [@PrettyWood](https://github.com/PrettyWood)\n* Fix `schema` and `schema_json` on models where a model instance is a one of default values, [#4781](https://github.com/pydantic/pydantic/issues/4781) by [@Bobronium](https://github.com/Bobronium)\n* Add Jina AI to sponsors on docs index page, [#4767](https://github.com/pydantic/pydantic/issues/4767) by [@samuelcolvin](https://github.com/samuelcolvin)\n* fix: support assignment on `DataclassProxy`, [#4695](https://github.com/pydantic/pydantic/issues/4695) by [@PrettyWood](https://github.com/PrettyWood)\n* Add `postgresql+psycopg` as allowed scheme for `PostgreDsn` to make it usable with SQLAlchemy 2, [#4689](https://github.com/pydantic/pydantic/issues/4689) by [@morian](https://github.com/morian)\n* Allow dict schemas to have both `patternProperties` and `additionalProperties`, [#4641](https://github.com/pydantic/pydantic/issues/4641) by [@jparise](https://github.com/jparise)\n* Fixes error passing None for optional lists with `unique_items`, [#4568](https://github.com/pydantic/pydantic/issues/4568) by [@mfulgo](https://github.com/mfulgo)\n* Fix `GenericModel` with `Callable` param raising a `TypeError`, [#4551](https://github.com/pydantic/pydantic/issues/4551) by [@mfulgo](https://github.com/mfulgo)\n* Fix field regex with `StrictStr` type annotation, [#4538](https://github.com/pydantic/pydantic/issues/4538) by [@sisp](https://github.com/sisp)\n* Correct `dataclass_transform` keyword argument name from `field_descriptors` to `field_specifiers`, [#4500](https://github.com/pydantic/pydantic/issues/4500) by [@samuelcolvin](https://github.com/samuelcolvin)\n* fix: avoid multiple calls of `__post_init__` when dataclasses are inherited, [#4487](https://github.com/pydantic/pydantic/issues/4487) by [@PrettyWood](https://github.com/PrettyWood)\n* Reduce the size of binary wheels, [#2276](https://github.com/pydantic/pydantic/issues/2276) by [@samuelcolvin](https://github.com/samuelcolvin)\n\n## v1.10.2 (2022-09-05)\n\n* **Revert Change:** Revert percent encoding of URL parts which was originally added in [#4224](https://github.com/pydantic/pydantic/issues/4224), [#4470](https://github.com/pydantic/pydantic/issues/4470) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Prevent long (length > `4_300`) strings/bytes as input to int fields, see \n  [python/cpython#95778](https://github.com/python/cpython/issues/95778) and \n  [CVE-2020-10735](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-10735), [#1477](https://github.com/pydantic/pydantic/issues/1477) by [@samuelcolvin](https://github.com/samuelcolvin)\n* fix: dataclass wrapper was not always called, [#4477](https://github.com/pydantic/pydantic/issues/4477) by [@PrettyWood](https://github.com/PrettyWood)\n* Use `tomllib` on Python 3.11 when parsing `mypy` configuration, [#4476](https://github.com/pydantic/pydantic/issues/4476) by [@hauntsaninja](https://github.com/hauntsaninja)\n* Basic fix of `GenericModel` cache to detect order of arguments in `Union` models, [#4474](https://github.com/pydantic/pydantic/issues/4474) by [@sveinugu](https://github.com/sveinugu)\n* Fix mypy plugin when using bare types like `list` and `dict` as `default_factory`, [#4457](https://github.com/pydantic/pydantic/issues/4457) by [@samuelcolvin](https://github.com/samuelcolvin)\n\n## v1.10.1 (2022-08-31)\n\n* Add `__hash__` method to `pydancic.color.Color` class, [#4454](https://github.com/pydantic/pydantic/issues/4454) by [@czaki](https://github.com/czaki)\n\n## v1.10.0 (2022-08-30)\n\n* Refactor the whole _pydantic_ `dataclass` decorator to really act like its standard lib equivalent.\n  It hence keeps `__eq__`, `__hash__`, ... and makes comparison with its non-validated version possible.\n  It also fixes usage of `frozen` dataclasses in fields and usage of `default_factory` in nested dataclasses.\n  The support of `Config.extra` has been added.\n  Finally, config customization directly via a `dict` is now possible, [#2557](https://github.com/pydantic/pydantic/issues/2557) by [@PrettyWood](https://github.com/PrettyWood)\n  <br/><br/>\n  **BREAKING CHANGES:**\n  - The `compiled` boolean (whether _pydantic_ is compiled with cython) has been moved from `main.py` to `version.py`\n  - Now that `Config.extra` is supported, `dataclass` ignores by default extra arguments (like `BaseModel`)\n* Fix PEP487 `__set_name__` protocol in `BaseModel` for PrivateAttrs, [#4407](https://github.com/pydantic/pydantic/issues/4407) by [@tlambert03](https://github.com/tlambert03)\n* Allow for custom parsing of environment variables via `parse_env_var` in `Config`, [#4406](https://github.com/pydantic/pydantic/issues/4406) by [@acmiyaguchi](https://github.com/acmiyaguchi)\n* Rename `master` to `main`, [#4405](https://github.com/pydantic/pydantic/issues/4405) by [@hramezani](https://github.com/hramezani)\n* Fix `StrictStr` does not raise `ValidationError` when `max_length` is present in `Field`, [#4388](https://github.com/pydantic/pydantic/issues/4388) by [@hramezani](https://github.com/hramezani)\n* Make `SecretStr` and `SecretBytes` hashable, [#4387](https://github.com/pydantic/pydantic/issues/4387) by [@chbndrhnns](https://github.com/chbndrhnns)\n* Fix `StrictBytes` does not raise `ValidationError` when `max_length` is present in `Field`, [#4380](https://github.com/pydantic/pydantic/issues/4380) by [@JeanArhancet](https://github.com/JeanArhancet)\n* Add support for bare `type`, [#4375](https://github.com/pydantic/pydantic/issues/4375) by [@hramezani](https://github.com/hramezani)\n* Support Python 3.11, including binaries for 3.11 in PyPI, [#4374](https://github.com/pydantic/pydantic/issues/4374) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Add support for `re.Pattern`, [#4366](https://github.com/pydantic/pydantic/issues/4366) by [@hramezani](https://github.com/hramezani)\n* Fix `__post_init_post_parse__` is incorrectly passed keyword arguments when no `__post_init__` is defined, [#4361](https://github.com/pydantic/pydantic/issues/4361) by [@hramezani](https://github.com/hramezani)\n* Fix implicitly importing `ForwardRef` and `Callable` from `pydantic.typing` instead of `typing` and also expose `MappingIntStrAny`, [#4358](https://github.com/pydantic/pydantic/issues/4358) by [@aminalaee](https://github.com/aminalaee)\n* remove `Any` types from the `dataclass` decorator so it can be used with the `disallow_any_expr` mypy option, [#4356](https://github.com/pydantic/pydantic/issues/4356) by [@DetachHead](https://github.com/DetachHead)\n* moved repo to `pydantic/pydantic`, [#4348](https://github.com/pydantic/pydantic/issues/4348) by [@yezz123](https://github.com/yezz123)\n* fix \"extra fields not permitted\" error when dataclass with `Extra.forbid` is validated multiple times, [#4343](https://github.com/pydantic/pydantic/issues/4343) by [@detachhead](https://github.com/detachhead)\n* Add Python 3.9 and 3.10 examples to docs, [#4339](https://github.com/pydantic/pydantic/issues/4339) by [@Bobronium](https://github.com/Bobronium)\n* Discriminated union models now use `oneOf` instead of `anyOf` when generating OpenAPI schema definitions, [#4335](https://github.com/pydantic/pydantic/issues/4335) by [@MaxwellPayne](https://github.com/MaxwellPayne)\n* Allow type checkers to infer inner type of `Json` type. `Json[list[str]]` will be now inferred as `list[str]`, \n  `Json[Any]` should be used instead of plain `Json`.\n  Runtime behaviour is not changed, [#4332](https://github.com/pydantic/pydantic/issues/4332) by [@Bobronium](https://github.com/Bobronium)\n* Allow empty string aliases by using a `alias is not None` check, rather than `bool(alias)`, [#4253](https://github.com/pydantic/pydantic/issues/4253) by [@sergeytsaplin](https://github.com/sergeytsaplin)\n* Update `ForwardRef`s in `Field.outer_type_`, [#4249](https://github.com/pydantic/pydantic/issues/4249) by [@JacobHayes](https://github.com/JacobHayes)\n* The use of `__dataclass_transform__` has been replaced by `typing_extensions.dataclass_transform`, which is the preferred way to mark pydantic models as a dataclass under [PEP 681](https://peps.python.org/pep-0681/), [#4241](https://github.com/pydantic/pydantic/issues/4241) by [@multimeric](https://github.com/multimeric)\n* Use parent model's `Config` when validating nested `NamedTuple` fields, [#4219](https://github.com/pydantic/pydantic/issues/4219) by [@synek](https://github.com/synek)\n* Update `BaseModel.construct` to work with aliased Fields, [#4192](https://github.com/pydantic/pydantic/issues/4192) by [@kylebamos](https://github.com/kylebamos)\n* Catch certain raised errors in `smart_deepcopy` and revert to `deepcopy` if so, [#4184](https://github.com/pydantic/pydantic/issues/4184) by [@coneybeare](https://github.com/coneybeare)\n* Add `Config.anystr_upper` and `to_upper` kwarg to constr and conbytes, [#4165](https://github.com/pydantic/pydantic/issues/4165) by [@satheler](https://github.com/satheler)\n* Fix JSON schema for `set` and `frozenset` when they include default values, [#4155](https://github.com/pydantic/pydantic/issues/4155) by [@aminalaee](https://github.com/aminalaee)\n* Teach the mypy plugin that methods decorated by `@validator` are classmethods, [#4102](https://github.com/pydantic/pydantic/issues/4102) by [@DMRobertson](https://github.com/DMRobertson)\n* Improve mypy plugin's ability to detect required fields, [#4086](https://github.com/pydantic/pydantic/issues/4086) by [@richardxia](https://github.com/richardxia)\n* Support fields of type `Type[]` in schema, [#4051](https://github.com/pydantic/pydantic/issues/4051) by [@aminalaee](https://github.com/aminalaee)\n* Add `default` value in JSON Schema when `const=True`, [#4031](https://github.com/pydantic/pydantic/issues/4031) by [@aminalaee](https://github.com/aminalaee)\n* Adds reserved word check to signature generation logic, [#4011](https://github.com/pydantic/pydantic/issues/4011) by [@strue36](https://github.com/strue36)\n* Fix Json strategy failure for the complex nested field, [#4005](https://github.com/pydantic/pydantic/issues/4005) by [@sergiosim](https://github.com/sergiosim)\n* Add JSON-compatible float constraint `allow_inf_nan`, [#3994](https://github.com/pydantic/pydantic/issues/3994) by [@tiangolo](https://github.com/tiangolo)\n* Remove undefined behaviour when `env_prefix` had characters in common with `env_nested_delimiter`, [#3975](https://github.com/pydantic/pydantic/issues/3975) by [@arsenron](https://github.com/arsenron)\n* Support generics model with `create_model`, [#3945](https://github.com/pydantic/pydantic/issues/3945) by [@hot123s](https://github.com/hot123s)\n* allow submodels to overwrite extra field info, [#3934](https://github.com/pydantic/pydantic/issues/3934) by [@PrettyWood](https://github.com/PrettyWood)\n* Document and test structural pattern matching ([PEP 636](https://peps.python.org/pep-0636/)) on `BaseModel`, [#3920](https://github.com/pydantic/pydantic/issues/3920) by [@irgolic](https://github.com/irgolic)\n* Fix incorrect deserialization of python timedelta object to ISO 8601 for negative time deltas.\n  Minus was serialized in incorrect place (\"P-1DT23H59M59.888735S\" instead of correct \"-P1DT23H59M59.888735S\"), [#3899](https://github.com/pydantic/pydantic/issues/3899) by [@07pepa](https://github.com/07pepa)\n* Fix validation of discriminated union fields with an alias when passing a model instance, [#3846](https://github.com/pydantic/pydantic/issues/3846) by [@chornsby](https://github.com/chornsby)\n* Add a CockroachDsn type to validate CockroachDB connection strings. The type\n  supports the following schemes: `cockroachdb`, `cockroachdb+psycopg2` and `cockroachdb+asyncpg`, [#3839](https://github.com/pydantic/pydantic/issues/3839) by [@blubber](https://github.com/blubber)\n* Fix MyPy plugin to not override pre-existing `__init__` method in models, [#3824](https://github.com/pydantic/pydantic/issues/3824) by [@patrick91](https://github.com/patrick91)\n* Fix mypy version checking, [#3783](https://github.com/pydantic/pydantic/issues/3783) by [@KotlinIsland](https://github.com/KotlinIsland)\n* support overwriting dunder attributes of `BaseModel` instances, [#3777](https://github.com/pydantic/pydantic/issues/3777) by [@PrettyWood](https://github.com/PrettyWood)\n* Added `ConstrainedDate` and `condate`, [#3740](https://github.com/pydantic/pydantic/issues/3740) by [@hottwaj](https://github.com/hottwaj)\n* Support `kw_only` in dataclasses, [#3670](https://github.com/pydantic/pydantic/issues/3670) by [@detachhead](https://github.com/detachhead)\n* Add comparison method for `Color` class, [#3646](https://github.com/pydantic/pydantic/issues/3646) by [@aminalaee](https://github.com/aminalaee)\n* Drop support for python3.6, associated cleanup, [#3605](https://github.com/pydantic/pydantic/issues/3605) by [@samuelcolvin](https://github.com/samuelcolvin)\n* created new function `to_lower_camel()` for \"non pascal case\" camel case, [#3463](https://github.com/pydantic/pydantic/issues/3463) by [@schlerp](https://github.com/schlerp)\n* Add checks to `default` and `default_factory` arguments in Mypy plugin, [#3430](https://github.com/pydantic/pydantic/issues/3430) by [@klaa97](https://github.com/klaa97)\n* fix mangling of `inspect.signature` for `BaseModel`, [#3413](https://github.com/pydantic/pydantic/issues/3413) by [@fix-inspect-signature](https://github.com/fix-inspect-signature)\n* Adds the `SecretField` abstract class so that all the current and future secret fields like `SecretStr` and `SecretBytes` will derive from it, [#3409](https://github.com/pydantic/pydantic/issues/3409) by [@expobrain](https://github.com/expobrain)\n* Support multi hosts validation in `PostgresDsn`, [#3337](https://github.com/pydantic/pydantic/issues/3337) by [@rglsk](https://github.com/rglsk)\n* Fix parsing of very small numeric timedelta values, [#3315](https://github.com/pydantic/pydantic/issues/3315) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Update `SecretsSettingsSource` to respect `config.case_sensitive`, [#3273](https://github.com/pydantic/pydantic/issues/3273) by [@JeanArhancet](https://github.com/JeanArhancet)\n* Add MongoDB network data source name (DSN) schema, [#3229](https://github.com/pydantic/pydantic/issues/3229) by [@snosratiershad](https://github.com/snosratiershad)\n* Add support for multiple dotenv files, [#3222](https://github.com/pydantic/pydantic/issues/3222) by [@rekyungmin](https://github.com/rekyungmin)\n* Raise an explicit `ConfigError` when multiple fields are incorrectly set for a single validator, [#3215](https://github.com/pydantic/pydantic/issues/3215) by [@SunsetOrange](https://github.com/SunsetOrange)\n* Allow ellipsis on `Field`s inside `Annotated` for `TypedDicts` required, [#3133](https://github.com/pydantic/pydantic/issues/3133) by [@ezegomez](https://github.com/ezegomez)\n* Catch overflow errors in `int_validator`, [#3112](https://github.com/pydantic/pydantic/issues/3112) by [@ojii](https://github.com/ojii)\n* Adds a `__rich_repr__` method to `Representation` class which enables pretty printing with [Rich](https://github.com/willmcgugan/rich), [#3099](https://github.com/pydantic/pydantic/issues/3099) by [@willmcgugan](https://github.com/willmcgugan)\n* Add percent encoding in `AnyUrl` and descendent types, [#3061](https://github.com/pydantic/pydantic/issues/3061) by [@FaresAhmedb](https://github.com/FaresAhmedb)\n* `validate_arguments` decorator now supports `alias`, [#3019](https://github.com/pydantic/pydantic/issues/3019) by [@MAD-py](https://github.com/MAD-py)\n* Avoid `__dict__` and `__weakref__` attributes in `AnyUrl` and IP address fields, [#2890](https://github.com/pydantic/pydantic/issues/2890) by [@nuno-andre](https://github.com/nuno-andre)\n* Add ability to use `Final` in a field type annotation, [#2766](https://github.com/pydantic/pydantic/issues/2766) by [@uriyyo](https://github.com/uriyyo)\n* Update requirement to `typing_extensions>=4.1.0` to guarantee `dataclass_transform` is available, [#4424](https://github.com/pydantic/pydantic/issues/4424) by [@commonism](https://github.com/commonism)\n* Add Explosion and AWS to main sponsors, [#4413](https://github.com/pydantic/pydantic/issues/4413) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Update documentation for `copy_on_model_validation` to reflect recent changes, [#4369](https://github.com/pydantic/pydantic/issues/4369) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Runtime warning if `__slots__` is passed to `create_model`, `__slots__` is then ignored, [#4432](https://github.com/pydantic/pydantic/issues/4432) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Add type hints to `BaseSettings.Config` to avoid mypy errors, also correct mypy version compatibility notice in docs, [#4450](https://github.com/pydantic/pydantic/issues/4450) by [@samuelcolvin](https://github.com/samuelcolvin)\n\n## v1.10.0b1 (2022-08-24)\n\nPre-release, see [the GitHub release](https://github.com/pydantic/pydantic/releases/tag/v1.10.0b1) for details.\n\n## v1.10.0a2 (2022-08-24)\n\nPre-release, see [the GitHub release](https://github.com/pydantic/pydantic/releases/tag/v1.10.0a2) for details.\n\n## v1.10.0a1 (2022-08-22)\n\nPre-release, see [the GitHub release](https://github.com/pydantic/pydantic/releases/tag/v1.10.0a1) for details.\n\n## v1.9.2 (2022-08-11)\n\n**Revert Breaking Change**: _v1.9.1_ introduced a breaking change where model fields were\ndeep copied by default, this release reverts the default behaviour to match _v1.9.0_ and before, \nwhile also allow deep-copy behaviour via `copy_on_model_validation = 'deep'`. See [#4092](https://github.com/pydantic/pydantic/issues/4092) for more information.\n\n* Allow for shallow copies of model fields, `Config.copy_on_model_validation` is now a str which must be\n  `'none'`, `'deep'`, or `'shallow'` corresponding to not copying, deep copy & shallow copy; default `'shallow'`, \n  [#4093](https://github.com/pydantic/pydantic/issues/4093) by [@timkpaine](https://github.com/timkpaine)\n\n## v1.9.1 (2022-05-19)\n\nThank you to pydantic's sponsors:\n@tiangolo, [@stellargraph](https://github.com/stellargraph), [@JonasKs](https://github.com/JonasKs), [@grillazz](https://github.com/grillazz), [@Mazyod](https://github.com/Mazyod), [@kevinalh](https://github.com/kevinalh), [@chdsbd](https://github.com/chdsbd), [@povilasb](https://github.com/povilasb), [@povilasb](https://github.com/povilasb), [@jina-ai](https://github.com/jina-ai), \n@mainframeindustries, [@robusta-dev](https://github.com/robusta-dev), [@SendCloud](https://github.com/SendCloud), [@rszamszur](https://github.com/rszamszur), [@jodal](https://github.com/jodal), [@hardbyte](https://github.com/hardbyte), [@corleyma](https://github.com/corleyma), [@daddycocoaman](https://github.com/daddycocoaman), \n@Rehket, [@jokull](https://github.com/jokull), [@reillysiemens](https://github.com/reillysiemens), [@westonsteimel](https://github.com/westonsteimel), [@primer-io](https://github.com/primer-io), [@koxudaxi](https://github.com/koxudaxi), [@browniebroke](https://github.com/browniebroke), [@stradivari96](https://github.com/stradivari96), \n@adriangb, [@kamalgill](https://github.com/kamalgill), [@jqueguiner](https://github.com/jqueguiner), [@dev-zero](https://github.com/dev-zero), [@datarootsio](https://github.com/datarootsio), [@RedCarpetUp](https://github.com/RedCarpetUp)\nfor their kind support.\n\n* Limit the size of `generics._generic_types_cache` and `generics._assigned_parameters` \n  to avoid unlimited increase in memory usage, [#4083](https://github.com/pydantic/pydantic/issues/4083) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Add Jupyverse and FPS as Jupyter projects using pydantic, [#4082](https://github.com/pydantic/pydantic/issues/4082) by [@davidbrochart](https://github.com/davidbrochart)\n* Speedup `__isinstancecheck__` on pydantic models when the type is not a model, may also avoid memory \"leaks\", [#4081](https://github.com/pydantic/pydantic/issues/4081) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Fix in-place modification of `FieldInfo` that caused problems with PEP 593 type aliases, [#4067](https://github.com/pydantic/pydantic/issues/4067) by [@adriangb](https://github.com/adriangb)\n* Add support for autocomplete in VS Code via `__dataclass_transform__` when using `pydantic.dataclasses.dataclass`, [#4006](https://github.com/pydantic/pydantic/issues/4006) by [@giuliano-oliveira](https://github.com/giuliano-oliveira)\n* Remove benchmarks from codebase and docs, [#3973](https://github.com/pydantic/pydantic/issues/3973) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Typing checking with pyright in CI, improve docs on vscode/pylance/pyright, [#3972](https://github.com/pydantic/pydantic/issues/3972) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Fix nested Python dataclass schema regression, [#3819](https://github.com/pydantic/pydantic/issues/3819) by [@himbeles](https://github.com/himbeles)\n* Update documentation about lazy evaluation of sources for Settings, [#3806](https://github.com/pydantic/pydantic/issues/3806) by [@garyd203](https://github.com/garyd203)\n* Prevent subclasses of bytes being converted to bytes, [#3706](https://github.com/pydantic/pydantic/issues/3706) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Fixed \"error checking inheritance of\" when using PEP585 and PEP604 type hints, [#3681](https://github.com/pydantic/pydantic/issues/3681) by [@aleksul](https://github.com/aleksul)\n* Allow self referencing `ClassVar`s in models, [#3679](https://github.com/pydantic/pydantic/issues/3679) by [@samuelcolvin](https://github.com/samuelcolvin)\n* **Breaking Change, see [#4106](https://github.com/pydantic/pydantic/issues/4106)**: Fix issue with self-referencing dataclass, [#3675](https://github.com/pydantic/pydantic/issues/3675) by [@uriyyo](https://github.com/uriyyo)\n* Include non-standard port numbers in rendered URLs, [#3652](https://github.com/pydantic/pydantic/issues/3652) by [@dolfinus](https://github.com/dolfinus)\n* `Config.copy_on_model_validation` does a deep copy and not a shallow one, [#3641](https://github.com/pydantic/pydantic/issues/3641) by [@PrettyWood](https://github.com/PrettyWood)\n* fix: clarify that discriminated unions do not support singletons, [#3636](https://github.com/pydantic/pydantic/issues/3636) by [@tommilligan](https://github.com/tommilligan)\n* Add `read_text(encoding='utf-8')` for `setup.py`, [#3625](https://github.com/pydantic/pydantic/issues/3625) by [@hswong3i](https://github.com/hswong3i)\n* Fix JSON Schema generation for Discriminated Unions within lists, [#3608](https://github.com/pydantic/pydantic/issues/3608) by [@samuelcolvin](https://github.com/samuelcolvin)\n\n## v1.9.0 (2021-12-31)\n\nThank you to pydantic's sponsors:\n@sthagen, [@timdrijvers](https://github.com/timdrijvers), [@toinbis](https://github.com/toinbis), [@koxudaxi](https://github.com/koxudaxi), [@ginomempin](https://github.com/ginomempin), [@primer-io](https://github.com/primer-io), [@and-semakin](https://github.com/and-semakin), [@westonsteimel](https://github.com/westonsteimel), [@reillysiemens](https://github.com/reillysiemens),\n@es3n1n, [@jokull](https://github.com/jokull), [@JonasKs](https://github.com/JonasKs), [@Rehket](https://github.com/Rehket), [@corleyma](https://github.com/corleyma), [@daddycocoaman](https://github.com/daddycocoaman), [@hardbyte](https://github.com/hardbyte), [@datarootsio](https://github.com/datarootsio), [@jodal](https://github.com/jodal), [@aminalaee](https://github.com/aminalaee), [@rafsaf](https://github.com/rafsaf), \n@jqueguiner, [@chdsbd](https://github.com/chdsbd), [@kevinalh](https://github.com/kevinalh), [@Mazyod](https://github.com/Mazyod), [@grillazz](https://github.com/grillazz), [@JonasKs](https://github.com/JonasKs), [@simw](https://github.com/simw), [@leynier](https://github.com/leynier), [@xfenix](https://github.com/xfenix)\nfor their kind support.\n\n### Highlights\n\n* add Python 3.10 support, [#2885](https://github.com/pydantic/pydantic/issues/2885) by [@PrettyWood](https://github.com/PrettyWood)\n* [Discriminated unions](https://docs.pydantic.dev/usage/types/#discriminated-unions-aka-tagged-unions), [#619](https://github.com/pydantic/pydantic/issues/619) by [@PrettyWood](https://github.com/PrettyWood)\n* [`Config.smart_union` for better union logic](https://docs.pydantic.dev/usage/model_config/#smart-union), [#2092](https://github.com/pydantic/pydantic/issues/2092) by [@PrettyWood](https://github.com/PrettyWood)\n* Binaries for Macos M1 CPUs, [#3498](https://github.com/pydantic/pydantic/issues/3498) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Complex types can be set via [nested environment variables](https://docs.pydantic.dev/usage/settings/#parsing-environment-variable-values), e.g. `foo___bar`, [#3159](https://github.com/pydantic/pydantic/issues/3159) by [@Air-Mark](https://github.com/Air-Mark)\n* add a dark mode to _pydantic_ documentation, [#2913](https://github.com/pydantic/pydantic/issues/2913) by [@gbdlin](https://github.com/gbdlin)\n* Add support for autocomplete in VS Code via `__dataclass_transform__`, [#2721](https://github.com/pydantic/pydantic/issues/2721) by [@tiangolo](https://github.com/tiangolo)\n* Add \"exclude\" as a field parameter so that it can be configured using model config, [#660](https://github.com/pydantic/pydantic/issues/660) by [@daviskirk](https://github.com/daviskirk)\n\n### v1.9.0 (2021-12-31) Changes\n\n* Apply `update_forward_refs` to `Config.json_encodes` prevent name clashes in types defined via strings, [#3583](https://github.com/pydantic/pydantic/issues/3583) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Extend pydantic's mypy plugin to support mypy versions `0.910`, `0.920`, `0.921` & `0.930`, [#3573](https://github.com/pydantic/pydantic/issues/3573) & [#3594](https://github.com/pydantic/pydantic/issues/3594) by [@PrettyWood](https://github.com/PrettyWood), [@christianbundy](https://github.com/christianbundy), [@samuelcolvin](https://github.com/samuelcolvin)\n\n### v1.9.0a2 (2021-12-24) Changes\n\n* support generic models with discriminated union, [#3551](https://github.com/pydantic/pydantic/issues/3551) by [@PrettyWood](https://github.com/PrettyWood)\n* keep old behaviour of `json()` by default, [#3542](https://github.com/pydantic/pydantic/issues/3542) by [@PrettyWood](https://github.com/PrettyWood)\n* Removed typing-only `__root__` attribute from `BaseModel`, [#3540](https://github.com/pydantic/pydantic/issues/3540) by [@layday](https://github.com/layday)\n* Build Python 3.10 wheels, [#3539](https://github.com/pydantic/pydantic/issues/3539) by [@mbachry](https://github.com/mbachry)\n* Fix display of `extra` fields with model `__repr__`, [#3234](https://github.com/pydantic/pydantic/issues/3234) by [@cocolman](https://github.com/cocolman)\n* models copied via `Config.copy_on_model_validation` always have all fields, [#3201](https://github.com/pydantic/pydantic/issues/3201) by [@PrettyWood](https://github.com/PrettyWood)\n* nested ORM from nested dictionaries, [#3182](https://github.com/pydantic/pydantic/issues/3182) by [@PrettyWood](https://github.com/PrettyWood)\n* fix link to discriminated union section by [@PrettyWood](https://github.com/PrettyWood)\n\n### v1.9.0a1 (2021-12-18) Changes\n\n* Add support for `Decimal`-specific validation configurations in `Field()`, additionally to using `condecimal()`, \n  to allow better support from editors and tooling, [#3507](https://github.com/pydantic/pydantic/issues/3507) by [@tiangolo](https://github.com/tiangolo)\n* Add `arm64` binaries suitable for MacOS with an M1 CPU to PyPI, [#3498](https://github.com/pydantic/pydantic/issues/3498) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Fix issue where `None` was considered invalid when using a `Union` type containing `Any` or `object`, [#3444](https://github.com/pydantic/pydantic/issues/3444) by [@tharradine](https://github.com/tharradine)\n* When generating field schema, pass optional `field` argument (of type\n  `pydantic.fields.ModelField`) to `__modify_schema__()` if present, [#3434](https://github.com/pydantic/pydantic/issues/3434) by [@jasujm](https://github.com/jasujm)\n* Fix issue when pydantic fail to parse `typing.ClassVar` string type annotation, [#3401](https://github.com/pydantic/pydantic/issues/3401) by [@uriyyo](https://github.com/uriyyo)\n* Mention Python >= 3.9.2 as an alternative to `typing_extensions.TypedDict`, [#3374](https://github.com/pydantic/pydantic/issues/3374) by [@BvB93](https://github.com/BvB93)\n* Changed the validator method name in the [Custom Errors example](https://docs.pydantic.dev/usage/models/#custom-errors) \n  to more accurately describe what the validator is doing; changed from `name_must_contain_space` to ` value_must_equal_bar`, [#3327](https://github.com/pydantic/pydantic/issues/3327) by [@michaelrios28](https://github.com/michaelrios28)\n* Add `AmqpDsn` class, [#3254](https://github.com/pydantic/pydantic/issues/3254) by [@kludex](https://github.com/kludex)\n* Always use `Enum` value as default in generated JSON schema, [#3190](https://github.com/pydantic/pydantic/issues/3190) by [@joaommartins](https://github.com/joaommartins)\n* Add support for Mypy 0.920, [#3175](https://github.com/pydantic/pydantic/issues/3175) by [@christianbundy](https://github.com/christianbundy)\n* `validate_arguments` now supports `extra` customization (used to always be `Extra.forbid`), [#3161](https://github.com/pydantic/pydantic/issues/3161) by [@PrettyWood](https://github.com/PrettyWood)\n* Complex types can be set by nested environment variables, [#3159](https://github.com/pydantic/pydantic/issues/3159) by [@Air-Mark](https://github.com/Air-Mark)\n* Fix mypy plugin to collect fields based on `pydantic.utils.is_valid_field` so that it ignores untyped private variables, [#3146](https://github.com/pydantic/pydantic/issues/3146) by [@hi-ogawa](https://github.com/hi-ogawa)\n* fix `validate_arguments` issue with `Config.validate_all`, [#3135](https://github.com/pydantic/pydantic/issues/3135) by [@PrettyWood](https://github.com/PrettyWood)\n* avoid dict coercion when using dict subclasses as field type, [#3122](https://github.com/pydantic/pydantic/issues/3122) by [@PrettyWood](https://github.com/PrettyWood)\n* add support for `object` type, [#3062](https://github.com/pydantic/pydantic/issues/3062) by [@PrettyWood](https://github.com/PrettyWood)\n* Updates pydantic dataclasses to keep `_special` properties on parent classes, [#3043](https://github.com/pydantic/pydantic/issues/3043) by [@zulrang](https://github.com/zulrang)\n* Add a `TypedDict` class for error objects, [#3038](https://github.com/pydantic/pydantic/issues/3038) by [@matthewhughes934](https://github.com/matthewhughes934)\n* Fix support for using a subclass of an annotation as a default, [#3018](https://github.com/pydantic/pydantic/issues/3018) by [@JacobHayes](https://github.com/JacobHayes)\n* make `create_model_from_typeddict` mypy compliant, [#3008](https://github.com/pydantic/pydantic/issues/3008) by [@PrettyWood](https://github.com/PrettyWood)\n* Make multiple inheritance work when using `PrivateAttr`, [#2989](https://github.com/pydantic/pydantic/issues/2989) by [@hmvp](https://github.com/hmvp)\n* Parse environment variables as JSON, if they have a `Union` type with a complex subfield, [#2936](https://github.com/pydantic/pydantic/issues/2936) by [@cbartz](https://github.com/cbartz)\n* Prevent `StrictStr` permitting `Enum` values where the enum inherits from `str`, [#2929](https://github.com/pydantic/pydantic/issues/2929) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Make `SecretsSettingsSource` parse values being assigned to fields of complex types when sourced from a secrets file, \n  just as when sourced from environment variables, [#2917](https://github.com/pydantic/pydantic/issues/2917) by [@davidmreed](https://github.com/davidmreed)\n* add a dark mode to _pydantic_ documentation, [#2913](https://github.com/pydantic/pydantic/issues/2913) by [@gbdlin](https://github.com/gbdlin)\n* Make `pydantic-mypy` plugin compatible with `pyproject.toml` configuration, consistent with `mypy` changes. \n  See the [doc](https://docs.pydantic.dev/mypy_plugin/#configuring-the-plugin) for more information, [#2908](https://github.com/pydantic/pydantic/issues/2908) by [@jrwalk](https://github.com/jrwalk)\n* add Python 3.10 support, [#2885](https://github.com/pydantic/pydantic/issues/2885) by [@PrettyWood](https://github.com/PrettyWood)\n* Correctly parse generic models with `Json[T]`, [#2860](https://github.com/pydantic/pydantic/issues/2860) by [@geekingfrog](https://github.com/geekingfrog)\n* Update contrib docs re: Python version to use for building docs, [#2856](https://github.com/pydantic/pydantic/issues/2856) by [@paxcodes](https://github.com/paxcodes)\n* Clarify documentation about _pydantic_'s support for custom validation and strict type checking, \n  despite _pydantic_ being primarily a parsing library, [#2855](https://github.com/pydantic/pydantic/issues/2855) by [@paxcodes](https://github.com/paxcodes)\n* Fix schema generation for `Deque` fields, [#2810](https://github.com/pydantic/pydantic/issues/2810) by [@sergejkozin](https://github.com/sergejkozin)\n* fix an edge case when mixing constraints and `Literal`, [#2794](https://github.com/pydantic/pydantic/issues/2794) by [@PrettyWood](https://github.com/PrettyWood)\n* Fix postponed annotation resolution for `NamedTuple` and `TypedDict` when they're used directly as the type of fields \n  within Pydantic models, [#2760](https://github.com/pydantic/pydantic/issues/2760) by [@jameysharp](https://github.com/jameysharp)\n* Fix bug when `mypy` plugin fails on `construct` method call for `BaseSettings` derived classes, [#2753](https://github.com/pydantic/pydantic/issues/2753) by [@uriyyo](https://github.com/uriyyo)\n* Add function overloading for a `pydantic.create_model` function, [#2748](https://github.com/pydantic/pydantic/issues/2748) by [@uriyyo](https://github.com/uriyyo)\n* Fix mypy plugin issue with self field declaration, [#2743](https://github.com/pydantic/pydantic/issues/2743) by [@uriyyo](https://github.com/uriyyo)\n* The colon at the end of the line \"The fields which were supplied when user was initialised:\" suggests that the code following it is related.\n  Changed it to a period, [#2733](https://github.com/pydantic/pydantic/issues/2733) by [@krisaoe](https://github.com/krisaoe)\n* Renamed variable `schema` to `schema_` to avoid shadowing of global variable name, [#2724](https://github.com/pydantic/pydantic/issues/2724) by [@shahriyarr](https://github.com/shahriyarr)\n* Add support for autocomplete in VS Code via `__dataclass_transform__`, [#2721](https://github.com/pydantic/pydantic/issues/2721) by [@tiangolo](https://github.com/tiangolo)\n* add missing type annotations in `BaseConfig` and handle `max_length = 0`, [#2719](https://github.com/pydantic/pydantic/issues/2719) by [@PrettyWood](https://github.com/PrettyWood)\n* Change `orm_mode` checking to allow recursive ORM mode parsing with dicts, [#2718](https://github.com/pydantic/pydantic/issues/2718) by [@nuno-andre](https://github.com/nuno-andre)\n* Add episode 313 of the *Talk Python To Me* podcast, where Michael Kennedy and Samuel Colvin discuss *pydantic*, to the docs, [#2712](https://github.com/pydantic/pydantic/issues/2712) by [@RatulMaharaj](https://github.com/RatulMaharaj)\n* fix JSON schema generation when a field is of type `NamedTuple` and has a default value, [#2707](https://github.com/pydantic/pydantic/issues/2707) by [@PrettyWood](https://github.com/PrettyWood)\n* `Enum` fields now properly support extra kwargs in schema generation, [#2697](https://github.com/pydantic/pydantic/issues/2697) by [@sammchardy](https://github.com/sammchardy)\n* **Breaking Change, see [#3780](https://github.com/pydantic/pydantic/issues/3780)**: Make serialization of referenced pydantic models possible, [#2650](https://github.com/pydantic/pydantic/issues/2650) by [@PrettyWood](https://github.com/PrettyWood)\n* Add `uniqueItems` option to `ConstrainedList`, [#2618](https://github.com/pydantic/pydantic/issues/2618) by [@nuno-andre](https://github.com/nuno-andre)\n* Try to evaluate forward refs automatically at model creation, [#2588](https://github.com/pydantic/pydantic/issues/2588) by [@uriyyo](https://github.com/uriyyo)\n* Switch docs preview and coverage display to use [smokeshow](https://smokeshow.helpmanual.io/), [#2580](https://github.com/pydantic/pydantic/issues/2580) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Add `__version__` attribute to pydantic module, [#2572](https://github.com/pydantic/pydantic/issues/2572) by [@paxcodes](https://github.com/paxcodes)\n* Add `postgresql+asyncpg`, `postgresql+pg8000`, `postgresql+psycopg2`, `postgresql+psycopg2cffi`, `postgresql+py-postgresql`\n  and `postgresql+pygresql` schemes for `PostgresDsn`, [#2567](https://github.com/pydantic/pydantic/issues/2567) by [@postgres-asyncpg](https://github.com/postgres-asyncpg)\n* Enable the Hypothesis plugin to generate a constrained decimal when the `decimal_places` argument is specified, [#2524](https://github.com/pydantic/pydantic/issues/2524) by [@cwe5590](https://github.com/cwe5590)\n* Allow `collections.abc.Callable` to be used as type in Python 3.9, [#2519](https://github.com/pydantic/pydantic/issues/2519) by [@daviskirk](https://github.com/daviskirk)\n* Documentation update how to custom compile pydantic when using pip install, small change in `setup.py` \n  to allow for custom CFLAGS when compiling, [#2517](https://github.com/pydantic/pydantic/issues/2517) by [@peterroelants](https://github.com/peterroelants)\n* remove side effect of `default_factory` to run it only once even if `Config.validate_all` is set, [#2515](https://github.com/pydantic/pydantic/issues/2515) by [@PrettyWood](https://github.com/PrettyWood)\n* Add lookahead to ip regexes for `AnyUrl` hosts. This allows urls with DNS labels\n  looking like IPs to validate as they are perfectly valid host names, [#2512](https://github.com/pydantic/pydantic/issues/2512) by [@sbv-csis](https://github.com/sbv-csis)\n* Set `minItems` and `maxItems` in generated JSON schema for fixed-length tuples, [#2497](https://github.com/pydantic/pydantic/issues/2497) by [@PrettyWood](https://github.com/PrettyWood)\n* Add `strict` argument to `conbytes`, [#2489](https://github.com/pydantic/pydantic/issues/2489) by [@koxudaxi](https://github.com/koxudaxi)\n* Support user defined generic field types in generic models, [#2465](https://github.com/pydantic/pydantic/issues/2465) by [@daviskirk](https://github.com/daviskirk)\n* Add an example and a short explanation of subclassing `GetterDict` to docs, [#2463](https://github.com/pydantic/pydantic/issues/2463) by [@nuno-andre](https://github.com/nuno-andre)\n* add `KafkaDsn` type, `HttpUrl` now has default port 80 for http and 443 for https, [#2447](https://github.com/pydantic/pydantic/issues/2447) by [@MihanixA](https://github.com/MihanixA)\n* Add `PastDate` and `FutureDate` types, [#2425](https://github.com/pydantic/pydantic/issues/2425) by [@Kludex](https://github.com/Kludex)\n* Support generating schema for `Generic` fields with subtypes, [#2375](https://github.com/pydantic/pydantic/issues/2375) by [@maximberg](https://github.com/maximberg)\n* fix(encoder): serialize `NameEmail` to str, [#2341](https://github.com/pydantic/pydantic/issues/2341) by [@alecgerona](https://github.com/alecgerona)\n* add `Config.smart_union` to prevent coercion in `Union` if possible, see \n [the doc](https://docs.pydantic.dev/usage/model_config/#smart-union) for more information, [#2092](https://github.com/pydantic/pydantic/issues/2092) by [@PrettyWood](https://github.com/PrettyWood)\n* Add ability to use `typing.Counter` as a model field type, [#2060](https://github.com/pydantic/pydantic/issues/2060) by [@uriyyo](https://github.com/uriyyo)\n* Add parameterised subclasses to `__bases__` when constructing new parameterised classes, so that `A <: B => A[int] <: B[int]`, [#2007](https://github.com/pydantic/pydantic/issues/2007) by [@diabolo-dan](https://github.com/diabolo-dan)\n* Create `FileUrl` type that allows URLs that conform to [RFC 8089](https://tools.ietf.org/html/rfc8089#section-2).\n  Add `host_required` parameter, which is `True` by default (`AnyUrl` and subclasses), `False` in `RedisDsn`, `FileUrl`, [#1983](https://github.com/pydantic/pydantic/issues/1983) by [@vgerak](https://github.com/vgerak)\n* add `confrozenset()`, analogous to `conset()` and `conlist()`, [#1897](https://github.com/pydantic/pydantic/issues/1897) by [@PrettyWood](https://github.com/PrettyWood)\n* stop calling parent class `root_validator` if overridden, [#1895](https://github.com/pydantic/pydantic/issues/1895) by [@PrettyWood](https://github.com/PrettyWood)\n* Add `repr` (defaults to `True`) parameter to `Field`, to hide it from the default representation of the `BaseModel`, [#1831](https://github.com/pydantic/pydantic/issues/1831) by [@fnep](https://github.com/fnep)\n* Accept empty query/fragment URL parts, [#1807](https://github.com/pydantic/pydantic/issues/1807) by [@xavier](https://github.com/xavier)\n\n## v1.8.2 (2021-05-11)\n\n!!! warning\n    A security vulnerability, level \"moderate\" is fixed in v1.8.2. Please upgrade **ASAP**.\n    See security advisory [CVE-2021-29510](https://github.com/pydantic/pydantic/security/advisories/GHSA-5jqp-qgf6-3pvh)\n\n* **Security fix:** Fix `date` and `datetime` parsing so passing either `'infinity'` or `float('inf')` \n  (or their negative values) does not cause an infinite loop, \n  see security advisory [CVE-2021-29510](https://github.com/pydantic/pydantic/security/advisories/GHSA-5jqp-qgf6-3pvh)\n* fix schema generation with Enum by generating a valid name, [#2575](https://github.com/pydantic/pydantic/issues/2575) by [@PrettyWood](https://github.com/PrettyWood)\n* fix JSON schema generation with a `Literal` of an enum member, [#2536](https://github.com/pydantic/pydantic/issues/2536) by [@PrettyWood](https://github.com/PrettyWood)\n* Fix bug with configurations declarations that are passed as\n  keyword arguments during class creation, [#2532](https://github.com/pydantic/pydantic/issues/2532) by [@uriyyo](https://github.com/uriyyo)\n* Allow passing `json_encoders` in class kwargs, [#2521](https://github.com/pydantic/pydantic/issues/2521) by [@layday](https://github.com/layday)\n* support arbitrary types with custom `__eq__`, [#2483](https://github.com/pydantic/pydantic/issues/2483) by [@PrettyWood](https://github.com/PrettyWood)\n* support `Annotated` in `validate_arguments` and in generic models with Python 3.9, [#2483](https://github.com/pydantic/pydantic/issues/2483) by [@PrettyWood](https://github.com/PrettyWood)\n\n## v1.8.1 (2021-03-03)\n\nBug fixes for regressions and new features from `v1.8` \n\n* allow elements of `Config.field` to update elements of a `Field`, [#2461](https://github.com/pydantic/pydantic/issues/2461) by [@samuelcolvin](https://github.com/samuelcolvin)\n* fix validation with a `BaseModel` field and a custom root type, [#2449](https://github.com/pydantic/pydantic/issues/2449) by [@PrettyWood](https://github.com/PrettyWood)\n* expose `Pattern` encoder to `fastapi`, [#2444](https://github.com/pydantic/pydantic/issues/2444) by [@PrettyWood](https://github.com/PrettyWood)\n* enable the Hypothesis plugin to generate a constrained float when the `multiple_of` argument is specified, [#2442](https://github.com/pydantic/pydantic/issues/2442) by [@tobi-lipede-oodle](https://github.com/tobi-lipede-oodle)\n* Avoid `RecursionError` when using some types like `Enum` or `Literal` with generic models, [#2436](https://github.com/pydantic/pydantic/issues/2436) by [@PrettyWood](https://github.com/PrettyWood)\n* do not overwrite declared `__hash__` in subclasses of a model, [#2422](https://github.com/pydantic/pydantic/issues/2422) by [@PrettyWood](https://github.com/PrettyWood)\n* fix `mypy` complaints on `Path` and `UUID` related custom types, [#2418](https://github.com/pydantic/pydantic/issues/2418) by [@PrettyWood](https://github.com/PrettyWood)\n* Support properly variable length tuples of compound types, [#2416](https://github.com/pydantic/pydantic/issues/2416) by [@PrettyWood](https://github.com/PrettyWood)\n\n## v1.8 (2021-02-26)\n\nThank you to pydantic's sponsors:\n@jorgecarleitao, [@BCarley](https://github.com/BCarley), [@chdsbd](https://github.com/chdsbd), [@tiangolo](https://github.com/tiangolo), [@matin](https://github.com/matin), [@linusg](https://github.com/linusg), [@kevinalh](https://github.com/kevinalh), [@koxudaxi](https://github.com/koxudaxi), [@timdrijvers](https://github.com/timdrijvers), [@mkeen](https://github.com/mkeen), [@meadsteve](https://github.com/meadsteve), \n@ginomempin, [@primer-io](https://github.com/primer-io), [@and-semakin](https://github.com/and-semakin), [@tomthorogood](https://github.com/tomthorogood), [@AjitZK](https://github.com/AjitZK), [@westonsteimel](https://github.com/westonsteimel), [@Mazyod](https://github.com/Mazyod), [@christippett](https://github.com/christippett), [@CarlosDomingues](https://github.com/CarlosDomingues), \n@Kludex, [@r-m-n](https://github.com/r-m-n)\nfor their kind support.\n\n### Highlights\n\n* [Hypothesis plugin](https://docs.pydantic.dev/hypothesis_plugin/) for testing, [#2097](https://github.com/pydantic/pydantic/issues/2097) by [@Zac-HD](https://github.com/Zac-HD)\n* support for [`NamedTuple` and `TypedDict`](https://docs.pydantic.dev/usage/types/#annotated-types), [#2216](https://github.com/pydantic/pydantic/issues/2216) by [@PrettyWood](https://github.com/PrettyWood)\n* Support [`Annotated` hints on model fields](https://docs.pydantic.dev/usage/schema/#typingannotated-fields), [#2147](https://github.com/pydantic/pydantic/issues/2147) by [@JacobHayes](https://github.com/JacobHayes)\n* [`frozen` parameter on `Config`](https://docs.pydantic.dev/usage/model_config/) to allow models to be hashed, [#1880](https://github.com/pydantic/pydantic/issues/1880) by [@rhuille](https://github.com/rhuille)\n\n### Changes\n\n* **Breaking Change**, remove old deprecation aliases from v1, [#2415](https://github.com/pydantic/pydantic/issues/2415) by [@samuelcolvin](https://github.com/samuelcolvin):\n  * remove notes on migrating to v1 in docs\n  * remove `Schema` which was replaced by `Field`\n  * remove `Config.case_insensitive` which was replaced by `Config.case_sensitive` (default `False`)\n  * remove `Config.allow_population_by_alias` which was replaced by `Config.allow_population_by_field_name`\n  * remove `model.fields` which was replaced by `model.__fields__`\n  * remove `model.to_string()` which was replaced by `str(model)`\n  * remove `model.__values__` which was replaced by `model.__dict__`\n* **Breaking Change:** always validate only first sublevel items with `each_item`.\n  There were indeed some edge cases with some compound types where the validated items were the last sublevel ones, [#1933](https://github.com/pydantic/pydantic/issues/1933) by [@PrettyWood](https://github.com/PrettyWood)\n* Update docs extensions to fix local syntax highlighting, [#2400](https://github.com/pydantic/pydantic/issues/2400) by [@daviskirk](https://github.com/daviskirk)\n* fix: allow `utils.lenient_issubclass` to handle `typing.GenericAlias` objects like `list[str]` in Python >= 3.9, [#2399](https://github.com/pydantic/pydantic/issues/2399) by [@daviskirk](https://github.com/daviskirk)\n* Improve field declaration for _pydantic_ `dataclass` by allowing the usage of _pydantic_ `Field` or `'metadata'` kwarg of `dataclasses.field`, [#2384](https://github.com/pydantic/pydantic/issues/2384) by [@PrettyWood](https://github.com/PrettyWood)\n* Making `typing-extensions` a required dependency, [#2368](https://github.com/pydantic/pydantic/issues/2368) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Make `resolve_annotations` more lenient, allowing for missing modules, [#2363](https://github.com/pydantic/pydantic/issues/2363) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Allow configuring models through class kwargs, [#2356](https://github.com/pydantic/pydantic/issues/2356) by [@Bobronium](https://github.com/Bobronium)\n* Prevent `Mapping` subclasses from always being coerced to `dict`, [#2325](https://github.com/pydantic/pydantic/issues/2325) by [@ofek](https://github.com/ofek)\n* fix: allow `None` for type `Optional[conset / conlist]`, [#2320](https://github.com/pydantic/pydantic/issues/2320) by [@PrettyWood](https://github.com/PrettyWood)\n* Support empty tuple type, [#2318](https://github.com/pydantic/pydantic/issues/2318) by [@PrettyWood](https://github.com/PrettyWood)\n* fix: `python_requires` metadata to require >=3.6.1, [#2306](https://github.com/pydantic/pydantic/issues/2306) by [@hukkinj1](https://github.com/hukkinj1)\n* Properly encode `Decimal` with, or without any decimal places, [#2293](https://github.com/pydantic/pydantic/issues/2293) by [@hultner](https://github.com/hultner)\n* fix: update `__fields_set__` in `BaseModel.copy(update=…)`, [#2290](https://github.com/pydantic/pydantic/issues/2290) by [@PrettyWood](https://github.com/PrettyWood)\n* fix: keep order of fields with `BaseModel.construct()`, [#2281](https://github.com/pydantic/pydantic/issues/2281) by [@PrettyWood](https://github.com/PrettyWood)\n* Support generating schema for Generic fields, [#2262](https://github.com/pydantic/pydantic/issues/2262) by [@maximberg](https://github.com/maximberg)\n* Fix `validate_decorator` so `**kwargs` doesn't exclude values when the keyword\n  has the same name as the `*args` or `**kwargs` names, [#2251](https://github.com/pydantic/pydantic/issues/2251) by [@cybojenix](https://github.com/cybojenix)\n* Prevent overriding positional arguments with keyword arguments in\n  `validate_arguments`, as per behaviour with native functions, [#2249](https://github.com/pydantic/pydantic/issues/2249) by [@cybojenix](https://github.com/cybojenix)\n* add documentation for `con*` type functions, [#2242](https://github.com/pydantic/pydantic/issues/2242) by [@tayoogunbiyi](https://github.com/tayoogunbiyi)\n* Support custom root type (aka `__root__`) when using `parse_obj()` with nested models, [#2238](https://github.com/pydantic/pydantic/issues/2238) by [@PrettyWood](https://github.com/PrettyWood)\n* Support custom root type (aka `__root__`) with `from_orm()`, [#2237](https://github.com/pydantic/pydantic/issues/2237) by [@PrettyWood](https://github.com/PrettyWood)\n* ensure cythonized functions are left untouched when creating models, based on [#1944](https://github.com/pydantic/pydantic/issues/1944) by [@kollmats](https://github.com/kollmats), [#2228](https://github.com/pydantic/pydantic/issues/2228) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Resolve forward refs for stdlib dataclasses converted into _pydantic_ ones, [#2220](https://github.com/pydantic/pydantic/issues/2220) by [@PrettyWood](https://github.com/PrettyWood)\n* Add support for `NamedTuple` and `TypedDict` types.\n  Those two types are now handled and validated when used inside `BaseModel` or _pydantic_ `dataclass`.\n  Two utils are also added `create_model_from_namedtuple` and `create_model_from_typeddict`, [#2216](https://github.com/pydantic/pydantic/issues/2216) by [@PrettyWood](https://github.com/PrettyWood)\n* Do not ignore annotated fields when type is `Union[Type[...], ...]`, [#2213](https://github.com/pydantic/pydantic/issues/2213) by [@PrettyWood](https://github.com/PrettyWood)\n* Raise a user-friendly `TypeError` when a `root_validator` does not return a `dict` (e.g. `None`), [#2209](https://github.com/pydantic/pydantic/issues/2209) by [@masalim2](https://github.com/masalim2)\n* Add a `FrozenSet[str]` type annotation to the `allowed_schemes` argument on the `strict_url` field type, [#2198](https://github.com/pydantic/pydantic/issues/2198) by [@Midnighter](https://github.com/Midnighter)\n* add `allow_mutation` constraint to `Field`, [#2195](https://github.com/pydantic/pydantic/issues/2195) by [@sblack-usu](https://github.com/sblack-usu)\n* Allow `Field` with a `default_factory` to be used as an argument to a function\n  decorated with `validate_arguments`, [#2176](https://github.com/pydantic/pydantic/issues/2176) by [@thomascobb](https://github.com/thomascobb)\n* Allow non-existent secrets directory by only issuing a warning, [#2175](https://github.com/pydantic/pydantic/issues/2175) by [@davidolrik](https://github.com/davidolrik)\n* fix URL regex to parse fragment without query string, [#2168](https://github.com/pydantic/pydantic/issues/2168) by [@andrewmwhite](https://github.com/andrewmwhite)\n* fix: ensure to always return one of the values in `Literal` field type, [#2166](https://github.com/pydantic/pydantic/issues/2166) by [@PrettyWood](https://github.com/PrettyWood)\n* Support `typing.Annotated` hints on model fields. A `Field` may now be set in the type hint with `Annotated[..., Field(...)`; all other annotations are ignored but still visible with `get_type_hints(..., include_extras=True)`, [#2147](https://github.com/pydantic/pydantic/issues/2147) by [@JacobHayes](https://github.com/JacobHayes)\n* Added `StrictBytes` type as well as `strict=False` option to `ConstrainedBytes`, [#2136](https://github.com/pydantic/pydantic/issues/2136) by [@rlizzo](https://github.com/rlizzo)\n* added `Config.anystr_lower` and `to_lower` kwarg to `constr` and `conbytes`, [#2134](https://github.com/pydantic/pydantic/issues/2134) by [@tayoogunbiyi](https://github.com/tayoogunbiyi)\n* Support plain `typing.Tuple` type, [#2132](https://github.com/pydantic/pydantic/issues/2132) by [@PrettyWood](https://github.com/PrettyWood)\n* Add a bound method `validate` to functions decorated with `validate_arguments`\n  to validate parameters without actually calling the function, [#2127](https://github.com/pydantic/pydantic/issues/2127) by [@PrettyWood](https://github.com/PrettyWood)\n* Add the ability to customize settings sources (add / disable / change priority order), [#2107](https://github.com/pydantic/pydantic/issues/2107) by [@kozlek](https://github.com/kozlek)\n* Fix mypy complaints about most custom _pydantic_ types, [#2098](https://github.com/pydantic/pydantic/issues/2098) by [@PrettyWood](https://github.com/PrettyWood)\n* Add a [Hypothesis](https://hypothesis.readthedocs.io/) plugin for easier [property-based testing](https://increment.com/testing/in-praise-of-property-based-testing/) with Pydantic's custom types - [usage details here](https://docs.pydantic.dev/hypothesis_plugin/), [#2097](https://github.com/pydantic/pydantic/issues/2097) by [@Zac-HD](https://github.com/Zac-HD)\n* add validator for `None`, `NoneType` or `Literal[None]`, [#2095](https://github.com/pydantic/pydantic/issues/2095) by [@PrettyWood](https://github.com/PrettyWood)\n* Handle properly fields of type `Callable` with a default value, [#2094](https://github.com/pydantic/pydantic/issues/2094) by [@PrettyWood](https://github.com/PrettyWood)\n* Updated `create_model` return type annotation to return type which inherits from `__base__` argument, [#2071](https://github.com/pydantic/pydantic/issues/2071) by [@uriyyo](https://github.com/uriyyo)\n* Add merged `json_encoders` inheritance, [#2064](https://github.com/pydantic/pydantic/issues/2064) by [@art049](https://github.com/art049)\n* allow overwriting `ClassVar`s in sub-models without having to re-annotate them, [#2061](https://github.com/pydantic/pydantic/issues/2061) by [@layday](https://github.com/layday)\n* add default encoder for `Pattern` type, [#2045](https://github.com/pydantic/pydantic/issues/2045) by [@PrettyWood](https://github.com/PrettyWood)\n* Add `NonNegativeInt`, `NonPositiveInt`, `NonNegativeFloat`, `NonPositiveFloat`, [#1975](https://github.com/pydantic/pydantic/issues/1975) by [@mdavis-xyz](https://github.com/mdavis-xyz)\n* Use % for percentage in string format of colors, [#1960](https://github.com/pydantic/pydantic/issues/1960) by [@EdwardBetts](https://github.com/EdwardBetts)\n* Fixed issue causing `KeyError` to be raised when building schema from multiple `BaseModel` with the same names declared in separate classes, [#1912](https://github.com/pydantic/pydantic/issues/1912) by [@JSextonn](https://github.com/JSextonn)\n* Add `rediss` (Redis over SSL) protocol to `RedisDsn`\n  Allow URLs without `user` part (e.g., `rediss://:pass@localhost`), [#1911](https://github.com/pydantic/pydantic/issues/1911) by [@TrDex](https://github.com/TrDex)\n* Add a new `frozen` boolean parameter to `Config` (default: `False`).\n  Setting `frozen=True` does everything that `allow_mutation=False` does, and also generates a `__hash__()` method for the model. This makes instances of the model potentially hashable if all the attributes are hashable, [#1880](https://github.com/pydantic/pydantic/issues/1880) by [@rhuille](https://github.com/rhuille)\n* fix schema generation with multiple Enums having the same name, [#1857](https://github.com/pydantic/pydantic/issues/1857) by [@PrettyWood](https://github.com/PrettyWood)\n* Added support for 13/19 digits VISA credit cards in `PaymentCardNumber` type, [#1416](https://github.com/pydantic/pydantic/issues/1416) by [@AlexanderSov](https://github.com/AlexanderSov)\n* fix: prevent `RecursionError` while using recursive `GenericModel`s, [#1370](https://github.com/pydantic/pydantic/issues/1370) by [@xppt](https://github.com/xppt)\n* use `enum` for `typing.Literal` in JSON schema, [#1350](https://github.com/pydantic/pydantic/issues/1350) by [@PrettyWood](https://github.com/PrettyWood)\n* Fix: some recursive models did not require `update_forward_refs` and silently behaved incorrectly, [#1201](https://github.com/pydantic/pydantic/issues/1201) by [@PrettyWood](https://github.com/PrettyWood)\n* Fix bug where generic models with fields where the typevar is nested in another type `a: List[T]` are considered to be concrete. This allows these models to be subclassed and composed as expected, [#947](https://github.com/pydantic/pydantic/issues/947) by [@daviskirk](https://github.com/daviskirk)\n* Add `Config.copy_on_model_validation` flag. When set to `False`, _pydantic_ will keep models used as fields\n  untouched on validation instead of reconstructing (copying) them, [#265](https://github.com/pydantic/pydantic/issues/265) by [@PrettyWood](https://github.com/PrettyWood)\n\n## v1.7.4 (2021-05-11)\n\n* **Security fix:** Fix `date` and `datetime` parsing so passing either `'infinity'` or `float('inf')` \n  (or their negative values) does not cause an infinite loop,\n  See security advisory [CVE-2021-29510](https://github.com/pydantic/pydantic/security/advisories/GHSA-5jqp-qgf6-3pvh)\n\n## v1.7.3 (2020-11-30)\n\nThank you to pydantic's sponsors:\n@timdrijvers, [@BCarley](https://github.com/BCarley), [@chdsbd](https://github.com/chdsbd), [@tiangolo](https://github.com/tiangolo), [@matin](https://github.com/matin), [@linusg](https://github.com/linusg), [@kevinalh](https://github.com/kevinalh), [@jorgecarleitao](https://github.com/jorgecarleitao), [@koxudaxi](https://github.com/koxudaxi), [@primer-api](https://github.com/primer-api),\n@mkeen, [@meadsteve](https://github.com/meadsteve) for their kind support.\n\n* fix: set right default value for required (optional) fields, [#2142](https://github.com/pydantic/pydantic/issues/2142) by [@PrettyWood](https://github.com/PrettyWood)\n* fix: support `underscore_attrs_are_private` with generic models, [#2138](https://github.com/pydantic/pydantic/issues/2138) by [@PrettyWood](https://github.com/PrettyWood)\n* fix: update all modified field values in `root_validator` when `validate_assignment` is on, [#2116](https://github.com/pydantic/pydantic/issues/2116) by [@PrettyWood](https://github.com/PrettyWood)\n* Allow pickling of `pydantic.dataclasses.dataclass` dynamically created from a built-in `dataclasses.dataclass`, [#2111](https://github.com/pydantic/pydantic/issues/2111) by [@aimestereo](https://github.com/aimestereo)\n* Fix a regression where Enum fields would not propagate keyword arguments to the schema, [#2109](https://github.com/pydantic/pydantic/issues/2109) by [@bm424](https://github.com/bm424)\n* Ignore `__doc__` as private attribute when `Config.underscore_attrs_are_private` is set, [#2090](https://github.com/pydantic/pydantic/issues/2090) by [@PrettyWood](https://github.com/PrettyWood)\n\n## v1.7.2 (2020-11-01)\n\n* fix slow `GenericModel` concrete model creation, allow `GenericModel` concrete name reusing in module, [#2078](https://github.com/pydantic/pydantic/issues/2078) by [@Bobronium](https://github.com/Bobronium)\n* keep the order of the fields when `validate_assignment` is set, [#2073](https://github.com/pydantic/pydantic/issues/2073) by [@PrettyWood](https://github.com/PrettyWood)\n* forward all the params of the stdlib `dataclass` when converted into _pydantic_ `dataclass`, [#2065](https://github.com/pydantic/pydantic/issues/2065) by [@PrettyWood](https://github.com/PrettyWood)\n\n## v1.7.1 (2020-10-28)\n\nThank you to pydantic's sponsors:\n@timdrijvers, [@BCarley](https://github.com/BCarley), [@chdsbd](https://github.com/chdsbd), [@tiangolo](https://github.com/tiangolo), [@matin](https://github.com/matin), [@linusg](https://github.com/linusg), [@kevinalh](https://github.com/kevinalh), [@jorgecarleitao](https://github.com/jorgecarleitao), [@koxudaxi](https://github.com/koxudaxi), [@primer-api](https://github.com/primer-api), [@mkeen](https://github.com/mkeen)\nfor their kind support.\n\n* fix annotation of `validate_arguments` when passing configuration as argument, [#2055](https://github.com/pydantic/pydantic/issues/2055) by [@layday](https://github.com/layday)\n* Fix mypy assignment error when using `PrivateAttr`, [#2048](https://github.com/pydantic/pydantic/issues/2048) by [@aphedges](https://github.com/aphedges)\n* fix `underscore_attrs_are_private` causing `TypeError` when overriding `__init__`, [#2047](https://github.com/pydantic/pydantic/issues/2047) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Fixed regression introduced in v1.7 involving exception handling in field validators when `validate_assignment=True`, [#2044](https://github.com/pydantic/pydantic/issues/2044) by [@johnsabath](https://github.com/johnsabath)\n* fix: _pydantic_ `dataclass` can inherit from stdlib `dataclass`\n  and `Config.arbitrary_types_allowed` is supported, [#2042](https://github.com/pydantic/pydantic/issues/2042) by [@PrettyWood](https://github.com/PrettyWood)\n\n## v1.7 (2020-10-26)\n\nThank you to pydantic's sponsors:\n@timdrijvers, [@BCarley](https://github.com/BCarley), [@chdsbd](https://github.com/chdsbd), [@tiangolo](https://github.com/tiangolo), [@matin](https://github.com/matin), [@linusg](https://github.com/linusg), [@kevinalh](https://github.com/kevinalh), [@jorgecarleitao](https://github.com/jorgecarleitao), [@koxudaxi](https://github.com/koxudaxi), [@primer-api](https://github.com/primer-api) \nfor their kind support.\n\n### Highlights\n\n* Python 3.9 support, thanks [@PrettyWood](https://github.com/PrettyWood)\n* [Private model attributes](https://docs.pydantic.dev/usage/models/#private-model-attributes), thanks [@Bobronium](https://github.com/Bobronium)\n* [\"secrets files\" support in `BaseSettings`](https://docs.pydantic.dev/usage/settings/#secret-support), thanks [@mdgilene](https://github.com/mdgilene)\n* [convert stdlib dataclasses to pydantic dataclasses and use stdlib dataclasses in models](https://docs.pydantic.dev/usage/dataclasses/#stdlib-dataclasses-and-pydantic-dataclasses), thanks [@PrettyWood](https://github.com/PrettyWood)\n\n### Changes\n\n* **Breaking Change:** remove `__field_defaults__`, add `default_factory` support with `BaseModel.construct`.\n  Use `.get_default()` method on fields in `__fields__` attribute instead, [#1732](https://github.com/pydantic/pydantic/issues/1732) by [@PrettyWood](https://github.com/PrettyWood)\n* Rearrange CI to run linting as a separate job, split install recipes for different tasks, [#2020](https://github.com/pydantic/pydantic/issues/2020) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Allows subclasses of generic models to make some, or all, of the superclass's type parameters concrete, while \n  also defining new type parameters in the subclass, [#2005](https://github.com/pydantic/pydantic/issues/2005) by [@choogeboom](https://github.com/choogeboom)\n* Call validator with the correct `values` parameter type in `BaseModel.__setattr__`,\n  when `validate_assignment = True` in model config, [#1999](https://github.com/pydantic/pydantic/issues/1999) by [@me-ransh](https://github.com/me-ransh)\n* Force `fields.Undefined` to be a singleton object, fixing inherited generic model schemas, [#1981](https://github.com/pydantic/pydantic/issues/1981) by [@daviskirk](https://github.com/daviskirk)\n* Include tests in source distributions, [#1976](https://github.com/pydantic/pydantic/issues/1976) by [@sbraz](https://github.com/sbraz)\n* Add ability to use `min_length/max_length` constraints with secret types, [#1974](https://github.com/pydantic/pydantic/issues/1974) by [@uriyyo](https://github.com/uriyyo)\n* Also check `root_validators` when `validate_assignment` is on, [#1971](https://github.com/pydantic/pydantic/issues/1971) by [@PrettyWood](https://github.com/PrettyWood)\n* Fix const validators not running when custom validators are present, [#1957](https://github.com/pydantic/pydantic/issues/1957) by [@hmvp](https://github.com/hmvp)\n* add `deque` to field types, [#1935](https://github.com/pydantic/pydantic/issues/1935) by [@wozniakty](https://github.com/wozniakty)\n* add basic support for Python 3.9, [#1832](https://github.com/pydantic/pydantic/issues/1832) by [@PrettyWood](https://github.com/PrettyWood)\n* Fix typo in the anchor of exporting_models.md#modelcopy and incorrect description, [#1821](https://github.com/pydantic/pydantic/issues/1821) by [@KimMachineGun](https://github.com/KimMachineGun)\n* Added ability for `BaseSettings` to read \"secret files\", [#1820](https://github.com/pydantic/pydantic/issues/1820) by [@mdgilene](https://github.com/mdgilene)\n* add `parse_raw_as` utility function, [#1812](https://github.com/pydantic/pydantic/issues/1812) by [@PrettyWood](https://github.com/PrettyWood)\n* Support home directory relative paths for `dotenv` files (e.g. `~/.env`), [#1803](https://github.com/pydantic/pydantic/issues/1803) by [@PrettyWood](https://github.com/PrettyWood)\n* Clarify documentation for `parse_file` to show that the argument\n  should be a file *path* not a file-like object, [#1794](https://github.com/pydantic/pydantic/issues/1794) by [@mdavis-xyz](https://github.com/mdavis-xyz)\n* Fix false positive from mypy plugin when a class nested within a `BaseModel` is named `Model`, [#1770](https://github.com/pydantic/pydantic/issues/1770) by [@selimb](https://github.com/selimb)\n* add basic support of Pattern type in schema generation, [#1767](https://github.com/pydantic/pydantic/issues/1767) by [@PrettyWood](https://github.com/PrettyWood)\n* Support custom title, description and default in schema of enums, [#1748](https://github.com/pydantic/pydantic/issues/1748) by [@PrettyWood](https://github.com/PrettyWood)\n* Properly represent `Literal` Enums when `use_enum_values` is True, [#1747](https://github.com/pydantic/pydantic/issues/1747) by [@noelevans](https://github.com/noelevans)\n* Allows timezone information to be added to strings to be formatted as time objects. Permitted formats are `Z` for UTC \n  or an offset for absolute positive or negative time shifts. Or the timezone data can be omitted, [#1744](https://github.com/pydantic/pydantic/issues/1744) by [@noelevans](https://github.com/noelevans)\n* Add stub `__init__` with Python 3.6 signature for `ForwardRef`, [#1738](https://github.com/pydantic/pydantic/issues/1738) by [@sirtelemak](https://github.com/sirtelemak)\n* Fix behaviour with forward refs and optional fields in nested models, [#1736](https://github.com/pydantic/pydantic/issues/1736) by [@PrettyWood](https://github.com/PrettyWood)\n* add `Enum` and `IntEnum` as valid types for fields, [#1735](https://github.com/pydantic/pydantic/issues/1735) by [@PrettyWood](https://github.com/PrettyWood)\n* Change default value of `__module__` argument of `create_model` from `None` to `'pydantic.main'`. \n  Set reference of created concrete model to it's module to allow pickling (not applied to models created in \n  functions), [#1686](https://github.com/pydantic/pydantic/issues/1686) by [@Bobronium](https://github.com/Bobronium)\n* Add private attributes support, [#1679](https://github.com/pydantic/pydantic/issues/1679) by [@Bobronium](https://github.com/Bobronium)\n* add `config` to `@validate_arguments`, [#1663](https://github.com/pydantic/pydantic/issues/1663) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Allow descendant Settings models to override env variable names for the fields defined in parent Settings models with \n  `env` in their `Config`. Previously only `env_prefix` configuration option was applicable, [#1561](https://github.com/pydantic/pydantic/issues/1561) by [@ojomio](https://github.com/ojomio)\n* Support `ref_template` when creating schema `$ref`s, [#1479](https://github.com/pydantic/pydantic/issues/1479) by [@kilo59](https://github.com/kilo59)\n* Add a `__call__` stub to `PyObject` so that mypy will know that it is callable, [#1352](https://github.com/pydantic/pydantic/issues/1352) by [@brianmaissy](https://github.com/brianmaissy)\n* `pydantic.dataclasses.dataclass` decorator now supports built-in `dataclasses.dataclass`.\n  It is hence possible to convert an existing `dataclass` easily to add *pydantic* validation.\n  Moreover nested dataclasses are also supported, [#744](https://github.com/pydantic/pydantic/issues/744) by [@PrettyWood](https://github.com/PrettyWood)\n\n## v1.6.2 (2021-05-11)\n\n* **Security fix:** Fix `date` and `datetime` parsing so passing either `'infinity'` or `float('inf')` \n  (or their negative values) does not cause an infinite loop,\n  See security advisory [CVE-2021-29510](https://github.com/pydantic/pydantic/security/advisories/GHSA-5jqp-qgf6-3pvh)\n\n## v1.6.1 (2020-07-15)\n\n* fix validation and parsing of nested models with `default_factory`, [#1710](https://github.com/pydantic/pydantic/issues/1710) by [@PrettyWood](https://github.com/PrettyWood)\n\n## v1.6 (2020-07-11)\n\nThank you to pydantic's sponsors: [@matin](https://github.com/matin), [@tiangolo](https://github.com/tiangolo), [@chdsbd](https://github.com/chdsbd), [@jorgecarleitao](https://github.com/jorgecarleitao), and 1 anonymous sponsor for their kind support.\n\n* Modify validators for `conlist` and `conset` to not have `always=True`, [#1682](https://github.com/pydantic/pydantic/issues/1682) by [@samuelcolvin](https://github.com/samuelcolvin)\n* add port check to `AnyUrl` (can't exceed 65536) ports are 16 insigned bits: `0 <= port <= 2**16-1` src: [rfc793 header format](https://tools.ietf.org/html/rfc793#section-3.1), [#1654](https://github.com/pydantic/pydantic/issues/1654) by [@flapili](https://github.com/flapili)\n* Document default `regex` anchoring semantics, [#1648](https://github.com/pydantic/pydantic/issues/1648) by [@yurikhan](https://github.com/yurikhan)\n* Use `chain.from_iterable` in class_validators.py. This is a faster and more idiomatic way of using `itertools.chain`.\n  Instead of computing all the items in the iterable and storing them in memory, they are computed one-by-one and never\n  stored as a huge list. This can save on both runtime and memory space, [#1642](https://github.com/pydantic/pydantic/issues/1642) by [@cool-RR](https://github.com/cool-RR)\n* Add `conset()`, analogous to `conlist()`, [#1623](https://github.com/pydantic/pydantic/issues/1623) by [@patrickkwang](https://github.com/patrickkwang)\n* make *pydantic* errors (un)pickable, [#1616](https://github.com/pydantic/pydantic/issues/1616) by [@PrettyWood](https://github.com/PrettyWood)\n* Allow custom encoding for `dotenv` files, [#1615](https://github.com/pydantic/pydantic/issues/1615) by [@PrettyWood](https://github.com/PrettyWood)\n* Ensure `SchemaExtraCallable` is always defined to get type hints on BaseConfig, [#1614](https://github.com/pydantic/pydantic/issues/1614) by [@PrettyWood](https://github.com/PrettyWood)\n* Update datetime parser to support negative timestamps, [#1600](https://github.com/pydantic/pydantic/issues/1600) by [@mlbiche](https://github.com/mlbiche)\n* Update mypy, remove `AnyType` alias for `Type[Any]`, [#1598](https://github.com/pydantic/pydantic/issues/1598) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Adjust handling of root validators so that errors are aggregated from _all_ failing root validators, instead of reporting on only the first root validator to fail, [#1586](https://github.com/pydantic/pydantic/issues/1586) by [@beezee](https://github.com/beezee)\n* Make `__modify_schema__` on Enums apply to the enum schema rather than fields that use the enum, [#1581](https://github.com/pydantic/pydantic/issues/1581) by [@therefromhere](https://github.com/therefromhere)\n* Fix behavior of `__all__` key when used in conjunction with index keys in advanced include/exclude of fields that are sequences, [#1579](https://github.com/pydantic/pydantic/issues/1579) by [@xspirus](https://github.com/xspirus)\n* Subclass validators do not run when referencing a `List` field defined in a parent class when `each_item=True`. Added an example to the docs illustrating this, [#1566](https://github.com/pydantic/pydantic/issues/1566) by [@samueldeklund](https://github.com/samueldeklund)\n* change `schema.field_class_to_schema` to support `frozenset` in schema, [#1557](https://github.com/pydantic/pydantic/issues/1557) by [@wangpeibao](https://github.com/wangpeibao)\n* Call `__modify_schema__` only for the field schema, [#1552](https://github.com/pydantic/pydantic/issues/1552) by [@PrettyWood](https://github.com/PrettyWood)\n* Move the assignment of `field.validate_always` in `fields.py` so the `always` parameter of validators work on inheritance, [#1545](https://github.com/pydantic/pydantic/issues/1545) by [@dcHHH](https://github.com/dcHHH)\n* Added support for UUID instantiation through 16 byte strings such as `b'\\x12\\x34\\x56\\x78' * 4`. This was done to support `BINARY(16)` columns in sqlalchemy, [#1541](https://github.com/pydantic/pydantic/issues/1541) by [@shawnwall](https://github.com/shawnwall)\n* Add a test assertion that `default_factory` can return a singleton, [#1523](https://github.com/pydantic/pydantic/issues/1523) by [@therefromhere](https://github.com/therefromhere)\n* Add `NameEmail.__eq__` so duplicate `NameEmail` instances are evaluated as equal, [#1514](https://github.com/pydantic/pydantic/issues/1514) by [@stephen-bunn](https://github.com/stephen-bunn)\n* Add datamodel-code-generator link in pydantic document site, [#1500](https://github.com/pydantic/pydantic/issues/1500) by [@koxudaxi](https://github.com/koxudaxi)\n* Added a \"Discussion of Pydantic\" section to the documentation, with a link to \"Pydantic Introduction\" video by Alexander Hultnér, [#1499](https://github.com/pydantic/pydantic/issues/1499) by [@hultner](https://github.com/hultner)\n* Avoid some side effects of `default_factory` by calling it only once\n  if possible and by not setting a default value in the schema, [#1491](https://github.com/pydantic/pydantic/issues/1491) by [@PrettyWood](https://github.com/PrettyWood)\n* Added docs about dumping dataclasses to JSON, [#1487](https://github.com/pydantic/pydantic/issues/1487) by [@mikegrima](https://github.com/mikegrima)\n* Make `BaseModel.__signature__` class-only, so getting `__signature__` from model instance will raise `AttributeError`, [#1466](https://github.com/pydantic/pydantic/issues/1466) by [@Bobronium](https://github.com/Bobronium)\n* include `'format': 'password'` in the schema for secret types, [#1424](https://github.com/pydantic/pydantic/issues/1424) by [@atheuz](https://github.com/atheuz)\n* Modify schema constraints on `ConstrainedFloat` so that `exclusiveMinimum` and\n  minimum are not included in the schema if they are equal to `-math.inf` and\n  `exclusiveMaximum` and `maximum` are not included if they are equal to `math.inf`, [#1417](https://github.com/pydantic/pydantic/issues/1417) by [@vdwees](https://github.com/vdwees)\n* Squash internal `__root__` dicts in `.dict()` (and, by extension, in `.json()`), [#1414](https://github.com/pydantic/pydantic/issues/1414) by [@patrickkwang](https://github.com/patrickkwang)\n* Move `const` validator to post-validators so it validates the parsed value, [#1410](https://github.com/pydantic/pydantic/issues/1410) by [@selimb](https://github.com/selimb)\n* Fix model validation to handle nested literals, e.g. `Literal['foo', Literal['bar']]`, [#1364](https://github.com/pydantic/pydantic/issues/1364) by [@DBCerigo](https://github.com/DBCerigo)\n* Remove `user_required = True` from `RedisDsn`, neither user nor password are required, [#1275](https://github.com/pydantic/pydantic/issues/1275) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Remove extra `allOf` from schema for fields with `Union` and custom `Field`, [#1209](https://github.com/pydantic/pydantic/issues/1209) by [@mostaphaRoudsari](https://github.com/mostaphaRoudsari)\n* Updates OpenAPI schema generation to output all enums as separate models.\n  Instead of inlining the enum values in the model schema, models now use a `$ref`\n  property to point to the enum definition, [#1173](https://github.com/pydantic/pydantic/issues/1173) by [@calvinwyoung](https://github.com/calvinwyoung)\n\n## v1.5.1 (2020-04-23)\n\n* Signature generation with `extra: allow` never uses a field name, [#1418](https://github.com/pydantic/pydantic/issues/1418) by [@prettywood](https://github.com/prettywood)\n* Avoid mutating `Field` default value, [#1412](https://github.com/pydantic/pydantic/issues/1412) by [@prettywood](https://github.com/prettywood)\n\n## v1.5 (2020-04-18)\n\n* Make includes/excludes arguments for `.dict()`, `._iter()`, ..., immutable, [#1404](https://github.com/pydantic/pydantic/issues/1404) by [@AlexECX](https://github.com/AlexECX)\n* Always use a field's real name with includes/excludes in `model._iter()`, regardless of `by_alias`, [#1397](https://github.com/pydantic/pydantic/issues/1397) by [@AlexECX](https://github.com/AlexECX)\n* Update constr regex example to include start and end lines, [#1396](https://github.com/pydantic/pydantic/issues/1396) by [@lmcnearney](https://github.com/lmcnearney)\n* Confirm that shallow `model.copy()` does make a shallow copy of attributes, [#1383](https://github.com/pydantic/pydantic/issues/1383) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Renaming `model_name` argument of `main.create_model()` to `__model_name` to allow using `model_name` as a field name, [#1367](https://github.com/pydantic/pydantic/issues/1367) by [@kittipatv](https://github.com/kittipatv)\n* Replace raising of exception to silent passing  for non-Var attributes in mypy plugin, [#1345](https://github.com/pydantic/pydantic/issues/1345) by [@b0g3r](https://github.com/b0g3r)\n* Remove `typing_extensions` dependency for Python 3.8, [#1342](https://github.com/pydantic/pydantic/issues/1342) by [@prettywood](https://github.com/prettywood)\n* Make `SecretStr` and `SecretBytes` initialization idempotent, [#1330](https://github.com/pydantic/pydantic/issues/1330) by [@atheuz](https://github.com/atheuz)\n* document making secret types dumpable using the json method, [#1328](https://github.com/pydantic/pydantic/issues/1328) by [@atheuz](https://github.com/atheuz)\n* Move all testing and build to github actions, add windows and macos binaries, \n  thank you [@StephenBrown2](https://github.com/StephenBrown2) for much help, [#1326](https://github.com/pydantic/pydantic/issues/1326) by [@samuelcolvin](https://github.com/samuelcolvin)\n* fix card number length check in `PaymentCardNumber`, `PaymentCardBrand` now inherits from `str`, [#1317](https://github.com/pydantic/pydantic/issues/1317) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Have `BaseModel` inherit from `Representation` to make mypy happy when overriding `__str__`, [#1310](https://github.com/pydantic/pydantic/issues/1310) by [@FuegoFro](https://github.com/FuegoFro)\n* Allow `None` as input to all optional list fields, [#1307](https://github.com/pydantic/pydantic/issues/1307) by [@prettywood](https://github.com/prettywood)\n* Add `datetime` field to `default_factory` example, [#1301](https://github.com/pydantic/pydantic/issues/1301) by [@StephenBrown2](https://github.com/StephenBrown2)\n* Allow subclasses of known types to be encoded with superclass encoder, [#1291](https://github.com/pydantic/pydantic/issues/1291) by [@StephenBrown2](https://github.com/StephenBrown2)\n* Exclude exported fields from all elements of a list/tuple of submodels/dicts with `'__all__'`, [#1286](https://github.com/pydantic/pydantic/issues/1286) by [@masalim2](https://github.com/masalim2)\n* Add pydantic.color.Color objects as available input for Color fields, [#1258](https://github.com/pydantic/pydantic/issues/1258) by [@leosussan](https://github.com/leosussan)\n* In examples, type nullable fields as `Optional`, so that these are valid mypy annotations, [#1248](https://github.com/pydantic/pydantic/issues/1248) by [@kokes](https://github.com/kokes)\n* Make `pattern_validator()` accept pre-compiled `Pattern` objects. Fix `str_validator()` return type to `str`, [#1237](https://github.com/pydantic/pydantic/issues/1237) by [@adamgreg](https://github.com/adamgreg)\n* Document how to manage Generics and inheritance, [#1229](https://github.com/pydantic/pydantic/issues/1229) by [@esadruhn](https://github.com/esadruhn)\n* `update_forward_refs()` method of BaseModel now copies `__dict__` of class module instead of modyfying it, [#1228](https://github.com/pydantic/pydantic/issues/1228) by [@paul-ilyin](https://github.com/paul-ilyin)\n* Support instance methods and class methods with `@validate_arguments`, [#1222](https://github.com/pydantic/pydantic/issues/1222) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Add `default_factory` argument to `Field` to create a dynamic default value by passing a zero-argument callable, [#1210](https://github.com/pydantic/pydantic/issues/1210) by [@prettywood](https://github.com/prettywood)\n* add support for `NewType` of `List`, `Optional`, etc, [#1207](https://github.com/pydantic/pydantic/issues/1207) by [@Kazy](https://github.com/Kazy)\n* fix mypy signature for `root_validator`, [#1192](https://github.com/pydantic/pydantic/issues/1192) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Fixed parsing of nested 'custom root type' models, [#1190](https://github.com/pydantic/pydantic/issues/1190) by [@Shados](https://github.com/Shados)\n* Add `validate_arguments` function decorator which checks the arguments to a function matches type annotations, [#1179](https://github.com/pydantic/pydantic/issues/1179) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Add `__signature__` to models, [#1034](https://github.com/pydantic/pydantic/issues/1034) by [@Bobronium](https://github.com/Bobronium)\n* Refactor `._iter()` method, 10x speed boost for `dict(model)`, [#1017](https://github.com/pydantic/pydantic/issues/1017) by [@Bobronium](https://github.com/Bobronium)\n\n## v1.4 (2020-01-24)\n\n* **Breaking Change:** alias precedence logic changed so aliases on a field always take priority over\n  an alias from `alias_generator` to avoid buggy/unexpected behaviour,\n  see [here](https://docs.pydantic.dev/usage/model_config/#alias-precedence) for details, [#1178](https://github.com/pydantic/pydantic/issues/1178) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Add support for unicode and punycode in TLDs, [#1182](https://github.com/pydantic/pydantic/issues/1182) by [@jamescurtin](https://github.com/jamescurtin)\n* Fix `cls` argument in validators during assignment, [#1172](https://github.com/pydantic/pydantic/issues/1172) by [@samuelcolvin](https://github.com/samuelcolvin)\n* completing Luhn algorithm for `PaymentCardNumber`, [#1166](https://github.com/pydantic/pydantic/issues/1166) by [@cuencandres](https://github.com/cuencandres)\n* add support for generics that implement `__get_validators__` like a custom data type, [#1159](https://github.com/pydantic/pydantic/issues/1159) by [@tiangolo](https://github.com/tiangolo)\n* add support for infinite generators with `Iterable`, [#1152](https://github.com/pydantic/pydantic/issues/1152) by [@tiangolo](https://github.com/tiangolo)\n* fix `url_regex` to accept schemas with `+`, `-` and `.` after the first character, [#1142](https://github.com/pydantic/pydantic/issues/1142) by [@samuelcolvin](https://github.com/samuelcolvin)\n* move `version_info()` to `version.py`, suggest its use in issues, [#1138](https://github.com/pydantic/pydantic/issues/1138) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Improve pydantic import time by roughly 50% by deferring some module loading and regex compilation, [#1127](https://github.com/pydantic/pydantic/issues/1127) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Fix `EmailStr` and `NameEmail` to accept instances of themselves in cython, [#1126](https://github.com/pydantic/pydantic/issues/1126) by [@koxudaxi](https://github.com/koxudaxi)\n* Pass model class to the `Config.schema_extra` callable, [#1125](https://github.com/pydantic/pydantic/issues/1125) by [@therefromhere](https://github.com/therefromhere)\n* Fix regex for username and password in URLs, [#1115](https://github.com/pydantic/pydantic/issues/1115) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Add support for nested generic models, [#1104](https://github.com/pydantic/pydantic/issues/1104) by [@dmontagu](https://github.com/dmontagu)\n* add `__all__` to `__init__.py` to prevent \"implicit reexport\" errors from mypy, [#1072](https://github.com/pydantic/pydantic/issues/1072) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Add support for using \"dotenv\" files with `BaseSettings`, [#1011](https://github.com/pydantic/pydantic/issues/1011) by [@acnebs](https://github.com/acnebs)\n\n## v1.3 (2019-12-21)\n\n* Change `schema` and `schema_model` to handle dataclasses by using their `__pydantic_model__` feature, [#792](https://github.com/pydantic/pydantic/issues/792) by [@aviramha](https://github.com/aviramha)\n* Added option for `root_validator` to be skipped if values validation fails using keyword `skip_on_failure=True`, [#1049](https://github.com/pydantic/pydantic/issues/1049) by [@aviramha](https://github.com/aviramha)\n* Allow `Config.schema_extra` to be a callable so that the generated schema can be post-processed, [#1054](https://github.com/pydantic/pydantic/issues/1054) by [@selimb](https://github.com/selimb)\n* Update mypy to version 0.750, [#1057](https://github.com/pydantic/pydantic/issues/1057) by [@dmontagu](https://github.com/dmontagu)\n* Trick Cython into allowing str subclassing, [#1061](https://github.com/pydantic/pydantic/issues/1061) by [@skewty](https://github.com/skewty)\n* Prevent type attributes being added to schema unless the attribute `__schema_attributes__` is `True`, [#1064](https://github.com/pydantic/pydantic/issues/1064) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Change `BaseModel.parse_file` to use `Config.json_loads`, [#1067](https://github.com/pydantic/pydantic/issues/1067) by [@kierandarcy](https://github.com/kierandarcy)\n* Fix for optional `Json` fields, [#1073](https://github.com/pydantic/pydantic/issues/1073) by [@volker48](https://github.com/volker48)\n* Change the default number of threads used when compiling with cython to one,\n  allow override via the `CYTHON_NTHREADS` environment variable, [#1074](https://github.com/pydantic/pydantic/issues/1074) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Run FastAPI tests during Pydantic's CI tests, [#1075](https://github.com/pydantic/pydantic/issues/1075) by [@tiangolo](https://github.com/tiangolo)\n* My mypy strictness constraints, and associated tweaks to type annotations, [#1077](https://github.com/pydantic/pydantic/issues/1077) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Add `__eq__` to SecretStr and SecretBytes to allow \"value equals\", [#1079](https://github.com/pydantic/pydantic/issues/1079) by [@sbv-trueenergy](https://github.com/sbv-trueenergy)\n* Fix schema generation for nested None case, [#1088](https://github.com/pydantic/pydantic/issues/1088) by [@lutostag](https://github.com/lutostag)\n* Consistent checks for sequence like objects, [#1090](https://github.com/pydantic/pydantic/issues/1090) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Fix `Config` inheritance on `BaseSettings` when used with `env_prefix`, [#1091](https://github.com/pydantic/pydantic/issues/1091) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Fix for `__modify_schema__` when it conflicted with `field_class_to_schema*`, [#1102](https://github.com/pydantic/pydantic/issues/1102) by [@samuelcolvin](https://github.com/samuelcolvin)\n* docs: Fix explanation of case sensitive environment variable names when populating `BaseSettings` subclass attributes, [#1105](https://github.com/pydantic/pydantic/issues/1105) by [@tribals](https://github.com/tribals)\n* Rename django-rest-framework benchmark in documentation, [#1119](https://github.com/pydantic/pydantic/issues/1119) by [@frankie567](https://github.com/frankie567)\n\n## v1.2 (2019-11-28)\n\n* **Possible Breaking Change:** Add support for required `Optional` with `name: Optional[AnyType] = Field(...)`\n  and refactor `ModelField` creation to preserve `required` parameter value, [#1031](https://github.com/pydantic/pydantic/issues/1031) by [@tiangolo](https://github.com/tiangolo);\n  see [here](https://docs.pydantic.dev/usage/models/#required-optional-fields) for details\n* Add benchmarks for `cattrs`, [#513](https://github.com/pydantic/pydantic/issues/513) by [@sebastianmika](https://github.com/sebastianmika)\n* Add `exclude_none` option to `dict()` and friends, [#587](https://github.com/pydantic/pydantic/issues/587) by [@niknetniko](https://github.com/niknetniko)\n* Add benchmarks for `valideer`, [#670](https://github.com/pydantic/pydantic/issues/670) by [@gsakkis](https://github.com/gsakkis)\n* Add `parse_obj_as` and `parse_file_as` functions for ad-hoc parsing of data into arbitrary pydantic-compatible types, [#934](https://github.com/pydantic/pydantic/issues/934) by [@dmontagu](https://github.com/dmontagu)\n* Add `allow_reuse` argument to validators, thus allowing validator reuse, [#940](https://github.com/pydantic/pydantic/issues/940) by [@dmontagu](https://github.com/dmontagu)\n* Add support for mapping types for custom root models, [#958](https://github.com/pydantic/pydantic/issues/958) by [@dmontagu](https://github.com/dmontagu)\n* Mypy plugin support for dataclasses, [#966](https://github.com/pydantic/pydantic/issues/966) by [@koxudaxi](https://github.com/koxudaxi)\n* Add support for dataclasses default factory, [#968](https://github.com/pydantic/pydantic/issues/968) by [@ahirner](https://github.com/ahirner)\n* Add a `ByteSize` type for converting byte string (`1GB`) to plain bytes, [#977](https://github.com/pydantic/pydantic/issues/977) by [@dgasmith](https://github.com/dgasmith)\n* Fix mypy complaint about `@root_validator(pre=True)`, [#984](https://github.com/pydantic/pydantic/issues/984) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Add manylinux binaries for Python 3.8 to pypi, also support manylinux2010, [#994](https://github.com/pydantic/pydantic/issues/994) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Adds ByteSize conversion to another unit, [#995](https://github.com/pydantic/pydantic/issues/995) by [@dgasmith](https://github.com/dgasmith)\n* Fix `__str__` and `__repr__` inheritance for models, [#1022](https://github.com/pydantic/pydantic/issues/1022) by [@samuelcolvin](https://github.com/samuelcolvin)\n* add testimonials section to docs, [#1025](https://github.com/pydantic/pydantic/issues/1025) by [@sullivancolin](https://github.com/sullivancolin)\n* Add support for `typing.Literal` for Python 3.8, [#1026](https://github.com/pydantic/pydantic/issues/1026) by [@dmontagu](https://github.com/dmontagu)\n\n## v1.1.1 (2019-11-20)\n\n* Fix bug where use of complex fields on sub-models could cause fields to be incorrectly configured, [#1015](https://github.com/pydantic/pydantic/issues/1015) by [@samuelcolvin](https://github.com/samuelcolvin)\n\n## v1.1 (2019-11-07)\n\n* Add a mypy plugin for type checking `BaseModel.__init__` and more, [#722](https://github.com/pydantic/pydantic/issues/722) by [@dmontagu](https://github.com/dmontagu)\n* Change return type typehint for `GenericModel.__class_getitem__` to prevent PyCharm warnings, [#936](https://github.com/pydantic/pydantic/issues/936) by [@dmontagu](https://github.com/dmontagu)\n* Fix usage of `Any` to allow `None`, also support `TypeVar` thus allowing use of un-parameterised collection types\n  e.g. `Dict` and `List`, [#962](https://github.com/pydantic/pydantic/issues/962) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Set `FieldInfo` on subfields to fix schema generation for complex nested types, [#965](https://github.com/pydantic/pydantic/issues/965) by [@samuelcolvin](https://github.com/samuelcolvin)\n\n## v1.0 (2019-10-23)\n\n* **Breaking Change:** deprecate the `Model.fields` property, use `Model.__fields__` instead, [#883](https://github.com/pydantic/pydantic/issues/883) by [@samuelcolvin](https://github.com/samuelcolvin)\n* **Breaking Change:** Change the precedence of aliases so child model aliases override parent aliases,\n  including using `alias_generator`, [#904](https://github.com/pydantic/pydantic/issues/904) by [@samuelcolvin](https://github.com/samuelcolvin)\n* **Breaking change:** Rename `skip_defaults` to `exclude_unset`, and add ability to exclude actual defaults, [#915](https://github.com/pydantic/pydantic/issues/915) by [@dmontagu](https://github.com/dmontagu)\n* Add `**kwargs` to `pydantic.main.ModelMetaclass.__new__` so `__init_subclass__` can take custom parameters on extended\n  `BaseModel` classes, [#867](https://github.com/pydantic/pydantic/issues/867) by [@retnikt](https://github.com/retnikt)\n* Fix field of a type that has a default value, [#880](https://github.com/pydantic/pydantic/issues/880) by [@koxudaxi](https://github.com/koxudaxi)\n* Use `FutureWarning` instead of `DeprecationWarning` when `alias` instead of `env` is used for settings models, [#881](https://github.com/pydantic/pydantic/issues/881) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Fix issue with `BaseSettings` inheritance and `alias` getting set to `None`, [#882](https://github.com/pydantic/pydantic/issues/882) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Modify `__repr__` and `__str__` methods to be consistent across all public classes, add `__pretty__` to support\n  python-devtools, [#884](https://github.com/pydantic/pydantic/issues/884) by [@samuelcolvin](https://github.com/samuelcolvin)\n* deprecation warning for `case_insensitive` on `BaseSettings` config, [#885](https://github.com/pydantic/pydantic/issues/885) by [@samuelcolvin](https://github.com/samuelcolvin)\n* For `BaseSettings` merge environment variables and in-code values recursively, as long as they create a valid object\n  when merged together, to allow splitting init arguments, [#888](https://github.com/pydantic/pydantic/issues/888) by [@idmitrievsky](https://github.com/idmitrievsky)\n* change secret types example, [#890](https://github.com/pydantic/pydantic/issues/890) by [@ashears](https://github.com/ashears)\n* Change the signature of `Model.construct()` to be more user-friendly, document `construct()` usage, [#898](https://github.com/pydantic/pydantic/issues/898) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Add example for the `construct()` method, [#907](https://github.com/pydantic/pydantic/issues/907) by [@ashears](https://github.com/ashears)\n* Improve use of `Field` constraints on complex types, raise an error if constraints are not enforceable,\n  also support tuples with an ellipsis `Tuple[X, ...]`, `Sequence` and `FrozenSet` in schema, [#909](https://github.com/pydantic/pydantic/issues/909) by [@samuelcolvin](https://github.com/samuelcolvin)\n* update docs for bool missing valid value, [#911](https://github.com/pydantic/pydantic/issues/911) by [@trim21](https://github.com/trim21)\n* Better `str`/`repr` logic for `ModelField`, [#912](https://github.com/pydantic/pydantic/issues/912) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Fix `ConstrainedList`, update schema generation to reflect `min_items` and `max_items` `Field()` arguments, [#917](https://github.com/pydantic/pydantic/issues/917) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Allow abstracts sets (eg. dict keys) in the `include` and `exclude` arguments of `dict()`, [#921](https://github.com/pydantic/pydantic/issues/921) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Fix JSON serialization errors on `ValidationError.json()` by using `pydantic_encoder`, [#922](https://github.com/pydantic/pydantic/issues/922) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Clarify usage of `remove_untouched`, improve error message for types with no validators, [#926](https://github.com/pydantic/pydantic/issues/926) by [@retnikt](https://github.com/retnikt)\n\n## v1.0b2 (2019-10-07)\n\n* Mark `StrictBool` typecheck as `bool` to allow for default values without mypy errors, [#690](https://github.com/pydantic/pydantic/issues/690) by [@dmontagu](https://github.com/dmontagu)\n* Transfer the documentation build from sphinx to mkdocs, re-write much of the documentation, [#856](https://github.com/pydantic/pydantic/issues/856) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Add support for custom naming schemes for `GenericModel` subclasses, [#859](https://github.com/pydantic/pydantic/issues/859) by [@dmontagu](https://github.com/dmontagu)\n* Add `if TYPE_CHECKING:` to the excluded lines for test coverage, [#874](https://github.com/pydantic/pydantic/issues/874) by [@dmontagu](https://github.com/dmontagu)\n* Rename `allow_population_by_alias` to `allow_population_by_field_name`, remove unnecessary warning about it, [#875](https://github.com/pydantic/pydantic/issues/875) by [@samuelcolvin](https://github.com/samuelcolvin)\n\n## v1.0b1 (2019-10-01)\n\n* **Breaking Change:** rename `Schema` to `Field`, make it a function to placate mypy, [#577](https://github.com/pydantic/pydantic/issues/577) by [@samuelcolvin](https://github.com/samuelcolvin)\n* **Breaking Change:** modify parsing behavior for `bool`, [#617](https://github.com/pydantic/pydantic/issues/617) by [@dmontagu](https://github.com/dmontagu)\n* **Breaking Change:** `get_validators` is no longer recognised, use `__get_validators__`.\n  `Config.ignore_extra` and `Config.allow_extra` are no longer recognised, use `Config.extra`, [#720](https://github.com/pydantic/pydantic/issues/720) by [@samuelcolvin](https://github.com/samuelcolvin)\n* **Breaking Change:** modify default config settings for `BaseSettings`; `case_insensitive` renamed to `case_sensitive`,\n  default changed to `case_sensitive = False`, `env_prefix` default changed to `''` - e.g. no prefix, [#721](https://github.com/pydantic/pydantic/issues/721) by [@dmontagu](https://github.com/dmontagu)\n* **Breaking change:** Implement `root_validator` and rename root errors from `__obj__` to `__root__`, [#729](https://github.com/pydantic/pydantic/issues/729) by [@samuelcolvin](https://github.com/samuelcolvin)\n* **Breaking Change:** alter the behaviour of `dict(model)` so that sub-models are nolonger\n  converted to dictionaries, [#733](https://github.com/pydantic/pydantic/issues/733) by [@samuelcolvin](https://github.com/samuelcolvin)\n* **Breaking change:** Added `initvars` support to `post_init_post_parse`, [#748](https://github.com/pydantic/pydantic/issues/748) by [@Raphael-C-Almeida](https://github.com/Raphael-C-Almeida)\n* **Breaking Change:** Make `BaseModel.json()` only serialize the `__root__` key for models with custom root, [#752](https://github.com/pydantic/pydantic/issues/752) by [@dmontagu](https://github.com/dmontagu)\n* **Breaking Change:** complete rewrite of `URL` parsing logic, [#755](https://github.com/pydantic/pydantic/issues/755) by [@samuelcolvin](https://github.com/samuelcolvin)\n* **Breaking Change:** preserve superclass annotations for field-determination when not provided in subclass, [#757](https://github.com/pydantic/pydantic/issues/757) by [@dmontagu](https://github.com/dmontagu)\n* **Breaking Change:** `BaseSettings` now uses the special `env` settings to define which environment variables to\n  read, not aliases, [#847](https://github.com/pydantic/pydantic/issues/847) by [@samuelcolvin](https://github.com/samuelcolvin)\n* add support for `assert` statements inside validators, [#653](https://github.com/pydantic/pydantic/issues/653) by [@abdusco](https://github.com/abdusco)\n* Update documentation to specify the use of `pydantic.dataclasses.dataclass` and subclassing `pydantic.BaseModel`, [#710](https://github.com/pydantic/pydantic/issues/710) by [@maddosaurus](https://github.com/maddosaurus)\n* Allow custom JSON decoding and encoding via `json_loads` and `json_dumps` `Config` properties, [#714](https://github.com/pydantic/pydantic/issues/714) by [@samuelcolvin](https://github.com/samuelcolvin)\n* make all annotated fields occur in the order declared, [#715](https://github.com/pydantic/pydantic/issues/715) by [@dmontagu](https://github.com/dmontagu)\n* use pytest to test `mypy` integration, [#735](https://github.com/pydantic/pydantic/issues/735) by [@dmontagu](https://github.com/dmontagu)\n* add `__repr__` method to `ErrorWrapper`, [#738](https://github.com/pydantic/pydantic/issues/738) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Added support for `FrozenSet` members in dataclasses, and a better error when attempting to use types from the `typing` module that are not supported by Pydantic, [#745](https://github.com/pydantic/pydantic/issues/745) by [@djpetti](https://github.com/djpetti)\n* add documentation for Pycharm Plugin, [#750](https://github.com/pydantic/pydantic/issues/750) by [@koxudaxi](https://github.com/koxudaxi)\n* fix broken examples in the docs, [#753](https://github.com/pydantic/pydantic/issues/753) by [@dmontagu](https://github.com/dmontagu)\n* moving typing related objects into `pydantic.typing`, [#761](https://github.com/pydantic/pydantic/issues/761) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Minor performance improvements to `ErrorWrapper`, `ValidationError` and datetime parsing, [#763](https://github.com/pydantic/pydantic/issues/763) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Improvements to `datetime`/`date`/`time`/`timedelta` types: more descriptive errors,\n  change errors to `value_error` not `type_error`, support bytes, [#766](https://github.com/pydantic/pydantic/issues/766) by [@samuelcolvin](https://github.com/samuelcolvin)\n* fix error messages for `Literal` types with multiple allowed values, [#770](https://github.com/pydantic/pydantic/issues/770) by [@dmontagu](https://github.com/dmontagu)\n* Improved auto-generated `title` field in JSON schema by converting underscore to space, [#772](https://github.com/pydantic/pydantic/issues/772) by [@skewty](https://github.com/skewty)\n* support `mypy --no-implicit-reexport` for dataclasses, also respect `--no-implicit-reexport` in pydantic itself, [#783](https://github.com/pydantic/pydantic/issues/783) by [@samuelcolvin](https://github.com/samuelcolvin)\n* add the `PaymentCardNumber` type, [#790](https://github.com/pydantic/pydantic/issues/790) by [@matin](https://github.com/matin)\n* Fix const validations for lists, [#794](https://github.com/pydantic/pydantic/issues/794) by [@hmvp](https://github.com/hmvp)\n* Set `additionalProperties` to false in schema for models with extra fields disallowed, [#796](https://github.com/pydantic/pydantic/issues/796) by [@Code0x58](https://github.com/Code0x58)\n* `EmailStr` validation method now returns local part case-sensitive per RFC 5321, [#798](https://github.com/pydantic/pydantic/issues/798) by [@henriklindgren](https://github.com/henriklindgren)\n* Added ability to validate strictness to `ConstrainedFloat`, `ConstrainedInt` and `ConstrainedStr` and added\n  `StrictFloat` and `StrictInt` classes, [#799](https://github.com/pydantic/pydantic/issues/799) by [@DerRidda](https://github.com/DerRidda)\n* Improve handling of `None` and `Optional`, replace `whole` with `each_item` (inverse meaning, default `False`)\n  on validators, [#803](https://github.com/pydantic/pydantic/issues/803) by [@samuelcolvin](https://github.com/samuelcolvin)\n* add support for `Type[T]` type hints, [#807](https://github.com/pydantic/pydantic/issues/807) by [@timonbimon](https://github.com/timonbimon)\n* Performance improvements from removing `change_exceptions`, change how pydantic error are constructed, [#819](https://github.com/pydantic/pydantic/issues/819) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Fix the error message arising when a `BaseModel`-type model field causes a `ValidationError` during parsing, [#820](https://github.com/pydantic/pydantic/issues/820) by [@dmontagu](https://github.com/dmontagu)\n* allow `getter_dict` on `Config`, modify `GetterDict` to be more like a `Mapping` object and thus easier to work with, [#821](https://github.com/pydantic/pydantic/issues/821) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Only check `TypeVar` param on base `GenericModel` class, [#842](https://github.com/pydantic/pydantic/issues/842) by [@zpencerq](https://github.com/zpencerq)\n* rename `Model._schema_cache` -> `Model.__schema_cache__`, `Model._json_encoder` -> `Model.__json_encoder__`,\n  `Model._custom_root_type` -> `Model.__custom_root_type__`, [#851](https://github.com/pydantic/pydantic/issues/851) by [@samuelcolvin](https://github.com/samuelcolvin)\n\n## v0.32.2 (2019-08-17)\n\n(Docs are available [here](https://5d584fcca7c9b70007d1c997--pydantic-docs.netlify.com))\n\n* fix `__post_init__` usage with dataclass inheritance, fix [#739](https://github.com/pydantic/pydantic/issues/739) by [@samuelcolvin](https://github.com/samuelcolvin)\n* fix required fields validation on GenericModels classes, [#742](https://github.com/pydantic/pydantic/issues/742) by [@amitbl](https://github.com/amitbl)\n* fix defining custom `Schema` on `GenericModel` fields, [#754](https://github.com/pydantic/pydantic/issues/754) by [@amitbl](https://github.com/amitbl)\n\n## v0.32.1 (2019-08-08)\n\n* do not validate extra fields when `validate_assignment` is on, [#724](https://github.com/pydantic/pydantic/issues/724) by [@YaraslauZhylko](https://github.com/YaraslauZhylko)\n\n## v0.32 (2019-08-06)\n\n* add model name to `ValidationError` error message, [#676](https://github.com/pydantic/pydantic/issues/676) by [@dmontagu](https://github.com/dmontagu)\n* **breaking change**: remove `__getattr__` and rename `__values__` to `__dict__` on `BaseModel`,\n  deprecation warning on use `__values__` attr, attributes access speed increased up to 14 times, [#712](https://github.com/pydantic/pydantic/issues/712) by [@Bobronium](https://github.com/Bobronium)\n* support `ForwardRef` (without self-referencing annotations) in Python 3.6, [#706](https://github.com/pydantic/pydantic/issues/706) by [@koxudaxi](https://github.com/koxudaxi)\n* implement `schema_extra` in `Config` sub-class, [#663](https://github.com/pydantic/pydantic/issues/663) by [@tiangolo](https://github.com/tiangolo)\n\n## v0.31.1 (2019-07-31)\n\n* fix json generation for `EnumError`, [#697](https://github.com/pydantic/pydantic/issues/697) by [@dmontagu](https://github.com/dmontagu)\n* update numerous dependencies\n\n## v0.31 (2019-07-24)\n\n* better support for floating point `multiple_of` values, [#652](https://github.com/pydantic/pydantic/issues/652) by [@justindujardin](https://github.com/justindujardin)\n* fix schema generation for `NewType` and `Literal`, [#649](https://github.com/pydantic/pydantic/issues/649) by [@dmontagu](https://github.com/dmontagu)\n* fix `alias_generator` and field config conflict, [#645](https://github.com/pydantic/pydantic/issues/645) by [@gmetzker](https://github.com/gmetzker) and [#658](https://github.com/pydantic/pydantic/issues/658) by [@Bobronium](https://github.com/Bobronium)\n* more detailed message for `EnumError`, [#673](https://github.com/pydantic/pydantic/issues/673) by [@dmontagu](https://github.com/dmontagu)\n* add advanced exclude support for `dict`, `json` and `copy`, [#648](https://github.com/pydantic/pydantic/issues/648) by [@Bobronium](https://github.com/Bobronium)\n* fix bug in `GenericModel` for models with concrete parameterized fields, [#672](https://github.com/pydantic/pydantic/issues/672) by [@dmontagu](https://github.com/dmontagu)\n* add documentation for `Literal` type, [#651](https://github.com/pydantic/pydantic/issues/651) by [@dmontagu](https://github.com/dmontagu)\n* add `Config.keep_untouched` for custom descriptors support, [#679](https://github.com/pydantic/pydantic/issues/679) by [@Bobronium](https://github.com/Bobronium)\n* use `inspect.cleandoc` internally to get model description, [#657](https://github.com/pydantic/pydantic/issues/657) by [@tiangolo](https://github.com/tiangolo)\n* add `Color` to schema generation, by [@euri10](https://github.com/euri10)\n* add documentation for Literal type, [#651](https://github.com/pydantic/pydantic/issues/651) by [@dmontagu](https://github.com/dmontagu)\n\n## v0.30.1 (2019-07-15)\n\n* fix so nested classes which inherit and change `__init__` are correctly processed while still allowing `self` as a\n  parameter, [#644](https://github.com/pydantic/pydantic/issues/644) by [@lnaden](https://github.com/lnaden) and [@dgasmith](https://github.com/dgasmith)\n\n## v0.30 (2019-07-07)\n\n* enforce single quotes in code, [#612](https://github.com/pydantic/pydantic/issues/612) by [@samuelcolvin](https://github.com/samuelcolvin)\n* fix infinite recursion with dataclass inheritance and `__post_init__`, [#606](https://github.com/pydantic/pydantic/issues/606) by [@Hanaasagi](https://github.com/Hanaasagi)\n* fix default values for `GenericModel`, [#610](https://github.com/pydantic/pydantic/issues/610) by [@dmontagu](https://github.com/dmontagu)\n* clarify that self-referencing models require Python 3.7+, [#616](https://github.com/pydantic/pydantic/issues/616) by [@vlcinsky](https://github.com/vlcinsky)\n* fix truncate for types, [#611](https://github.com/pydantic/pydantic/issues/611) by [@dmontagu](https://github.com/dmontagu)\n* add `alias_generator` support, [#622](https://github.com/pydantic/pydantic/issues/622) by [@Bobronium](https://github.com/Bobronium)\n* fix unparameterized generic type schema generation, [#625](https://github.com/pydantic/pydantic/issues/625) by [@dmontagu](https://github.com/dmontagu)\n* fix schema generation with multiple/circular references to the same model, [#621](https://github.com/pydantic/pydantic/issues/621) by [@tiangolo](https://github.com/tiangolo) and [@wongpat](https://github.com/wongpat)\n* support custom root types, [#628](https://github.com/pydantic/pydantic/issues/628) by [@koxudaxi](https://github.com/koxudaxi)\n* support `self` as a field name in `parse_obj`, [#632](https://github.com/pydantic/pydantic/issues/632) by [@samuelcolvin](https://github.com/samuelcolvin)\n\n## v0.29 (2019-06-19)\n\n* support dataclasses.InitVar, [#592](https://github.com/pydantic/pydantic/issues/592) by [@pfrederiks](https://github.com/pfrederiks)\n* Updated documentation to elucidate the usage of `Union` when defining multiple types under an attribute's\n  annotation and showcase how the type-order can affect marshalling of provided values, [#594](https://github.com/pydantic/pydantic/issues/594) by [@somada141](https://github.com/somada141)\n* add `conlist` type, [#583](https://github.com/pydantic/pydantic/issues/583) by [@hmvp](https://github.com/hmvp)\n* add support for generics, [#595](https://github.com/pydantic/pydantic/issues/595) by [@dmontagu](https://github.com/dmontagu)\n\n## v0.28 (2019-06-06)\n\n* fix support for JSON Schema generation when using models with circular references in Python 3.7, [#572](https://github.com/pydantic/pydantic/issues/572) by [@tiangolo](https://github.com/tiangolo)\n* support `__post_init_post_parse__` on dataclasses, [#567](https://github.com/pydantic/pydantic/issues/567) by [@sevaho](https://github.com/sevaho)\n* allow dumping dataclasses to JSON, [#575](https://github.com/pydantic/pydantic/issues/575) by [@samuelcolvin](https://github.com/samuelcolvin) and [@DanielOberg](https://github.com/DanielOberg)\n* ORM mode, [#562](https://github.com/pydantic/pydantic/issues/562) by [@samuelcolvin](https://github.com/samuelcolvin)\n* fix `pydantic.compiled` on ipython, [#573](https://github.com/pydantic/pydantic/issues/573) by [@dmontagu](https://github.com/dmontagu) and [@samuelcolvin](https://github.com/samuelcolvin)\n* add `StrictBool` type, [#579](https://github.com/pydantic/pydantic/issues/579) by [@cazgp](https://github.com/cazgp)\n\n## v0.27 (2019-05-30)\n\n* **breaking change**  `_pydantic_post_init` to execute dataclass' original `__post_init__` before\n  validation, [#560](https://github.com/pydantic/pydantic/issues/560) by [@HeavenVolkoff](https://github.com/HeavenVolkoff)\n* fix handling of generic types without specified parameters, [#550](https://github.com/pydantic/pydantic/issues/550) by [@dmontagu](https://github.com/dmontagu)\n* **breaking change** (maybe): this is the first release compiled with **cython**, see the docs and please\n  submit an issue if you run into problems\n\n## v0.27.0a1 (2019-05-26)\n\n* fix JSON Schema for `list`, `tuple`, and `set`, [#540](https://github.com/pydantic/pydantic/issues/540) by [@tiangolo](https://github.com/tiangolo)\n* compiling with cython, `manylinux` binaries, some other performance improvements, [#548](https://github.com/pydantic/pydantic/issues/548) by [@samuelcolvin](https://github.com/samuelcolvin)\n\n## v0.26 (2019-05-22)\n\n* fix to schema generation for `IPvAnyAddress`, `IPvAnyInterface`, `IPvAnyNetwork` [#498](https://github.com/pydantic/pydantic/issues/498) by [@pilosus](https://github.com/pilosus)\n* fix variable length tuples support, [#495](https://github.com/pydantic/pydantic/issues/495) by [@pilosus](https://github.com/pilosus)\n* fix return type hint for `create_model`, [#526](https://github.com/pydantic/pydantic/issues/526) by [@dmontagu](https://github.com/dmontagu)\n* **Breaking Change:** fix `.dict(skip_keys=True)` skipping values set via alias (this involves changing\n  `validate_model()` to always returns `Tuple[Dict[str, Any], Set[str], Optional[ValidationError]]`), [#517](https://github.com/pydantic/pydantic/issues/517) by [@sommd](https://github.com/sommd)\n* fix to schema generation for `IPv4Address`, `IPv6Address`, `IPv4Interface`,\n  `IPv6Interface`, `IPv4Network`, `IPv6Network` [#532](https://github.com/pydantic/pydantic/issues/532) by [@euri10](https://github.com/euri10)\n* add `Color` type, [#504](https://github.com/pydantic/pydantic/issues/504) by [@pilosus](https://github.com/pilosus) and [@samuelcolvin](https://github.com/samuelcolvin)\n\n## v0.25 (2019-05-05)\n\n* Improve documentation on self-referencing models and annotations, [#487](https://github.com/pydantic/pydantic/issues/487) by [@theenglishway](https://github.com/theenglishway)\n* fix `.dict()` with extra keys, [#490](https://github.com/pydantic/pydantic/issues/490) by [@JaewonKim](https://github.com/JaewonKim)\n* support `const` keyword in `Schema`, [#434](https://github.com/pydantic/pydantic/issues/434) by [@Sean1708](https://github.com/Sean1708)\n\n## v0.24 (2019-04-23)\n\n* fix handling `ForwardRef` in sub-types, like `Union`, [#464](https://github.com/pydantic/pydantic/issues/464) by [@tiangolo](https://github.com/tiangolo)\n* fix secret serialization, [#465](https://github.com/pydantic/pydantic/issues/465) by [@atheuz](https://github.com/atheuz)\n* Support custom validators for dataclasses, [#454](https://github.com/pydantic/pydantic/issues/454) by [@primal100](https://github.com/primal100)\n* fix `parse_obj` to cope with dict-like objects, [#472](https://github.com/pydantic/pydantic/issues/472) by [@samuelcolvin](https://github.com/samuelcolvin)\n* fix to schema generation in nested dataclass-based models, [#474](https://github.com/pydantic/pydantic/issues/474) by [@NoAnyLove](https://github.com/NoAnyLove)\n* fix `json` for `Path`, `FilePath`, and `DirectoryPath` objects, [#473](https://github.com/pydantic/pydantic/issues/473) by [@mikegoodspeed](https://github.com/mikegoodspeed)\n\n## v0.23 (2019-04-04)\n\n* improve documentation for contributing section, [#441](https://github.com/pydantic/pydantic/issues/441) by [@pilosus](https://github.com/pilosus)\n* improve README.rst to include essential information about the package, [#446](https://github.com/pydantic/pydantic/issues/446) by [@pilosus](https://github.com/pilosus)\n* `IntEnum` support, [#444](https://github.com/pydantic/pydantic/issues/444) by [@potykion](https://github.com/potykion)\n* fix PyObject callable value, [#409](https://github.com/pydantic/pydantic/issues/409) by [@pilosus](https://github.com/pilosus)\n* fix `black` deprecation warnings after update, [#451](https://github.com/pydantic/pydantic/issues/451) by [@pilosus](https://github.com/pilosus)\n* fix `ForwardRef` collection bug, [#450](https://github.com/pydantic/pydantic/issues/450) by [@tigerwings](https://github.com/tigerwings)\n* Support specialized `ClassVars`, [#455](https://github.com/pydantic/pydantic/issues/455) by [@tyrylu](https://github.com/tyrylu)\n* fix JSON serialization for `ipaddress` types, [#333](https://github.com/pydantic/pydantic/issues/333) by [@pilosus](https://github.com/pilosus)\n* add `SecretStr` and `SecretBytes` types, [#452](https://github.com/pydantic/pydantic/issues/452) by [@atheuz](https://github.com/atheuz)\n\n## v0.22 (2019-03-29)\n\n* add `IPv{4,6,Any}Network` and `IPv{4,6,Any}Interface` types from `ipaddress` stdlib, [#333](https://github.com/pydantic/pydantic/issues/333) by [@pilosus](https://github.com/pilosus)\n* add docs for `datetime` types, [#386](https://github.com/pydantic/pydantic/issues/386) by [@pilosus](https://github.com/pilosus)\n* fix to schema generation in dataclass-based models, [#408](https://github.com/pydantic/pydantic/issues/408) by [@pilosus](https://github.com/pilosus)\n* fix path in nested models, [#437](https://github.com/pydantic/pydantic/issues/437) by [@kataev](https://github.com/kataev)\n* add `Sequence` support, [#304](https://github.com/pydantic/pydantic/issues/304) by [@pilosus](https://github.com/pilosus)\n\n## v0.21.0 (2019-03-15)\n\n* fix typo in `NoneIsNotAllowedError` message, [#414](https://github.com/pydantic/pydantic/issues/414) by [@YaraslauZhylko](https://github.com/YaraslauZhylko)\n* add `IPvAnyAddress`, `IPv4Address` and `IPv6Address` types, [#333](https://github.com/pydantic/pydantic/issues/333) by [@pilosus](https://github.com/pilosus)\n\n## v0.20.1 (2019-02-26)\n\n* fix type hints of `parse_obj` and similar methods, [#405](https://github.com/pydantic/pydantic/issues/405) by [@erosennin](https://github.com/erosennin)\n* fix submodel validation, [#403](https://github.com/pydantic/pydantic/issues/403) by [@samuelcolvin](https://github.com/samuelcolvin)\n* correct type hints for `ValidationError.json`, [#406](https://github.com/pydantic/pydantic/issues/406) by [@layday](https://github.com/layday)\n\n## v0.20.0 (2019-02-18)\n\n* fix tests for Python 3.8, [#396](https://github.com/pydantic/pydantic/issues/396) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Adds fields to the `dir` method for autocompletion in interactive sessions, [#398](https://github.com/pydantic/pydantic/issues/398) by [@dgasmith](https://github.com/dgasmith)\n* support `ForwardRef` (and therefore `from __future__ import annotations`) with dataclasses, [#397](https://github.com/pydantic/pydantic/issues/397) by [@samuelcolvin](https://github.com/samuelcolvin)\n\n## v0.20.0a1 (2019-02-13)\n\n* **breaking change** (maybe): more sophisticated argument parsing for validators, any subset of\n  `values`, `config` and `field` is now permitted, eg. `(cls, value, field)`,\n  however the variadic key word argument (\"`**kwargs`\") **must** be called `kwargs`, [#388](https://github.com/pydantic/pydantic/issues/388) by [@samuelcolvin](https://github.com/samuelcolvin)\n* **breaking change**: Adds `skip_defaults` argument to `BaseModel.dict()` to allow skipping of fields that\n  were not explicitly set, signature of `Model.construct()` changed, [#389](https://github.com/pydantic/pydantic/issues/389) by [@dgasmith](https://github.com/dgasmith)\n* add `py.typed` marker file for PEP-561 support, [#391](https://github.com/pydantic/pydantic/issues/391) by [@je-l](https://github.com/je-l)\n* Fix `extra` behaviour for multiple inheritance/mix-ins, [#394](https://github.com/pydantic/pydantic/issues/394) by [@YaraslauZhylko](https://github.com/YaraslauZhylko)\n\n## v0.19.0 (2019-02-04)\n\n* Support `Callable` type hint, fix [#279](https://github.com/pydantic/pydantic/issues/279) by [@proofit404](https://github.com/proofit404)\n* Fix schema for fields with `validator` decorator, fix [#375](https://github.com/pydantic/pydantic/issues/375) by [@tiangolo](https://github.com/tiangolo)\n* Add `multiple_of` constraint to `ConstrainedDecimal`, `ConstrainedFloat`, `ConstrainedInt`\n  and their related types `condecimal`, `confloat`, and `conint` [#371](https://github.com/pydantic/pydantic/issues/371), thanks [@StephenBrown2](https://github.com/StephenBrown2)\n* Deprecated `ignore_extra` and `allow_extra` Config fields in favor of `extra`, [#352](https://github.com/pydantic/pydantic/issues/352) by [@liiight](https://github.com/liiight)\n* Add type annotations to all functions, test fully with mypy, [#373](https://github.com/pydantic/pydantic/issues/373) by [@samuelcolvin](https://github.com/samuelcolvin)\n* fix for 'missing' error with `validate_all` or `validate_always`, [#381](https://github.com/pydantic/pydantic/issues/381) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Change the second/millisecond watershed for date/datetime parsing to `2e10`, [#385](https://github.com/pydantic/pydantic/issues/385) by [@samuelcolvin](https://github.com/samuelcolvin)\n\n## v0.18.2 (2019-01-22)\n\n* Fix to schema generation with `Optional` fields, fix [#361](https://github.com/pydantic/pydantic/issues/361) by [@samuelcolvin](https://github.com/samuelcolvin)\n\n## v0.18.1 (2019-01-17)\n\n* add `ConstrainedBytes` and `conbytes` types, [#315](https://github.com/pydantic/pydantic/issues/315) [@Gr1N](https://github.com/Gr1N)\n* adding `MANIFEST.in` to include license in package `.tar.gz`, [#358](https://github.com/pydantic/pydantic/issues/358) by [@samuelcolvin](https://github.com/samuelcolvin)\n\n## v0.18.0 (2019-01-13)\n\n* **breaking change**: don't call validators on keys of dictionaries, [#254](https://github.com/pydantic/pydantic/issues/254) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Fix validators with `always=True` when the default is `None` or the type is optional, also prevent\n  `whole` validators being called for sub-fields, fix [#132](https://github.com/pydantic/pydantic/issues/132) by [@samuelcolvin](https://github.com/samuelcolvin)\n* improve documentation for settings priority and allow it to be easily changed, [#343](https://github.com/pydantic/pydantic/issues/343) by [@samuelcolvin](https://github.com/samuelcolvin)\n* fix `ignore_extra=False` and `allow_population_by_alias=True`, fix [#257](https://github.com/pydantic/pydantic/issues/257) by [@samuelcolvin](https://github.com/samuelcolvin)\n* **breaking change**: Set `BaseConfig` attributes `min_anystr_length` and `max_anystr_length` to\n  `None` by default, fix [#349](https://github.com/pydantic/pydantic/issues/349) in [#350](https://github.com/pydantic/pydantic/issues/350) by [@tiangolo](https://github.com/tiangolo)\n* add support for postponed annotations, [#348](https://github.com/pydantic/pydantic/issues/348) by [@samuelcolvin](https://github.com/samuelcolvin)\n\n## v0.17.0 (2018-12-27)\n\n* fix schema for `timedelta` as number, [#325](https://github.com/pydantic/pydantic/issues/325) by [@tiangolo](https://github.com/tiangolo)\n* prevent validators being called repeatedly after inheritance, [#327](https://github.com/pydantic/pydantic/issues/327) by [@samuelcolvin](https://github.com/samuelcolvin)\n* prevent duplicate validator check in ipython, fix [#312](https://github.com/pydantic/pydantic/issues/312) by [@samuelcolvin](https://github.com/samuelcolvin)\n* add \"Using Pydantic\" section to docs, [#323](https://github.com/pydantic/pydantic/issues/323) by [@tiangolo](https://github.com/tiangolo) & [#326](https://github.com/pydantic/pydantic/issues/326) by [@samuelcolvin](https://github.com/samuelcolvin)\n* fix schema generation for fields annotated as `: dict`, `: list`,\n  `: tuple` and `: set`, [#330](https://github.com/pydantic/pydantic/issues/330) & [#335](https://github.com/pydantic/pydantic/issues/335) by [@nkonin](https://github.com/nkonin)\n* add support for constrained strings as dict keys in schema, [#332](https://github.com/pydantic/pydantic/issues/332) by [@tiangolo](https://github.com/tiangolo)\n* support for passing Config class in dataclasses decorator, [#276](https://github.com/pydantic/pydantic/issues/276) by [@jarekkar](https://github.com/jarekkar)\n  (**breaking change**: this supersedes the `validate_assignment` argument with `config`)\n* support for nested dataclasses, [#334](https://github.com/pydantic/pydantic/issues/334) by [@samuelcolvin](https://github.com/samuelcolvin)\n* better errors when getting an `ImportError` with `PyObject`, [#309](https://github.com/pydantic/pydantic/issues/309) by [@samuelcolvin](https://github.com/samuelcolvin)\n* rename `get_validators` to `__get_validators__`, deprecation warning on use of old name, [#338](https://github.com/pydantic/pydantic/issues/338) by [@samuelcolvin](https://github.com/samuelcolvin)\n* support `ClassVar` by excluding such attributes from fields, [#184](https://github.com/pydantic/pydantic/issues/184) by [@samuelcolvin](https://github.com/samuelcolvin)\n\n## v0.16.1 (2018-12-10)\n\n* fix `create_model` to correctly use the passed `__config__`, [#320](https://github.com/pydantic/pydantic/issues/320) by [@hugoduncan](https://github.com/hugoduncan)\n\n## v0.16.0 (2018-12-03)\n\n* **breaking change**: refactor schema generation to be compatible with JSON Schema and OpenAPI specs, [#308](https://github.com/pydantic/pydantic/issues/308) by [@tiangolo](https://github.com/tiangolo)\n* add `schema` to `schema` module to generate top-level schemas from base models, [#308](https://github.com/pydantic/pydantic/issues/308) by [@tiangolo](https://github.com/tiangolo)\n* add additional fields to `Schema` class to declare validation for `str` and numeric values, [#311](https://github.com/pydantic/pydantic/issues/311) by [@tiangolo](https://github.com/tiangolo)\n* rename `_schema` to `schema` on fields, [#318](https://github.com/pydantic/pydantic/issues/318) by [@samuelcolvin](https://github.com/samuelcolvin)\n* add `case_insensitive` option to `BaseSettings` `Config`, [#277](https://github.com/pydantic/pydantic/issues/277) by [@jasonkuhrt](https://github.com/jasonkuhrt)\n\n## v0.15.0 (2018-11-18)\n\n* move codebase to use black, [#287](https://github.com/pydantic/pydantic/issues/287) by [@samuelcolvin](https://github.com/samuelcolvin)\n* fix alias use in settings, [#286](https://github.com/pydantic/pydantic/issues/286) by [@jasonkuhrt](https://github.com/jasonkuhrt) and [@samuelcolvin](https://github.com/samuelcolvin)\n* fix datetime parsing in `parse_date`, [#298](https://github.com/pydantic/pydantic/issues/298) by [@samuelcolvin](https://github.com/samuelcolvin)\n* allow dataclass inheritance, fix [#293](https://github.com/pydantic/pydantic/issues/293) by [@samuelcolvin](https://github.com/samuelcolvin)\n* fix `PyObject = None`, fix [#305](https://github.com/pydantic/pydantic/issues/305) by [@samuelcolvin](https://github.com/samuelcolvin)\n* allow `Pattern` type, fix [#303](https://github.com/pydantic/pydantic/issues/303) by [@samuelcolvin](https://github.com/samuelcolvin)\n\n## v0.14.0 (2018-10-02)\n\n* dataclasses decorator, [#269](https://github.com/pydantic/pydantic/issues/269) by [@Gaunt](https://github.com/Gaunt) and [@samuelcolvin](https://github.com/samuelcolvin)\n\n## v0.13.1 (2018-09-21)\n\n* fix issue where int_validator doesn't cast a `bool` to an `int` [#264](https://github.com/pydantic/pydantic/issues/264) by [@nphyatt](https://github.com/nphyatt)\n* add deep copy support for `BaseModel.copy()` [#249](https://github.com/pydantic/pydantic/issues/249), [@gangefors](https://github.com/gangefors)\n\n## v0.13.0 (2018-08-25)\n\n* raise an exception if a field's name shadows an existing `BaseModel` attribute [#242](https://github.com/pydantic/pydantic/issues/242)\n* add `UrlStr` and `urlstr` types [#236](https://github.com/pydantic/pydantic/issues/236)\n* timedelta json encoding ISO8601 and total seconds, custom json encoders [#247](https://github.com/pydantic/pydantic/issues/247), by [@cfkanesan](https://github.com/cfkanesan) and [@samuelcolvin](https://github.com/samuelcolvin)\n* allow `timedelta` objects as values for properties of type `timedelta` (matches `datetime` etc. behavior) [#247](https://github.com/pydantic/pydantic/issues/247)\n\n## v0.12.1 (2018-07-31)\n\n* fix schema generation for fields defined using `typing.Any` [#237](https://github.com/pydantic/pydantic/issues/237)\n\n## v0.12.0 (2018-07-31)\n\n* add `by_alias` argument in `.dict()` and `.json()` model methods [#205](https://github.com/pydantic/pydantic/issues/205)\n* add Json type support [#214](https://github.com/pydantic/pydantic/issues/214)\n* support tuples [#227](https://github.com/pydantic/pydantic/issues/227)\n* major improvements and changes to schema [#213](https://github.com/pydantic/pydantic/issues/213)\n\n## v0.11.2 (2018-07-05)\n\n* add `NewType` support [#115](https://github.com/pydantic/pydantic/issues/115)\n* fix `list`, `set` & `tuple` validation [#225](https://github.com/pydantic/pydantic/issues/225)\n* separate out `validate_model` method, allow errors to be returned along with valid values [#221](https://github.com/pydantic/pydantic/issues/221)\n\n## v0.11.1 (2018-07-02)\n\n* support Python 3.7 [#216](https://github.com/pydantic/pydantic/issues/216), thanks [@layday](https://github.com/layday)\n* Allow arbitrary types in model [#209](https://github.com/pydantic/pydantic/issues/209), thanks [@oldPadavan](https://github.com/oldPadavan)\n\n## v0.11.0 (2018-06-28)\n\n* make `list`, `tuple` and `set` types stricter [#86](https://github.com/pydantic/pydantic/issues/86)\n* **breaking change**: remove msgpack parsing [#201](https://github.com/pydantic/pydantic/issues/201)\n* add `FilePath` and `DirectoryPath` types [#10](https://github.com/pydantic/pydantic/issues/10)\n* model schema generation [#190](https://github.com/pydantic/pydantic/issues/190)\n* JSON serialisation of models and schemas [#133](https://github.com/pydantic/pydantic/issues/133)\n\n## v0.10.0 (2018-06-11)\n\n* add `Config.allow_population_by_alias` [#160](https://github.com/pydantic/pydantic/issues/160), thanks [@bendemaree](https://github.com/bendemaree)\n* **breaking change**: new errors format [#179](https://github.com/pydantic/pydantic/issues/179), thanks [@Gr1N](https://github.com/Gr1N)\n* **breaking change**: removed `Config.min_number_size` and `Config.max_number_size` [#183](https://github.com/pydantic/pydantic/issues/183), thanks [@Gr1N](https://github.com/Gr1N)\n* **breaking change**: correct behaviour of `lt` and `gt` arguments to `conint` etc. [#188](https://github.com/pydantic/pydantic/issues/188)\n  for the old behaviour use `le` and `ge` [#194](https://github.com/pydantic/pydantic/issues/194), thanks [@jaheba](https://github.com/jaheba)\n* added error context and ability to redefine error message templates using `Config.error_msg_templates` [#183](https://github.com/pydantic/pydantic/issues/183),\n  thanks [@Gr1N](https://github.com/Gr1N)\n* fix typo in validator exception [#150](https://github.com/pydantic/pydantic/issues/150)\n* copy defaults to model values, so different models don't share objects [#154](https://github.com/pydantic/pydantic/issues/154)\n\n## v0.9.1 (2018-05-10)\n\n* allow custom `get_field_config` on config classes [#159](https://github.com/pydantic/pydantic/issues/159)\n* add `UUID1`, `UUID3`, `UUID4` and `UUID5` types [#167](https://github.com/pydantic/pydantic/issues/167), thanks [@Gr1N](https://github.com/Gr1N)\n* modify some inconsistent docstrings and annotations [#173](https://github.com/pydantic/pydantic/issues/173), thanks [@YannLuo](https://github.com/YannLuo)\n* fix type annotations for exotic types [#171](https://github.com/pydantic/pydantic/issues/171), thanks [@Gr1N](https://github.com/Gr1N)\n* re-use type validators in exotic types [#171](https://github.com/pydantic/pydantic/issues/171)\n* scheduled monthly requirements updates [#168](https://github.com/pydantic/pydantic/issues/168)\n* add `Decimal`, `ConstrainedDecimal` and `condecimal` types [#170](https://github.com/pydantic/pydantic/issues/170), thanks [@Gr1N](https://github.com/Gr1N)\n\n## v0.9.0 (2018-04-28)\n\n* tweak email-validator import error message [#145](https://github.com/pydantic/pydantic/issues/145)\n* fix parse error of `parse_date()` and `parse_datetime()` when input is 0 [#144](https://github.com/pydantic/pydantic/issues/144), thanks [@YannLuo](https://github.com/YannLuo)\n* add `Config.anystr_strip_whitespace` and `strip_whitespace` kwarg to `constr`,\n  by default values is `False` [#163](https://github.com/pydantic/pydantic/issues/163), thanks [@Gr1N](https://github.com/Gr1N)\n* add `ConstrainedFloat`, `confloat`, `PositiveFloat` and `NegativeFloat` types [#166](https://github.com/pydantic/pydantic/issues/166), thanks [@Gr1N](https://github.com/Gr1N)\n\n## v0.8.0 (2018-03-25)\n\n* fix type annotation for `inherit_config` [#139](https://github.com/pydantic/pydantic/issues/139)\n* **breaking change**: check for invalid field names in validators [#140](https://github.com/pydantic/pydantic/issues/140)\n* validate attributes of parent models [#141](https://github.com/pydantic/pydantic/issues/141)\n* **breaking change**: email validation now uses\n  [email-validator](https://github.com/JoshData/python-email-validator) [#142](https://github.com/pydantic/pydantic/issues/142)\n\n## v0.7.1 (2018-02-07)\n\n* fix bug with `create_model` modifying the base class\n\n## v0.7.0 (2018-02-06)\n\n* added compatibility with abstract base classes (ABCs) [#123](https://github.com/pydantic/pydantic/issues/123)\n* add `create_model` method [#113](https://github.com/pydantic/pydantic/issues/113) [#125](https://github.com/pydantic/pydantic/issues/125)\n* **breaking change**: rename `.config` to `.__config__` on a model\n* **breaking change**: remove deprecated `.values()` on a model, use `.dict()` instead\n* remove use of `OrderedDict` and use simple dict [#126](https://github.com/pydantic/pydantic/issues/126)\n* add `Config.use_enum_values` [#127](https://github.com/pydantic/pydantic/issues/127)\n* add wildcard validators of the form `@validate('*')` [#128](https://github.com/pydantic/pydantic/issues/128)\n\n## v0.6.4 (2018-02-01)\n\n* allow Python date and times objects [#122](https://github.com/pydantic/pydantic/issues/122)\n\n## v0.6.3 (2017-11-26)\n\n* fix direct install without `README.rst` present\n\n## v0.6.2 (2017-11-13)\n\n* errors for invalid validator use\n* safer check for complex models in `Settings`\n\n## v0.6.1 (2017-11-08)\n\n* prevent duplicate validators, [#101](https://github.com/pydantic/pydantic/issues/101)\n* add `always` kwarg to validators, [#102](https://github.com/pydantic/pydantic/issues/102)\n\n## v0.6.0 (2017-11-07)\n\n* assignment validation [#94](https://github.com/pydantic/pydantic/issues/94), thanks petroswork!\n* JSON in environment variables for complex types, [#96](https://github.com/pydantic/pydantic/issues/96)\n* add `validator` decorators for complex validation, [#97](https://github.com/pydantic/pydantic/issues/97)\n* depreciate `values(...)` and replace with `.dict(...)`, [#99](https://github.com/pydantic/pydantic/issues/99)\n\n## v0.5.0 (2017-10-23)\n\n* add `UUID` validation [#89](https://github.com/pydantic/pydantic/issues/89)\n* remove `index` and `track` from error object (json) if they're null [#90](https://github.com/pydantic/pydantic/issues/90)\n* improve the error text when a list is provided rather than a dict [#90](https://github.com/pydantic/pydantic/issues/90)\n* add benchmarks table to docs [#91](https://github.com/pydantic/pydantic/issues/91)\n\n## v0.4.0 (2017-07-08)\n\n* show length in string validation error\n* fix aliases in config during inheritance [#55](https://github.com/pydantic/pydantic/issues/55)\n* simplify error display\n* use unicode ellipsis in `truncate`\n* add `parse_obj`, `parse_raw` and `parse_file` helper functions [#58](https://github.com/pydantic/pydantic/issues/58)\n* switch annotation only fields to come first in fields list not last\n\n## v0.3.0 (2017-06-21)\n\n* immutable models via `config.allow_mutation = False`, associated cleanup and performance improvement [#44](https://github.com/pydantic/pydantic/issues/44)\n* immutable helper methods `construct()` and `copy()` [#53](https://github.com/pydantic/pydantic/issues/53)\n* allow pickling of models [#53](https://github.com/pydantic/pydantic/issues/53)\n* `setattr` is removed as `__setattr__` is now intelligent [#44](https://github.com/pydantic/pydantic/issues/44)\n* `raise_exception` removed, Models now always raise exceptions [#44](https://github.com/pydantic/pydantic/issues/44)\n* instance method validators removed\n* django-restful-framework benchmarks added [#47](https://github.com/pydantic/pydantic/issues/47)\n* fix inheritance bug [#49](https://github.com/pydantic/pydantic/issues/49)\n* make str type stricter so list, dict etc are not coerced to strings. [#52](https://github.com/pydantic/pydantic/issues/52)\n* add `StrictStr` which only always strings as input [#52](https://github.com/pydantic/pydantic/issues/52)\n\n## v0.2.1 (2017-06-07)\n\n* pypi and travis together messed up the deploy of `v0.2` this should fix it\n\n## v0.2.0 (2017-06-07)\n\n* **breaking change**: `values()` on a model is now a method not a property,\n  takes `include` and `exclude` arguments\n* allow annotation only fields to support mypy\n* add pretty `to_string(pretty=True)` method for models\n\n## v0.1.0 (2017-06-03)\n\n* add docs\n* add history\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/pydantic-1.10.7.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "pydeck",
        "version": "0.8.1b0",
        "platform": [
          "UNKNOWN"
        ],
        "summary": "Widget for deck.gl maps",
        "description_content_type": "text/markdown",
        "keywords": [
          "data",
          "visualization",
          "graphics",
          "GIS",
          "maps"
        ],
        "home_page": "https://github.com/visgl/deck.gl/tree/master/bindings/pydeck",
        "author": "Andrew Duberstein",
        "author_email": "ajduberstein@gmail.com",
        "license": "Apache License 2.0",
        "classifier": [
          "Intended Audience :: Developers",
          "Intended Audience :: Science/Research",
          "Topic :: Multimedia :: Graphics",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Framework :: Jupyter"
        ],
        "requires_dist": [
          "jinja2 (>=2.10.1)",
          "numpy (>=1.16.4)",
          "pydeck-carto ; extra == 'carto'",
          "ipywidgets (<8,>=7) ; extra == 'jupyter'",
          "traitlets (>=4.3.2) ; extra == 'jupyter'",
          "ipython (>=5.8.0) ; (python_version < \"3.4\") and extra == 'jupyter'",
          "ipykernel (>=5.1.2) ; (python_version >= \"3.4\") and extra == 'jupyter'"
        ],
        "requires_python": ">=3.7",
        "provides_extra": [
          "carto",
          "jupyter"
        ],
        "description": "[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/uber/deck.gl/binder)\n[![Documentation Status](https://readthedocs.org/projects/deckgl/badge/?version=latest)](https://pydeck.gl)\n[![Anaconda-Server Badge](https://anaconda.org/conda-forge/pydeck/badges/version.svg)](https://anaconda.org/conda-forge/pydeck)\n[![Downloads](https://pepy.tech/badge/pydeck/week)](https://pepy.tech/project/pydeck/week)\n\n# pydeck: Large-scale interactive data visualization in Python\n\n[![demo](https://user-images.githubusercontent.com/2204757/58838976-1538f400-8615-11e9-84f6-a2fe42bb300b.gif)](https://pydeck.gl/)\n\nThe pydeck library is a set of Python bindings for making spatial visualizations with [deck.gl](https://deck.gl),\noptimized for a Jupyter environment. To get started, __[see the documentation](https://pydeck.gl/)__.\n\n__[To install pydeck, see the instructions here](https://pydeck.gl/installation.html)__.\n\nFor __interactive demos__, click the binder logo below:\n\n[![Binder](https://mybinder.org/static/logo.svg?v=f9f0d927b67cc9dc99d788c822ca21c0)](https://mybinder.org/v2/gh/uber/deck.gl/binder)\n\n## Sample code\n\nThe following code renders a visualization similar to the one above in a Jupyter notebook:\n\n```python\nimport pydeck as pdk\n\n# 2014 locations of car accidents in the UK\nUK_ACCIDENTS_DATA = ('https://raw.githubusercontent.com/uber-common/'\n                     'deck.gl-data/master/examples/3d-heatmap/heatmap-data.csv')\n\n# Define a layer to display on a map\nlayer = pdk.Layer(\n    'HexagonLayer',\n    UK_ACCIDENTS_DATA,\n    get_position=['lng', 'lat'],\n    auto_highlight=True,\n    elevation_scale=50,\n    pickable=True,\n    elevation_range=[0, 3000],\n    extruded=True,                 \n    coverage=1)\n\n# Set the viewport location\nview_state = pdk.ViewState(\n    longitude=-1.415,\n    latitude=52.2323,\n    zoom=6,\n    min_zoom=5,\n    max_zoom=15,\n    pitch=40.5,\n    bearing=-27.36)\n\n# Render\nr = pdk.Deck(layers=[layer], initial_view_state=view_state)\nr.to_html('demo.html')\n```\n\nIf you're developing outside a Jupyter environment, you can run:\n\n```python\nr.to_html('demo.html', notebook_display=False)\n```\n\n__[See the gallery for more examples.](https://pydeck.gl/#gallery)__\n\n### Issues and contributing\n\nIf you encounter an issue, file it in the [deck.gl issues page](https://github.com/visgl/deck.gl/issues/new?assignees=&labels=question&template=question.md&title=)\nand include your browser's console output, if any.\n\nIf you'd like to contribute to pydeck, please follow the [deck.gl contribution guidelines](https://github.com/visgl/deck.gl/blob/master/CONTRIBUTING.md)\nand the [pydeck development installation instructions](https://pydeck.gl/installation.html#development-notes).\n\n\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/pydeck-0.8.1b0.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "pydub",
        "version": "0.25.1",
        "platform": [
          "UNKNOWN"
        ],
        "summary": "Manipulate audio with an simple and easy high level interface",
        "keywords": [
          "audio",
          "sound",
          "high-level"
        ],
        "home_page": "http://pydub.com",
        "author": "James Robert",
        "author_email": "jiaaro@gmail.com",
        "license": "MIT",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "License :: OSI Approved :: MIT License",
          "Programming Language :: Python",
          "Programming Language :: Python :: 2",
          "Programming Language :: Python :: 2.7",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.4",
          "Programming Language :: Python :: 3.5",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Intended Audience :: Developers",
          "Operating System :: OS Independent",
          "Topic :: Multimedia :: Sound/Audio",
          "Topic :: Multimedia :: Sound/Audio :: Analysis",
          "Topic :: Multimedia :: Sound/Audio :: Conversion",
          "Topic :: Multimedia :: Sound/Audio :: Editors",
          "Topic :: Multimedia :: Sound/Audio :: Mixers",
          "Topic :: Software Development :: Libraries",
          "Topic :: Utilities"
        ],
        "description": "\nManipulate audio with an simple and easy high level interface.\n\nSee the README file for details, usage info, and a list of gotchas.\n\n\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/pydub-0.25.1.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "pyparsing",
        "version": "3.0.9",
        "summary": "pyparsing module - Classes and methods to define and execute parsing grammars",
        "description_content_type": "text/x-rst",
        "author_email": "Paul McGuire <ptmcg.gm+pyparsing@gmail.com>",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Intended Audience :: Developers",
          "Intended Audience :: Information Technology",
          "License :: OSI Approved :: MIT License",
          "Operating System :: OS Independent",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3 :: Only",
          "Programming Language :: Python :: Implementation :: CPython",
          "Programming Language :: Python :: Implementation :: PyPy",
          "Typing :: Typed"
        ],
        "requires_dist": [
          "railroad-diagrams ; extra == \"diagrams\"",
          "jinja2 ; extra == \"diagrams\""
        ],
        "requires_python": ">=3.6.8",
        "project_url": [
          "Homepage, https://github.com/pyparsing/pyparsing/"
        ],
        "provides_extra": [
          "diagrams"
        ],
        "description": "PyParsing -- A Python Parsing Module\n====================================\n\n|Build Status| |Coverage|\n\nIntroduction\n============\n\nThe pyparsing module is an alternative approach to creating and\nexecuting simple grammars, vs. the traditional lex/yacc approach, or the\nuse of regular expressions. The pyparsing module provides a library of\nclasses that client code uses to construct the grammar directly in\nPython code.\n\n*[Since first writing this description of pyparsing in late 2003, this\ntechnique for developing parsers has become more widespread, under the\nname Parsing Expression Grammars - PEGs. See more information on PEGs*\n`here <https://en.wikipedia.org/wiki/Parsing_expression_grammar>`__\n*.]*\n\nHere is a program to parse ``\"Hello, World!\"`` (or any greeting of the form\n``\"salutation, addressee!\"``):\n\n.. code:: python\n\n    from pyparsing import Word, alphas\n    greet = Word(alphas) + \",\" + Word(alphas) + \"!\"\n    hello = \"Hello, World!\"\n    print(hello, \"->\", greet.parseString(hello))\n\nThe program outputs the following::\n\n    Hello, World! -> ['Hello', ',', 'World', '!']\n\nThe Python representation of the grammar is quite readable, owing to the\nself-explanatory class names, and the use of '+', '|' and '^' operator\ndefinitions.\n\nThe parsed results returned from ``parseString()`` is a collection of type\n``ParseResults``, which can be accessed as a\nnested list, a dictionary, or an object with named attributes.\n\nThe pyparsing module handles some of the problems that are typically\nvexing when writing text parsers:\n\n- extra or missing whitespace (the above program will also handle ``\"Hello,World!\"``, ``\"Hello , World !\"``, etc.)\n- quoted strings\n- embedded comments\n\nThe examples directory includes a simple SQL parser, simple CORBA IDL\nparser, a config file parser, a chemical formula parser, and a four-\nfunction algebraic notation parser, among many others.\n\nDocumentation\n=============\n\nThere are many examples in the online docstrings of the classes\nand methods in pyparsing. You can find them compiled into `online docs <https://pyparsing-docs.readthedocs.io/en/latest/>`__. Additional\ndocumentation resources and project info are listed in the online\n`GitHub wiki <https://github.com/pyparsing/pyparsing/wiki>`__. An\nentire directory of examples can be found `here <https://github.com/pyparsing/pyparsing/tree/master/examples>`__.\n\nLicense\n=======\n\nMIT License. See header of the `pyparsing.py <https://github.com/pyparsing/pyparsing/blob/master/pyparsing/__init__.py#L1-L23>`__ file.\n\nHistory\n=======\n\nSee `CHANGES <https://github.com/pyparsing/pyparsing/blob/master/CHANGES>`__ file.\n\n.. |Build Status| image:: https://github.com/pyparsing/pyparsing/actions/workflows/ci.yml/badge.svg\n   :target: https://github.com/pyparsing/pyparsing/actions/workflows/ci.yml\n.. |Coverage| image:: https://codecov.io/gh/pyparsing/pyparsing/branch/master/graph/badge.svg\n  :target: https://codecov.io/gh/pyparsing/pyparsing\n\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/pyparsing-3.0.9.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "python-dateutil",
        "version": "2.8.2",
        "platform": [
          "UNKNOWN"
        ],
        "summary": "Extensions to the standard Python datetime module",
        "description_content_type": "text/x-rst",
        "home_page": "https://github.com/dateutil/dateutil",
        "author": "Gustavo Niemeyer",
        "author_email": "gustavo@niemeyer.net",
        "maintainer": "Paul Ganssle",
        "maintainer_email": "dateutil@python.org",
        "license": "Dual License",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: BSD License",
          "License :: OSI Approved :: Apache Software License",
          "Programming Language :: Python",
          "Programming Language :: Python :: 2",
          "Programming Language :: Python :: 2.7",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.3",
          "Programming Language :: Python :: 3.4",
          "Programming Language :: Python :: 3.5",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Topic :: Software Development :: Libraries"
        ],
        "requires_dist": [
          "six (>=1.5)"
        ],
        "requires_python": "!=3.0.*,!=3.1.*,!=3.2.*,>=2.7",
        "project_url": [
          "Documentation, https://dateutil.readthedocs.io/en/stable/",
          "Source, https://github.com/dateutil/dateutil"
        ],
        "description": "dateutil - powerful extensions to datetime\n==========================================\n\n|pypi| |support| |licence|\n\n|gitter| |readthedocs|\n\n|travis| |appveyor| |pipelines| |coverage|\n\n.. |pypi| image:: https://img.shields.io/pypi/v/python-dateutil.svg?style=flat-square\n    :target: https://pypi.org/project/python-dateutil/\n    :alt: pypi version\n\n.. |support| image:: https://img.shields.io/pypi/pyversions/python-dateutil.svg?style=flat-square\n    :target: https://pypi.org/project/python-dateutil/\n    :alt: supported Python version\n\n.. |travis| image:: https://img.shields.io/travis/dateutil/dateutil/master.svg?style=flat-square&label=Travis%20Build\n    :target: https://travis-ci.org/dateutil/dateutil\n    :alt: travis build status\n\n.. |appveyor| image:: https://img.shields.io/appveyor/ci/dateutil/dateutil/master.svg?style=flat-square&logo=appveyor\n    :target: https://ci.appveyor.com/project/dateutil/dateutil\n    :alt: appveyor build status\n\n.. |pipelines| image:: https://dev.azure.com/pythondateutilazure/dateutil/_apis/build/status/dateutil.dateutil?branchName=master\n    :target: https://dev.azure.com/pythondateutilazure/dateutil/_build/latest?definitionId=1&branchName=master\n    :alt: azure pipelines build status\n\n.. |coverage| image:: https://codecov.io/gh/dateutil/dateutil/branch/master/graphs/badge.svg?branch=master\n    :target: https://codecov.io/gh/dateutil/dateutil?branch=master\n    :alt: Code coverage\n\n.. |gitter| image:: https://badges.gitter.im/dateutil/dateutil.svg\n   :alt: Join the chat at https://gitter.im/dateutil/dateutil\n   :target: https://gitter.im/dateutil/dateutil\n\n.. |licence| image:: https://img.shields.io/pypi/l/python-dateutil.svg?style=flat-square\n    :target: https://pypi.org/project/python-dateutil/\n    :alt: licence\n\n.. |readthedocs| image:: https://img.shields.io/readthedocs/dateutil/latest.svg?style=flat-square&label=Read%20the%20Docs\n   :alt: Read the documentation at https://dateutil.readthedocs.io/en/latest/\n   :target: https://dateutil.readthedocs.io/en/latest/\n\nThe `dateutil` module provides powerful extensions to\nthe standard `datetime` module, available in Python.\n\nInstallation\n============\n`dateutil` can be installed from PyPI using `pip` (note that the package name is\ndifferent from the importable name)::\n\n    pip install python-dateutil\n\nDownload\n========\ndateutil is available on PyPI\nhttps://pypi.org/project/python-dateutil/\n\nThe documentation is hosted at:\nhttps://dateutil.readthedocs.io/en/stable/\n\nCode\n====\nThe code and issue tracker are hosted on GitHub:\nhttps://github.com/dateutil/dateutil/\n\nFeatures\n========\n\n* Computing of relative deltas (next month, next year,\n  next Monday, last week of month, etc);\n* Computing of relative deltas between two given\n  date and/or datetime objects;\n* Computing of dates based on very flexible recurrence rules,\n  using a superset of the `iCalendar <https://www.ietf.org/rfc/rfc2445.txt>`_\n  specification. Parsing of RFC strings is supported as well.\n* Generic parsing of dates in almost any string format;\n* Timezone (tzinfo) implementations for tzfile(5) format\n  files (/etc/localtime, /usr/share/zoneinfo, etc), TZ\n  environment string (in all known formats), iCalendar\n  format files, given ranges (with help from relative deltas),\n  local machine timezone, fixed offset timezone, UTC timezone,\n  and Windows registry-based time zones.\n* Internal up-to-date world timezone information based on\n  Olson's database.\n* Computing of Easter Sunday dates for any given year,\n  using Western, Orthodox or Julian algorithms;\n* A comprehensive test suite.\n\nQuick example\n=============\nHere's a snapshot, just to give an idea about the power of the\npackage. For more examples, look at the documentation.\n\nSuppose you want to know how much time is left, in\nyears/months/days/etc, before the next easter happening on a\nyear with a Friday 13th in August, and you want to get today's\ndate out of the \"date\" unix system command. Here is the code:\n\n.. code-block:: python3\n\n    >>> from dateutil.relativedelta import *\n    >>> from dateutil.easter import *\n    >>> from dateutil.rrule import *\n    >>> from dateutil.parser import *\n    >>> from datetime import *\n    >>> now = parse(\"Sat Oct 11 17:13:46 UTC 2003\")\n    >>> today = now.date()\n    >>> year = rrule(YEARLY,dtstart=now,bymonth=8,bymonthday=13,byweekday=FR)[0].year\n    >>> rdelta = relativedelta(easter(year), today)\n    >>> print(\"Today is: %s\" % today)\n    Today is: 2003-10-11\n    >>> print(\"Year with next Aug 13th on a Friday is: %s\" % year)\n    Year with next Aug 13th on a Friday is: 2004\n    >>> print(\"How far is the Easter of that year: %s\" % rdelta)\n    How far is the Easter of that year: relativedelta(months=+6)\n    >>> print(\"And the Easter of that year is: %s\" % (today+rdelta))\n    And the Easter of that year is: 2004-04-11\n\nBeing exactly 6 months ahead was **really** a coincidence :)\n\nContributing\n============\n\nWe welcome many types of contributions - bug reports, pull requests (code, infrastructure or documentation fixes). For more information about how to contribute to the project, see the ``CONTRIBUTING.md`` file in the repository.\n\n\nAuthor\n======\nThe dateutil module was written by Gustavo Niemeyer <gustavo@niemeyer.net>\nin 2003.\n\nIt is maintained by:\n\n* Gustavo Niemeyer <gustavo@niemeyer.net> 2003-2011\n* Tomi Pieviläinen <tomi.pievilainen@iki.fi> 2012-2014\n* Yaron de Leeuw <me@jarondl.net> 2014-2016\n* Paul Ganssle <paul@ganssle.io> 2015-\n\nStarting with version 2.4.1 and running until 2.8.2, all source and binary\ndistributions will be signed by a PGP key that has, at the very least, been\nsigned by the key which made the previous release. A table of release signing\nkeys can be found below:\n\n===========  ============================\nReleases     Signing key fingerprint\n===========  ============================\n2.4.1-2.8.2  `6B49 ACBA DCF6 BD1C A206 67AB CD54 FCE3 D964 BEFB`_ \n===========  ============================\n\nNew releases *may* have signed tags, but binary and source distributions\nuploaded to PyPI will no longer have GPG signatures attached.\n\nContact\n=======\nOur mailing list is available at `dateutil@python.org <https://mail.python.org/mailman/listinfo/dateutil>`_. As it is hosted by the PSF, it is subject to the `PSF code of\nconduct <https://www.python.org/psf/conduct/>`_.\n\nLicense\n=======\n\nAll contributions after December 1, 2017 released under dual license - either `Apache 2.0 License <https://www.apache.org/licenses/LICENSE-2.0>`_ or the `BSD 3-Clause License <https://opensource.org/licenses/BSD-3-Clause>`_. Contributions before December 1, 2017 - except those those explicitly relicensed - are released only under the BSD 3-Clause License.\n\n\n.. _6B49 ACBA DCF6 BD1C A206 67AB CD54 FCE3 D964 BEFB:\n   https://pgp.mit.edu/pks/lookup?op=vindex&search=0xCD54FCE3D964BEFB\n\n\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/python_dateutil-2.8.2.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "python-multipart",
        "version": "0.0.6",
        "summary": "A streaming multipart parser for Python",
        "description_content_type": "text/x-rst",
        "author_email": "Andrew Dunham <andrew@du.nham.ca>",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Environment :: Web Environment",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: Apache Software License",
          "Operating System :: OS Independent",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3 :: Only",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Topic :: Software Development :: Libraries :: Python Modules"
        ],
        "requires_dist": [
          "atomicwrites==1.2.1; extra == 'dev'",
          "attrs==19.2.0; extra == 'dev'",
          "coverage==6.5.0; extra == 'dev'",
          "hatch; extra == 'dev'",
          "invoke==1.7.3; extra == 'dev'",
          "more-itertools==4.3.0; extra == 'dev'",
          "pbr==4.3.0; extra == 'dev'",
          "pluggy==1.0.0; extra == 'dev'",
          "py==1.11.0; extra == 'dev'",
          "pytest-cov==4.0.0; extra == 'dev'",
          "pytest-timeout==2.1.0; extra == 'dev'",
          "pytest==7.2.0; extra == 'dev'",
          "pyyaml==5.1; extra == 'dev'"
        ],
        "requires_python": ">=3.7",
        "project_url": [
          "Homepage, https://github.com/andrew-d/python-multipart",
          "Documentation, https://andrew-d.github.io/python-multipart/",
          "Changelog, https://github.com/andrew-d/python-multipart/tags",
          "Source, https://github.com/andrew-d/python-multipart"
        ],
        "provides_extra": [
          "dev"
        ],
        "description": "==================\n Python-Multipart\n==================\n\n.. image:: https://github.com/andrew-d/python-multipart/actions/workflows/test.yaml/badge.svg\n        :target: https://github.com/andrew-d/python-multipart/actions\n\n\npython-multipart is an Apache2 licensed streaming multipart parser for Python.\nTest coverage is currently 100%.\nDocumentation is available `here`_.\n\n.. _here: https://andrew-d.github.io/python-multipart/\n\nWhy?\n----\n\nBecause streaming uploads are awesome for large files.\n\nHow to Test\n-----------\n\nIf you want to test:\n\n.. code-block:: bash\n\n    $ pip install .[dev]\n    $ inv test\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/python_multipart-0.0.6.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "python-rapidjson",
        "version": "1.10",
        "summary": "Python wrapper around rapidjson",
        "description_content_type": "text/x-rst",
        "keywords": [
          "json",
          "rapidjson"
        ],
        "home_page": "https://github.com/python-rapidjson/python-rapidjson",
        "author": "Ken Robbins",
        "author_email": "ken@kenrobbins.com",
        "maintainer": "Lele Gaifax",
        "maintainer_email": "lele@metapensiero.it",
        "license": "MIT License",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: MIT License",
          "Programming Language :: C++",
          "Programming Language :: Python :: 3 :: Only",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python"
        ],
        "requires_python": ">=3.6",
        "description": ".. -*- coding: utf-8 -*-\n.. :Project:   python-rapidjson -- Introduction\n.. :Author:    Ken Robbins <ken@kenrobbins.com>\n.. :License:   MIT License\n.. :Copyright: © 2015 Ken Robbins\n.. :Copyright: © 2016, 2017, 2018, 2020, 2022 Lele Gaifax\n..\n\n==================\n python-rapidjson\n==================\n\nPython wrapper around RapidJSON\n===============================\n\n:Authors: Ken Robbins <ken@kenrobbins.com>; Lele Gaifax <lele@metapensiero.it>\n:License: `MIT License`__\n:Status: |build| |doc|\n\n__ https://raw.githubusercontent.com/python-rapidjson/python-rapidjson/master/LICENSE\n.. |build| image:: https://travis-ci.org/python-rapidjson/python-rapidjson.svg?branch=master\n   :target: https://travis-ci.org/python-rapidjson/python-rapidjson\n   :alt: Build status\n.. |doc| image:: https://readthedocs.org/projects/python-rapidjson/badge/?version=latest\n   :target: https://readthedocs.org/projects/python-rapidjson/builds/\n   :alt: Documentation status\n\nRapidJSON_ is an extremely fast C++ JSON parser and serialization library: this module\nwraps it into a Python 3 extension, exposing its serialization/deserialization (to/from\neither ``bytes``, ``str`` or *file-like* instances) and `JSON Schema`__ validation\ncapabilities.\n\nLatest version documentation is automatically rendered by `Read the Docs`__.\n\n__ http://json-schema.org/documentation.html\n__ https://python-rapidjson.readthedocs.io/en/latest/\n\n\nGetting Started\n---------------\n\nFirst install ``python-rapidjson``:\n\n.. code-block:: bash\n\n    $ pip install python-rapidjson\n\nor, if you prefer `Conda`__:\n\n.. code-block:: bash\n\n    $ conda install -c conda-forge python-rapidjson\n\n__ https://conda.io/docs/\n\nBasic usage looks like this:\n\n.. code-block:: python\n\n    >>> import rapidjson\n    >>> data = {'foo': 100, 'bar': 'baz'}\n    >>> rapidjson.dumps(data)\n    '{\"foo\":100,\"bar\":\"baz\"}'\n    >>> rapidjson.loads('{\"bar\":\"baz\",\"foo\":100}')\n    {'bar': 'baz', 'foo': 100}\n    >>>\n    >>> class Stream:\n    ...   def write(self, data):\n    ...      print(\"Chunk:\", data)\n    ...\n    >>> rapidjson.dump(data, Stream(), chunk_size=5)\n    Chunk: b'{\"foo'\n    Chunk: b'\":100'\n    Chunk: b',\"bar'\n    Chunk: b'\":\"ba'\n    Chunk: b'z\"}'\n\n\nDevelopment\n-----------\n\nIf you want to install the development version (maybe to contribute fixes or\nenhancements) you may clone the repository:\n\n.. code-block:: bash\n\n    $ git clone --recursive https://github.com/python-rapidjson/python-rapidjson.git\n\n.. note:: The ``--recursive`` option is needed because we use a *submodule* to\n          include RapidJSON_ sources. Alternatively you can do a plain\n          ``clone`` immediately followed by a ``git submodule update --init``.\n\n          Alternatively, if you already have (a *compatible* version of)\n          RapidJSON includes around, you can compile the module specifying\n          their location with the option ``--rj-include-dir``, for example:\n\n          .. code-block:: shell\n\n             $ python3 setup.py build --rj-include-dir=/usr/include/rapidjson\n\nA set of makefiles implement most common operations, such as *build*, *check*\nand *release*; see ``make help`` output for a list of available targets.\n\n\nPerformance\n-----------\n\n``python-rapidjson`` tries to be as performant as possible while staying\ncompatible with the ``json`` module.\n\nSee the `this section`__ in the documentation for a comparison with other JSON libraries.\n\n__ https://python-rapidjson.readthedocs.io/en/latest/benchmarks.html\n\n\nIncompatibility\n---------------\n\nAlthough we tried to implement an API similar to the standard library ``json``, being a\nstrict *drop-in* replacement in not our goal and we have decided to depart from there in\nsome aspects. See `this section`__ in the documentation for further details.\n\n__ https://python-rapidjson.readthedocs.io/en/latest/quickstart.html#incompatibilities\n\n.. _RapidJSON: http://rapidjson.org/\n\n\nChanges\n-------\n\n1.10 (2023-03-15)\n~~~~~~~~~~~~~~~~~\n\n* Use `current master`__ version of rapidjson\n\n  __ https://github.com/Tencent/rapidjson/commit/083f359f5c36198accc2b9360ce1e32a333231d9\n\n* Produce ppc64le wheels, thanks to mgiessing (`PR #170`__)\n\n  __ https://github.com/python-rapidjson/python-rapidjson/pull/170\n\n* Use cibuildwheel `2.21.1`__\n\n  __ https://cibuildwheel.readthedocs.io/en/stable/changelog/#v2121\n\n\n1.9 (2022-10-17)\n~~~~~~~~~~~~~~~~\n\n* Produce Python 3.11 wheels, thanks to ``cibuildwheel`` `2.11.1`__\n\n  __ https://cibuildwheel.readthedocs.io/en/stable/changelog/#v2111\n\n\n1.8 (2022-07-07)\n~~~~~~~~~~~~~~~~\n\n* Fix `problem on macOS`__ explicitly requiring C++11, thanks to agate-pris (`issue\n  #166`__)\n\n  __ https://github.com/Tencent/rapidjson/commit/9965ab37f6cfae3d58a0a6e34c76112866ace0b1#commitcomment-77875054\n  __ https://github.com/python-rapidjson/python-rapidjson/issues/166\n\n\n1.7 (2022-07-06)\n~~~~~~~~~~~~~~~~\n\n* Use `current master`__ version of rapidjson\n\n  __ https://github.com/Tencent/rapidjson/commit/232389d4f1012dddec4ef84861face2d2ba85709\n\n* Update the test suite to work on Pyston, thanks to Kevin Modzelewski (`PR #161`__)\n\n  __ https://github.com/python-rapidjson/python-rapidjson/pull/161\n\n\n1.6 (2022-02-19)\n~~~~~~~~~~~~~~~~\n\n* Fix memory leak when using ``end_array`` (`issue #160`__)\n\n  __ https://github.com/python-rapidjson/python-rapidjson/issues/160\n\n\n1.5 (2021-10-16)\n~~~~~~~~~~~~~~~~\n\n* Fix serialization bug when using DM_UNIX_TIME in a non-C locale context\n\n\n1.4 (2021-06-25)\n~~~~~~~~~~~~~~~~\n\n* Build binary wheel for aarch64, thanks to odidev (`PR #156`__)\n\n  __ https://github.com/python-rapidjson/python-rapidjson/pull/156\n\n\n1.3 (2021-06-25)\n~~~~~~~~~~~~~~~~\n\n* Yet another attempt to fix automatic wheels upload\n\n\n1.2 (2021-06-25)\n~~~~~~~~~~~~~~~~\n\n* Fix automatic wheels upload from GH Actions to PyPI\n\n\n1.1 (2021-06-25)\n~~~~~~~~~~~~~~~~\n\n* Reduce decoder memory consumption by uniquifiying keys in the loaded dictionaries\n\n* Implement an alternative way of transmogrify JSON objects, similar to ``json``\\ 's\n  ``object_pairs_hook`` load option (`issue #154`__)\n\n  __ https://github.com/python-rapidjson/python-rapidjson/issues/154\n\n\n1.0 (2020-12-13)\n~~~~~~~~~~~~~~~~\n\n* Require Python 3.6 or greater\n\n* New serialization options, ``iterable_mode`` and ``mapping_mode``, to give some control\n  on how generic iterables and mappings get encoded (fix `issue #149`__ and\n  `issue #150`__)\n\n  __ https://github.com/python-rapidjson/python-rapidjson/issues/149\n  __ https://github.com/python-rapidjson/python-rapidjson/issues/150\n\n* Internal refactorings, folding \"skipkeys\" and \"sort_keys\" arguments into the\n  mapping_mode options, respectively as MM_SKIP_NON_STRING_KEYS and MM_SORT_KEYS: \"old\"\n  arguments kept for backward compatibility\n\n* Bump major version to 1, tag as \"production/stable\" and switch to a simpler X.Y\n  versioning schema\n\n\n0.9.4 (2020-11-16)\n~~~~~~~~~~~~~~~~~~\n\n* Fix memory leak loading an invalid JSON (`issue #148`__)\n\n  __ https://github.com/python-rapidjson/python-rapidjson/issues/148\n\n\n0.9.3 (2020-10-24)\n~~~~~~~~~~~~~~~~~~\n\n* Fix access to ``Encoder`` instance attributes (`issue #147`__)\n\n  __ https://github.com/python-rapidjson/python-rapidjson/issues/147\n\n\n0.9.2 (2020-10-24)\n~~~~~~~~~~~~~~~~~~\n\n* Use `current master`__ version of rapidjson\n\n  __ https://github.com/Tencent/rapidjson/commit/0ccdbf364c577803e2a751f5aededce935314313\n\n* Enable GH Actions-based test workflow, thanks to Martin Thoma (`PR #143`__)\n\n  __ https://github.com/python-rapidjson/python-rapidjson/issues/143\n\n* Produce Python 3.9 wheels, disable testing under Python < 3.6\n\n* Make the character used for indentation in pretty mode a parameter (`issue #135`__)\n\n  __ https://github.com/python-rapidjson/python-rapidjson/issues/135\n\n* Handle wider precision range in timestamps fractional seconds (`PR 133`__), thanks to\n  Karl Seguin\n\n  __ https://github.com/python-rapidjson/python-rapidjson/pull/133\n\n* Add comparison benchmarks against orjson and hyperjson (`issue #130`__ and `PR #131`__,\n  thanks to Sebastian Pipping)\n\n  __ https://github.com/python-rapidjson/python-rapidjson/issues/130\n  __ https://github.com/python-rapidjson/python-rapidjson/pull/131\n\n\n0.9.1 (2019-11-13)\n~~~~~~~~~~~~~~~~~~\n\n* Fix memory leak in case of failed validation (`issue #126`__)\n\n  __ https://github.com/python-rapidjson/python-rapidjson/issues/126\n\n\n0.9.0 (2019-11-13)\n~~~~~~~~~~~~~~~~~~\n\n* Produce Python 3.8 wheels\n\n* Compatibility fix for Python 3.8 (`issue #125`__)\n\n  __ https://github.com/python-rapidjson/python-rapidjson/issues/125\n\n* New dump option ``write_mode``, supporting RapidJSON's ``kFormatSingleLineArray`` option\n  (`issue #123`__), thanks to Nguyễn Hồng Quân for the initial implementation (`PR #124`__)\n\n  __ https://github.com/python-rapidjson/python-rapidjson/issues/123\n  __ https://github.com/python-rapidjson/python-rapidjson/pull/124\n\n\n0.8.0 (2019-08-09)\n~~~~~~~~~~~~~~~~~~\n\n* New serialization option ``bytes_mode`` to control how bytes instances get encoded\n  (`issue #122`__)\n\n  __ https://github.com/python-rapidjson/python-rapidjson/issues/122\n\n\n0.7.2 (2019-06-09)\n~~~~~~~~~~~~~~~~~~\n\n* Hopefully fix the memory leak when loading from a stream (`issue #117`__)\n\n  __ https://github.com/python-rapidjson/python-rapidjson/issues/117\n\n\n0.7.1 (2019-05-11)\n~~~~~~~~~~~~~~~~~~\n\n* Raise a more specific exception on loading errors, ``JSONDecodeError``, instead of\n  generic ``ValueError`` (`issue #118`__)\n\n  __ https://github.com/python-rapidjson/python-rapidjson/issues/118\n\n* Fix optimization path when using ``OrderedDict``\\ s (`issue #119`__)\n\n  __ https://github.com/python-rapidjson/python-rapidjson/issues/119\n\n* Fix serialization of ``IntEnum``\\ s (`issue #121`__)\n\n  __ https://github.com/python-rapidjson/python-rapidjson/issues/121\n\n* I spent *quite a lot* of time investigating on the memory leak when loading from a\n  stream (`issue #117`__): as I was not able to fully replicate the problem, I cannot be\n  sure I solved the problem... sorry!\n\n  __ https://github.com/python-rapidjson/python-rapidjson/issues/117\n\n\n0.7.0 (2019-02-11)\n~~~~~~~~~~~~~~~~~~\n\n* Raise correct exception in code samples (`PR #109`__), thanks to Thomas Dähling\n\n  __ https://github.com/python-rapidjson/python-rapidjson/pull/109\n\n* Fix compilation with system-wide install of rapidjson (`issue #110`__)\n\n  __ https://github.com/python-rapidjson/python-rapidjson/issues/110\n\n* Use current master version of rapidjson, that includes a `fix`__ for its `issue #1368`__\n  and `issue #1336`__, and cures several compilation warnings as well (`issue #112`__ and\n  `issue #107`__)\n\n  __ https://github.com/Tencent/rapidjson/commit/f5e5d47fac0f654749c4d6267015005b74643dff\n  __ https://github.com/Tencent/rapidjson/issues/1368\n  __ https://github.com/Tencent/rapidjson/issues/1336\n  __ https://github.com/python-rapidjson/python-rapidjson/issues/112\n  __ https://github.com/python-rapidjson/python-rapidjson/issues/107\n\n* Fix memory leak when using ``object_hook`` (`issue #115`__)\n\n  __ https://github.com/python-rapidjson/python-rapidjson/issues/115\n\n\n0.6.3 (2018-07-11)\n~~~~~~~~~~~~~~~~~~\n\n* No visible changes, but now PyPI carries binary wheels for Python 3.7.\n\n\n0.6.2 (2018-06-08)\n~~~~~~~~~~~~~~~~~~\n\n* Use a more specific ValidationError, to differentiate from invalid JSON\n\n\n0.6.1 (2018-06-06)\n~~~~~~~~~~~~~~~~~~\n\n* Nothing new, attempt to build Python 3.6 binary wheels on Travis CI\n\n\n0.6.0 (2018-06-06)\n~~~~~~~~~~~~~~~~~~\n\n* Add a new comparison table involving ``ensure_ascii`` (`issue #98`__)\n\n  __ https://github.com/python-rapidjson/python-rapidjson/issues/98\n\n* Use Python's ``repr()`` to emit float values instead of rapidjson's ``dtoa()`` (`issue\n  #101`__)\n\n  __ https://github.com/python-rapidjson/python-rapidjson/issues/101\n\n* Use a newer (although unreleased) version of rapidjson to fix an `issue`__ with\n  JSONSchema validation (`PR #103`__), thanks to Anthony Miyaguchi\n\n  __ https://github.com/Tencent/rapidjson/issues/825\n  __ https://github.com/python-rapidjson/python-rapidjson/pull/103\n\n\n0.5.2 (2018-03-31)\n~~~~~~~~~~~~~~~~~~\n\n* Tiny tweak to restore macOS build on Travis CI\n\n\n0.5.1 (2018-03-31)\n~~~~~~~~~~~~~~~~~~\n\n* Minor tweaks to CI and PyPI deploy configuration\n\n\n0.5.0 (2018-03-31)\n~~~~~~~~~~~~~~~~~~\n\n* New ``RawJSON`` class, allowing inclusion of *pre-serialized* content (`PR #95`__ and\n  `PR #96`__), thanks to Silvio Tomatis\n\n  __ https://github.com/python-rapidjson/python-rapidjson/pull/95\n  __ https://github.com/python-rapidjson/python-rapidjson/pull/96\n\n\n0.4.3 (2018-01-14)\n~~~~~~~~~~~~~~~~~~\n\n* Deserialize from ``bytes`` and ``bytearray`` instances, ensuring they\n  contain valid UTF-8 data\n\n* Speed up parsing of floating point numbers, avoiding intermediary conversion\n  to a Python string (`PR #94`__)\n\n  __ https://github.com/python-rapidjson/python-rapidjson/pull/94\n\n\n0.4.2 (2018-01-09)\n~~~~~~~~~~~~~~~~~~\n\n* Fix precision handling of DM_UNIX_TIME timestamps\n\n\n0.4.1 (2018-01-08)\n~~~~~~~~~~~~~~~~~~\n\n* Fix memory leaks in ``Decoder()`` and ``Encoder()`` classes, related to\n  bad handling of ``PyObject_GetAttr()`` result value\n\n* Fix compatibility with Python 3.7a\n\n\n0.4.0 (2018-01-05)\n~~~~~~~~~~~~~~~~~~\n\n* Implemented the streaming interface, see `load()`__ and `dump()`__ (`issue #80`__)\n\n  __ https://python-rapidjson.readthedocs.io/en/latest/load.html\n  __ https://python-rapidjson.readthedocs.io/en/latest/dump.html\n  __ https://github.com/python-rapidjson/python-rapidjson/issues/80\n\n  **Backward incompatibility**: now the *flags* arguments on all the functions are\n  *keyword only*, to mimic stdlib's ``json`` style\n\n\n0.3.2 (2017-12-21)\n~~~~~~~~~~~~~~~~~~\n\n* Reduce compiler warnings (`issue #87`__)\n\n  __ https://github.com/python-rapidjson/python-rapidjson/issues/87\n\n\n0.3.1 (2017-12-20)\n~~~~~~~~~~~~~~~~~~\n\n* Fix Travis CI recipe to accomodate MacOS\n\n\n0.3.0 (2017-12-20)\n~~~~~~~~~~~~~~~~~~\n\n* Fix compilation on MacOS (`issue #78`__)\n\n  __ https://github.com/python-rapidjson/python-rapidjson/issues/78\n\n* Handle generic iterables (`PR #89`__)\n\n  __ https://github.com/python-rapidjson/python-rapidjson/pull/89\n\n  **Backward incompatibility**: the ``dumps()`` function and the ``Encoder()``\n  constructor used to accept a ``max_recursion_depth`` argument, to control\n  the maximum allowed nesting of Python structures; since the underlying\n  function is now effectively recursive, it has been replaced by the generic\n  `sys.setrecursionlimit()`__ mechanism\n\n  __ https://docs.python.org/3.6/library/sys.html#sys.setrecursionlimit\n\n\n0.2.7 (2017-12-08)\n~~~~~~~~~~~~~~~~~~\n\n* Restore compatibility with Python < 3.6\n\n\n0.2.6 (2017-12-08)\n~~~~~~~~~~~~~~~~~~\n\n* Fix memory leaks when using object_hook/start_object/end_object\n\n\n0.2.5 (2017-09-30)\n~~~~~~~~~~~~~~~~~~\n\n* Fix bug where error handling code could raise an exception causing a\n  confusing exception to be returned (`PR #82`__)\n\n  __ https://github.com/python-rapidjson/python-rapidjson/pull/82\n\n* Fix bug where loads's ``object_hook`` and dumps's ``default`` arguments\n  could not be passed ``None`` explicitly (`PR #83`__)\n\n  __ https://github.com/python-rapidjson/python-rapidjson/pull/83\n\n* Fix crash when dealing with surrogate pairs (`issue #81`__)\n\n  __ https://github.com/python-rapidjson/python-rapidjson/issues/81\n\n\n0.2.4 (2017-09-17)\n~~~~~~~~~~~~~~~~~~\n\n* Fix compatibility with MacOS/clang\n\n\n0.2.3 (2017-08-24)\n~~~~~~~~~~~~~~~~~~\n\n* Limit the precision of DM_UNIX_TIME timestamps to six decimal digits\n\n\n0.2.2 (2017-08-24)\n~~~~~~~~~~~~~~~~~~\n\n* Nothing new, attempt to fix production of Python 3.6 binary wheels\n\n\n0.2.1 (2017-08-24)\n~~~~~~~~~~~~~~~~~~\n\n* Nothing new, attempt to fix production of Python 3.6 binary wheels\n\n\n0.2.0 (2017-08-24)\n~~~~~~~~~~~~~~~~~~\n\n* New ``parse_mode`` option, implementing relaxed JSON syntax (`issue #73`__)\n\n  __ https://github.com/python-rapidjson/python-rapidjson/issues/73\n\n* New ``Encoder`` and ``Decoder``, implementing a class-based interface\n\n* New ``Validator``, exposing the underlying *JSON schema* validation (`issue #71`__)\n\n  __ https://github.com/python-rapidjson/python-rapidjson/issues/71\n\n\n0.1.0 (2017-08-16)\n~~~~~~~~~~~~~~~~~~\n\n* Remove beta status\n\n\n0.1.0b4 (2017-08-14)\n~~~~~~~~~~~~~~~~~~~~\n\n* Make execution of the test suite on Appveyor actually happen\n\n\n0.1.0b3 (2017-08-12)\n~~~~~~~~~~~~~~~~~~~~\n\n* Exclude CI configurations from the source distribution\n\n\n0.1.0b2 (2017-08-12)\n~~~~~~~~~~~~~~~~~~~~\n\n* Fix Powershell wheel upload script in appveyor configuration\n\n\n0.1.0b1 (2017-08-12)\n~~~~~~~~~~~~~~~~~~~~\n\n* Compilable with somewhat old g++ (`issue #69`__)\n\n  __ https://github.com/python-rapidjson/python-rapidjson/issues/69\n\n* **Backward incompatibilities**:\n\n  - all ``DATETIME_MODE_XXX`` constants have been shortened to ``DM_XXX``\n    ``DATETIME_MODE_ISO8601_UTC`` has been renamed to ``DM_SHIFT_TO_UTC``\n\n  - all ``UUID_MODE_XXX`` constants have been shortened to ``UM_XXX``\n\n* New option ``DM_UNIX_TIME`` to serialize date, datetime and time values as\n  `UNIX timestamps`__ targeting `issue #61`__\n\n  __ https://en.wikipedia.org/wiki/Unix_time\n  __ https://github.com/python-rapidjson/python-rapidjson/issues/61\n\n* New option ``DM_NAIVE_IS_UTC`` to treat naïve datetime and time values as if\n  they were in the UTC timezone (also for issue #61)\n\n* New keyword argument ``number_mode`` to use underlying C library numbers\n\n* Binary wheels for GNU/Linux and Windows on PyPI (one would hope: this is the\n  reason for the beta1 release)\n\n\n0.0.11 (2017-03-05)\n~~~~~~~~~~~~~~~~~~~\n\n* Fix a couple of refcount handling glitches, hopefully targeting `issue\n  #48`__.\n\n  __ https://github.com/python-rapidjson/python-rapidjson/issues/48\n\n\n0.0.10 (2017-03-02)\n~~~~~~~~~~~~~~~~~~~\n\n* Fix source distribution to contain all required stuff (`PR #64`__)\n\n  __ https://github.com/python-rapidjson/python-rapidjson/pull/64\n\n\n0.0.9 (2017-03-02)\n~~~~~~~~~~~~~~~~~~\n\n* CI testing on GitHub\n\n* Allow using locally installed RapidJSON library (`issue #60`__)\n\n  __ https://github.com/python-rapidjson/python-rapidjson/issues/60\n\n* Bug fixes (`issue #37`__, `issue #51`__, `issue #57`__)\n\n  __ https://github.com/python-rapidjson/python-rapidjson/issues/37\n  __ https://github.com/python-rapidjson/python-rapidjson/issues/51\n  __ https://github.com/python-rapidjson/python-rapidjson/issues/57\n\n\n0.0.8 (2016-12-09)\n~~~~~~~~~~~~~~~~~~\n\n* Use unpatched RapidJSON 1.1 (`PR #46`__)\n\n  __ https://github.com/python-rapidjson/python-rapidjson/pull/46\n\n* Handle serialization and deserialization of datetime, date and time\n  instances (`PR #35`__) and of UUID instances (`PR #40`__)\n\n  __ https://github.com/python-rapidjson/python-rapidjson/pull/35\n  __ https://github.com/python-rapidjson/python-rapidjson/pull/40\n\n* Sphinx based documentation (`PR #44`__)\n\n  __ https://github.com/python-rapidjson/python-rapidjson/pull/44\n\n* Refresh benchmarks (`PR #45`__)\n\n  __ https://github.com/python-rapidjson/python-rapidjson/pull/45\n\n* Bug fixes (`issue #25`__, `issue #38`__, `PR #43`__)\n\n  __ https://github.com/python-rapidjson/python-rapidjson/issues/25\n  __ https://github.com/python-rapidjson/python-rapidjson/issues/38\n  __ https://github.com/python-rapidjson/python-rapidjson/pull/43\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/python_rapidjson-1.10.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "pytz",
        "version": "2023.3",
        "platform": [
          "Independent"
        ],
        "summary": "World timezone definitions, modern and historical",
        "keywords": [
          "timezone",
          "tzinfo",
          "datetime",
          "olson",
          "time"
        ],
        "home_page": "http://pythonhosted.org/pytz",
        "download_url": "https://pypi.org/project/pytz/",
        "author": "Stuart Bishop",
        "author_email": "stuart@stuartbishop.net",
        "maintainer": "Stuart Bishop",
        "maintainer_email": "stuart@stuartbishop.net",
        "license": "MIT",
        "classifier": [
          "Development Status :: 6 - Mature",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: MIT License",
          "Natural Language :: English",
          "Operating System :: OS Independent",
          "Programming Language :: Python",
          "Programming Language :: Python :: 2",
          "Programming Language :: Python :: 2.4",
          "Programming Language :: Python :: 2.5",
          "Programming Language :: Python :: 2.6",
          "Programming Language :: Python :: 2.7",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.1",
          "Programming Language :: Python :: 3.2",
          "Programming Language :: Python :: 3.3",
          "Programming Language :: Python :: 3.4",
          "Programming Language :: Python :: 3.5",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Topic :: Software Development :: Libraries :: Python Modules"
        ],
        "description": "pytz - World Timezone Definitions for Python\n============================================\n\n:Author: Stuart Bishop <stuart@stuartbishop.net>\n\nIntroduction\n~~~~~~~~~~~~\n\npytz brings the Olson tz database into Python. This library allows\naccurate and cross platform timezone calculations using Python 2.4\nor higher. It also solves the issue of ambiguous times at the end\nof daylight saving time, which you can read more about in the Python\nLibrary Reference (``datetime.tzinfo``).\n\nAlmost all of the Olson timezones are supported.\n\n.. note::\n\n    Projects using Python 3.9 or later should be using the support\n    now included as part of the standard library, and third party\n    packages work with it such as `tzdata <https://pypi.org/project/tzdata/>`_.\n    pytz offers no advantages beyond backwards compatibility with\n    code written for earlier versions of Python.\n\n.. note::\n\n    This library differs from the documented Python API for\n    tzinfo implementations; if you want to create local wallclock\n    times you need to use the ``localize()`` method documented in this\n    document. In addition, if you perform date arithmetic on local\n    times that cross DST boundaries, the result may be in an incorrect\n    timezone (ie. subtract 1 minute from 2002-10-27 1:00 EST and you get\n    2002-10-27 0:59 EST instead of the correct 2002-10-27 1:59 EDT). A\n    ``normalize()`` method is provided to correct this. Unfortunately these\n    issues cannot be resolved without modifying the Python datetime\n    implementation (see PEP-431).\n\n\nInstallation\n~~~~~~~~~~~~\n\nThis package can either be installed using ``pip`` or from a tarball using the\nstandard Python distutils.\n\nIf you are installing using ``pip``, you don't need to download anything as the\nlatest version will be downloaded for you from PyPI::\n\n    pip install pytz\n\nIf you are installing from a tarball, run the following command as an\nadministrative user::\n\n    python setup.py install\n\n\npytz for Enterprise\n~~~~~~~~~~~~~~~~~~~\n\nAvailable as part of the Tidelift Subscription.\n\nThe maintainers of pytz and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source dependencies you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact dependencies you use. `Learn more. <https://tidelift.com/subscription/pkg/pypi-pytz?utm_source=pypi-pytz&utm_medium=referral&utm_campaign=enterprise&utm_term=repo>`_.\n\n\nExample & Usage\n~~~~~~~~~~~~~~~\n\nLocalized times and date arithmetic\n-----------------------------------\n\n>>> from datetime import datetime, timedelta\n>>> from pytz import timezone\n>>> import pytz\n>>> utc = pytz.utc\n>>> utc.zone\n'UTC'\n>>> eastern = timezone('US/Eastern')\n>>> eastern.zone\n'US/Eastern'\n>>> amsterdam = timezone('Europe/Amsterdam')\n>>> fmt = '%Y-%m-%d %H:%M:%S %Z%z'\n\nThis library only supports two ways of building a localized time. The\nfirst is to use the ``localize()`` method provided by the pytz library.\nThis is used to localize a naive datetime (datetime with no timezone\ninformation):\n\n>>> loc_dt = eastern.localize(datetime(2002, 10, 27, 6, 0, 0))\n>>> print(loc_dt.strftime(fmt))\n2002-10-27 06:00:00 EST-0500\n\nThe second way of building a localized time is by converting an existing\nlocalized time using the standard ``astimezone()`` method:\n\n>>> ams_dt = loc_dt.astimezone(amsterdam)\n>>> ams_dt.strftime(fmt)\n'2002-10-27 12:00:00 CET+0100'\n\nUnfortunately using the tzinfo argument of the standard datetime\nconstructors ''does not work'' with pytz for many timezones.\n\n>>> datetime(2002, 10, 27, 12, 0, 0, tzinfo=amsterdam).strftime(fmt)  # /!\\ Does not work this way!\n'2002-10-27 12:00:00 LMT+0018'\n\nIt is safe for timezones without daylight saving transitions though, such\nas UTC:\n\n>>> datetime(2002, 10, 27, 12, 0, 0, tzinfo=pytz.utc).strftime(fmt)  # /!\\ Not recommended except for UTC\n'2002-10-27 12:00:00 UTC+0000'\n\nThe preferred way of dealing with times is to always work in UTC,\nconverting to localtime only when generating output to be read\nby humans.\n\n>>> utc_dt = datetime(2002, 10, 27, 6, 0, 0, tzinfo=utc)\n>>> loc_dt = utc_dt.astimezone(eastern)\n>>> loc_dt.strftime(fmt)\n'2002-10-27 01:00:00 EST-0500'\n\nThis library also allows you to do date arithmetic using local\ntimes, although it is more complicated than working in UTC as you\nneed to use the ``normalize()`` method to handle daylight saving time\nand other timezone transitions. In this example, ``loc_dt`` is set\nto the instant when daylight saving time ends in the US/Eastern\ntimezone.\n\n>>> before = loc_dt - timedelta(minutes=10)\n>>> before.strftime(fmt)\n'2002-10-27 00:50:00 EST-0500'\n>>> eastern.normalize(before).strftime(fmt)\n'2002-10-27 01:50:00 EDT-0400'\n>>> after = eastern.normalize(before + timedelta(minutes=20))\n>>> after.strftime(fmt)\n'2002-10-27 01:10:00 EST-0500'\n\nCreating local times is also tricky, and the reason why working with\nlocal times is not recommended. Unfortunately, you cannot just pass\na ``tzinfo`` argument when constructing a datetime (see the next\nsection for more details)\n\n>>> dt = datetime(2002, 10, 27, 1, 30, 0)\n>>> dt1 = eastern.localize(dt, is_dst=True)\n>>> dt1.strftime(fmt)\n'2002-10-27 01:30:00 EDT-0400'\n>>> dt2 = eastern.localize(dt, is_dst=False)\n>>> dt2.strftime(fmt)\n'2002-10-27 01:30:00 EST-0500'\n\nConverting between timezones is more easily done, using the\nstandard astimezone method.\n\n>>> utc_dt = utc.localize(datetime.utcfromtimestamp(1143408899))\n>>> utc_dt.strftime(fmt)\n'2006-03-26 21:34:59 UTC+0000'\n>>> au_tz = timezone('Australia/Sydney')\n>>> au_dt = utc_dt.astimezone(au_tz)\n>>> au_dt.strftime(fmt)\n'2006-03-27 08:34:59 AEDT+1100'\n>>> utc_dt2 = au_dt.astimezone(utc)\n>>> utc_dt2.strftime(fmt)\n'2006-03-26 21:34:59 UTC+0000'\n>>> utc_dt == utc_dt2\nTrue\n\nYou can take shortcuts when dealing with the UTC side of timezone\nconversions. ``normalize()`` and ``localize()`` are not really\nnecessary when there are no daylight saving time transitions to\ndeal with.\n\n>>> utc_dt = datetime.utcfromtimestamp(1143408899).replace(tzinfo=utc)\n>>> utc_dt.strftime(fmt)\n'2006-03-26 21:34:59 UTC+0000'\n>>> au_tz = timezone('Australia/Sydney')\n>>> au_dt = au_tz.normalize(utc_dt.astimezone(au_tz))\n>>> au_dt.strftime(fmt)\n'2006-03-27 08:34:59 AEDT+1100'\n>>> utc_dt2 = au_dt.astimezone(utc)\n>>> utc_dt2.strftime(fmt)\n'2006-03-26 21:34:59 UTC+0000'\n\n\n``tzinfo`` API\n--------------\n\nThe ``tzinfo`` instances returned by the ``timezone()`` function have\nbeen extended to cope with ambiguous times by adding an ``is_dst``\nparameter to the ``utcoffset()``, ``dst()`` && ``tzname()`` methods.\n\n>>> tz = timezone('America/St_Johns')\n\n>>> normal = datetime(2009, 9, 1)\n>>> ambiguous = datetime(2009, 10, 31, 23, 30)\n\nThe ``is_dst`` parameter is ignored for most timestamps. It is only used\nduring DST transition ambiguous periods to resolve that ambiguity.\n\n>>> print(tz.utcoffset(normal, is_dst=True))\n-1 day, 21:30:00\n>>> print(tz.dst(normal, is_dst=True))\n1:00:00\n>>> tz.tzname(normal, is_dst=True)\n'NDT'\n\n>>> print(tz.utcoffset(ambiguous, is_dst=True))\n-1 day, 21:30:00\n>>> print(tz.dst(ambiguous, is_dst=True))\n1:00:00\n>>> tz.tzname(ambiguous, is_dst=True)\n'NDT'\n\n>>> print(tz.utcoffset(normal, is_dst=False))\n-1 day, 21:30:00\n>>> tz.dst(normal, is_dst=False).seconds\n3600\n>>> tz.tzname(normal, is_dst=False)\n'NDT'\n\n>>> print(tz.utcoffset(ambiguous, is_dst=False))\n-1 day, 20:30:00\n>>> tz.dst(ambiguous, is_dst=False)\ndatetime.timedelta(0)\n>>> tz.tzname(ambiguous, is_dst=False)\n'NST'\n\nIf ``is_dst`` is not specified, ambiguous timestamps will raise\nan ``pytz.exceptions.AmbiguousTimeError`` exception.\n\n>>> print(tz.utcoffset(normal))\n-1 day, 21:30:00\n>>> print(tz.dst(normal))\n1:00:00\n>>> tz.tzname(normal)\n'NDT'\n\n>>> import pytz.exceptions\n>>> try:\n...     tz.utcoffset(ambiguous)\n... except pytz.exceptions.AmbiguousTimeError:\n...     print('pytz.exceptions.AmbiguousTimeError: %s' % ambiguous)\npytz.exceptions.AmbiguousTimeError: 2009-10-31 23:30:00\n>>> try:\n...     tz.dst(ambiguous)\n... except pytz.exceptions.AmbiguousTimeError:\n...     print('pytz.exceptions.AmbiguousTimeError: %s' % ambiguous)\npytz.exceptions.AmbiguousTimeError: 2009-10-31 23:30:00\n>>> try:\n...     tz.tzname(ambiguous)\n... except pytz.exceptions.AmbiguousTimeError:\n...     print('pytz.exceptions.AmbiguousTimeError: %s' % ambiguous)\npytz.exceptions.AmbiguousTimeError: 2009-10-31 23:30:00\n\n\nProblems with Localtime\n~~~~~~~~~~~~~~~~~~~~~~~\n\nThe major problem we have to deal with is that certain datetimes\nmay occur twice in a year. For example, in the US/Eastern timezone\non the last Sunday morning in October, the following sequence\nhappens:\n\n    - 01:00 EDT occurs\n    - 1 hour later, instead of 2:00am the clock is turned back 1 hour\n      and 01:00 happens again (this time 01:00 EST)\n\nIn fact, every instant between 01:00 and 02:00 occurs twice. This means\nthat if you try and create a time in the 'US/Eastern' timezone\nthe standard datetime syntax, there is no way to specify if you meant\nbefore of after the end-of-daylight-saving-time transition. Using the\npytz custom syntax, the best you can do is make an educated guess:\n\n>>> loc_dt = eastern.localize(datetime(2002, 10, 27, 1, 30, 00))\n>>> loc_dt.strftime(fmt)\n'2002-10-27 01:30:00 EST-0500'\n\nAs you can see, the system has chosen one for you and there is a 50%\nchance of it being out by one hour. For some applications, this does\nnot matter. However, if you are trying to schedule meetings with people\nin different timezones or analyze log files it is not acceptable.\n\nThe best and simplest solution is to stick with using UTC.  The pytz\npackage encourages using UTC for internal timezone representation by\nincluding a special UTC implementation based on the standard Python\nreference implementation in the Python documentation.\n\nThe UTC timezone unpickles to be the same instance, and pickles to a\nsmaller size than other pytz tzinfo instances.  The UTC implementation\ncan be obtained as pytz.utc, pytz.UTC, or pytz.timezone('UTC').\n\n>>> import pickle, pytz\n>>> dt = datetime(2005, 3, 1, 14, 13, 21, tzinfo=utc)\n>>> naive = dt.replace(tzinfo=None)\n>>> p = pickle.dumps(dt, 1)\n>>> naive_p = pickle.dumps(naive, 1)\n>>> len(p) - len(naive_p)\n17\n>>> new = pickle.loads(p)\n>>> new == dt\nTrue\n>>> new is dt\nFalse\n>>> new.tzinfo is dt.tzinfo\nTrue\n>>> pytz.utc is pytz.UTC is pytz.timezone('UTC')\nTrue\n\nNote that some other timezones are commonly thought of as the same (GMT,\nGreenwich, Universal, etc.). The definition of UTC is distinct from these\nother timezones, and they are not equivalent. For this reason, they will\nnot compare the same in Python.\n\n>>> utc == pytz.timezone('GMT')\nFalse\n\nSee the section `What is UTC`_, below.\n\nIf you insist on working with local times, this library provides a\nfacility for constructing them unambiguously:\n\n>>> loc_dt = datetime(2002, 10, 27, 1, 30, 00)\n>>> est_dt = eastern.localize(loc_dt, is_dst=True)\n>>> edt_dt = eastern.localize(loc_dt, is_dst=False)\n>>> print(est_dt.strftime(fmt) + ' / ' + edt_dt.strftime(fmt))\n2002-10-27 01:30:00 EDT-0400 / 2002-10-27 01:30:00 EST-0500\n\nIf you pass None as the is_dst flag to localize(), pytz will refuse to\nguess and raise exceptions if you try to build ambiguous or non-existent\ntimes.\n\nFor example, 1:30am on 27th Oct 2002 happened twice in the US/Eastern\ntimezone when the clocks where put back at the end of Daylight Saving\nTime:\n\n>>> dt = datetime(2002, 10, 27, 1, 30, 00)\n>>> try:\n...     eastern.localize(dt, is_dst=None)\n... except pytz.exceptions.AmbiguousTimeError:\n...     print('pytz.exceptions.AmbiguousTimeError: %s' % dt)\npytz.exceptions.AmbiguousTimeError: 2002-10-27 01:30:00\n\nSimilarly, 2:30am on 7th April 2002 never happened at all in the\nUS/Eastern timezone, as the clocks where put forward at 2:00am skipping\nthe entire hour:\n\n>>> dt = datetime(2002, 4, 7, 2, 30, 00)\n>>> try:\n...     eastern.localize(dt, is_dst=None)\n... except pytz.exceptions.NonExistentTimeError:\n...     print('pytz.exceptions.NonExistentTimeError: %s' % dt)\npytz.exceptions.NonExistentTimeError: 2002-04-07 02:30:00\n\nBoth of these exceptions share a common base class to make error handling\neasier:\n\n>>> isinstance(pytz.AmbiguousTimeError(), pytz.InvalidTimeError)\nTrue\n>>> isinstance(pytz.NonExistentTimeError(), pytz.InvalidTimeError)\nTrue\n\n\nA special case is where countries change their timezone definitions\nwith no daylight savings time switch. For example, in 1915 Warsaw\nswitched from Warsaw time to Central European time with no daylight savings\ntransition. So at the stroke of midnight on August 5th 1915 the clocks\nwere wound back 24 minutes creating an ambiguous time period that cannot\nbe specified without referring to the timezone abbreviation or the\nactual UTC offset. In this case midnight happened twice, neither time\nduring a daylight saving time period. pytz handles this transition by\ntreating the ambiguous period before the switch as daylight savings\ntime, and the ambiguous period after as standard time.\n\n\n>>> warsaw = pytz.timezone('Europe/Warsaw')\n>>> amb_dt1 = warsaw.localize(datetime(1915, 8, 4, 23, 59, 59), is_dst=True)\n>>> amb_dt1.strftime(fmt)\n'1915-08-04 23:59:59 WMT+0124'\n>>> amb_dt2 = warsaw.localize(datetime(1915, 8, 4, 23, 59, 59), is_dst=False)\n>>> amb_dt2.strftime(fmt)\n'1915-08-04 23:59:59 CET+0100'\n>>> switch_dt = warsaw.localize(datetime(1915, 8, 5, 00, 00, 00), is_dst=False)\n>>> switch_dt.strftime(fmt)\n'1915-08-05 00:00:00 CET+0100'\n>>> str(switch_dt - amb_dt1)\n'0:24:01'\n>>> str(switch_dt - amb_dt2)\n'0:00:01'\n\nThe best way of creating a time during an ambiguous time period is\nby converting from another timezone such as UTC:\n\n>>> utc_dt = datetime(1915, 8, 4, 22, 36, tzinfo=pytz.utc)\n>>> utc_dt.astimezone(warsaw).strftime(fmt)\n'1915-08-04 23:36:00 CET+0100'\n\nThe standard Python way of handling all these ambiguities is not to\nhandle them, such as demonstrated in this example using the US/Eastern\ntimezone definition from the Python documentation (Note that this\nimplementation only works for dates between 1987 and 2006 - it is\nincluded for tests only!):\n\n>>> from pytz.reference import Eastern # pytz.reference only for tests\n>>> dt = datetime(2002, 10, 27, 0, 30, tzinfo=Eastern)\n>>> str(dt)\n'2002-10-27 00:30:00-04:00'\n>>> str(dt + timedelta(hours=1))\n'2002-10-27 01:30:00-05:00'\n>>> str(dt + timedelta(hours=2))\n'2002-10-27 02:30:00-05:00'\n>>> str(dt + timedelta(hours=3))\n'2002-10-27 03:30:00-05:00'\n\nNotice the first two results? At first glance you might think they are\ncorrect, but taking the UTC offset into account you find that they are\nactually two hours appart instead of the 1 hour we asked for.\n\n>>> from pytz.reference import UTC # pytz.reference only for tests\n>>> str(dt.astimezone(UTC))\n'2002-10-27 04:30:00+00:00'\n>>> str((dt + timedelta(hours=1)).astimezone(UTC))\n'2002-10-27 06:30:00+00:00'\n\n\nCountry Information\n~~~~~~~~~~~~~~~~~~~\n\nA mechanism is provided to access the timezones commonly in use\nfor a particular country, looked up using the ISO 3166 country code.\nIt returns a list of strings that can be used to retrieve the relevant\ntzinfo instance using ``pytz.timezone()``:\n\n>>> print(' '.join(pytz.country_timezones['nz']))\nPacific/Auckland Pacific/Chatham\n\nThe Olson database comes with a ISO 3166 country code to English country\nname mapping that pytz exposes as a dictionary:\n\n>>> print(pytz.country_names['nz'])\nNew Zealand\n\n\nWhat is UTC\n~~~~~~~~~~~\n\n'UTC' is `Coordinated Universal Time`_. It is a successor to, but distinct\nfrom, Greenwich Mean Time (GMT) and the various definitions of Universal\nTime. UTC is now the worldwide standard for regulating clocks and time\nmeasurement.\n\nAll other timezones are defined relative to UTC, and include offsets like\nUTC+0800 - hours to add or subtract from UTC to derive the local time. No\ndaylight saving time occurs in UTC, making it a useful timezone to perform\ndate arithmetic without worrying about the confusion and ambiguities caused\nby daylight saving time transitions, your country changing its timezone, or\nmobile computers that roam through multiple timezones.\n\n..  _Coordinated Universal Time: https://en.wikipedia.org/wiki/Coordinated_Universal_Time\n\n\nHelpers\n~~~~~~~\n\nThere are two lists of timezones provided.\n\n``all_timezones`` is the exhaustive list of the timezone names that can\nbe used.\n\n>>> from pytz import all_timezones\n>>> len(all_timezones) >= 500\nTrue\n>>> 'Etc/Greenwich' in all_timezones\nTrue\n\n``common_timezones`` is a list of useful, current timezones. It doesn't\ncontain deprecated zones or historical zones, except for a few I've\ndeemed in common usage, such as US/Eastern (open a bug report if you\nthink other timezones are deserving of being included here). It is also\na sequence of strings.\n\n>>> from pytz import common_timezones\n>>> len(common_timezones) < len(all_timezones)\nTrue\n>>> 'Etc/Greenwich' in common_timezones\nFalse\n>>> 'Australia/Melbourne' in common_timezones\nTrue\n>>> 'US/Eastern' in common_timezones\nTrue\n>>> 'Canada/Eastern' in common_timezones\nTrue\n>>> 'Australia/Yancowinna' in all_timezones\nTrue\n>>> 'Australia/Yancowinna' in common_timezones\nFalse\n\nBoth ``common_timezones`` and ``all_timezones`` are alphabetically\nsorted:\n\n>>> common_timezones_dupe = common_timezones[:]\n>>> common_timezones_dupe.sort()\n>>> common_timezones == common_timezones_dupe\nTrue\n>>> all_timezones_dupe = all_timezones[:]\n>>> all_timezones_dupe.sort()\n>>> all_timezones == all_timezones_dupe\nTrue\n\n``all_timezones`` and ``common_timezones`` are also available as sets.\n\n>>> from pytz import all_timezones_set, common_timezones_set\n>>> 'US/Eastern' in all_timezones_set\nTrue\n>>> 'US/Eastern' in common_timezones_set\nTrue\n>>> 'Australia/Victoria' in common_timezones_set\nFalse\n\nYou can also retrieve lists of timezones used by particular countries\nusing the ``country_timezones()`` function. It requires an ISO-3166\ntwo letter country code.\n\n>>> from pytz import country_timezones\n>>> print(' '.join(country_timezones('ch')))\nEurope/Zurich\n>>> print(' '.join(country_timezones('CH')))\nEurope/Zurich\n\n\nInternationalization - i18n/l10n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nPytz is an interface to the IANA database, which uses ASCII names. The `Unicode  Consortium's Unicode Locales (CLDR) <http://cldr.unicode.org>`_\nproject provides translations. Python packages such as\n`Babel <https://babel.pocoo.org/en/latest/api/dates.html#timezone-functionality>`_\nand Thomas Khyn's `l18n <https://pypi.org/project/l18n/>`_ package can be used\nto access these translations from Python.\n\n\nLicense\n~~~~~~~\n\nMIT license.\n\nThis code is also available as part of Zope 3 under the Zope Public\nLicense,  Version 2.1 (ZPL).\n\nI'm happy to relicense this code if necessary for inclusion in other\nopen source projects.\n\n\nLatest Versions\n~~~~~~~~~~~~~~~\n\nThis package will be updated after releases of the Olson timezone\ndatabase.  The latest version can be downloaded from the `Python Package\nIndex <https://pypi.org/project/pytz/>`_.  The code that is used\nto generate this distribution is hosted on Github and available\nusing git::\n\n    git clone https://github.com/stub42/pytz.git\n\nAnnouncements of new releases are made on\n`Launchpad <https://launchpad.net/pytz>`_, and the\n`Atom feed <http://feeds.launchpad.net/pytz/announcements.atom>`_\nhosted there.\n\n\nBugs, Feature Requests & Patches\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nBugs should be reported on `Github <https://github.com/stub42/pytz/issues>`_.\nFeature requests are unlikely to be considered, and efforts instead directed\nto timezone support now built into Python or packages that work with it.\n\n\nSecurity Issues\n~~~~~~~~~~~~~~~\n\nReports about security issues can be made via `Tidelift <https://tidelift.com/security>`_.\n\n\nIssues & Limitations\n~~~~~~~~~~~~~~~~~~~~\n\n- This project is in maintenance mode. Projects using Python 3.9 or later\n  are best served by using the timezone functionaly now included in core\n  Python and packages that work with it such as `tzdata <https://pypi.org/project/tzdata/>`_.\n\n- Offsets from UTC are rounded to the nearest whole minute, so timezones\n  such as Europe/Amsterdam pre 1937 will be up to 30 seconds out. This\n  was a limitation of the Python datetime library.\n\n- If you think a timezone definition is incorrect, I probably can't fix\n  it. pytz is a direct translation of the Olson timezone database, and\n  changes to the timezone definitions need to be made to this source.\n  If you find errors they should be reported to the time zone mailing\n  list, linked from http://www.iana.org/time-zones.\n\n\nFurther Reading\n~~~~~~~~~~~~~~~\n\nMore info than you want to know about timezones:\nhttps://data.iana.org/time-zones/tz-link.html\n\n\nContact\n~~~~~~~\n\nStuart Bishop <stuart@stuartbishop.net>\n\n\n\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/pytz-2023.3.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "pytz-deprecation-shim",
        "version": "0.1.0.post0",
        "platform": [
          "UNKNOWN"
        ],
        "summary": "Shims to make deprecation of pytz easier",
        "description_content_type": "text/x-rst",
        "home_page": "https://github.com/pganssle/pytz-deprecation-shim",
        "author": "Paul Ganssle",
        "author_email": "paul@ganssle.io",
        "license": "Apache-2.0",
        "classifier": [
          "Development Status :: 4 - Beta",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: Apache Software License",
          "Programming Language :: Python :: 2",
          "Programming Language :: Python :: 2.7",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9"
        ],
        "requires_dist": [
          "python-dateutil ; python_version < \"3.6\"",
          "tzdata ; python_version >= \"3.6\"",
          "backports.zoneinfo ; python_version >= \"3.6\" and python_version < \"3.9\""
        ],
        "requires_python": "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,>=2.7",
        "project_url": [
          "Source, https://github.com/pganssle/pytz-deprecation-shim",
          "Bug Reports, https://github.com/pganssle/pytz-deprecation-shim/issues",
          "Documentation, https://pytz-deprecation-shim.readthedocs.io"
        ],
        "description": "pytz_deprecation_shim: Shims to help you safely remove pytz\n===========================================================\n\n``pytz`` has served the Python community well for many years, but it is no\nlonger the best option for providing time zones. ``pytz`` has a non-standard\ninterface that is `very easy to misuse\n<https://blog.ganssle.io/articles/2018/03/pytz-fastest-footgun.html>`_; this\ninterface was necessary when ``pytz`` was created, because ``datetime`` had no\nway to represent ambiguous datetimes, but this was solved in in Python 3.6,\nwhich added a ``fold`` attribute to datetimes in `PEP 495\n<https://www.python.org/dev/peps/pep-0495/>`_. With the addition of the\n``zoneinfo`` module in Python 3.9 (`PEP 615\n<https://www.python.org/dev/peps/pep-0615/>`_), there has never been a better\ntime to migrate away from ``pytz``.\n\nHowever, since ``pytz`` time zones are used very differently from a standard\n``tzinfo``, and many libraries have built ``pytz`` zones into their standard\ntime zone interface (and thus may have users relying on the existence of the\n``localize`` and ``normalize`` methods); this library provides shim classes\nthat are compatible with both PEP 495 and ``pytz``'s interface, to make it\neasier for libraries to deprecate ``pytz``.\n\nUsage\n=====\n\nThis library is intended for *temporary usage only*, and should allow you to\ndrop your dependency on ``pytz`` while also giving your users notice that\neventually you will remove support for the ``pytz``-specific interface.\n\nWithin your own code, use ``pytz_deprecation_shim.timezone`` shims as if they\nwere ``zoneinfo`` or ``dateutil.tz`` zones — do not use ``localize`` or\n``normalize``:\n\n.. code-block:: pycon\n\n    >>> import pytz_deprecation_shim as pds\n    >>> from datetime import datetime, timedelta\n    >>> LA = pds.timezone(\"America/Los_Angeles\")\n\n    >>> dt = datetime(2020, 10, 31, 12, tzinfo=LA)\n    >>> print(dt)\n    2020-10-31 12:00:00-07:00\n\n    >>> dt.tzname()\n    'PDT'\n\n\nDatetime addition will work `like normal Python datetime arithmetic\n<https://blog.ganssle.io/articles/2018/02/aware-datetime-arithmetic.html>`_,\neven across a daylight saving time transition:\n\n.. code-block:: pycon\n\n    >>> dt_add = dt + timedelta(days=1)\n\n    >>> print(dt_add)\n    2020-11-01 12:00:00-08:00\n\n    >>> dt_add.tzname()\n    'PST'\n\nHowever, if you have exposed a time zone to end users who are using ``localize``\nand/or ``normalize`` or any other ``pytz``-specific features (or if you've\nfailed to convert some of your own code all the way), those users will see\na warning (rather than an exception) when they use those features:\n\n.. code-block:: pycon\n\n    >>> dt = LA.localize(datetime(2020, 10, 31, 12))\n    <stdin>:1: PytzUsageWarning: The localize method is no longer necessary, as\n    this time zone supports the fold attribute (PEP 495). For more details on\n    migrating to a PEP 495-compliant implementation, see\n    https://pytz-deprecation-shim.readthedocs.io/en/latest/migration.html\n\n     >>> print(dt)\n    2020-10-31 12:00:00-07:00\n    >>> dt.tzname()\n    'PDT'\n\n    >>> dt_add = LA.normalize(dt + timedelta(days=1))\n    <stdin>:1: PytzUsageWarning: The normalize method is no longer necessary,\n    as this time zone supports the fold attribute (PEP 495). For more details\n    on migrating to a PEP 495-compliant implementation, see\n    https://pytz-deprecation-shim.readthedocs.io/en/latest/migration.html\n\n    >>> print(dt_add)\n    2020-11-01 12:00:00-08:00\n    >>> dt_add.tzname()\n    'PST'\n\nFor IANA time zones, calling ``str()`` on the shim zones (and indeed on ``pytz``\nand ``zoneinfo`` zones as well) returns the IANA key, so end users who would\nlike to actively migrate to a ``zoneinfo`` (or ``backports.zoneinfo``) can do\nso:\n\n.. code-block:: pycon\n\n    >>> from zoneinfo import ZoneInfo\n    >>> LA = pds.timezone(\"America/Los_Angeles\")\n    >>> LA_zi = ZoneInfo(str(LA))\n    >>> print(LA_zi)\n    zoneinfo.ZoneInfo(key='America/Los_Angeles')\n\n\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/pytz_deprecation_shim-0.1.0.post0.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.0",
        "name": "rarfile",
        "version": "4.0",
        "platform": [
          "UNKNOWN"
        ],
        "summary": "RAR archive reader for Python",
        "keywords": [
          "rar",
          "unrar",
          "archive"
        ],
        "home_page": "https://github.com/markokr/rarfile",
        "author": "Marko Kreen",
        "author_email": "markokr@gmail.com",
        "license": "ISC",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: ISC License (ISCL)",
          "Operating System :: OS Independent",
          "Programming Language :: Python :: 3",
          "Topic :: Software Development :: Libraries :: Python Modules",
          "Topic :: System :: Archiving :: Compression"
        ],
        "description": "rarfile - RAR archive reader for Python\n=======================================\n\nThis is Python module for RAR_ archive reading.\nThe interface follows the style of zipfile_.\nLicensed under ISC_ license.\n\nFeatures:\n\n* Supports both RAR3 and RAR5 format archives.\n* Supports multi volume archives.\n* Supports Unicode filenames.\n* Supports password-protected archives.\n* Supports archive and file comments.\n* Archive parsing and non-compressed files are handled in pure Python code.\n* Compressed files are extracted by executing external tool:\n  unrar_ (preferred), unar_ or bsdtar_.\n* Works with Python 3.6+.\n\n.. _RAR: https://en.wikipedia.org/wiki/RAR_%28file_format%29\n.. _zipfile: https://docs.python.org/3/library/zipfile.html\n.. _ISC: https://en.wikipedia.org/wiki/ISC_license\n.. _bsdtar: https://github.com/libarchive/libarchive\n.. _unrar: https://www.rarlab.com/\n.. _unar: https://theunarchiver.com/command-line\n\nLinks:\n\n- `Documentation`_\n- `Downloads`_\n- `Git`_ repo\n\n.. _Git: https://github.com/markokr/rarfile\n.. _Downloads: https://pypi.org/project/rarfile/\n.. _Documentation: https://rarfile.readthedocs.io/\n\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/rarfile-4.0.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "requests",
        "version": "2.28.2",
        "platform": [
          "UNKNOWN"
        ],
        "summary": "Python HTTP for Humans.",
        "description_content_type": "text/markdown",
        "home_page": "https://requests.readthedocs.io",
        "author": "Kenneth Reitz",
        "author_email": "me@kennethreitz.org",
        "license": "Apache 2.0",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Environment :: Web Environment",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: Apache Software License",
          "Natural Language :: English",
          "Operating System :: OS Independent",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Programming Language :: Python :: 3 :: Only",
          "Programming Language :: Python :: Implementation :: CPython",
          "Programming Language :: Python :: Implementation :: PyPy",
          "Topic :: Internet :: WWW/HTTP",
          "Topic :: Software Development :: Libraries"
        ],
        "requires_dist": [
          "charset-normalizer (<4,>=2)",
          "idna (<4,>=2.5)",
          "urllib3 (<1.27,>=1.21.1)",
          "certifi (>=2017.4.17)",
          "PySocks (!=1.5.7,>=1.5.6) ; extra == 'socks'",
          "chardet (<6,>=3.0.2) ; extra == 'use_chardet_on_py3'"
        ],
        "requires_python": ">=3.7, <4",
        "project_url": [
          "Documentation, https://requests.readthedocs.io",
          "Source, https://github.com/psf/requests"
        ],
        "provides_extra": [
          "security",
          "socks",
          "use_chardet_on_py3"
        ],
        "description": "# Requests\n\n**Requests** is a simple, yet elegant, HTTP library.\n\n```python\n>>> import requests\n>>> r = requests.get('https://httpbin.org/basic-auth/user/pass', auth=('user', 'pass'))\n>>> r.status_code\n200\n>>> r.headers['content-type']\n'application/json; charset=utf8'\n>>> r.encoding\n'utf-8'\n>>> r.text\n'{\"authenticated\": true, ...'\n>>> r.json()\n{'authenticated': True, ...}\n```\n\nRequests allows you to send HTTP/1.1 requests extremely easily. There’s no need to manually add query strings to your URLs, or to form-encode your `PUT` & `POST` data — but nowadays, just use the `json` method!\n\nRequests is one of the most downloaded Python packages today, pulling in around `30M downloads / week`— according to GitHub, Requests is currently [depended upon](https://github.com/psf/requests/network/dependents?package_id=UGFja2FnZS01NzA4OTExNg%3D%3D) by `1,000,000+` repositories. You may certainly put your trust in this code.\n\n[![Downloads](https://pepy.tech/badge/requests/month)](https://pepy.tech/project/requests)\n[![Supported Versions](https://img.shields.io/pypi/pyversions/requests.svg)](https://pypi.org/project/requests)\n[![Contributors](https://img.shields.io/github/contributors/psf/requests.svg)](https://github.com/psf/requests/graphs/contributors)\n\n## Installing Requests and Supported Versions\n\nRequests is available on PyPI:\n\n```console\n$ python -m pip install requests\n```\n\nRequests officially supports Python 3.7+.\n\n## Supported Features & Best–Practices\n\nRequests is ready for the demands of building robust and reliable HTTP–speaking applications, for the needs of today.\n\n- Keep-Alive & Connection Pooling\n- International Domains and URLs\n- Sessions with Cookie Persistence\n- Browser-style TLS/SSL Verification\n- Basic & Digest Authentication\n- Familiar `dict`–like Cookies\n- Automatic Content Decompression and Decoding\n- Multi-part File Uploads\n- SOCKS Proxy Support\n- Connection Timeouts\n- Streaming Downloads\n- Automatic honoring of `.netrc`\n- Chunked HTTP Requests\n\n## API Reference and User Guide available on [Read the Docs](https://requests.readthedocs.io)\n\n[![Read the Docs](https://raw.githubusercontent.com/psf/requests/main/ext/ss.png)](https://requests.readthedocs.io)\n\n## Cloning the repository\n\nWhen cloning the Requests repository, you may need to add the `-c\nfetch.fsck.badTimezone=ignore` flag to avoid an error about a bad commit (see\n[this issue](https://github.com/psf/requests/issues/2690) for more background):\n\n```shell\ngit clone -c fetch.fsck.badTimezone=ignore https://github.com/psf/requests.git\n```\n\nYou can also apply this setting to your global Git config:\n\n```shell\ngit config --global fetch.fsck.badTimezone ignore\n```\n\n---\n\n[![Kenneth Reitz](https://raw.githubusercontent.com/psf/requests/main/ext/kr.png)](https://kennethreitz.org) [![Python Software Foundation](https://raw.githubusercontent.com/psf/requests/main/ext/psf.png)](https://www.python.org/psf)\n\n\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/requests-2.28.2.dist-info",
      "installer": "pip",
      "requested": true
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "requests-oauthlib",
        "version": "1.3.1",
        "platform": [
          "UNKNOWN"
        ],
        "summary": "OAuthlib authentication support for Requests.",
        "description_content_type": "text/x-rst",
        "home_page": "https://github.com/requests/requests-oauthlib",
        "author": "Kenneth Reitz",
        "author_email": "me@kennethreitz.com",
        "license": "ISC",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Intended Audience :: Developers",
          "Natural Language :: English",
          "License :: OSI Approved :: BSD License",
          "Programming Language :: Python",
          "Programming Language :: Python :: 2",
          "Programming Language :: Python :: 2.7",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.4",
          "Programming Language :: Python :: 3.5",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: Implementation :: CPython",
          "Programming Language :: Python :: Implementation :: PyPy"
        ],
        "requires_dist": [
          "oauthlib (>=3.0.0)",
          "requests (>=2.0.0)",
          "oauthlib[signedtoken] (>=3.0.0) ; extra == 'rsa'"
        ],
        "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*",
        "provides_extra": [
          "rsa"
        ],
        "description": "Requests-OAuthlib |build-status| |coverage-status| |docs|\n=========================================================\n\nThis project provides first-class OAuth library support for `Requests <http://python-requests.org>`_.\n\nThe OAuth 1 workflow\n--------------------\n\nOAuth 1 can seem overly complicated and it sure has its quirks. Luckily,\nrequests_oauthlib hides most of these and let you focus at the task at hand.\n\nAccessing protected resources using requests_oauthlib is as simple as:\n\n.. code-block:: pycon\n\n    >>> from requests_oauthlib import OAuth1Session\n    >>> twitter = OAuth1Session('client_key',\n                                client_secret='client_secret',\n                                resource_owner_key='resource_owner_key',\n                                resource_owner_secret='resource_owner_secret')\n    >>> url = 'https://api.twitter.com/1/account/settings.json'\n    >>> r = twitter.get(url)\n\nBefore accessing resources you will need to obtain a few credentials from your\nprovider (e.g. Twitter) and authorization from the user for whom you wish to\nretrieve resources for. You can read all about this in the full\n`OAuth 1 workflow guide on RTD <https://requests-oauthlib.readthedocs.io/en/latest/oauth1_workflow.html>`_.\n\nThe OAuth 2 workflow\n--------------------\n\nOAuth 2 is generally simpler than OAuth 1 but comes in more flavours. The most\ncommon being the Authorization Code Grant, also known as the WebApplication\nflow.\n\nFetching a protected resource after obtaining an access token can be extremely\nsimple. However, before accessing resources you will need to obtain a few\ncredentials from your provider (e.g. Google) and authorization from the user\nfor whom you wish to retrieve resources for. You can read all about this in the\nfull `OAuth 2 workflow guide on RTD <https://requests-oauthlib.readthedocs.io/en/latest/oauth2_workflow.html>`_.\n\nInstallation\n-------------\n\nTo install requests and requests_oauthlib you can use pip:\n\n.. code-block:: bash\n\n    $ pip install requests requests_oauthlib\n\n.. |build-status| image:: https://github.com/requests/requests-oauthlib/actions/workflows/run-tests.yml/badge.svg\n   :target: https://github.com/requests/requests-oauthlib/actions\n.. |coverage-status| image:: https://img.shields.io/coveralls/requests/requests-oauthlib.svg\n   :target: https://coveralls.io/r/requests/requests-oauthlib\n.. |docs| image:: https://readthedocs.org/projects/requests-oauthlib/badge/\n   :alt: Documentation Status\n   :scale: 100%\n   :target: https://requests-oauthlib.readthedocs.io/\n\n\nHistory\n-------\n\nv1.3.1 (21 January 2022)\n++++++++++++++++++++++++\n\n- Add initial support for OAuth Mutual TLS (draft-ietf-oauth-mtls)\n- Add eBay compliance fix\n- Add Spotify OAuth 2 Tutorial\n- Add support for python 3.8, 3.9\n- Fixed LinkedIn Compliance Fixes\n- Fixed ReadTheDocs Documentation and sphinx errors\n- Moved pipeline to GitHub Actions\n\nv1.3.0 (6 November 2019)\n++++++++++++++++++++++++\n\n- Instagram compliance fix\n- Added ``force_querystring`` argument to fetch_token() method on OAuth2Session\n\nv1.2.0 (14 January 2019)\n++++++++++++++++++++++++\n\n- This project now depends on OAuthlib 3.0.0 and above. It does **not** support\n  versions of OAuthlib before 3.0.0.\n- Updated oauth2 tests to use 'sess' for an OAuth2Session instance instead of `auth`\n  because OAuth2Session objects and methods acceept an `auth` paramether which is\n  typically an instance of `requests.auth.HTTPBasicAuth`\n- `OAuth2Session.fetch_token` previously tried to guess how and where to provide\n  \"client\" and \"user\" credentials incorrectly. This was incompatible with some\n  OAuth servers and incompatible with breaking changes in oauthlib that seek to\n  correctly provide the `client_id`. The older implementation also did not raise\n  the correct exceptions when username and password are not present on Legacy\n  clients.\n- Avoid automatic netrc authentication for OAuth2Session.\n\nv1.1.0 (9 January 2019)\n+++++++++++++++++++++++\n\n- Adjusted version specifier for ``oauthlib`` dependency: this project is\n  not yet compatible with ``oauthlib`` 3.0.0.\n- Dropped dependency on ``nose``.\n- Minor changes to clean up the code and make it more readable/maintainable.\n\nv1.0.0 (4 June 2018)\n++++++++++++++++++++\n\n- **Removed support for Python 2.6 and Python 3.3.**\n  This project now supports Python 2.7, and Python 3.4 and above.\n- Added several examples to the documentation.\n- Added plentymarkets compliance fix.\n- Added a ``token`` property to OAuth1Session, to match the corresponding\n  ``token`` property on OAuth2Session.\n\nv0.8.0 (14 February 2017)\n+++++++++++++++++++++++++\n\n- Added Fitbit compliance fix.\n- Fixed an issue where newlines in the response body for the access token\n  request would cause errors when trying to extract the token.\n- Fixed an issue introduced in v0.7.0 where users passing ``auth`` to several\n  methods would encounter conflicts with the ``client_id`` and\n  ``client_secret``-derived auth. The user-supplied ``auth`` argument is now\n  used in preference to those options.\n\nv0.7.0 (22 September 2016)\n++++++++++++++++++++++++++\n\n- Allowed ``OAuth2Session.request`` to take the ``client_id`` and\n  ``client_secret`` parameters for the purposes of automatic token refresh,\n  which may need them.\n\nv0.6.2 (12 July 2016)\n+++++++++++++++++++++\n\n- Use ``client_id`` and ``client_secret`` for the Authorization header if\n  provided.\n- Allow explicit bypass of the Authorization header by setting ``auth=False``.\n- Pass through the ``proxies`` kwarg when refreshing tokens.\n- Miscellaneous cleanups.\n\nv0.6.1 (19 February 2016)\n+++++++++++++++++++++++++\n\n- Fixed a bug when sending authorization in headers with no username and\n  password present.\n- Make sure we clear the session token before obtaining a new one.\n- Some improvements to the Slack compliance fix.\n- Avoid timing problems around token refresh.\n- Allow passing arbitrary arguments to requests when calling\n  ``fetch_request_token`` and ``fetch_access_token``.\n\nv0.6.0 (14 December 2015)\n+++++++++++++++++++++++++\n\n- Add compliance fix for Slack.\n- Add compliance fix for Mailchimp.\n- ``TokenRequestDenied`` exceptions now carry the entire response, not just the\n  status code.\n- Pass through keyword arguments when refreshing tokens automatically.\n- Send authorization in headers, not just body, to maximize compatibility.\n- More getters/setters available for OAuth2 session client values.\n- Allow sending custom headers when refreshing tokens, and set some defaults.\n\n\nv0.5.0 (4 May 2015)\n+++++++++++++++++++\n- Fix ``TypeError`` being raised instead of ``TokenMissing`` error.\n- Raise requests exceptions on 4XX and 5XX responses in the OAuth2 flow.\n- Avoid ``AttributeError`` when initializing the ``OAuth2Session`` class\n  without complete client information.\n\nv0.4.2 (16 October 2014)\n++++++++++++++++++++++++\n- New ``authorized`` property on OAuth1Session and OAuth2Session, which allows\n  you to easily determine if the session is already authorized with OAuth tokens\n  or not.\n- New ``TokenMissing`` and ``VerifierMissing`` exception classes for OAuth1Session:\n  this will make it easier to catch and identify these exceptions.\n\nv0.4.1 (6 June 2014)\n++++++++++++++++++++\n- New install target ``[rsa]`` for people using OAuth1 RSA-SHA1 signature\n  method.\n- Fixed bug in OAuth2 where supplied state param was not used in auth url.\n- OAuth2 HTTPS checking can be disabled by setting environment variable\n  ``OAUTHLIB_INSECURE_TRANSPORT``.\n- OAuth1 now re-authorize upon redirects.\n- OAuth1 token fetching now raise a detailed error message when the\n  response body is incorrectly encoded or the request was denied.\n- Added support for custom OAuth1 clients.\n- OAuth2 compliance fix for Sina Weibo.\n- Multiple fixes to facebook compliance fix.\n- Compliance fixes now re-encode body properly as bytes in Python 3.\n- Logging now properly done under ``requests_oauthlib`` namespace instead\n  of piggybacking on oauthlib namespace.\n- Logging introduced for OAuth1 auth and session.\n\nv0.4.0 (29 September 2013)\n++++++++++++++++++++++++++\n- OAuth1Session methods only return unicode strings. #55.\n- Renamed requests_oauthlib.core to requests_oauthlib.oauth1_auth for consistency. #79.\n- Added Facebook compliance fix and access_token_response hook to OAuth2Session. #63.\n- Added LinkedIn compliance fix.\n- Added refresh_token_response compliance hook, invoked before parsing the refresh token.\n- Correctly limit compliance hooks to running only once!\n- Content type guessing should only be done when no content type is given\n- OAuth1 now updates r.headers instead of replacing it with non case insensitive dict\n- Remove last use of Response.content (in OAuth1Session). #44.\n- State param can now be supplied in OAuth2Session.authorize_url\n\n\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/requests_oauthlib-1.3.1.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "rich",
        "version": "13.3.5",
        "summary": "Render rich text, tables, progress bars, syntax highlighting, markdown and more to the terminal",
        "description_content_type": "text/markdown",
        "home_page": "https://github.com/Textualize/rich",
        "author": "Will McGugan",
        "author_email": "willmcgugan@gmail.com",
        "license": "MIT",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Environment :: Console",
          "Framework :: IPython",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: MIT License",
          "Operating System :: MacOS",
          "Operating System :: Microsoft :: Windows",
          "Operating System :: POSIX :: Linux",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Typing :: Typed"
        ],
        "requires_dist": [
          "ipywidgets (>=7.5.1,<9) ; extra == \"jupyter\"",
          "markdown-it-py (>=2.2.0,<3.0.0)",
          "pygments (>=2.13.0,<3.0.0)",
          "typing-extensions (>=4.0.0,<5.0) ; python_version < \"3.9\""
        ],
        "requires_python": ">=3.7.0",
        "project_url": [
          "Documentation, https://rich.readthedocs.io/en/latest/"
        ],
        "provides_extra": [
          "jupyter"
        ],
        "description": "[![Supported Python Versions](https://img.shields.io/pypi/pyversions/rich/13.2.0)](https://pypi.org/project/rich/) [![PyPI version](https://badge.fury.io/py/rich.svg)](https://badge.fury.io/py/rich)\n\n[![Downloads](https://pepy.tech/badge/rich/month)](https://pepy.tech/project/rich)\n[![codecov](https://img.shields.io/codecov/c/github/Textualize/rich?label=codecov&logo=codecov)](https://codecov.io/gh/Textualize/rich)\n[![Rich blog](https://img.shields.io/badge/blog-rich%20news-yellowgreen)](https://www.willmcgugan.com/tag/rich/)\n[![Twitter Follow](https://img.shields.io/twitter/follow/willmcgugan.svg?style=social)](https://twitter.com/willmcgugan)\n\n![Logo](https://github.com/textualize/rich/raw/master/imgs/logo.svg)\n\n[English readme](https://github.com/textualize/rich/blob/master/README.md)\n • [简体中文 readme](https://github.com/textualize/rich/blob/master/README.cn.md)\n • [正體中文 readme](https://github.com/textualize/rich/blob/master/README.zh-tw.md)\n • [Lengua española readme](https://github.com/textualize/rich/blob/master/README.es.md)\n • [Deutsche readme](https://github.com/textualize/rich/blob/master/README.de.md)\n • [Läs på svenska](https://github.com/textualize/rich/blob/master/README.sv.md)\n • [日本語 readme](https://github.com/textualize/rich/blob/master/README.ja.md)\n • [한국어 readme](https://github.com/textualize/rich/blob/master/README.kr.md)\n • [Français readme](https://github.com/textualize/rich/blob/master/README.fr.md)\n • [Schwizerdütsch readme](https://github.com/textualize/rich/blob/master/README.de-ch.md)\n • [हिन्दी readme](https://github.com/textualize/rich/blob/master/README.hi.md)\n • [Português brasileiro readme](https://github.com/textualize/rich/blob/master/README.pt-br.md)\n • [Italian readme](https://github.com/textualize/rich/blob/master/README.it.md)\n • [Русский readme](https://github.com/textualize/rich/blob/master/README.ru.md)\n • [Indonesian readme](https://github.com/textualize/rich/blob/master/README.id.md)\n • [فارسی readme](https://github.com/textualize/rich/blob/master/README.fa.md)\n • [Türkçe readme](https://github.com/textualize/rich/blob/master/README.tr.md)\n • [Polskie readme](https://github.com/textualize/rich/blob/master/README.pl.md)\n\n\nRich is a Python library for _rich_ text and beautiful formatting in the terminal.\n\nThe [Rich API](https://rich.readthedocs.io/en/latest/) makes it easy to add color and style to terminal output. Rich can also render pretty tables, progress bars, markdown, syntax highlighted source code, tracebacks, and more — out of the box.\n\n![Features](https://github.com/textualize/rich/raw/master/imgs/features.png)\n\nFor a video introduction to Rich see [calmcode.io](https://calmcode.io/rich/introduction.html) by [@fishnets88](https://twitter.com/fishnets88).\n\nSee what [people are saying about Rich](https://www.willmcgugan.com/blog/pages/post/rich-tweets/).\n\n## Compatibility\n\nRich works with Linux, OSX, and Windows. True color / emoji works with new Windows Terminal, classic terminal is limited to 16 colors. Rich requires Python 3.7 or later.\n\nRich works with [Jupyter notebooks](https://jupyter.org/) with no additional configuration required.\n\n## Installing\n\nInstall with `pip` or your favorite PyPI package manager.\n\n```sh\npython -m pip install rich\n```\n\nRun the following to test Rich output on your terminal:\n\n```sh\npython -m rich\n```\n\n## Rich Print\n\nTo effortlessly add rich output to your application, you can import the [rich print](https://rich.readthedocs.io/en/latest/introduction.html#quick-start) method, which has the same signature as the builtin Python function. Try this:\n\n```python\nfrom rich import print\n\nprint(\"Hello, [bold magenta]World[/bold magenta]!\", \":vampire:\", locals())\n```\n\n![Hello World](https://github.com/textualize/rich/raw/master/imgs/print.png)\n\n## Rich REPL\n\nRich can be installed in the Python REPL, so that any data structures will be pretty printed and highlighted.\n\n```python\n>>> from rich import pretty\n>>> pretty.install()\n```\n\n![REPL](https://github.com/textualize/rich/raw/master/imgs/repl.png)\n\n## Using the Console\n\nFor more control over rich terminal content, import and construct a [Console](https://rich.readthedocs.io/en/latest/reference/console.html#rich.console.Console) object.\n\n```python\nfrom rich.console import Console\n\nconsole = Console()\n```\n\nThe Console object has a `print` method which has an intentionally similar interface to the builtin `print` function. Here's an example of use:\n\n```python\nconsole.print(\"Hello\", \"World!\")\n```\n\nAs you might expect, this will print `\"Hello World!\"` to the terminal. Note that unlike the builtin `print` function, Rich will word-wrap your text to fit within the terminal width.\n\nThere are a few ways of adding color and style to your output. You can set a style for the entire output by adding a `style` keyword argument. Here's an example:\n\n```python\nconsole.print(\"Hello\", \"World!\", style=\"bold red\")\n```\n\nThe output will be something like the following:\n\n![Hello World](https://github.com/textualize/rich/raw/master/imgs/hello_world.png)\n\nThat's fine for styling a line of text at a time. For more finely grained styling, Rich renders a special markup which is similar in syntax to [bbcode](https://en.wikipedia.org/wiki/BBCode). Here's an example:\n\n```python\nconsole.print(\"Where there is a [bold cyan]Will[/bold cyan] there [u]is[/u] a [i]way[/i].\")\n```\n\n![Console Markup](https://github.com/textualize/rich/raw/master/imgs/where_there_is_a_will.png)\n\nYou can use a Console object to generate sophisticated output with minimal effort. See the [Console API](https://rich.readthedocs.io/en/latest/console.html) docs for details.\n\n## Rich Inspect\n\nRich has an [inspect](https://rich.readthedocs.io/en/latest/reference/init.html?highlight=inspect#rich.inspect) function which can produce a report on any Python object, such as class, instance, or builtin.\n\n```python\n>>> my_list = [\"foo\", \"bar\"]\n>>> from rich import inspect\n>>> inspect(my_list, methods=True)\n```\n\n![Log](https://github.com/textualize/rich/raw/master/imgs/inspect.png)\n\nSee the [inspect docs](https://rich.readthedocs.io/en/latest/reference/init.html#rich.inspect) for details.\n\n# Rich Library\n\nRich contains a number of builtin _renderables_ you can use to create elegant output in your CLI and help you debug your code.\n\nClick the following headings for details:\n\n<details>\n<summary>Log</summary>\n\nThe Console object has a `log()` method which has a similar interface to `print()`, but also renders a column for the current time and the file and line which made the call. By default Rich will do syntax highlighting for Python structures and for repr strings. If you log a collection (i.e. a dict or a list) Rich will pretty print it so that it fits in the available space. Here's an example of some of these features.\n\n```python\nfrom rich.console import Console\nconsole = Console()\n\ntest_data = [\n    {\"jsonrpc\": \"2.0\", \"method\": \"sum\", \"params\": [None, 1, 2, 4, False, True], \"id\": \"1\",},\n    {\"jsonrpc\": \"2.0\", \"method\": \"notify_hello\", \"params\": [7]},\n    {\"jsonrpc\": \"2.0\", \"method\": \"subtract\", \"params\": [42, 23], \"id\": \"2\"},\n]\n\ndef test_log():\n    enabled = False\n    context = {\n        \"foo\": \"bar\",\n    }\n    movies = [\"Deadpool\", \"Rise of the Skywalker\"]\n    console.log(\"Hello from\", console, \"!\")\n    console.log(test_data, log_locals=True)\n\n\ntest_log()\n```\n\nThe above produces the following output:\n\n![Log](https://github.com/textualize/rich/raw/master/imgs/log.png)\n\nNote the `log_locals` argument, which outputs a table containing the local variables where the log method was called.\n\nThe log method could be used for logging to the terminal for long running applications such as servers, but is also a very nice debugging aid.\n\n</details>\n<details>\n<summary>Logging Handler</summary>\n\nYou can also use the builtin [Handler class](https://rich.readthedocs.io/en/latest/logging.html) to format and colorize output from Python's logging module. Here's an example of the output:\n\n![Logging](https://github.com/textualize/rich/raw/master/imgs/logging.png)\n\n</details>\n\n<details>\n<summary>Emoji</summary>\n\nTo insert an emoji in to console output place the name between two colons. Here's an example:\n\n```python\n>>> console.print(\":smiley: :vampire: :pile_of_poo: :thumbs_up: :raccoon:\")\n😃 🧛 💩 👍 🦝\n```\n\nPlease use this feature wisely.\n\n</details>\n\n<details>\n<summary>Tables</summary>\n\nRich can render flexible [tables](https://rich.readthedocs.io/en/latest/tables.html) with unicode box characters. There is a large variety of formatting options for borders, styles, cell alignment etc.\n\n![table movie](https://github.com/textualize/rich/raw/master/imgs/table_movie.gif)\n\nThe animation above was generated with [table_movie.py](https://github.com/textualize/rich/blob/master/examples/table_movie.py) in the examples directory.\n\nHere's a simpler table example:\n\n```python\nfrom rich.console import Console\nfrom rich.table import Table\n\nconsole = Console()\n\ntable = Table(show_header=True, header_style=\"bold magenta\")\ntable.add_column(\"Date\", style=\"dim\", width=12)\ntable.add_column(\"Title\")\ntable.add_column(\"Production Budget\", justify=\"right\")\ntable.add_column(\"Box Office\", justify=\"right\")\ntable.add_row(\n    \"Dec 20, 2019\", \"Star Wars: The Rise of Skywalker\", \"$275,000,000\", \"$375,126,118\"\n)\ntable.add_row(\n    \"May 25, 2018\",\n    \"[red]Solo[/red]: A Star Wars Story\",\n    \"$275,000,000\",\n    \"$393,151,347\",\n)\ntable.add_row(\n    \"Dec 15, 2017\",\n    \"Star Wars Ep. VIII: The Last Jedi\",\n    \"$262,000,000\",\n    \"[bold]$1,332,539,889[/bold]\",\n)\n\nconsole.print(table)\n```\n\nThis produces the following output:\n\n![table](https://github.com/textualize/rich/raw/master/imgs/table.png)\n\nNote that console markup is rendered in the same way as `print()` and `log()`. In fact, anything that is renderable by Rich may be included in the headers / rows (even other tables).\n\nThe `Table` class is smart enough to resize columns to fit the available width of the terminal, wrapping text as required. Here's the same example, with the terminal made smaller than the table above:\n\n![table2](https://github.com/textualize/rich/raw/master/imgs/table2.png)\n\n</details>\n\n<details>\n<summary>Progress Bars</summary>\n\nRich can render multiple flicker-free [progress](https://rich.readthedocs.io/en/latest/progress.html) bars to track long-running tasks.\n\nFor basic usage, wrap any sequence in the `track` function and iterate over the result. Here's an example:\n\n```python\nfrom rich.progress import track\n\nfor step in track(range(100)):\n    do_step(step)\n```\n\nIt's not much harder to add multiple progress bars. Here's an example taken from the docs:\n\n![progress](https://github.com/textualize/rich/raw/master/imgs/progress.gif)\n\nThe columns may be configured to show any details you want. Built-in columns include percentage complete, file size, file speed, and time remaining. Here's another example showing a download in progress:\n\n![progress](https://github.com/textualize/rich/raw/master/imgs/downloader.gif)\n\nTo try this out yourself, see [examples/downloader.py](https://github.com/textualize/rich/blob/master/examples/downloader.py) which can download multiple URLs simultaneously while displaying progress.\n\n</details>\n\n<details>\n<summary>Status</summary>\n\nFor situations where it is hard to calculate progress, you can use the [status](https://rich.readthedocs.io/en/latest/reference/console.html#rich.console.Console.status) method which will display a 'spinner' animation and message. The animation won't prevent you from using the console as normal. Here's an example:\n\n```python\nfrom time import sleep\nfrom rich.console import Console\n\nconsole = Console()\ntasks = [f\"task {n}\" for n in range(1, 11)]\n\nwith console.status(\"[bold green]Working on tasks...\") as status:\n    while tasks:\n        task = tasks.pop(0)\n        sleep(1)\n        console.log(f\"{task} complete\")\n```\n\nThis generates the following output in the terminal.\n\n![status](https://github.com/textualize/rich/raw/master/imgs/status.gif)\n\nThe spinner animations were borrowed from [cli-spinners](https://www.npmjs.com/package/cli-spinners). You can select a spinner by specifying the `spinner` parameter. Run the following command to see the available values:\n\n```\npython -m rich.spinner\n```\n\nThe above command generates the following output in the terminal:\n\n![spinners](https://github.com/textualize/rich/raw/master/imgs/spinners.gif)\n\n</details>\n\n<details>\n<summary>Tree</summary>\n\nRich can render a [tree](https://rich.readthedocs.io/en/latest/tree.html) with guide lines. A tree is ideal for displaying a file structure, or any other hierarchical data.\n\nThe labels of the tree can be simple text or anything else Rich can render. Run the following for a demonstration:\n\n```\npython -m rich.tree\n```\n\nThis generates the following output:\n\n![markdown](https://github.com/textualize/rich/raw/master/imgs/tree.png)\n\nSee the [tree.py](https://github.com/textualize/rich/blob/master/examples/tree.py) example for a script that displays a tree view of any directory, similar to the linux `tree` command.\n\n</details>\n\n<details>\n<summary>Columns</summary>\n\nRich can render content in neat [columns](https://rich.readthedocs.io/en/latest/columns.html) with equal or optimal width. Here's a very basic clone of the (MacOS / Linux) `ls` command which displays a directory listing in columns:\n\n```python\nimport os\nimport sys\n\nfrom rich import print\nfrom rich.columns import Columns\n\ndirectory = os.listdir(sys.argv[1])\nprint(Columns(directory))\n```\n\nThe following screenshot is the output from the [columns example](https://github.com/textualize/rich/blob/master/examples/columns.py) which displays data pulled from an API in columns:\n\n![columns](https://github.com/textualize/rich/raw/master/imgs/columns.png)\n\n</details>\n\n<details>\n<summary>Markdown</summary>\n\nRich can render [markdown](https://rich.readthedocs.io/en/latest/markdown.html) and does a reasonable job of translating the formatting to the terminal.\n\nTo render markdown import the `Markdown` class and construct it with a string containing markdown code. Then print it to the console. Here's an example:\n\n```python\nfrom rich.console import Console\nfrom rich.markdown import Markdown\n\nconsole = Console()\nwith open(\"README.md\") as readme:\n    markdown = Markdown(readme.read())\nconsole.print(markdown)\n```\n\nThis will produce output something like the following:\n\n![markdown](https://github.com/textualize/rich/raw/master/imgs/markdown.png)\n\n</details>\n\n<details>\n<summary>Syntax Highlighting</summary>\n\nRich uses the [pygments](https://pygments.org/) library to implement [syntax highlighting](https://rich.readthedocs.io/en/latest/syntax.html). Usage is similar to rendering markdown; construct a `Syntax` object and print it to the console. Here's an example:\n\n```python\nfrom rich.console import Console\nfrom rich.syntax import Syntax\n\nmy_code = '''\ndef iter_first_last(values: Iterable[T]) -> Iterable[Tuple[bool, bool, T]]:\n    \"\"\"Iterate and generate a tuple with a flag for first and last value.\"\"\"\n    iter_values = iter(values)\n    try:\n        previous_value = next(iter_values)\n    except StopIteration:\n        return\n    first = True\n    for value in iter_values:\n        yield first, False, previous_value\n        first = False\n        previous_value = value\n    yield first, True, previous_value\n'''\nsyntax = Syntax(my_code, \"python\", theme=\"monokai\", line_numbers=True)\nconsole = Console()\nconsole.print(syntax)\n```\n\nThis will produce the following output:\n\n![syntax](https://github.com/textualize/rich/raw/master/imgs/syntax.png)\n\n</details>\n\n<details>\n<summary>Tracebacks</summary>\n\nRich can render [beautiful tracebacks](https://rich.readthedocs.io/en/latest/traceback.html) which are easier to read and show more code than standard Python tracebacks. You can set Rich as the default traceback handler so all uncaught exceptions will be rendered by Rich.\n\nHere's what it looks like on OSX (similar on Linux):\n\n![traceback](https://github.com/textualize/rich/raw/master/imgs/traceback.png)\n\n</details>\n\nAll Rich renderables make use of the [Console Protocol](https://rich.readthedocs.io/en/latest/protocol.html), which you can also use to implement your own Rich content.\n\n# Rich CLI\n\n\nSee also [Rich CLI](https://github.com/textualize/rich-cli) for a command line application powered by Rich. Syntax highlight code, render markdown, display CSVs in tables, and more, directly from the command prompt.\n\n\n![Rich CLI](https://raw.githubusercontent.com/Textualize/rich-cli/main/imgs/rich-cli-splash.jpg)\n\n# Textual\n\nSee also Rich's sister project, [Textual](https://github.com/Textualize/textual), which you can use to build sophisticated User Interfaces in the terminal.\n\n![Textual screenshot](https://raw.githubusercontent.com/Textualize/textual/main/imgs/textual.png)\n\n# Projects using Rich\n\nFor some examples of projects using Rich, see the [Rich Gallery](https://www.textualize.io/rich/gallery) on [Textualize.io](https://www.textualize.io).\n\nWould you like to add your own project to the gallery? You can! Follow [these instructions](https://www.textualize.io/gallery-instructions).\n\n<!-- This is a test, no need to translate -->\n\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/rich-13.3.5.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "rsa",
        "version": "4.9",
        "summary": "Pure-Python RSA implementation",
        "description_content_type": "text/markdown",
        "home_page": "https://stuvel.eu/rsa",
        "author": "Sybren A. Stüvel",
        "author_email": "sybren@stuvel.eu",
        "license": "Apache-2.0",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Intended Audience :: Developers",
          "Intended Audience :: Education",
          "Intended Audience :: Information Technology",
          "License :: OSI Approved :: Apache Software License",
          "Operating System :: OS Independent",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: Implementation :: CPython",
          "Programming Language :: Python :: Implementation :: PyPy",
          "Topic :: Security :: Cryptography"
        ],
        "requires_dist": [
          "pyasn1 (>=0.1.3)"
        ],
        "requires_python": ">=3.6,<4",
        "project_url": [
          "Repository, https://github.com/sybrenstuvel/python-rsa"
        ],
        "description": "# Pure Python RSA implementation\n\n[![PyPI](https://img.shields.io/pypi/v/rsa.svg)](https://pypi.org/project/rsa/)\n[![Build Status](https://travis-ci.org/sybrenstuvel/python-rsa.svg?branch=master)](https://travis-ci.org/sybrenstuvel/python-rsa)\n[![Coverage Status](https://coveralls.io/repos/github/sybrenstuvel/python-rsa/badge.svg?branch=master)](https://coveralls.io/github/sybrenstuvel/python-rsa?branch=master)\n[![Code Climate](https://api.codeclimate.com/v1/badges/a99a88d28ad37a79dbf6/maintainability)](https://codeclimate.com/github/codeclimate/codeclimate/maintainability)\n\n[Python-RSA](https://stuvel.eu/rsa) is a pure-Python RSA implementation. It supports\nencryption and decryption, signing and verifying signatures, and key\ngeneration according to PKCS#1 version 1.5. It can be used as a Python\nlibrary as well as on the commandline. The code was mostly written by\nSybren A.  Stüvel.\n\nDocumentation can be found at the [Python-RSA homepage](https://stuvel.eu/rsa). For all changes, check [the changelog](https://github.com/sybrenstuvel/python-rsa/blob/master/CHANGELOG.md).\n\nDownload and install using:\n\n    pip install rsa\n\nor download it from the [Python Package Index](https://pypi.org/project/rsa/).\n\nThe source code is maintained at [GitHub](https://github.com/sybrenstuvel/python-rsa/) and is\nlicensed under the [Apache License, version 2.0](https://www.apache.org/licenses/LICENSE-2.0)\n\n## Security\n\nBecause of how Python internally stores numbers, it is very hard (if not impossible) to make a pure-Python program secure against timing attacks. This library is no exception, so use it with care. See https://securitypitfalls.wordpress.com/2018/08/03/constant-time-compare-in-python/ for more info.\n\n## Setup of Development Environment\n\n```\npython3 -m venv .venv\n. ./.venv/bin/activate\npip install poetry\npoetry install\n```\n\n## Publishing a New Release\n\nSince this project is considered critical on the Python Package Index,\ntwo-factor authentication is required. For uploading packages to PyPi, an API\nkey is required; username+password will not work.\n\nFirst, generate an API token at https://pypi.org/manage/account/token/. Then,\nuse this token when publishing instead of your username and password.\n\nAs username, use `__token__`.\nAs password, use the token itself, including the `pypi-` prefix.\n\nSee https://pypi.org/help/#apitoken for help using API tokens to publish. This\nis what I have in `~/.pypirc`:\n\n```\n[distutils]\nindex-servers =\n    rsa\n\n# Use `twine upload -r rsa` to upload with this token.\n[rsa]\n  repository = https://upload.pypi.org/legacy/\n  username = __token__\n  password = pypi-token\n```\n\n```\n. ./.venv/bin/activate\npip install twine\n\npoetry build\ntwine check dist/rsa-4.9.tar.gz dist/rsa-4.9-*.whl\ntwine upload -r rsa dist/rsa-4.9.tar.gz dist/rsa-4.9-*.whl\n```\n\nThe `pip install twine` is necessary as Python-RSA requires Python >= 3.6, and\nTwine requires at least version 3.7. This means Poetry refuses to add it as\ndependency.\n\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/rsa-4.9.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "scikit-learn",
        "version": "1.2.2",
        "summary": "A set of python modules for machine learning and data mining",
        "home_page": "http://scikit-learn.org",
        "download_url": "https://pypi.org/project/scikit-learn/#files",
        "maintainer": "Andreas Mueller",
        "maintainer_email": "amueller@ais.uni-bonn.de",
        "license": "new BSD",
        "classifier": [
          "Intended Audience :: Science/Research",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: BSD License",
          "Programming Language :: C",
          "Programming Language :: Python",
          "Topic :: Software Development",
          "Topic :: Scientific/Engineering",
          "Development Status :: 5 - Production/Stable",
          "Operating System :: Microsoft :: Windows",
          "Operating System :: POSIX",
          "Operating System :: Unix",
          "Operating System :: MacOS",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Programming Language :: Python :: Implementation :: CPython",
          "Programming Language :: Python :: Implementation :: PyPy"
        ],
        "requires_dist": [
          "numpy (>=1.17.3)",
          "scipy (>=1.3.2)",
          "joblib (>=1.1.1)",
          "threadpoolctl (>=2.0.0)",
          "matplotlib (>=3.1.3) ; extra == 'benchmark'",
          "pandas (>=1.0.5) ; extra == 'benchmark'",
          "memory-profiler (>=0.57.0) ; extra == 'benchmark'",
          "matplotlib (>=3.1.3) ; extra == 'docs'",
          "scikit-image (>=0.16.2) ; extra == 'docs'",
          "pandas (>=1.0.5) ; extra == 'docs'",
          "seaborn (>=0.9.0) ; extra == 'docs'",
          "memory-profiler (>=0.57.0) ; extra == 'docs'",
          "sphinx (>=4.0.1) ; extra == 'docs'",
          "sphinx-gallery (>=0.7.0) ; extra == 'docs'",
          "numpydoc (>=1.2.0) ; extra == 'docs'",
          "Pillow (>=7.1.2) ; extra == 'docs'",
          "pooch (>=1.6.0) ; extra == 'docs'",
          "sphinx-prompt (>=1.3.0) ; extra == 'docs'",
          "sphinxext-opengraph (>=0.4.2) ; extra == 'docs'",
          "plotly (>=5.10.0) ; extra == 'docs'",
          "matplotlib (>=3.1.3) ; extra == 'examples'",
          "scikit-image (>=0.16.2) ; extra == 'examples'",
          "pandas (>=1.0.5) ; extra == 'examples'",
          "seaborn (>=0.9.0) ; extra == 'examples'",
          "pooch (>=1.6.0) ; extra == 'examples'",
          "plotly (>=5.10.0) ; extra == 'examples'",
          "matplotlib (>=3.1.3) ; extra == 'tests'",
          "scikit-image (>=0.16.2) ; extra == 'tests'",
          "pandas (>=1.0.5) ; extra == 'tests'",
          "pytest (>=5.3.1) ; extra == 'tests'",
          "pytest-cov (>=2.9.0) ; extra == 'tests'",
          "flake8 (>=3.8.2) ; extra == 'tests'",
          "black (>=22.3.0) ; extra == 'tests'",
          "mypy (>=0.961) ; extra == 'tests'",
          "pyamg (>=4.0.0) ; extra == 'tests'",
          "numpydoc (>=1.2.0) ; extra == 'tests'",
          "pooch (>=1.6.0) ; extra == 'tests'"
        ],
        "requires_python": ">=3.8",
        "project_url": [
          "Bug Tracker, https://github.com/scikit-learn/scikit-learn/issues",
          "Documentation, https://scikit-learn.org/stable/documentation.html",
          "Source Code, https://github.com/scikit-learn/scikit-learn"
        ],
        "provides_extra": [
          "benchmark",
          "docs",
          "examples",
          "tests"
        ],
        "description": ".. -*- mode: rst -*-\n\n|Azure|_ |CirrusCI|_ |Codecov|_ |CircleCI|_ |Nightly wheels|_ |Black|_ |PythonVersion|_ |PyPi|_ |DOI|_ |Benchmark|_\n\n.. |Azure| image:: https://dev.azure.com/scikit-learn/scikit-learn/_apis/build/status/scikit-learn.scikit-learn?branchName=main\n.. _Azure: https://dev.azure.com/scikit-learn/scikit-learn/_build/latest?definitionId=1&branchName=main\n\n.. |CircleCI| image:: https://circleci.com/gh/scikit-learn/scikit-learn/tree/main.svg?style=shield&circle-token=:circle-token\n.. _CircleCI: https://circleci.com/gh/scikit-learn/scikit-learn\n\n.. |CirrusCI| image:: https://img.shields.io/cirrus/github/scikit-learn/scikit-learn/main?label=Cirrus%20CI\n.. _CirrusCI: https://cirrus-ci.com/github/scikit-learn/scikit-learn/main\n\n.. |Codecov| image:: https://codecov.io/gh/scikit-learn/scikit-learn/branch/main/graph/badge.svg?token=Pk8G9gg3y9\n.. _Codecov: https://codecov.io/gh/scikit-learn/scikit-learn\n\n.. |Nightly wheels| image:: https://github.com/scikit-learn/scikit-learn/workflows/Wheel%20builder/badge.svg?event=schedule\n.. _`Nightly wheels`: https://github.com/scikit-learn/scikit-learn/actions?query=workflow%3A%22Wheel+builder%22+event%3Aschedule\n\n.. |PythonVersion| image:: https://img.shields.io/badge/python-3.8%20%7C%203.9%20%7C%203.10-blue\n.. _PythonVersion: https://pypi.org/project/scikit-learn/\n\n.. |PyPi| image:: https://img.shields.io/pypi/v/scikit-learn\n.. _PyPi: https://pypi.org/project/scikit-learn\n\n.. |Black| image:: https://img.shields.io/badge/code%20style-black-000000.svg\n.. _Black: https://github.com/psf/black\n\n.. |DOI| image:: https://zenodo.org/badge/21369/scikit-learn/scikit-learn.svg\n.. _DOI: https://zenodo.org/badge/latestdoi/21369/scikit-learn/scikit-learn\n\n.. |Benchmark| image:: https://img.shields.io/badge/Benchmarked%20by-asv-blue\n.. _`Benchmark`: https://scikit-learn.org/scikit-learn-benchmarks/\n\n.. |PythonMinVersion| replace:: 3.8\n.. |NumPyMinVersion| replace:: 1.17.3\n.. |SciPyMinVersion| replace:: 1.3.2\n.. |JoblibMinVersion| replace:: 1.1.1\n.. |ThreadpoolctlMinVersion| replace:: 2.0.0\n.. |MatplotlibMinVersion| replace:: 3.1.3\n.. |Scikit-ImageMinVersion| replace:: 0.16.2\n.. |PandasMinVersion| replace:: 1.0.5\n.. |SeabornMinVersion| replace:: 0.9.0\n.. |PytestMinVersion| replace:: 5.3.1\n.. |PlotlyMinVersion| replace:: 5.10.0\n\n.. image:: https://raw.githubusercontent.com/scikit-learn/scikit-learn/main/doc/logos/scikit-learn-logo.png\n  :target: https://scikit-learn.org/\n\n**scikit-learn** is a Python module for machine learning built on top of\nSciPy and is distributed under the 3-Clause BSD license.\n\nThe project was started in 2007 by David Cournapeau as a Google Summer\nof Code project, and since then many volunteers have contributed. See\nthe `About us <https://scikit-learn.org/dev/about.html#authors>`__ page\nfor a list of core contributors.\n\nIt is currently maintained by a team of volunteers.\n\nWebsite: https://scikit-learn.org\n\nInstallation\n------------\n\nDependencies\n~~~~~~~~~~~~\n\nscikit-learn requires:\n\n- Python (>= |PythonMinVersion|)\n- NumPy (>= |NumPyMinVersion|)\n- SciPy (>= |SciPyMinVersion|)\n- joblib (>= |JoblibMinVersion|)\n- threadpoolctl (>= |ThreadpoolctlMinVersion|)\n\n=======\n\n**Scikit-learn 0.20 was the last version to support Python 2.7 and Python 3.4.**\nscikit-learn 1.0 and later require Python 3.7 or newer.\nscikit-learn 1.1 and later require Python 3.8 or newer.\n\nScikit-learn plotting capabilities (i.e., functions start with ``plot_`` and\nclasses end with \"Display\") require Matplotlib (>= |MatplotlibMinVersion|).\nFor running the examples Matplotlib >= |MatplotlibMinVersion| is required.\nA few examples require scikit-image >= |Scikit-ImageMinVersion|, a few examples\nrequire pandas >= |PandasMinVersion|, some examples require seaborn >=\n|SeabornMinVersion| and plotly >= |PlotlyMinVersion|.\n\nUser installation\n~~~~~~~~~~~~~~~~~\n\nIf you already have a working installation of numpy and scipy,\nthe easiest way to install scikit-learn is using ``pip``::\n\n    pip install -U scikit-learn\n\nor ``conda``::\n\n    conda install -c conda-forge scikit-learn\n\nThe documentation includes more detailed `installation instructions <https://scikit-learn.org/stable/install.html>`_.\n\n\nChangelog\n---------\n\nSee the `changelog <https://scikit-learn.org/dev/whats_new.html>`__\nfor a history of notable changes to scikit-learn.\n\nDevelopment\n-----------\n\nWe welcome new contributors of all experience levels. The scikit-learn\ncommunity goals are to be helpful, welcoming, and effective. The\n`Development Guide <https://scikit-learn.org/stable/developers/index.html>`_\nhas detailed information about contributing code, documentation, tests, and\nmore. We've included some basic information in this README.\n\nImportant links\n~~~~~~~~~~~~~~~\n\n- Official source code repo: https://github.com/scikit-learn/scikit-learn\n- Download releases: https://pypi.org/project/scikit-learn/\n- Issue tracker: https://github.com/scikit-learn/scikit-learn/issues\n\nSource code\n~~~~~~~~~~~\n\nYou can check the latest sources with the command::\n\n    git clone https://github.com/scikit-learn/scikit-learn.git\n\nContributing\n~~~~~~~~~~~~\n\nTo learn more about making a contribution to scikit-learn, please see our\n`Contributing guide\n<https://scikit-learn.org/dev/developers/contributing.html>`_.\n\nTesting\n~~~~~~~\n\nAfter installation, you can launch the test suite from outside the source\ndirectory (you will need to have ``pytest`` >= |PyTestMinVersion| installed)::\n\n    pytest sklearn\n\nSee the web page https://scikit-learn.org/dev/developers/contributing.html#testing-and-improving-test-coverage\nfor more information.\n\n    Random number generation can be controlled during testing by setting\n    the ``SKLEARN_SEED`` environment variable.\n\nSubmitting a Pull Request\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\nBefore opening a Pull Request, have a look at the\nfull Contributing page to make sure your code complies\nwith our guidelines: https://scikit-learn.org/stable/developers/index.html\n\nProject History\n---------------\n\nThe project was started in 2007 by David Cournapeau as a Google Summer\nof Code project, and since then many volunteers have contributed. See\nthe `About us <https://scikit-learn.org/dev/about.html#authors>`__ page\nfor a list of core contributors.\n\nThe project is currently maintained by a team of volunteers.\n\n**Note**: `scikit-learn` was previously referred to as `scikits.learn`.\n\nHelp and Support\n----------------\n\nDocumentation\n~~~~~~~~~~~~~\n\n- HTML documentation (stable release): https://scikit-learn.org\n- HTML documentation (development version): https://scikit-learn.org/dev/\n- FAQ: https://scikit-learn.org/stable/faq.html\n\nCommunication\n~~~~~~~~~~~~~\n\n- Mailing list: https://mail.python.org/mailman/listinfo/scikit-learn\n- Gitter: https://gitter.im/scikit-learn/scikit-learn\n- Logos & Branding: https://github.com/scikit-learn/scikit-learn/tree/main/doc/logos\n- Blog: https://blog.scikit-learn.org\n- Calendar: https://blog.scikit-learn.org/calendar/\n- Twitter: https://twitter.com/scikit_learn\n- Twitter (commits): https://twitter.com/sklearn_commits\n- Stack Overflow: https://stackoverflow.com/questions/tagged/scikit-learn\n- Github Discussions: https://github.com/scikit-learn/scikit-learn/discussions\n- Website: https://scikit-learn.org\n- LinkedIn: https://www.linkedin.com/company/scikit-learn\n- YouTube: https://www.youtube.com/channel/UCJosFjYm0ZYVUARxuOZqnnw/playlists\n- Facebook: https://www.facebook.com/scikitlearnofficial/\n- Instagram: https://www.instagram.com/scikitlearnofficial/\n- TikTok: https://www.tiktok.com/@scikit.learn\n\nCitation\n~~~~~~~~\n\nIf you use scikit-learn in a scientific publication, we would appreciate citations: https://scikit-learn.org/stable/about.html#citing-scikit-learn\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/scikit_learn-1.2.2.dist-info",
      "installer": "pip",
      "requested": true
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "scipy",
        "version": "1.10.1",
        "summary": "Fundamental algorithms for scientific computing in Python",
        "description_content_type": "text/x-rst",
        "home_page": "https://scipy.org/",
        "maintainer_email": "SciPy Developers <scipy-dev@python.org>",
        "license": "Copyright (c) 2001-2002 Enthought, Inc. 2003-2022, SciPy Developers.\n        All rights reserved.\n        \n        Redistribution and use in source and binary forms, with or without\n        modification, are permitted provided that the following conditions\n        are met:\n        \n        1. Redistributions of source code must retain the above copyright\n           notice, this list of conditions and the following disclaimer.\n        \n        2. Redistributions in binary form must reproduce the above\n           copyright notice, this list of conditions and the following\n           disclaimer in the documentation and/or other materials provided\n           with the distribution.\n        \n        3. Neither the name of the copyright holder nor the names of its\n           contributors may be used to endorse or promote products derived\n           from this software without specific prior written permission.\n        \n        THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n        \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n        LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n        A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n        OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n        SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n        LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n        DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n        THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n        (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n        OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n        \n        ----\n        \n        This binary distribution of SciPy also bundles the following software:\n        \n        \n        Name: OpenBLAS\n        Files: .libs/libopenb*.so\n        Description: bundled as a dynamically linked library\n        Availability: https://github.com/xianyi/OpenBLAS/\n        License: 3-clause BSD\n          Copyright (c) 2011-2014, The OpenBLAS Project\n          All rights reserved.\n          \n          Redistribution and use in source and binary forms, with or without\n          modification, are permitted provided that the following conditions are\n          met:\n          \n             1. Redistributions of source code must retain the above copyright\n                notice, this list of conditions and the following disclaimer.\n          \n             2. Redistributions in binary form must reproduce the above copyright\n                notice, this list of conditions and the following disclaimer in\n                the documentation and/or other materials provided with the\n                distribution.\n             3. Neither the name of the OpenBLAS project nor the names of \n                its contributors may be used to endorse or promote products \n                derived from this software without specific prior written \n                permission.\n          \n          THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n          AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n          IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n          ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n          LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n          DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n          SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n          CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n          OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\n          USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n        \n        \n        Name: LAPACK\n        Files: .libs/libopenb*.so\n        Description: bundled in OpenBLAS\n        Availability: https://github.com/xianyi/OpenBLAS/\n        License 3-clause BSD\n          Copyright (c) 1992-2013 The University of Tennessee and The University\n                                  of Tennessee Research Foundation.  All rights\n                                  reserved.\n          Copyright (c) 2000-2013 The University of California Berkeley. All\n                                  rights reserved.\n          Copyright (c) 2006-2013 The University of Colorado Denver.  All rights\n                                  reserved.\n          \n          $COPYRIGHT$\n          \n          Additional copyrights may follow\n          \n          $HEADER$\n          \n          Redistribution and use in source and binary forms, with or without\n          modification, are permitted provided that the following conditions are\n          met:\n          \n          - Redistributions of source code must retain the above copyright\n            notice, this list of conditions and the following disclaimer.\n          \n          - Redistributions in binary form must reproduce the above copyright\n            notice, this list of conditions and the following disclaimer listed\n            in this license in the documentation and/or other materials\n            provided with the distribution.\n          \n          - Neither the name of the copyright holders nor the names of its\n            contributors may be used to endorse or promote products derived from\n            this software without specific prior written permission.\n          \n          The copyright holders provide no reassurances that the source code\n          provided does not infringe any patent, copyright, or any other\n          intellectual property rights of third parties.  The copyright holders\n          disclaim any liability to any recipient for claims brought against\n          recipient by any third party for infringement of that parties\n          intellectual property rights.\n          \n          THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n          \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n          LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n          A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n          OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n          SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n          LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n          DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n          THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n          (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n          OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n        \n        \n        Name: GCC runtime library\n        Files: .libs/libgfortran*.so\n        Description: dynamically linked to files compiled with gcc\n        Availability: https://gcc.gnu.org/viewcvs/gcc/\n        License: GPLv3 + runtime exception\n          Copyright (C) 2002-2017 Free Software Foundation, Inc.\n          \n          Libgfortran is free software; you can redistribute it and/or modify\n          it under the terms of the GNU General Public License as published by\n          the Free Software Foundation; either version 3, or (at your option)\n          any later version.\n          \n          Libgfortran is distributed in the hope that it will be useful,\n          but WITHOUT ANY WARRANTY; without even the implied warranty of\n          MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n          GNU General Public License for more details.\n          \n          Under Section 7 of GPL version 3, you are granted additional\n          permissions described in the GCC Runtime Library Exception, version\n          3.1, as published by the Free Software Foundation.\n          \n          You should have received a copy of the GNU General Public License and\n          a copy of the GCC Runtime Library Exception along with this program;\n          see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n          <http://www.gnu.org/licenses/>.\n        \n        ----\n        \n        Full text of license texts referred to above follows (that they are\n        listed below does not necessarily imply the conditions apply to the\n        present binary release):\n        \n        ----\n        \n        GCC RUNTIME LIBRARY EXCEPTION\n        \n        Version 3.1, 31 March 2009\n        \n        Copyright (C) 2009 Free Software Foundation, Inc. <http://fsf.org/>\n        \n        Everyone is permitted to copy and distribute verbatim copies of this\n        license document, but changing it is not allowed.\n        \n        This GCC Runtime Library Exception (\"Exception\") is an additional\n        permission under section 7 of the GNU General Public License, version\n        3 (\"GPLv3\"). It applies to a given file (the \"Runtime Library\") that\n        bears a notice placed by the copyright holder of the file stating that\n        the file is governed by GPLv3 along with this Exception.\n        \n        When you use GCC to compile a program, GCC may combine portions of\n        certain GCC header files and runtime libraries with the compiled\n        program. The purpose of this Exception is to allow compilation of\n        non-GPL (including proprietary) programs to use, in this way, the\n        header files and runtime libraries covered by this Exception.\n        \n        0. Definitions.\n        \n        A file is an \"Independent Module\" if it either requires the Runtime\n        Library for execution after a Compilation Process, or makes use of an\n        interface provided by the Runtime Library, but is not otherwise based\n        on the Runtime Library.\n        \n        \"GCC\" means a version of the GNU Compiler Collection, with or without\n        modifications, governed by version 3 (or a specified later version) of\n        the GNU General Public License (GPL) with the option of using any\n        subsequent versions published by the FSF.\n        \n        \"GPL-compatible Software\" is software whose conditions of propagation,\n        modification and use would permit combination with GCC in accord with\n        the license of GCC.\n        \n        \"Target Code\" refers to output from any compiler for a real or virtual\n        target processor architecture, in executable form or suitable for\n        input to an assembler, loader, linker and/or execution\n        phase. Notwithstanding that, Target Code does not include data in any\n        format that is used as a compiler intermediate representation, or used\n        for producing a compiler intermediate representation.\n        \n        The \"Compilation Process\" transforms code entirely represented in\n        non-intermediate languages designed for human-written code, and/or in\n        Java Virtual Machine byte code, into Target Code. Thus, for example,\n        use of source code generators and preprocessors need not be considered\n        part of the Compilation Process, since the Compilation Process can be\n        understood as starting with the output of the generators or\n        preprocessors.\n        \n        A Compilation Process is \"Eligible\" if it is done using GCC, alone or\n        with other GPL-compatible software, or if it is done without using any\n        work based on GCC. For example, using non-GPL-compatible Software to\n        optimize any GCC intermediate representations would not qualify as an\n        Eligible Compilation Process.\n        \n        1. Grant of Additional Permission.\n        \n        You have permission to propagate a work of Target Code formed by\n        combining the Runtime Library with Independent Modules, even if such\n        propagation would otherwise violate the terms of GPLv3, provided that\n        all Target Code was generated by Eligible Compilation Processes. You\n        may then convey such a combination under terms of your choice,\n        consistent with the licensing of the Independent Modules.\n        \n        2. No Weakening of GCC Copyleft.\n        \n        The availability of this Exception does not imply any general\n        presumption that third-party software is unaffected by the copyleft\n        requirements of the license of GCC.\n        \n        ----\n        \n                            GNU GENERAL PUBLIC LICENSE\n                               Version 3, 29 June 2007\n        \n         Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n         Everyone is permitted to copy and distribute verbatim copies\n         of this license document, but changing it is not allowed.\n        \n                                    Preamble\n        \n          The GNU General Public License is a free, copyleft license for\n        software and other kinds of works.\n        \n          The licenses for most software and other practical works are designed\n        to take away your freedom to share and change the works.  By contrast,\n        the GNU General Public License is intended to guarantee your freedom to\n        share and change all versions of a program--to make sure it remains free\n        software for all its users.  We, the Free Software Foundation, use the\n        GNU General Public License for most of our software; it applies also to\n        any other work released this way by its authors.  You can apply it to\n        your programs, too.\n        \n          When we speak of free software, we are referring to freedom, not\n        price.  Our General Public Licenses are designed to make sure that you\n        have the freedom to distribute copies of free software (and charge for\n        them if you wish), that you receive source code or can get it if you\n        want it, that you can change the software or use pieces of it in new\n        free programs, and that you know you can do these things.\n        \n          To protect your rights, we need to prevent others from denying you\n        these rights or asking you to surrender the rights.  Therefore, you have\n        certain responsibilities if you distribute copies of the software, or if\n        you modify it: responsibilities to respect the freedom of others.\n        \n          For example, if you distribute copies of such a program, whether\n        gratis or for a fee, you must pass on to the recipients the same\n        freedoms that you received.  You must make sure that they, too, receive\n        or can get the source code.  And you must show them these terms so they\n        know their rights.\n        \n          Developers that use the GNU GPL protect your rights with two steps:\n        (1) assert copyright on the software, and (2) offer you this License\n        giving you legal permission to copy, distribute and/or modify it.\n        \n          For the developers' and authors' protection, the GPL clearly explains\n        that there is no warranty for this free software.  For both users' and\n        authors' sake, the GPL requires that modified versions be marked as\n        changed, so that their problems will not be attributed erroneously to\n        authors of previous versions.\n        \n          Some devices are designed to deny users access to install or run\n        modified versions of the software inside them, although the manufacturer\n        can do so.  This is fundamentally incompatible with the aim of\n        protecting users' freedom to change the software.  The systematic\n        pattern of such abuse occurs in the area of products for individuals to\n        use, which is precisely where it is most unacceptable.  Therefore, we\n        have designed this version of the GPL to prohibit the practice for those\n        products.  If such problems arise substantially in other domains, we\n        stand ready to extend this provision to those domains in future versions\n        of the GPL, as needed to protect the freedom of users.\n        \n          Finally, every program is threatened constantly by software patents.\n        States should not allow patents to restrict development and use of\n        software on general-purpose computers, but in those that do, we wish to\n        avoid the special danger that patents applied to a free program could\n        make it effectively proprietary.  To prevent this, the GPL assures that\n        patents cannot be used to render the program non-free.\n        \n          The precise terms and conditions for copying, distribution and\n        modification follow.\n        \n                               TERMS AND CONDITIONS\n        \n          0. Definitions.\n        \n          \"This License\" refers to version 3 of the GNU General Public License.\n        \n          \"Copyright\" also means copyright-like laws that apply to other kinds of\n        works, such as semiconductor masks.\n        \n          \"The Program\" refers to any copyrightable work licensed under this\n        License.  Each licensee is addressed as \"you\".  \"Licensees\" and\n        \"recipients\" may be individuals or organizations.\n        \n          To \"modify\" a work means to copy from or adapt all or part of the work\n        in a fashion requiring copyright permission, other than the making of an\n        exact copy.  The resulting work is called a \"modified version\" of the\n        earlier work or a work \"based on\" the earlier work.\n        \n          A \"covered work\" means either the unmodified Program or a work based\n        on the Program.\n        \n          To \"propagate\" a work means to do anything with it that, without\n        permission, would make you directly or secondarily liable for\n        infringement under applicable copyright law, except executing it on a\n        computer or modifying a private copy.  Propagation includes copying,\n        distribution (with or without modification), making available to the\n        public, and in some countries other activities as well.\n        \n          To \"convey\" a work means any kind of propagation that enables other\n        parties to make or receive copies.  Mere interaction with a user through\n        a computer network, with no transfer of a copy, is not conveying.\n        \n          An interactive user interface displays \"Appropriate Legal Notices\"\n        to the extent that it includes a convenient and prominently visible\n        feature that (1) displays an appropriate copyright notice, and (2)\n        tells the user that there is no warranty for the work (except to the\n        extent that warranties are provided), that licensees may convey the\n        work under this License, and how to view a copy of this License.  If\n        the interface presents a list of user commands or options, such as a\n        menu, a prominent item in the list meets this criterion.\n        \n          1. Source Code.\n        \n          The \"source code\" for a work means the preferred form of the work\n        for making modifications to it.  \"Object code\" means any non-source\n        form of a work.\n        \n          A \"Standard Interface\" means an interface that either is an official\n        standard defined by a recognized standards body, or, in the case of\n        interfaces specified for a particular programming language, one that\n        is widely used among developers working in that language.\n        \n          The \"System Libraries\" of an executable work include anything, other\n        than the work as a whole, that (a) is included in the normal form of\n        packaging a Major Component, but which is not part of that Major\n        Component, and (b) serves only to enable use of the work with that\n        Major Component, or to implement a Standard Interface for which an\n        implementation is available to the public in source code form.  A\n        \"Major Component\", in this context, means a major essential component\n        (kernel, window system, and so on) of the specific operating system\n        (if any) on which the executable work runs, or a compiler used to\n        produce the work, or an object code interpreter used to run it.\n        \n          The \"Corresponding Source\" for a work in object code form means all\n        the source code needed to generate, install, and (for an executable\n        work) run the object code and to modify the work, including scripts to\n        control those activities.  However, it does not include the work's\n        System Libraries, or general-purpose tools or generally available free\n        programs which are used unmodified in performing those activities but\n        which are not part of the work.  For example, Corresponding Source\n        includes interface definition files associated with source files for\n        the work, and the source code for shared libraries and dynamically\n        linked subprograms that the work is specifically designed to require,\n        such as by intimate data communication or control flow between those\n        subprograms and other parts of the work.\n        \n          The Corresponding Source need not include anything that users\n        can regenerate automatically from other parts of the Corresponding\n        Source.\n        \n          The Corresponding Source for a work in source code form is that\n        same work.\n        \n          2. Basic Permissions.\n        \n          All rights granted under this License are granted for the term of\n        copyright on the Program, and are irrevocable provided the stated\n        conditions are met.  This License explicitly affirms your unlimited\n        permission to run the unmodified Program.  The output from running a\n        covered work is covered by this License only if the output, given its\n        content, constitutes a covered work.  This License acknowledges your\n        rights of fair use or other equivalent, as provided by copyright law.\n        \n          You may make, run and propagate covered works that you do not\n        convey, without conditions so long as your license otherwise remains\n        in force.  You may convey covered works to others for the sole purpose\n        of having them make modifications exclusively for you, or provide you\n        with facilities for running those works, provided that you comply with\n        the terms of this License in conveying all material for which you do\n        not control copyright.  Those thus making or running the covered works\n        for you must do so exclusively on your behalf, under your direction\n        and control, on terms that prohibit them from making any copies of\n        your copyrighted material outside their relationship with you.\n        \n          Conveying under any other circumstances is permitted solely under\n        the conditions stated below.  Sublicensing is not allowed; section 10\n        makes it unnecessary.\n        \n          3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n        \n          No covered work shall be deemed part of an effective technological\n        measure under any applicable law fulfilling obligations under article\n        11 of the WIPO copyright treaty adopted on 20 December 1996, or\n        similar laws prohibiting or restricting circumvention of such\n        measures.\n        \n          When you convey a covered work, you waive any legal power to forbid\n        circumvention of technological measures to the extent such circumvention\n        is effected by exercising rights under this License with respect to\n        the covered work, and you disclaim any intention to limit operation or\n        modification of the work as a means of enforcing, against the work's\n        users, your or third parties' legal rights to forbid circumvention of\n        technological measures.\n        \n          4. Conveying Verbatim Copies.\n        \n          You may convey verbatim copies of the Program's source code as you\n        receive it, in any medium, provided that you conspicuously and\n        appropriately publish on each copy an appropriate copyright notice;\n        keep intact all notices stating that this License and any\n        non-permissive terms added in accord with section 7 apply to the code;\n        keep intact all notices of the absence of any warranty; and give all\n        recipients a copy of this License along with the Program.\n        \n          You may charge any price or no price for each copy that you convey,\n        and you may offer support or warranty protection for a fee.\n        \n          5. Conveying Modified Source Versions.\n        \n          You may convey a work based on the Program, or the modifications to\n        produce it from the Program, in the form of source code under the\n        terms of section 4, provided that you also meet all of these conditions:\n        \n            a) The work must carry prominent notices stating that you modified\n            it, and giving a relevant date.\n        \n            b) The work must carry prominent notices stating that it is\n            released under this License and any conditions added under section\n            7.  This requirement modifies the requirement in section 4 to\n            \"keep intact all notices\".\n        \n            c) You must license the entire work, as a whole, under this\n            License to anyone who comes into possession of a copy.  This\n            License will therefore apply, along with any applicable section 7\n            additional terms, to the whole of the work, and all its parts,\n            regardless of how they are packaged.  This License gives no\n            permission to license the work in any other way, but it does not\n            invalidate such permission if you have separately received it.\n        \n            d) If the work has interactive user interfaces, each must display\n            Appropriate Legal Notices; however, if the Program has interactive\n            interfaces that do not display Appropriate Legal Notices, your\n            work need not make them do so.\n        \n          A compilation of a covered work with other separate and independent\n        works, which are not by their nature extensions of the covered work,\n        and which are not combined with it such as to form a larger program,\n        in or on a volume of a storage or distribution medium, is called an\n        \"aggregate\" if the compilation and its resulting copyright are not\n        used to limit the access or legal rights of the compilation's users\n        beyond what the individual works permit.  Inclusion of a covered work\n        in an aggregate does not cause this License to apply to the other\n        parts of the aggregate.\n        \n          6. Conveying Non-Source Forms.\n        \n          You may convey a covered work in object code form under the terms\n        of sections 4 and 5, provided that you also convey the\n        machine-readable Corresponding Source under the terms of this License,\n        in one of these ways:\n        \n            a) Convey the object code in, or embodied in, a physical product\n            (including a physical distribution medium), accompanied by the\n            Corresponding Source fixed on a durable physical medium\n            customarily used for software interchange.\n        \n            b) Convey the object code in, or embodied in, a physical product\n            (including a physical distribution medium), accompanied by a\n            written offer, valid for at least three years and valid for as\n            long as you offer spare parts or customer support for that product\n            model, to give anyone who possesses the object code either (1) a\n            copy of the Corresponding Source for all the software in the\n            product that is covered by this License, on a durable physical\n            medium customarily used for software interchange, for a price no\n            more than your reasonable cost of physically performing this\n            conveying of source, or (2) access to copy the\n            Corresponding Source from a network server at no charge.\n        \n            c) Convey individual copies of the object code with a copy of the\n            written offer to provide the Corresponding Source.  This\n            alternative is allowed only occasionally and noncommercially, and\n            only if you received the object code with such an offer, in accord\n            with subsection 6b.\n        \n            d) Convey the object code by offering access from a designated\n            place (gratis or for a charge), and offer equivalent access to the\n            Corresponding Source in the same way through the same place at no\n            further charge.  You need not require recipients to copy the\n            Corresponding Source along with the object code.  If the place to\n            copy the object code is a network server, the Corresponding Source\n            may be on a different server (operated by you or a third party)\n            that supports equivalent copying facilities, provided you maintain\n            clear directions next to the object code saying where to find the\n            Corresponding Source.  Regardless of what server hosts the\n            Corresponding Source, you remain obligated to ensure that it is\n            available for as long as needed to satisfy these requirements.\n        \n            e) Convey the object code using peer-to-peer transmission, provided\n            you inform other peers where the object code and Corresponding\n            Source of the work are being offered to the general public at no\n            charge under subsection 6d.\n        \n          A separable portion of the object code, whose source code is excluded\n        from the Corresponding Source as a System Library, need not be\n        included in conveying the object code work.\n        \n          A \"User Product\" is either (1) a \"consumer product\", which means any\n        tangible personal property which is normally used for personal, family,\n        or household purposes, or (2) anything designed or sold for incorporation\n        into a dwelling.  In determining whether a product is a consumer product,\n        doubtful cases shall be resolved in favor of coverage.  For a particular\n        product received by a particular user, \"normally used\" refers to a\n        typical or common use of that class of product, regardless of the status\n        of the particular user or of the way in which the particular user\n        actually uses, or expects or is expected to use, the product.  A product\n        is a consumer product regardless of whether the product has substantial\n        commercial, industrial or non-consumer uses, unless such uses represent\n        the only significant mode of use of the product.\n        \n          \"Installation Information\" for a User Product means any methods,\n        procedures, authorization keys, or other information required to install\n        and execute modified versions of a covered work in that User Product from\n        a modified version of its Corresponding Source.  The information must\n        suffice to ensure that the continued functioning of the modified object\n        code is in no case prevented or interfered with solely because\n        modification has been made.\n        \n          If you convey an object code work under this section in, or with, or\n        specifically for use in, a User Product, and the conveying occurs as\n        part of a transaction in which the right of possession and use of the\n        User Product is transferred to the recipient in perpetuity or for a\n        fixed term (regardless of how the transaction is characterized), the\n        Corresponding Source conveyed under this section must be accompanied\n        by the Installation Information.  But this requirement does not apply\n        if neither you nor any third party retains the ability to install\n        modified object code on the User Product (for example, the work has\n        been installed in ROM).\n        \n          The requirement to provide Installation Information does not include a\n        requirement to continue to provide support service, warranty, or updates\n        for a work that has been modified or installed by the recipient, or for\n        the User Product in which it has been modified or installed.  Access to a\n        network may be denied when the modification itself materially and\n        adversely affects the operation of the network or violates the rules and\n        protocols for communication across the network.\n        \n          Corresponding Source conveyed, and Installation Information provided,\n        in accord with this section must be in a format that is publicly\n        documented (and with an implementation available to the public in\n        source code form), and must require no special password or key for\n        unpacking, reading or copying.\n        \n          7. Additional Terms.\n        \n          \"Additional permissions\" are terms that supplement the terms of this\n        License by making exceptions from one or more of its conditions.\n        Additional permissions that are applicable to the entire Program shall\n        be treated as though they were included in this License, to the extent\n        that they are valid under applicable law.  If additional permissions\n        apply only to part of the Program, that part may be used separately\n        under those permissions, but the entire Program remains governed by\n        this License without regard to the additional permissions.\n        \n          When you convey a copy of a covered work, you may at your option\n        remove any additional permissions from that copy, or from any part of\n        it.  (Additional permissions may be written to require their own\n        removal in certain cases when you modify the work.)  You may place\n        additional permissions on material, added by you to a covered work,\n        for which you have or can give appropriate copyright permission.\n        \n          Notwithstanding any other provision of this License, for material you\n        add to a covered work, you may (if authorized by the copyright holders of\n        that material) supplement the terms of this License with terms:\n        \n            a) Disclaiming warranty or limiting liability differently from the\n            terms of sections 15 and 16 of this License; or\n        \n            b) Requiring preservation of specified reasonable legal notices or\n            author attributions in that material or in the Appropriate Legal\n            Notices displayed by works containing it; or\n        \n            c) Prohibiting misrepresentation of the origin of that material, or\n            requiring that modified versions of such material be marked in\n            reasonable ways as different from the original version; or\n        \n            d) Limiting the use for publicity purposes of names of licensors or\n            authors of the material; or\n        \n            e) Declining to grant rights under trademark law for use of some\n            trade names, trademarks, or service marks; or\n        \n            f) Requiring indemnification of licensors and authors of that\n            material by anyone who conveys the material (or modified versions of\n            it) with contractual assumptions of liability to the recipient, for\n            any liability that these contractual assumptions directly impose on\n            those licensors and authors.\n        \n          All other non-permissive additional terms are considered \"further\n        restrictions\" within the meaning of section 10.  If the Program as you\n        received it, or any part of it, contains a notice stating that it is\n        governed by this License along with a term that is a further\n        restriction, you may remove that term.  If a license document contains\n        a further restriction but permits relicensing or conveying under this\n        License, you may add to a covered work material governed by the terms\n        of that license document, provided that the further restriction does\n        not survive such relicensing or conveying.\n        \n          If you add terms to a covered work in accord with this section, you\n        must place, in the relevant source files, a statement of the\n        additional terms that apply to those files, or a notice indicating\n        where to find the applicable terms.\n        \n          Additional terms, permissive or non-permissive, may be stated in the\n        form of a separately written license, or stated as exceptions;\n        the above requirements apply either way.\n        \n          8. Termination.\n        \n          You may not propagate or modify a covered work except as expressly\n        provided under this License.  Any attempt otherwise to propagate or\n        modify it is void, and will automatically terminate your rights under\n        this License (including any patent licenses granted under the third\n        paragraph of section 11).\n        \n          However, if you cease all violation of this License, then your\n        license from a particular copyright holder is reinstated (a)\n        provisionally, unless and until the copyright holder explicitly and\n        finally terminates your license, and (b) permanently, if the copyright\n        holder fails to notify you of the violation by some reasonable means\n        prior to 60 days after the cessation.\n        \n          Moreover, your license from a particular copyright holder is\n        reinstated permanently if the copyright holder notifies you of the\n        violation by some reasonable means, this is the first time you have\n        received notice of violation of this License (for any work) from that\n        copyright holder, and you cure the violation prior to 30 days after\n        your receipt of the notice.\n        \n          Termination of your rights under this section does not terminate the\n        licenses of parties who have received copies or rights from you under\n        this License.  If your rights have been terminated and not permanently\n        reinstated, you do not qualify to receive new licenses for the same\n        material under section 10.\n        \n          9. Acceptance Not Required for Having Copies.\n        \n          You are not required to accept this License in order to receive or\n        run a copy of the Program.  Ancillary propagation of a covered work\n        occurring solely as a consequence of using peer-to-peer transmission\n        to receive a copy likewise does not require acceptance.  However,\n        nothing other than this License grants you permission to propagate or\n        modify any covered work.  These actions infringe copyright if you do\n        not accept this License.  Therefore, by modifying or propagating a\n        covered work, you indicate your acceptance of this License to do so.\n        \n          10. Automatic Licensing of Downstream Recipients.\n        \n          Each time you convey a covered work, the recipient automatically\n        receives a license from the original licensors, to run, modify and\n        propagate that work, subject to this License.  You are not responsible\n        for enforcing compliance by third parties with this License.\n        \n          An \"entity transaction\" is a transaction transferring control of an\n        organization, or substantially all assets of one, or subdividing an\n        organization, or merging organizations.  If propagation of a covered\n        work results from an entity transaction, each party to that\n        transaction who receives a copy of the work also receives whatever\n        licenses to the work the party's predecessor in interest had or could\n        give under the previous paragraph, plus a right to possession of the\n        Corresponding Source of the work from the predecessor in interest, if\n        the predecessor has it or can get it with reasonable efforts.\n        \n          You may not impose any further restrictions on the exercise of the\n        rights granted or affirmed under this License.  For example, you may\n        not impose a license fee, royalty, or other charge for exercise of\n        rights granted under this License, and you may not initiate litigation\n        (including a cross-claim or counterclaim in a lawsuit) alleging that\n        any patent claim is infringed by making, using, selling, offering for\n        sale, or importing the Program or any portion of it.\n        \n          11. Patents.\n        \n          A \"contributor\" is a copyright holder who authorizes use under this\n        License of the Program or a work on which the Program is based.  The\n        work thus licensed is called the contributor's \"contributor version\".\n        \n          A contributor's \"essential patent claims\" are all patent claims\n        owned or controlled by the contributor, whether already acquired or\n        hereafter acquired, that would be infringed by some manner, permitted\n        by this License, of making, using, or selling its contributor version,\n        but do not include claims that would be infringed only as a\n        consequence of further modification of the contributor version.  For\n        purposes of this definition, \"control\" includes the right to grant\n        patent sublicenses in a manner consistent with the requirements of\n        this License.\n        \n          Each contributor grants you a non-exclusive, worldwide, royalty-free\n        patent license under the contributor's essential patent claims, to\n        make, use, sell, offer for sale, import and otherwise run, modify and\n        propagate the contents of its contributor version.\n        \n          In the following three paragraphs, a \"patent license\" is any express\n        agreement or commitment, however denominated, not to enforce a patent\n        (such as an express permission to practice a patent or covenant not to\n        sue for patent infringement).  To \"grant\" such a patent license to a\n        party means to make such an agreement or commitment not to enforce a\n        patent against the party.\n        \n          If you convey a covered work, knowingly relying on a patent license,\n        and the Corresponding Source of the work is not available for anyone\n        to copy, free of charge and under the terms of this License, through a\n        publicly available network server or other readily accessible means,\n        then you must either (1) cause the Corresponding Source to be so\n        available, or (2) arrange to deprive yourself of the benefit of the\n        patent license for this particular work, or (3) arrange, in a manner\n        consistent with the requirements of this License, to extend the patent\n        license to downstream recipients.  \"Knowingly relying\" means you have\n        actual knowledge that, but for the patent license, your conveying the\n        covered work in a country, or your recipient's use of the covered work\n        in a country, would infringe one or more identifiable patents in that\n        country that you have reason to believe are valid.\n        \n          If, pursuant to or in connection with a single transaction or\n        arrangement, you convey, or propagate by procuring conveyance of, a\n        covered work, and grant a patent license to some of the parties\n        receiving the covered work authorizing them to use, propagate, modify\n        or convey a specific copy of the covered work, then the patent license\n        you grant is automatically extended to all recipients of the covered\n        work and works based on it.\n        \n          A patent license is \"discriminatory\" if it does not include within\n        the scope of its coverage, prohibits the exercise of, or is\n        conditioned on the non-exercise of one or more of the rights that are\n        specifically granted under this License.  You may not convey a covered\n        work if you are a party to an arrangement with a third party that is\n        in the business of distributing software, under which you make payment\n        to the third party based on the extent of your activity of conveying\n        the work, and under which the third party grants, to any of the\n        parties who would receive the covered work from you, a discriminatory\n        patent license (a) in connection with copies of the covered work\n        conveyed by you (or copies made from those copies), or (b) primarily\n        for and in connection with specific products or compilations that\n        contain the covered work, unless you entered into that arrangement,\n        or that patent license was granted, prior to 28 March 2007.\n        \n          Nothing in this License shall be construed as excluding or limiting\n        any implied license or other defenses to infringement that may\n        otherwise be available to you under applicable patent law.\n        \n          12. No Surrender of Others' Freedom.\n        \n          If conditions are imposed on you (whether by court order, agreement or\n        otherwise) that contradict the conditions of this License, they do not\n        excuse you from the conditions of this License.  If you cannot convey a\n        covered work so as to satisfy simultaneously your obligations under this\n        License and any other pertinent obligations, then as a consequence you may\n        not convey it at all.  For example, if you agree to terms that obligate you\n        to collect a royalty for further conveying from those to whom you convey\n        the Program, the only way you could satisfy both those terms and this\n        License would be to refrain entirely from conveying the Program.\n        \n          13. Use with the GNU Affero General Public License.\n        \n          Notwithstanding any other provision of this License, you have\n        permission to link or combine any covered work with a work licensed\n        under version 3 of the GNU Affero General Public License into a single\n        combined work, and to convey the resulting work.  The terms of this\n        License will continue to apply to the part which is the covered work,\n        but the special requirements of the GNU Affero General Public License,\n        section 13, concerning interaction through a network will apply to the\n        combination as such.\n        \n          14. Revised Versions of this License.\n        \n          The Free Software Foundation may publish revised and/or new versions of\n        the GNU General Public License from time to time.  Such new versions will\n        be similar in spirit to the present version, but may differ in detail to\n        address new problems or concerns.\n        \n          Each version is given a distinguishing version number.  If the\n        Program specifies that a certain numbered version of the GNU General\n        Public License \"or any later version\" applies to it, you have the\n        option of following the terms and conditions either of that numbered\n        version or of any later version published by the Free Software\n        Foundation.  If the Program does not specify a version number of the\n        GNU General Public License, you may choose any version ever published\n        by the Free Software Foundation.\n        \n          If the Program specifies that a proxy can decide which future\n        versions of the GNU General Public License can be used, that proxy's\n        public statement of acceptance of a version permanently authorizes you\n        to choose that version for the Program.\n        \n          Later license versions may give you additional or different\n        permissions.  However, no additional obligations are imposed on any\n        author or copyright holder as a result of your choosing to follow a\n        later version.\n        \n          15. Disclaimer of Warranty.\n        \n          THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\n        APPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\n        HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\n        OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\n        THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n        PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\n        IS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\n        ALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n        \n          16. Limitation of Liability.\n        \n          IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\n        WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\n        THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\n        GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\n        USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\n        DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\n        PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\n        EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\n        SUCH DAMAGES.\n        \n          17. Interpretation of Sections 15 and 16.\n        \n          If the disclaimer of warranty and limitation of liability provided\n        above cannot be given local legal effect according to their terms,\n        reviewing courts shall apply local law that most closely approximates\n        an absolute waiver of all civil liability in connection with the\n        Program, unless a warranty or assumption of liability accompanies a\n        copy of the Program in return for a fee.\n        \n                             END OF TERMS AND CONDITIONS\n        \n                    How to Apply These Terms to Your New Programs\n        \n          If you develop a new program, and you want it to be of the greatest\n        possible use to the public, the best way to achieve this is to make it\n        free software which everyone can redistribute and change under these terms.\n        \n          To do so, attach the following notices to the program.  It is safest\n        to attach them to the start of each source file to most effectively\n        state the exclusion of warranty; and each file should have at least\n        the \"copyright\" line and a pointer to where the full notice is found.\n        \n            <one line to give the program's name and a brief idea of what it does.>\n            Copyright (C) <year>  <name of author>\n        \n            This program is free software: you can redistribute it and/or modify\n            it under the terms of the GNU General Public License as published by\n            the Free Software Foundation, either version 3 of the License, or\n            (at your option) any later version.\n        \n            This program is distributed in the hope that it will be useful,\n            but WITHOUT ANY WARRANTY; without even the implied warranty of\n            MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n            GNU General Public License for more details.\n        \n            You should have received a copy of the GNU General Public License\n            along with this program.  If not, see <http://www.gnu.org/licenses/>.\n        \n        Also add information on how to contact you by electronic and paper mail.\n        \n          If the program does terminal interaction, make it output a short\n        notice like this when it starts in an interactive mode:\n        \n            <program>  Copyright (C) <year>  <name of author>\n            This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n            This is free software, and you are welcome to redistribute it\n            under certain conditions; type `show c' for details.\n        \n        The hypothetical commands `show w' and `show c' should show the appropriate\n        parts of the General Public License.  Of course, your program's commands\n        might be different; for a GUI interface, you would use an \"about box\".\n        \n          You should also get your employer (if you work as a programmer) or school,\n        if any, to sign a \"copyright disclaimer\" for the program, if necessary.\n        For more information on this, and how to apply and follow the GNU GPL, see\n        <http://www.gnu.org/licenses/>.\n        \n          The GNU General Public License does not permit incorporating your program\n        into proprietary programs.  If your program is a subroutine library, you\n        may consider it more useful to permit linking proprietary applications with\n        the library.  If this is what you want to do, use the GNU Lesser General\n        Public License instead of this License.  But first, please read\n        <http://www.gnu.org/philosophy/why-not-lgpl.html>.",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Intended Audience :: Science/Research",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: BSD License",
          "Programming Language :: C",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Topic :: Software Development :: Libraries",
          "Topic :: Scientific/Engineering",
          "Operating System :: Microsoft :: Windows",
          "Operating System :: POSIX :: Linux",
          "Operating System :: POSIX",
          "Operating System :: Unix",
          "Operating System :: MacOS"
        ],
        "requires_dist": [
          "numpy<1.27.0,>=1.19.5",
          "pytest; extra == \"test\"",
          "pytest-cov; extra == \"test\"",
          "pytest-timeout; extra == \"test\"",
          "pytest-xdist; extra == \"test\"",
          "asv; extra == \"test\"",
          "mpmath; extra == \"test\"",
          "gmpy2; extra == \"test\"",
          "threadpoolctl; extra == \"test\"",
          "scikit-umfpack; extra == \"test\"",
          "pooch; extra == \"test\"",
          "sphinx!=4.1.0; extra == \"doc\"",
          "pydata-sphinx-theme==0.9.0; extra == \"doc\"",
          "sphinx-design>=0.2.0; extra == \"doc\"",
          "matplotlib>2; extra == \"doc\"",
          "numpydoc; extra == \"doc\"",
          "mypy; extra == \"dev\"",
          "typing_extensions; extra == \"dev\"",
          "pycodestyle; extra == \"dev\"",
          "flake8; extra == \"dev\"",
          "rich-click; extra == \"dev\"",
          "click; extra == \"dev\"",
          "doit>=0.36.0; extra == \"dev\"",
          "pydevtool; extra == \"dev\""
        ],
        "requires_python": "<3.12,>=3.8",
        "project_url": [
          "Homepage, https://scipy.org/",
          "Documentation, https://docs.scipy.org/doc/scipy/",
          "Source, https://github.com/scipy/scipy",
          "Download, https://github.com/scipy/scipy/releases",
          "Tracker, https://github.com/scipy/scipy/issues"
        ],
        "provides_extra": [
          "test",
          "doc",
          "dev"
        ],
        "description": ".. image:: https://github.com/scipy/scipy/blob/main/doc/source/_static/logo.svg\n  :target: https://scipy.org\n  :width: 110\n  :height: 110\n  :align: left \n\n.. image:: https://img.shields.io/badge/powered%20by-NumFOCUS-orange.svg?style=flat&colorA=E1523D&colorB=007D8A\n  :target: https://numfocus.org\n\n.. image:: https://img.shields.io/pypi/dm/scipy.svg?label=Pypi%20downloads\n  :target: https://pypi.org/project/scipy/\n\n.. image:: https://img.shields.io/conda/dn/conda-forge/scipy.svg?label=Conda%20downloads\n  :target: https://anaconda.org/conda-forge/scipy\n\n.. image:: https://img.shields.io/badge/stackoverflow-Ask%20questions-blue.svg\n  :target: https://stackoverflow.com/questions/tagged/scipy\n\n.. image:: https://img.shields.io/badge/DOI-10.1038%2Fs41592--019--0686--2-blue\n  :target: https://www.nature.com/articles/s41592-019-0686-2\n\nSciPy (pronounced \"Sigh Pie\") is an open-source software for mathematics,\nscience, and engineering. It includes modules for statistics, optimization,\nintegration, linear algebra, Fourier transforms, signal and image processing,\nODE solvers, and more.\n\n- **Website:** https://scipy.org\n- **Documentation:** https://docs.scipy.org/doc/scipy/\n- **Development version of the documentation:** https://scipy.github.io/devdocs\n- **Mailing list:** https://mail.python.org/mailman3/lists/scipy-dev.python.org/\n- **Source code:** https://github.com/scipy/scipy\n- **Contributing:** https://scipy.github.io/devdocs/dev/index.html\n- **Bug reports:** https://github.com/scipy/scipy/issues\n- **Code of Conduct:** https://docs.scipy.org/doc/scipy/dev/conduct/code_of_conduct.html\n- **Report a security vulnerability:** https://tidelift.com/docs/security\n- **Citing in your work:** https://www.scipy.org/citing-scipy/\n\nSciPy is built to work with\nNumPy arrays, and provides many user-friendly and efficient numerical routines,\nsuch as routines for numerical integration and optimization. Together, they\nrun on all popular operating systems, are quick to install, and are free of\ncharge. NumPy and SciPy are easy to use, but powerful enough to be depended\nupon by some of the world's leading scientists and engineers. If you need to\nmanipulate numbers on a computer and display or publish the results, give\nSciPy a try!\n\nFor the installation instructions, see `our install\nguide <https://docs.scipy.org/doc/scipy/getting_started.html#installation>`__.\n\n\nCall for Contributions\n----------------------\n\nWe appreciate and welcome contributions. Small improvements or fixes are always appreciated; issues labeled as \"good\nfirst issue\" may be a good starting point. Have a look at `our contributing\nguide <https://scipy.github.io/devdocs/dev/index.html>`__.\n\nWriting code isn’t the only way to contribute to SciPy. You can also:\n\n- review pull requests\n- triage issues\n- develop tutorials, presentations, and other educational materials\n- maintain and improve `our website <https://github.com/scipy/scipy.org>`__\n- develop graphic design for our brand assets and promotional materials\n- help with outreach and onboard new contributors\n- write grant proposals and help with other fundraising efforts\n\nIf you’re unsure where to start or how your skills fit in, reach out! You can\nask on the mailing list or here, on GitHub, by leaving a\ncomment on a relevant issue that is already open.\n\nIf you are new to contributing to open source, `this\nguide <https://opensource.guide/how-to-contribute/>`__ helps explain why, what,\nand how to get involved.\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/scipy-1.10.1.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "semver",
        "version": "3.0.0",
        "summary": "Python helper for Semantic Versioning (https://semver.org)",
        "description_content_type": "text/x-rst",
        "home_page": "https://github.com/python-semver/python-semver",
        "author": "Kostiantyn Rybnikov",
        "author_email": "k-bx@k-bx.com",
        "maintainer": "Sebastien Celles, Tom Schraitle",
        "maintainer_email": "s.celles@gmail.com",
        "license": "BSD",
        "classifier": [
          "Environment :: Web Environment",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: BSD License",
          "Operating System :: OS Independent",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Programming Language :: Python :: 3.12",
          "Topic :: Software Development :: Libraries :: Python Modules"
        ],
        "requires_python": ">=3.7",
        "project_url": [
          "Changelog, https://python-semver.readthedocs.io/en/latest/changelog.html",
          "Documentation, https://python-semver.rtfd.io",
          "Releases, https://github.com/python-semver/python-semver/releases",
          "Bug Tracker, https://github.com/python-semver/python-semver/issues"
        ],
        "description": "Quickstart\n==========\n\n.. teaser-begin\n\nA Python module for `semantic versioning`_. Simplifies comparing versions.\n\n|GHAction| |python-support| |downloads| |license| |docs| |black|\n|openissues| |GHDiscussion|\n\n.. teaser-end\n\n.. note::\n\n   This project works for Python 3.7 and greater only. If you are\n   looking for a compatible version for Python 2, use the\n   maintenance branch |MAINT|_.\n\n   The last version of semver which supports Python 2.7 to 3.5 will be\n   2.x.y However, keep in mind, the major 2 release is frozen: no new\n   features nor backports will be integrated.\n\n   We recommend to upgrade your workflow to Python 3 to gain support,\n   bugfixes, and new features.\n\n.. |MAINT| replace:: ``maint/v2``\n.. _MAINT: https://github.com/python-semver/python-semver/tree/maint/v2\n\n\nThe module follows the ``MAJOR.MINOR.PATCH`` style:\n\n* ``MAJOR`` version when you make incompatible API changes,\n* ``MINOR`` version when you add functionality in a backwards compatible manner, and\n* ``PATCH`` version when you make backwards compatible bug fixes.\n\nAdditional labels for pre-release and build metadata are supported.\n\nTo import this library, use:\n\n.. code-block:: python\n\n    >>> import semver\n\nWorking with the library is quite straightforward. To turn a version string into the\ndifferent parts, use the ``semver.Version.parse`` function:\n\n.. code-block:: python\n\n    >>> ver = semver.Version.parse('1.2.3-pre.2+build.4')\n    >>> ver.major\n    1\n    >>> ver.minor\n    2\n    >>> ver.patch\n    3\n    >>> ver.prerelease\n    'pre.2'\n    >>> ver.build\n    'build.4'\n\nTo raise parts of a version, there are a couple of functions available for\nyou. The function ``semver.Version.bump_major`` leaves the original object untouched, but\nreturns a new ``semver.Version`` instance with the raised major part:\n\n.. code-block:: python\n\n    >>> ver = semver.Version.parse(\"3.4.5\")\n    >>> ver.bump_major()\n    Version(major=4, minor=0, patch=0, prerelease=None, build=None)\n\nIt is allowed to concatenate different \"bump functions\":\n\n.. code-block:: python\n\n    >>> ver.bump_major().bump_minor()\n    Version(major=4, minor=1, patch=0, prerelease=None, build=None)\n\nTo compare two versions, semver provides the ``semver.compare`` function.\nThe return value indicates the relationship between the first and second\nversion:\n\n.. code-block:: python\n\n    >>> semver.compare(\"1.0.0\", \"2.0.0\")\n    -1\n    >>> semver.compare(\"2.0.0\", \"1.0.0\")\n    1\n    >>> semver.compare(\"2.0.0\", \"2.0.0\")\n    0\n\n\nThere are other functions to discover. Read on!\n\n\n.. |latest-version| image:: https://img.shields.io/pypi/v/semver.svg\n   :alt: Latest version on PyPI\n   :target: https://pypi.org/project/semver\n.. |python-support| image:: https://img.shields.io/pypi/pyversions/semver.svg\n   :target: https://pypi.org/project/semver\n   :alt: Python versions\n.. |downloads| image:: https://img.shields.io/pypi/dm/semver.svg\n   :alt: Monthly downloads from PyPI\n   :target: https://pypi.org/project/semver\n.. |license| image:: https://img.shields.io/pypi/l/semver.svg\n   :alt: Software license\n   :target: https://github.com/python-semver/python-semver/blob/master/LICENSE.txt\n.. |docs| image:: https://readthedocs.org/projects/python-semver/badge/?version=latest\n   :target: http://python-semver.readthedocs.io/en/latest/?badge=latest\n   :alt: Documentation Status\n.. _semantic versioning: https://semver.org/\n.. |black| image:: https://img.shields.io/badge/code%20style-black-000000.svg\n    :target: https://github.com/psf/black\n    :alt: Black Formatter\n.. |Gitter| image:: https://badges.gitter.im/python-semver/community.svg\n    :target: https://gitter.im/python-semver/community\n    :alt: Gitter\n.. |openissues| image:: http://isitmaintained.com/badge/open/python-semver/python-semver.svg\n    :target: http://isitmaintained.com/project/python-semver/python-semver\n    :alt: Percentage of open issues\n.. |GHAction| image:: https://github.com/python-semver/python-semver/workflows/Python/badge.svg\n    :alt: Python\n.. |GHDiscussion| image:: https://shields.io/badge/GitHub-%20Discussions-green?logo=github\n    :target: https://github.com/python-semver/python-semver/discussions\n    :alt: GitHub Discussion\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/semver-3.0.0.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "setuptools",
        "version": "67.7.2",
        "summary": "Easily download, build, install, upgrade, and uninstall Python packages",
        "keywords": [
          "CPAN",
          "PyPI",
          "distutils",
          "eggs",
          "package",
          "management"
        ],
        "home_page": "https://github.com/pypa/setuptools",
        "author": "Python Packaging Authority",
        "author_email": "distutils-sig@python.org",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: MIT License",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3 :: Only",
          "Topic :: Software Development :: Libraries :: Python Modules",
          "Topic :: System :: Archiving :: Packaging",
          "Topic :: System :: Systems Administration",
          "Topic :: Utilities"
        ],
        "requires_dist": [
          "sphinx (>=3.5) ; extra == 'docs'",
          "jaraco.packaging (>=9) ; extra == 'docs'",
          "rst.linker (>=1.9) ; extra == 'docs'",
          "furo ; extra == 'docs'",
          "sphinx-lint ; extra == 'docs'",
          "jaraco.tidelift (>=1.4) ; extra == 'docs'",
          "pygments-github-lexers (==0.0.5) ; extra == 'docs'",
          "sphinx-favicon ; extra == 'docs'",
          "sphinx-inline-tabs ; extra == 'docs'",
          "sphinx-reredirects ; extra == 'docs'",
          "sphinxcontrib-towncrier ; extra == 'docs'",
          "sphinx-notfound-page (==0.8.3) ; extra == 'docs'",
          "sphinx-hoverxref (<2) ; extra == 'docs'",
          "pytest (>=6) ; extra == 'testing'",
          "pytest-checkdocs (>=2.4) ; extra == 'testing'",
          "flake8 (<5) ; extra == 'testing'",
          "pytest-enabler (>=1.3) ; extra == 'testing'",
          "pytest-perf ; extra == 'testing'",
          "flake8-2020 ; extra == 'testing'",
          "virtualenv (>=13.0.0) ; extra == 'testing'",
          "wheel ; extra == 'testing'",
          "pip (>=19.1) ; extra == 'testing'",
          "jaraco.envs (>=2.2) ; extra == 'testing'",
          "pytest-xdist ; extra == 'testing'",
          "jaraco.path (>=3.2.0) ; extra == 'testing'",
          "build[virtualenv] ; extra == 'testing'",
          "filelock (>=3.4.0) ; extra == 'testing'",
          "pip-run (>=8.8) ; extra == 'testing'",
          "ini2toml[lite] (>=0.9) ; extra == 'testing'",
          "tomli-w (>=1.0.0) ; extra == 'testing'",
          "pytest-timeout ; extra == 'testing'",
          "pytest ; extra == 'testing-integration'",
          "pytest-xdist ; extra == 'testing-integration'",
          "pytest-enabler ; extra == 'testing-integration'",
          "virtualenv (>=13.0.0) ; extra == 'testing-integration'",
          "tomli ; extra == 'testing-integration'",
          "wheel ; extra == 'testing-integration'",
          "jaraco.path (>=3.2.0) ; extra == 'testing-integration'",
          "jaraco.envs (>=2.2) ; extra == 'testing-integration'",
          "build[virtualenv] ; extra == 'testing-integration'",
          "filelock (>=3.4.0) ; extra == 'testing-integration'",
          "pytest-black (>=0.3.7) ; (platform_python_implementation != \"PyPy\") and extra == 'testing'",
          "pytest-cov ; (platform_python_implementation != \"PyPy\") and extra == 'testing'",
          "pytest-mypy (>=0.9.1) ; (platform_python_implementation != \"PyPy\") and extra == 'testing'",
          "pytest-flake8 ; (python_version < \"3.12\") and extra == 'testing'"
        ],
        "requires_python": ">=3.7",
        "project_url": [
          "Documentation, https://setuptools.pypa.io/",
          "Changelog, https://setuptools.pypa.io/en/stable/history.html"
        ],
        "provides_extra": [
          "certs",
          "docs",
          "ssl",
          "testing",
          "testing-integration"
        ],
        "description": ".. image:: https://img.shields.io/pypi/v/setuptools.svg\n   :target: https://pypi.org/project/setuptools\n\n.. image:: https://img.shields.io/pypi/pyversions/setuptools.svg\n\n.. image:: https://github.com/pypa/setuptools/workflows/tests/badge.svg\n   :target: https://github.com/pypa/setuptools/actions?query=workflow%3A%22tests%22\n   :alt: tests\n\n.. image:: https://img.shields.io/badge/code%20style-black-000000.svg\n   :target: https://github.com/psf/black\n   :alt: Code style: Black\n\n.. image:: https://img.shields.io/readthedocs/setuptools/latest.svg\n    :target: https://setuptools.pypa.io\n\n.. image:: https://img.shields.io/badge/skeleton-2023-informational\n   :target: https://blog.jaraco.com/skeleton\n\n.. image:: https://img.shields.io/codecov/c/github/pypa/setuptools/master.svg?logo=codecov&logoColor=white\n   :target: https://codecov.io/gh/pypa/setuptools\n\n.. image:: https://tidelift.com/badges/github/pypa/setuptools?style=flat\n   :target: https://tidelift.com/subscription/pkg/pypi-setuptools?utm_source=pypi-setuptools&utm_medium=readme\n\n.. image:: https://img.shields.io/discord/803025117553754132\n   :target: https://discord.com/channels/803025117553754132/815945031150993468\n   :alt: Discord\n\nSee the `Installation Instructions\n<https://packaging.python.org/installing/>`_ in the Python Packaging\nUser's Guide for instructions on installing, upgrading, and uninstalling\nSetuptools.\n\nQuestions and comments should be directed to `GitHub Discussions\n<https://github.com/pypa/setuptools/discussions>`_.\nBug reports and especially tested patches may be\nsubmitted directly to the `bug tracker\n<https://github.com/pypa/setuptools/issues>`_.\n\n\nCode of Conduct\n===============\n\nEveryone interacting in the setuptools project's codebases, issue trackers,\nchat rooms, and fora is expected to follow the\n`PSF Code of Conduct <https://github.com/pypa/.github/blob/main/CODE_OF_CONDUCT.md>`_.\n\n\nFor Enterprise\n==============\n\nAvailable as part of the Tidelift Subscription.\n\nSetuptools and the maintainers of thousands of other packages are working with Tidelift to deliver one enterprise subscription that covers all of the open source you use.\n\n`Learn more <https://tidelift.com/subscription/pkg/pypi-setuptools?utm_source=pypi-setuptools&utm_medium=referral&utm_campaign=github>`_.\n\n\nSecurity Contact\n================\n\nTo report a security vulnerability, please use the\n`Tidelift security contact <https://tidelift.com/security>`_.\nTidelift will coordinate the fix and disclosure.\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/setuptools-67.7.2.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "smmap",
        "version": "5.0.0",
        "platform": [
          "any"
        ],
        "summary": "A pure Python implementation of a sliding window memory map manager",
        "description_content_type": "text/markdown",
        "home_page": "https://github.com/gitpython-developers/smmap",
        "author": "Sebastian Thiel",
        "author_email": "byronimo@gmail.com",
        "license": "BSD",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Environment :: Console",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: BSD License",
          "Operating System :: OS Independent",
          "Operating System :: POSIX",
          "Operating System :: Microsoft :: Windows",
          "Operating System :: MacOS :: MacOS X",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3 :: Only"
        ],
        "requires_python": ">=3.6",
        "description": "## Motivation\n\nWhen reading from many possibly large files in a fashion similar to random access, it is usually the fastest and most efficient to use memory maps.\n\nAlthough memory maps have many advantages, they represent a very limited system resource as every map uses one file descriptor, whose amount is limited per process. On 32 bit systems, the amount of memory you can have mapped at a time is naturally limited to theoretical 4GB of memory, which may not be enough for some applications.\n\n\n## Limitations\n\n* **System resources (file-handles) are likely to be leaked!** This is due to the library authors reliance on a deterministic `__del__()` destructor.\n* The memory access is read-only by design.\n\n\n## Overview\n\n![Python package](https://github.com/gitpython-developers/smmap/workflows/Python%20package/badge.svg)\n\nSmmap wraps an interface around mmap and tracks the mapped files as well as the amount of clients who use it. If the system runs out of resources, or if a memory limit is reached, it will automatically unload unused maps to allow continued operation.\n\nTo allow processing large files even on 32 bit systems, it allows only portions of the file to be mapped. Once the user reads beyond the mapped region, smmap will automatically map the next required region, unloading unused regions using a LRU algorithm.\n\nAlthough the library can be used most efficiently with its native interface, a Buffer implementation is provided to hide these details behind a simple string-like interface.\n\nFor performance critical 64 bit applications, a simplified version of memory mapping is provided which always maps the whole file, but still provides the benefit of unloading unused mappings on demand.\n\n\n\n## Prerequisites\n\n* Python 3.6+\n* OSX, Windows or Linux\n\nThe package was tested on all of the previously mentioned configurations.\n\n## Installing smmap\n\n[![Documentation Status](https://readthedocs.org/projects/smmap/badge/?version=latest)](https://readthedocs.org/projects/smmap/?badge=latest)\n\nIts easiest to install smmap using the [pip](http://www.pip-installer.org/en/latest) program:\n\n```bash\n$ pip install smmap\n```\n\nAs the command will install smmap in your respective python distribution, you will most likely need root permissions to authorize the required changes.\n\nIf you have downloaded the source archive, the package can be installed by running the `setup.py` script:\n\n```bash\n$ python setup.py install\n```\n\nIt is advised to have a look at the **Usage Guide** for a brief introduction on the different database implementations.\n\n\n\n## Homepage and Links\n\nThe project is home on github at https://github.com/gitpython-developers/smmap .\n\nThe latest source can be cloned from github as well:\n\n* git://github.com/gitpython-developers/smmap.git\n\n\nFor support, please use the git-python mailing list:\n\n* http://groups.google.com/group/git-python\n\n\nIssues can be filed on github:\n\n* https://github.com/gitpython-developers/smmap/issues\n\nA link to the pypi page related to this repository:\n\n* https://pypi.org/project/smmap/\n\n\n## License Information\n\n*smmap* is licensed under the New BSD License.\n\n\n\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/smmap-5.0.0.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "sniffio",
        "version": "1.3.0",
        "summary": "Sniff out which async library your code is running under",
        "keywords": [
          "async",
          "trio",
          "asyncio"
        ],
        "home_page": "https://github.com/python-trio/sniffio",
        "author": "Nathaniel J. Smith",
        "author_email": "njs@pobox.com",
        "license": "MIT OR Apache-2.0",
        "classifier": [
          "License :: OSI Approved :: MIT License",
          "License :: OSI Approved :: Apache Software License",
          "Framework :: Trio",
          "Framework :: AsyncIO",
          "Operating System :: POSIX :: Linux",
          "Operating System :: MacOS :: MacOS X",
          "Operating System :: Microsoft :: Windows",
          "Programming Language :: Python :: 3 :: Only",
          "Programming Language :: Python :: Implementation :: CPython",
          "Programming Language :: Python :: Implementation :: PyPy",
          "Intended Audience :: Developers",
          "Development Status :: 5 - Production/Stable"
        ],
        "requires_python": ">=3.7",
        "description": ".. image:: https://img.shields.io/badge/chat-join%20now-blue.svg\n   :target: https://gitter.im/python-trio/general\n   :alt: Join chatroom\n\n.. image:: https://img.shields.io/badge/docs-read%20now-blue.svg\n   :target: https://sniffio.readthedocs.io/en/latest/?badge=latest\n   :alt: Documentation Status\n\n.. image:: https://img.shields.io/pypi/v/sniffio.svg\n   :target: https://pypi.org/project/sniffio\n   :alt: Latest PyPi version\n   \n.. image:: https://img.shields.io/conda/vn/conda-forge/sniffio.svg\n   :target: https://anaconda.org/conda-forge/sniffio \n   :alt: Latest conda-forge version   \n\n.. image:: https://travis-ci.org/python-trio/sniffio.svg?branch=master\n   :target: https://travis-ci.org/python-trio/sniffio\n   :alt: Automated test status\n\n.. image:: https://codecov.io/gh/python-trio/sniffio/branch/master/graph/badge.svg\n   :target: https://codecov.io/gh/python-trio/sniffio\n   :alt: Test coverage\n\n=================================================================\nsniffio: Sniff out which async library your code is running under\n=================================================================\n\nYou're writing a library. You've decided to be ambitious, and support\nmultiple async I/O packages, like `Trio\n<https://trio.readthedocs.io>`__, and `asyncio\n<https://docs.python.org/3/library/asyncio.html>`__, and ... You've\nwritten a bunch of clever code to handle all the differences. But...\nhow do you know *which* piece of clever code to run?\n\nThis is a tiny package whose only purpose is to let you detect which\nasync library your code is running under.\n\n* Documentation: https://sniffio.readthedocs.io\n\n* Bug tracker and source code: https://github.com/python-trio/sniffio\n\n* License: MIT or Apache License 2.0, your choice\n\n* Contributor guide: https://trio.readthedocs.io/en/latest/contributing.html\n\n* Code of conduct: Contributors are requested to follow our `code of\n  conduct\n  <https://trio.readthedocs.io/en/latest/code-of-conduct.html>`_\n  in all project spaces.\n\nThis library is maintained by the Trio project, as a service to the\nasync Python community as a whole.\n\n\nQuickstart\n----------\n\n.. code-block:: python3\n\n   from sniffio import current_async_library\n   import trio\n   import asyncio\n\n   async def print_library():\n       library = current_async_library()\n       print(\"This is:\", library)\n\n   # Prints \"This is trio\"\n   trio.run(print_library)\n\n   # Prints \"This is asyncio\"\n   asyncio.run(print_library())\n\nFor more details, including how to add support to new async libraries,\n`please peruse our fine manual <https://sniffio.readthedocs.io>`__.\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/sniffio-1.3.0.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "starlette",
        "version": "0.26.1",
        "summary": "The little ASGI library that shines.",
        "description_content_type": "text/markdown",
        "author_email": "Tom Christie <tom@tomchristie.com>",
        "classifier": [
          "Development Status :: 3 - Alpha",
          "Environment :: Web Environment",
          "Framework :: AnyIO",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: BSD License",
          "Operating System :: OS Independent",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Topic :: Internet :: WWW/HTTP"
        ],
        "requires_dist": [
          "anyio<5,>=3.4.0",
          "typing-extensions>=3.10.0; python_version < '3.10'",
          "httpx>=0.22.0; extra == 'full'",
          "itsdangerous; extra == 'full'",
          "jinja2; extra == 'full'",
          "python-multipart; extra == 'full'",
          "pyyaml; extra == 'full'"
        ],
        "requires_python": ">=3.7",
        "project_url": [
          "Homepage, https://github.com/encode/starlette",
          "Documentation, https://www.starlette.io/",
          "Changelog, https://www.starlette.io/release-notes/",
          "Funding, https://github.com/sponsors/encode",
          "Source, https://github.com/encode/starlette"
        ],
        "provides_extra": [
          "full"
        ],
        "description": "<p align=\"center\">\n  <a href=\"https://www.starlette.io/\"><img width=\"420px\" src=\"https://raw.githubusercontent.com/encode/starlette/master/docs/img/starlette.png\" alt='starlette'></a>\n</p>\n<p align=\"center\">\n    <em>✨ The little ASGI framework that shines. ✨</em>\n</p>\n<p align=\"center\">\n<a href=\"https://github.com/encode/starlette/actions\">\n    <img src=\"https://github.com/encode/starlette/workflows/Test%20Suite/badge.svg\" alt=\"Build Status\">\n</a>\n<a href=\"https://pypi.org/project/starlette/\">\n    <img src=\"https://badge.fury.io/py/starlette.svg\" alt=\"Package version\">\n</a>\n</p>\n\n---\n\n**Documentation**: [https://www.starlette.io/](https://www.starlette.io/)\n\n---\n\n# Starlette\n\nStarlette is a lightweight [ASGI][asgi] framework/toolkit,\nwhich is ideal for building async web services in Python.\n\nIt is production-ready, and gives you the following:\n\n* A lightweight, low-complexity HTTP web framework.\n* WebSocket support.\n* In-process background tasks.\n* Startup and shutdown events.\n* Test client built on `httpx`.\n* CORS, GZip, Static Files, Streaming responses.\n* Session and Cookie support.\n* 100% test coverage.\n* 100% type annotated codebase.\n* Few hard dependencies.\n* Compatible with `asyncio` and `trio` backends.\n* Great overall performance [against independent benchmarks][techempower].\n\n## Requirements\n\nPython 3.7+ (For Python 3.6 support, install version 0.19.1)\n\n## Installation\n\n```shell\n$ pip3 install starlette\n```\n\nYou'll also want to install an ASGI server, such as [uvicorn](http://www.uvicorn.org/), [daphne](https://github.com/django/daphne/), or [hypercorn](https://pgjones.gitlab.io/hypercorn/).\n\n```shell\n$ pip3 install uvicorn\n```\n\n## Example\n\n**example.py**:\n\n```python\nfrom starlette.applications import Starlette\nfrom starlette.responses import JSONResponse\nfrom starlette.routing import Route\n\n\nasync def homepage(request):\n    return JSONResponse({'hello': 'world'})\n\nroutes = [\n    Route(\"/\", endpoint=homepage)\n]\n\napp = Starlette(debug=True, routes=routes)\n```\n\nThen run the application using Uvicorn:\n\n```shell\n$ uvicorn example:app\n```\n\nFor a more complete example, see [encode/starlette-example](https://github.com/encode/starlette-example).\n\n## Dependencies\n\nStarlette only requires `anyio`, and the following are optional:\n\n* [`httpx`][httpx] - Required if you want to use the `TestClient`.\n* [`jinja2`][jinja2] - Required if you want to use `Jinja2Templates`.\n* [`python-multipart`][python-multipart] - Required if you want to support form parsing, with `request.form()`.\n* [`itsdangerous`][itsdangerous] - Required for `SessionMiddleware` support.\n* [`pyyaml`][pyyaml] - Required for `SchemaGenerator` support.\n\nYou can install all of these with `pip3 install starlette[full]`.\n\n## Framework or Toolkit\n\nStarlette is designed to be used either as a complete framework, or as\nan ASGI toolkit. You can use any of its components independently.\n\n```python\nfrom starlette.responses import PlainTextResponse\n\n\nasync def app(scope, receive, send):\n    assert scope['type'] == 'http'\n    response = PlainTextResponse('Hello, world!')\n    await response(scope, receive, send)\n```\n\nRun the `app` application in `example.py`:\n\n```shell\n$ uvicorn example:app\nINFO: Started server process [11509]\nINFO: Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\n```\n\nRun uvicorn with `--reload` to enable auto-reloading on code changes.\n\n## Modularity\n\nThe modularity that Starlette is designed on promotes building re-usable\ncomponents that can be shared between any ASGI framework. This should enable\nan ecosystem of shared middleware and mountable applications.\n\nThe clean API separation also means it's easier to understand each component\nin isolation.\n\n---\n\n<p align=\"center\"><i>Starlette is <a href=\"https://github.com/encode/starlette/blob/master/LICENSE.md\">BSD licensed</a> code.<br/>Designed & crafted with care.</i></br>&mdash; ⭐️ &mdash;</p>\n\n[asgi]: https://asgi.readthedocs.io/en/latest/\n[httpx]: https://www.python-httpx.org/\n[jinja2]: https://jinja.palletsprojects.com/\n[python-multipart]: https://andrew-d.github.io/python-multipart/\n[itsdangerous]: https://pythonhosted.org/itsdangerous/\n[sqlalchemy]: https://www.sqlalchemy.org\n[pyyaml]: https://pyyaml.org/wiki/PyYAMLDocumentation\n[techempower]: https://www.techempower.com/benchmarks/#hw=ph&test=fortune&l=zijzen-sf\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/starlette-0.26.1.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "streamlit",
        "version": "1.22.0",
        "summary": "A faster way to build and share data apps",
        "description_content_type": "text/markdown",
        "home_page": "https://streamlit.io",
        "author": "Snowflake Inc",
        "author_email": "hello@streamlit.io",
        "license": "Apache License 2.0",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Environment :: Console",
          "Environment :: Web Environment",
          "Intended Audience :: Developers",
          "Intended Audience :: Science/Research",
          "License :: OSI Approved :: Apache Software License",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Topic :: Database :: Front-Ends",
          "Topic :: Office/Business :: Financial :: Spreadsheet",
          "Topic :: Scientific/Engineering :: Information Analysis",
          "Topic :: Scientific/Engineering :: Visualization",
          "Topic :: Software Development :: Libraries :: Application Frameworks",
          "Topic :: Software Development :: Widget Sets"
        ],
        "requires_dist": [
          "altair (<5,>=3.2.0)",
          "blinker (>=1.0.0)",
          "cachetools (>=4.0)",
          "click (>=7.0)",
          "importlib-metadata (>=1.4)",
          "numpy",
          "packaging (>=14.1)",
          "pandas (<3,>=0.25)",
          "pillow (>=6.2.0)",
          "protobuf (<4,>=3.12)",
          "pyarrow (>=4.0)",
          "pympler (>=0.9)",
          "python-dateutil",
          "requests (>=2.4)",
          "rich (>=10.11.0)",
          "tenacity (<9,>=8.0.0)",
          "toml",
          "typing-extensions (>=3.10.0.0)",
          "tzlocal (>=1.1)",
          "validators (>=0.2)",
          "gitpython (!=3.1.19)",
          "pydeck (>=0.1.dev5)",
          "tornado (>=6.0.3)",
          "watchdog ; platform_system != \"Darwin\"",
          "snowflake-snowpark-python ; (python_version == \"3.8\") and extra == 'snowflake'"
        ],
        "requires_python": ">=3.7, !=3.9.7",
        "project_url": [
          "Source Code, https://github.com/streamlit/streamlit",
          "Bug Tracker, https://github.com/streamlit/streamlit/issues",
          "Release notes, https://docs.streamlit.io/library/changelog",
          "Documentation, https://docs.streamlit.io/",
          "Community, https://discuss.streamlit.io/",
          "Twitter, https://twitter.com/streamlit"
        ],
        "provides_extra": [
          "snowflake"
        ],
        "description": "<br>\n\n<img src=\"https://user-images.githubusercontent.com/7164864/217935870-c0bc60a3-6fc0-4047-b011-7b4c59488c91.png\" alt=\"Streamlit logo\" style=\"margin-top:50px\"></img>\n\n# Welcome to Streamlit 👋\n\n**A faster way to build and share data apps.**\n\nStreamlit lets you turn data scripts into shareable web apps in minutes, not weeks. It’s all Python, open-source, and free! And once you’ve created an app you can use our [Community Cloud platform](https://streamlit.io/cloud) to deploy, manage, and share your app.\n\n\n## Installation\n\nOpen a terminal and run:\n\n```bash\n$ pip install streamlit\n$ streamlit hello\n```\n\nIf this opens our sweet _Streamlit Hello_ app in your browser, you're all set! If not, head over to [our docs](https://docs.streamlit.io/library/get-started) for specific installs.\n\nThe app features a bunch of examples of what you can do with Streamlit. Jump to the [quickstart](#quickstart) section to understand how that all works.\n\n<img src=\"https://user-images.githubusercontent.com/7164864/217936487-1017784e-68ec-4e0d-a7f6-6b97525ddf88.gif\" alt=\"Streamlit Hello\" width=500 href=\"none\"></img>\n\n## Quickstart\n\n### A little example\n\nCreate a new file `streamlit_app.py` with the following code:\n```python\nimport streamlit as st\nx = st.slider(\"Select a value\")\nst.write(x, \"squared is\", x * x)\n```\n\nNow run it to open the app!\n```\n$ streamlit run streamlit_app.py\n```\n\n<img src=\"https://user-images.githubusercontent.com/7164864/215172915-cf087c56-e7ae-449a-83a4-b5fa0328d954.gif\" width=300 alt=\"Little example\"></img>\n\n### Give me more!\n\nStreamlit comes in with [a ton of additional powerful elements](https://docs.streamlit.io/library/api-reference) to spice up your data apps and delight your viewers. Some examples:\n\n\n<table border=\"0\">\n   <tr>\n     <td><img src=\"https://user-images.githubusercontent.com/7164864/217936099-12c16f8c-7fe4-44b1-889a-1ac9ee6a1b44.png\" style=\"max-height:150; width:auto; display:block;\"></td>\n     <td><img src=\"https://user-images.githubusercontent.com/7164864/215110064-5eb4e294-8f30-4933-9563-0275230e52b5.gif\"  style=\"max-height:150; width:auto; display:block;\"></td>\n     <td><img src=\"https://user-images.githubusercontent.com/7164864/215174472-bca8a0d7-cf4b-4268-9c3b-8c03dad50bcd.gif\" style=\"max-height:150; width:auto; display:block;\"></td>\n     <td><img src=\"https://user-images.githubusercontent.com/7164864/217936149-a35c35be-0d96-4c63-8c6a-1c4b52aa8f60.png\" style=\"max-height:150; width:auto; display:block;\"></td>\n     <td><img src=\"https://user-images.githubusercontent.com/7164864/215173883-eae0de69-7c1d-4d78-97d0-3bc1ab865e5b.gif\" style=\"max-height:150; width:auto; display:block;\"></td>\n     <td><img src=\"https://user-images.githubusercontent.com/7164864/215109229-6ae9111f-e5c1-4f0b-b3a2-87a79268ccc9.gif\" style=\"max-height:150; width:auto; display:block;\"></td>\n\n  </tr>\n    <tr>\n      <td>Input widgets</td>\n      <td>Dataframes</td>\n      <td>Charts</td>\n      <td>Layout</td>\n      <td>Multi-page apps</td>\n      <td>Fun</td>\n   </tr>\n<table>\n\nOur vibrant creators community also extends Streamlit capabilities using  🧩 [Streamlit Components](http://components.streamlit.app).\n\n## Get inspired\n\nThere's so much you can build with Streamlit:\n- 🧬  [Science & technology apps](https://streamlit.io/gallery?category=science-technology)\n- 💬  [NLP & language apps](https://streamlit.io/gallery?category=nlp-language)\n- 👀  [Computer vision apps](https://streamlit.io/gallery?category=computer-vision-images)\n- 🏦  [Finance & business apps](https://streamlit.io/gallery?category=finance-business)\n- 🗺  [Geography & society apps](https://streamlit.io/gallery?category=geography-society)\n- and more!\n\n**Check out [our gallery!](https://streamlit.io/gallery)** 🎈\n\n## Community Cloud\n\nDeploy, manage and share your apps for free using our [Community Cloud](https://streamlit.io/cloud)! Sign-up [here](https://share.streamlit.io/signup). <br><br>\n<img src=\"https://user-images.githubusercontent.com/7164864/214965336-64500db3-0d79-4a20-8052-2dda883902d2.gif\" width=\"400\"></img>\n\n## Resources\n\n- Streamlit [docs](https://docs.streamlit.io), [community forum](https://discuss.streamlit.io) and [blog](https://blog.streamlit.io).\n- Extend Streamlit's capabilities by installing or creating your own [Streamlit Components](http://components.streamlit.app/).\n- Help others find and play with your app by using the Streamlit GitHub badge in your repository:\n```markdown\n[![Streamlit App](https://static.streamlit.io/badges/streamlit_badge_black_white.svg)](URL_TO_YOUR_APP)\n```\n[![Streamlit App](https://static.streamlit.io/badges/streamlit_badge_black_white.svg)](https://share.streamlit.io/streamlit/roadmap)\n\n## License\n\nStreamlit is completely free and open-source and licensed under the [Apache 2.0](https://www.apache.org/licenses/LICENSE-2.0) license.\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/streamlit-1.22.0.dist-info",
      "installer": "pip",
      "requested": true
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "sympy",
        "version": "1.11.1",
        "summary": "Computer algebra system (CAS) in Python",
        "description_content_type": "text/markdown",
        "keywords": [
          "Math",
          "CAS"
        ],
        "home_page": "https://sympy.org",
        "author": "SymPy development team",
        "author_email": "sympy@googlegroups.com",
        "license": "BSD",
        "classifier": [
          "License :: OSI Approved :: BSD License",
          "Operating System :: OS Independent",
          "Programming Language :: Python",
          "Topic :: Scientific/Engineering",
          "Topic :: Scientific/Engineering :: Mathematics",
          "Topic :: Scientific/Engineering :: Physics",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3 :: Only",
          "Programming Language :: Python :: Implementation :: CPython",
          "Programming Language :: Python :: Implementation :: PyPy"
        ],
        "requires_dist": [
          "mpmath (>=0.19)"
        ],
        "requires_python": ">=3.8",
        "project_url": [
          "Source, https://github.com/sympy/sympy"
        ],
        "description": "# SymPy\n\n[![pypi version](https://img.shields.io/pypi/v/sympy.svg)](https://pypi.python.org/pypi/sympy)\n[![Build status](https://secure.travis-ci.org/sympy/sympy.svg?branch=master)](https://travis-ci.org/sympy/sympy)\n[![Join the chat at https://gitter.im/sympy/sympy](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/sympy/sympy?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n[![Zenodo Badge](https://zenodo.org/badge/18918/sympy/sympy.svg)](https://zenodo.org/badge/latestdoi/18918/sympy/sympy)\n[![Downloads](https://pepy.tech/badge/sympy/month)](https://pepy.tech/project/sympy)\n[![GitHub Issues](https://img.shields.io/badge/issue_tracking-github-blue.svg)](https://github.com/sympy/sympy/issues)\n[![Git Tutorial](https://img.shields.io/badge/PR-Welcome-%23FF8300.svg?)](https://git-scm.com/book/en/v2/GitHub-Contributing-to-a-Project)\n[![Powered by NumFocus](https://img.shields.io/badge/powered%20by-NumFOCUS-orange.svg?style=flat&colorA=E1523D&colorB=007D8A)](https://numfocus.org)\n[![Commits since last release](https://img.shields.io/github/commits-since/sympy/sympy/latest.svg?longCache=true&style=flat-square&logo=git&logoColor=fff)](https://github.com/sympy/sympy/releases)\n\n[![SymPy Banner](https://github.com/sympy/sympy/raw/master/banner.svg)](https://sympy.org/)\n\n\nSee the [AUTHORS](AUTHORS) file for the list of authors.\n\nAnd many more people helped on the SymPy mailing list, reported bugs,\nhelped organize SymPy's participation in the Google Summer of Code, the\nGoogle Highly Open Participation Contest, Google Code-In, wrote and\nblogged about SymPy...\n\nLicense: New BSD License (see the [LICENSE](LICENSE) file for details) covers all\nfiles in the sympy repository unless stated otherwise.\n\nOur mailing list is at\n<https://groups.google.com/forum/?fromgroups#!forum/sympy>.\n\nWe have a community chat at [Gitter](https://gitter.im/sympy/sympy). Feel\nfree to ask us anything there. We have a very welcoming and helpful\ncommunity.\n\n## Download\n\nThe recommended installation method is through Anaconda,\n<https://www.anaconda.com/download/>\n\nYou can also get the latest version of SymPy from\n<https://pypi.python.org/pypi/sympy/>\n\nTo get the git version do\n\n    $ git clone https://github.com/sympy/sympy.git\n\nFor other options (tarballs, debs, etc.), see\n<https://docs.sympy.org/dev/install.html>.\n\n## Documentation and Usage\n\nFor in-depth instructions on installation and building the\ndocumentation, see the [SymPy Documentation Style Guide](https://docs.sympy.org/dev/documentation-style-guide.html).\n\nEverything is at:\n\n<https://docs.sympy.org/>\n\nYou can generate everything at the above site in your local copy of\nSymPy by:\n\n    $ cd doc\n    $ make html\n\nThen the docs will be in <span class=\"title-ref\">\\_build/html</span>. If\nyou don't want to read that, here is a short usage:\n\nFrom this directory, start Python and:\n\n``` python\n>>> from sympy import Symbol, cos\n>>> x = Symbol('x')\n>>> e = 1/cos(x)\n>>> print(e.series(x, 0, 10))\n1 + x**2/2 + 5*x**4/24 + 61*x**6/720 + 277*x**8/8064 + O(x**10)\n```\n\nSymPy also comes with a console that is a simple wrapper around the\nclassic python console (or IPython when available) that loads the SymPy\nnamespace and executes some common commands for you.\n\nTo start it, issue:\n\n    $ bin/isympy\n\nfrom this directory, if SymPy is not installed or simply:\n\n    $ isympy\n\nif SymPy is installed.\n\n## Installation\n\nSymPy has a hard dependency on the [mpmath](http://mpmath.org/) library\n(version \\>= 0.19). You should install it first, please refer to the\nmpmath installation guide:\n\n<https://github.com/fredrik-johansson/mpmath#1-download--installation>\n\nTo install SymPy using PyPI, run the following command:\n\n    $ pip install sympy\n\nTo install SymPy using Anaconda, run the following command:\n\n    $ conda install -c anaconda sympy\n\nTo install SymPy from GitHub source, first clone SymPy using `git`:\n\n    $ git clone https://github.com/sympy/sympy.git\n\nThen, in the `sympy` repository that you cloned, simply run:\n\n    $ python setup.py install\n\nSee <https://docs.sympy.org/dev/install.html> for more information.\n\n## Contributing\n\nWe welcome contributions from anyone, even if you are new to open\nsource. Please read our [Introduction to Contributing](https://github.com/sympy/sympy/wiki/Introduction-to-contributing)\npage and the [SymPy Documentation Style Guide](https://docs.sympy.org/dev/documentation-style-guide.html). If you\nare new and looking for some way to contribute, a good place to start is\nto look at the issues tagged [Easy to Fix](https://github.com/sympy/sympy/issues?q=is%3Aopen+is%3Aissue+label%3A%22Easy+to+Fix%22).\n\nPlease note that all participants in this project are expected to follow\nour Code of Conduct. By participating in this project you agree to abide\nby its terms. See [CODE\\_OF\\_CONDUCT.md](CODE_OF_CONDUCT.md).\n\n## Tests\n\nTo execute all tests, run:\n\n    $./setup.py test\n\nin the current directory.\n\nFor the more fine-grained running of tests or doctests, use `bin/test`\nor respectively `bin/doctest`. The master branch is automatically tested\nby Travis CI.\n\nTo test pull requests, use\n[sympy-bot](https://github.com/sympy/sympy-bot).\n\n## Regenerate Experimental <span class=\"title-ref\">LaTeX</span> Parser/Lexer\n\nThe parser and lexer were generated with the [ANTLR4](http://antlr4.org)\ntoolchain in `sympy/parsing/latex/_antlr` and checked into the repo.\nPresently, most users should not need to regenerate these files, but\nif you plan to work on this feature, you will need the `antlr4`\ncommand-line tool (and you must ensure that it is in your `PATH`).\nOne way to get it is:\n\n    $ conda install -c conda-forge antlr=4.10.1\n\nAlternatively, follow the instructions on the ANTLR website and download\nthe `antlr-4.10.1-complete.jar`. Then export the `CLASSPATH` as instructed\nand instead of creating `antlr4` as an alias, make it an executable file\nwith the following contents:\n``` bash\n#!/bin/bash\njava -jar /usr/local/lib/antlr-4.10.1-complete.jar \"$@\"\n```\n\nAfter making changes to `sympy/parsing/latex/LaTeX.g4`, run:\n\n    $ ./setup.py antlr\n\n## Clean\n\nTo clean everything (thus getting the same tree as in the repository):\n\n    $ ./setup.py clean\n\nYou can also clean things with git using:\n\n    $ git clean -Xdf\n\nwhich will clear everything ignored by `.gitignore`, and:\n\n    $ git clean -df\n\nto clear all untracked files. You can revert the most recent changes in\ngit with:\n\n    $ git reset --hard\n\nWARNING: The above commands will all clear changes you may have made,\nand you will lose them forever. Be sure to check things with `git\nstatus`, `git diff`, `git clean -Xn`, and `git clean -n` before doing any\nof those.\n\n## Bugs\n\nOur issue tracker is at <https://github.com/sympy/sympy/issues>. Please\nreport any bugs that you find. Or, even better, fork the repository on\nGitHub and create a pull request. We welcome all changes, big or small,\nand we will help you make the pull request if you are new to git (just\nask on our mailing list or Gitter Channel). If you further have any queries, you can find answers\non Stack Overflow using the [sympy](https://stackoverflow.com/questions/tagged/sympy) tag.\n\n## Brief History\n\nSymPy was started by Ondřej Čertík in 2005, he wrote some code during\nthe summer, then he wrote some more code during summer 2006. In February\n2007, Fabian Pedregosa joined the project and helped fix many things,\ncontributed documentation, and made it alive again. 5 students (Mateusz\nPaprocki, Brian Jorgensen, Jason Gedge, Robert Schwarz, and Chris Wu)\nimproved SymPy incredibly during summer 2007 as part of the Google\nSummer of Code. Pearu Peterson joined the development during the summer\n2007 and he has made SymPy much more competitive by rewriting the core\nfrom scratch, which has made it from 10x to 100x faster. Jurjen N.E. Bos\nhas contributed pretty-printing and other patches. Fredrik Johansson has\nwritten mpmath and contributed a lot of patches.\n\nSymPy has participated in every Google Summer of Code since 2007. You\ncan see <https://github.com/sympy/sympy/wiki#google-summer-of-code> for\nfull details. Each year has improved SymPy by bounds. Most of SymPy's\ndevelopment has come from Google Summer of Code students.\n\nIn 2011, Ondřej Čertík stepped down as lead developer, with Aaron\nMeurer, who also started as a Google Summer of Code student, taking his\nplace. Ondřej Čertík is still active in the community but is too busy\nwith work and family to play a lead development role.\n\nSince then, a lot more people have joined the development and some\npeople have also left. You can see the full list in doc/src/aboutus.rst,\nor online at:\n\n<https://docs.sympy.org/dev/aboutus.html#sympy-development-team>\n\nThe git history goes back to 2007 when development moved from svn to hg.\nTo see the history before that point, look at\n<https://github.com/sympy/sympy-old>.\n\nYou can use git to see the biggest developers. The command:\n\n    $ git shortlog -ns\n\nwill show each developer, sorted by commits to the project. The command:\n\n    $ git shortlog -ns --since=\"1 year\"\n\nwill show the top developers from the last year.\n\n## Citation\n\nTo cite SymPy in publications use\n\n> Meurer A, Smith CP, Paprocki M, Čertík O, Kirpichev SB, Rocklin M,\n> Kumar A, Ivanov S, Moore JK, Singh S, Rathnayake T, Vig S, Granger BE,\n> Muller RP, Bonazzi F, Gupta H, Vats S, Johansson F, Pedregosa F, Curry\n> MJ, Terrel AR, Roučka Š, Saboo A, Fernando I, Kulal S, Cimrman R,\n> Scopatz A. (2017) SymPy: symbolic computing in Python. *PeerJ Computer\n> Science* 3:e103 <https://doi.org/10.7717/peerj-cs.103>\n\nA BibTeX entry for LaTeX users is\n\n``` bibtex\n@article{10.7717/peerj-cs.103,\n title = {SymPy: symbolic computing in Python},\n author = {Meurer, Aaron and Smith, Christopher P. and Paprocki, Mateusz and \\v{C}ert\\'{i}k, Ond\\v{r}ej and Kirpichev, Sergey B. and Rocklin, Matthew and Kumar, Amit and Ivanov, Sergiu and Moore, Jason K. and Singh, Sartaj and Rathnayake, Thilina and Vig, Sean and Granger, Brian E. and Muller, Richard P. and Bonazzi, Francesco and Gupta, Harsh and Vats, Shivam and Johansson, Fredrik and Pedregosa, Fabian and Curry, Matthew J. and Terrel, Andy R. and Rou\\v{c}ka, \\v{S}t\\v{e}p\\'{a}n and Saboo, Ashutosh and Fernando, Isuru and Kulal, Sumith and Cimrman, Robert and Scopatz, Anthony},\n year = 2017,\n month = Jan,\n keywords = {Python, Computer algebra system, Symbolics},\n abstract = {\n            SymPy is an open-source computer algebra system written in pure Python. It is built with a focus on extensibility and ease of use, through both interactive and programmatic applications. These characteristics have led SymPy to become a popular symbolic library for the scientific Python ecosystem. This paper presents the architecture of SymPy, a description of its features, and a discussion of select submodules. The supplementary material provides additional examples and further outlines details of the architecture and features of SymPy.\n         },\n volume = 3,\n pages = {e103},\n journal = {PeerJ Computer Science},\n issn = {2376-5992},\n url = {https://doi.org/10.7717/peerj-cs.103},\n doi = {10.7717/peerj-cs.103}\n}\n```\n\nSymPy is BSD licensed, so you are free to use it whatever you like, be\nit academic, commercial, creating forks or derivatives, as long as you\ncopy the BSD statement if you redistribute it (see the LICENSE file for\ndetails). That said, although not required by the SymPy license, if it\nis convenient for you, please cite SymPy when using it in your work and\nalso consider contributing all your changes back, so that we can\nincorporate it and all of us will benefit in the end.\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/sympy-1.11.1.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "tenacity",
        "version": "8.2.2",
        "summary": "Retry code until it succeeds",
        "home_page": "https://github.com/jd/tenacity",
        "author": "Julien Danjou",
        "author_email": "julien@danjou.info",
        "license": "Apache 2.0",
        "classifier": [
          "Intended Audience :: Developers",
          "License :: OSI Approved :: Apache Software License",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3 :: Only",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Topic :: Utilities"
        ],
        "requires_dist": [
          "reno ; extra == 'doc'",
          "sphinx ; extra == 'doc'",
          "tornado (>=4.5) ; extra == 'doc'"
        ],
        "requires_python": ">=3.6",
        "provides_extra": [
          "doc"
        ],
        "description": "Tenacity is a general-purpose retrying library to simplify the task of adding retry behavior to just about anything.\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/tenacity-8.2.2.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "tensorboard",
        "version": "2.12.3",
        "summary": "TensorBoard lets you watch Tensors Flow",
        "keywords": [
          "tensorflow",
          "tensorboard",
          "tensor",
          "machine",
          "learning",
          "visualizer"
        ],
        "home_page": "https://github.com/tensorflow/tensorboard",
        "author": "Google Inc.",
        "author_email": "packages@tensorflow.org",
        "license": "Apache 2.0",
        "classifier": [
          "Development Status :: 4 - Beta",
          "Intended Audience :: Developers",
          "Intended Audience :: Education",
          "Intended Audience :: Science/Research",
          "License :: OSI Approved :: Apache Software License",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Programming Language :: Python :: 3 :: Only",
          "Topic :: Scientific/Engineering :: Mathematics",
          "Topic :: Software Development :: Libraries :: Python Modules",
          "Topic :: Software Development :: Libraries"
        ],
        "requires_dist": [
          "absl-py (>=0.4)",
          "grpcio (>=1.48.2)",
          "google-auth (<3,>=1.6.3)",
          "google-auth-oauthlib (<1.1,>=0.5)",
          "markdown (>=2.6.8)",
          "numpy (>=1.12.0)",
          "protobuf (>=3.19.6)",
          "requests (<3,>=2.21.0)",
          "setuptools (>=41.0.0)",
          "tensorboard-data-server (<0.8.0,>=0.7.0)",
          "werkzeug (>=1.0.1)",
          "wheel (>=0.26)"
        ],
        "requires_python": ">=3.8",
        "description": "TensorBoard is a suite of web applications for inspecting and understanding\nyour TensorFlow runs and graphs.\n\nReleases prior to 1.6.0 were published under the ``tensorflow-tensorboard`` name\nand may be found at https://pypi.python.org/pypi/tensorflow-tensorboard.\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/tensorboard-2.12.3.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "tensorboard-data-server",
        "version": "0.7.0",
        "platform": [
          "UNKNOWN"
        ],
        "summary": "Fast data loading for TensorBoard",
        "keywords": [
          "tensorflow",
          "tensorboard",
          "tensor",
          "machine",
          "learning",
          "visualizer"
        ],
        "home_page": "https://github.com/tensorflow/tensorboard/tree/master/tensorboard/data/server",
        "author": "Google Inc.",
        "author_email": "packages@tensorflow.org",
        "license": "Apache 2.0",
        "classifier": [
          "Development Status :: 2 - Pre-Alpha",
          "Intended Audience :: Developers",
          "Intended Audience :: Education",
          "Intended Audience :: Science/Research",
          "License :: OSI Approved :: Apache Software License",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Rust",
          "Topic :: Scientific/Engineering :: Mathematics",
          "Topic :: Software Development :: Libraries :: Python Modules",
          "Topic :: Software Development :: Libraries"
        ],
        "requires_python": ">=3.7",
        "description": "Fast data loading for TensorBoard\n\n\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/tensorboard_data_server-0.7.0.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "tensorflow",
        "version": "2.12.0",
        "platform": [
          "UNKNOWN"
        ],
        "summary": "TensorFlow is an open source machine learning framework for everyone.",
        "description_content_type": "text/markdown",
        "keywords": [
          "tensorflow",
          "tensor",
          "machine",
          "learning"
        ],
        "home_page": "https://www.tensorflow.org/",
        "download_url": "https://github.com/tensorflow/tensorflow/tags",
        "author": "Google Inc.",
        "author_email": "packages@tensorflow.org",
        "license": "Apache 2.0",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Environment :: GPU :: NVIDIA CUDA :: 11.8",
          "Intended Audience :: Developers",
          "Intended Audience :: Education",
          "Intended Audience :: Science/Research",
          "License :: OSI Approved :: Apache Software License",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3 :: Only",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Topic :: Scientific/Engineering",
          "Topic :: Scientific/Engineering :: Artificial Intelligence",
          "Topic :: Scientific/Engineering :: Mathematics",
          "Topic :: Software Development",
          "Topic :: Software Development :: Libraries",
          "Topic :: Software Development :: Libraries :: Python Modules"
        ],
        "requires_dist": [
          "absl-py (>=1.0.0)",
          "astunparse (>=1.6.0)",
          "flatbuffers (>=2.0)",
          "gast (<=0.4.0,>=0.2.1)",
          "google-pasta (>=0.1.1)",
          "grpcio (<2.0,>=1.24.3)",
          "h5py (>=2.9.0)",
          "jax (>=0.3.15)",
          "keras (<2.13,>=2.12.0)",
          "libclang (>=13.0.0)",
          "numpy (<1.24,>=1.22)",
          "opt-einsum (>=2.3.2)",
          "packaging",
          "protobuf (!=4.21.0,!=4.21.1,!=4.21.2,!=4.21.3,!=4.21.4,!=4.21.5,<5.0.0dev,>=3.20.3)",
          "setuptools",
          "six (>=1.12.0)",
          "tensorboard (<2.13,>=2.12)",
          "tensorflow-estimator (<2.13,>=2.12.0)",
          "termcolor (>=1.1.0)",
          "typing-extensions (>=3.6.6)",
          "wrapt (<1.15,>=1.11.0)",
          "tensorflow-io-gcs-filesystem (>=0.23.1) ; platform_machine != \"arm64\" or platform_system != \"Darwin\"",
          "tensorflow-cpu-aws (==2.12.0) ; platform_system == \"Linux\" and (platform_machine == \"arm64\" or platform_machine == \"aarch64\")",
          "tensorflow-intel (==2.12.0) ; platform_system == \"Windows\""
        ],
        "requires_python": ">=3.8",
        "description": "[![Python](https://img.shields.io/pypi/pyversions/tensorflow.svg?style=plastic)](https://badge.fury.io/py/tensorflow)\n[![PyPI](https://badge.fury.io/py/tensorflow.svg)](https://badge.fury.io/py/tensorflow)\n\nTensorFlow is an open source software library for high performance numerical\ncomputation. Its flexible architecture allows easy deployment of computation\nacross a variety of platforms (CPUs, GPUs, TPUs), and from desktops to clusters\nof servers to mobile and edge devices.\n\nOriginally developed by researchers and engineers from the Google Brain team\nwithin Google's AI organization, it comes with strong support for machine\nlearning and deep learning and the flexible numerical computation core is used\nacross many other scientific domains. TensorFlow is licensed under [Apache\n2.0](https://github.com/tensorflow/tensorflow/blob/master/LICENSE).\n\n\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/tensorflow-2.12.0.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "tensorflow-estimator",
        "version": "2.12.0",
        "summary": "TensorFlow Estimator.",
        "keywords": [
          "tensorflow",
          "estimator",
          "tensor",
          "machine",
          "learning"
        ],
        "home_page": "https://www.tensorflow.org/",
        "download_url": "https://github.com/tensorflow/estimator/tags",
        "author": "Google Inc.",
        "license": "Apache 2.0",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Intended Audience :: Developers",
          "Intended Audience :: Education",
          "Intended Audience :: Science/Research",
          "License :: OSI Approved :: Apache Software License",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Topic :: Scientific/Engineering",
          "Topic :: Scientific/Engineering :: Mathematics",
          "Topic :: Scientific/Engineering :: Artificial Intelligence",
          "Topic :: Software Development",
          "Topic :: Software Development :: Libraries",
          "Topic :: Software Development :: Libraries :: Python Modules"
        ],
        "requires_python": ">=3.7",
        "description": "TensorFlow Estimator is a high-level API that encapsulates model training,\nevaluation, prediction, and exporting.\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/tensorflow_estimator-2.12.0.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "tensorflow-io-gcs-filesystem",
        "version": "0.32.0",
        "platform": [
          "UNKNOWN"
        ],
        "summary": "TensorFlow IO",
        "description_content_type": "text/markdown",
        "keywords": [
          "tensorflow",
          "io",
          "machine",
          "learning"
        ],
        "home_page": "https://github.com/tensorflow/io",
        "download_url": "https://github.com/tensorflow/io/tags",
        "author": "Google Inc.",
        "author_email": "opensource@google.com",
        "license": "UNKNOWN",
        "classifier": [
          "Development Status :: 4 - Beta",
          "Intended Audience :: Developers",
          "Intended Audience :: Education",
          "Intended Audience :: Science/Research",
          "License :: OSI Approved :: Apache Software License",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Programming Language :: Python :: 3 :: Only",
          "Topic :: Scientific/Engineering",
          "Topic :: Scientific/Engineering :: Mathematics",
          "Topic :: Scientific/Engineering :: Artificial Intelligence",
          "Topic :: Software Development",
          "Topic :: Software Development :: Libraries",
          "Topic :: Software Development :: Libraries :: Python Modules"
        ],
        "requires_dist": [
          "tensorflow (<2.13.0,>=2.12.0) ; extra == 'tensorflow'",
          "tensorflow-aarch64 (<2.13.0,>=2.12.0) ; extra == 'tensorflow-aarch64'",
          "tensorflow-cpu (<2.13.0,>=2.12.0) ; extra == 'tensorflow-cpu'",
          "tensorflow-gpu (<2.13.0,>=2.12.0) ; extra == 'tensorflow-gpu'",
          "tensorflow-rocm (<2.13.0,>=2.12.0) ; extra == 'tensorflow-rocm'"
        ],
        "requires_python": ">=3.7, <3.12",
        "project_url": [
          "Source, https://github.com/tensorflow/io",
          "Bug Reports, https://github.com/tensorflow/io/issues",
          "Documentation, https://tensorflow.org/io"
        ],
        "provides_extra": [
          "tensorflow",
          "tensorflow-aarch64",
          "tensorflow-cpu",
          "tensorflow-gpu",
          "tensorflow-rocm"
        ],
        "description": "<div align=\"center\">\n  <img src=\"https://github.com/tensorflow/community/blob/master/sigs/logos/SIGIO.png\" width=\"60%\"><br><br>\n</div>\n\n-----------------\n\n# TensorFlow I/O\n\n[![GitHub CI](https://github.com/tensorflow/io/workflows/GitHub%20CI/badge.svg?branch=master)](https://github.com/tensorflow/io/actions?query=branch%3Amaster)\n[![PyPI](https://badge.fury.io/py/tensorflow-io.svg)](https://pypi.org/project/tensorflow-io/)\n[![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://github.com/tensorflow/io/blob/master/LICENSE)\n[![Documentation](https://img.shields.io/badge/api-reference-blue.svg)](https://www.tensorflow.org/io)\n\nTensorFlow I/O is a collection of file systems and file formats that are not\navailable in TensorFlow's built-in support. A full list of supported file systems\nand file formats by TensorFlow I/O can be found [here](https://www.tensorflow.org/io/api_docs/python/tfio).\n\nThe use of tensorflow-io is straightforward with keras. Below is an example\nto [Get Started with TensorFlow](https://www.tensorflow.org/tutorials/quickstart/beginner) with\nthe data processing aspect replaced by tensorflow-io:\n\n```python\nimport tensorflow as tf\nimport tensorflow_io as tfio\n\n# Read the MNIST data into the IODataset.\ndataset_url = \"https://storage.googleapis.com/cvdf-datasets/mnist/\"\nd_train = tfio.IODataset.from_mnist(\n    dataset_url + \"train-images-idx3-ubyte.gz\",\n    dataset_url + \"train-labels-idx1-ubyte.gz\",\n)\n\n# Shuffle the elements of the dataset.\nd_train = d_train.shuffle(buffer_size=1024)\n\n# By default image data is uint8, so convert to float32 using map().\nd_train = d_train.map(lambda x, y: (tf.image.convert_image_dtype(x, tf.float32), y))\n\n# prepare batches the data just like any other tf.data.Dataset\nd_train = d_train.batch(32)\n\n# Build the model.\nmodel = tf.keras.models.Sequential(\n    [\n        tf.keras.layers.Flatten(input_shape=(28, 28)),\n        tf.keras.layers.Dense(512, activation=tf.nn.relu),\n        tf.keras.layers.Dropout(0.2),\n        tf.keras.layers.Dense(10, activation=tf.nn.softmax),\n    ]\n)\n\n# Compile the model.\nmodel.compile(\n    optimizer=\"adam\", loss=\"sparse_categorical_crossentropy\", metrics=[\"accuracy\"]\n)\n\n# Fit the model.\nmodel.fit(d_train, epochs=5, steps_per_epoch=200)\n```\n\nIn the above [MNIST](http://yann.lecun.com/exdb/mnist/) example, the URL's\nto access the dataset files are passed directly to the `tfio.IODataset.from_mnist` API call.\nThis is due to the inherent support that `tensorflow-io` provides for `HTTP`/`HTTPS` file system,\nthus eliminating the need for downloading and saving datasets on a local directory.\n\nNOTE: Since `tensorflow-io` is able to detect and uncompress the MNIST dataset automatically if needed,\nwe can pass the URL's for the compressed files (gzip) to the API call as is.\n\nPlease check the official [documentation](https://www.tensorflow.org/io) for more\ndetailed and interesting usages of the package.\n\n## Installation\n\n### Python Package\n\nThe `tensorflow-io` Python package can be installed with pip directly using:\n```sh\n$ pip install tensorflow-io\n```\n\nPeople who are a little more adventurous can also try our nightly binaries:\n```sh\n$ pip install tensorflow-io-nightly\n```\n\nTo ensure you have a version of TensorFlow that is compatible with TensorFlow-IO,\nyou can specify the `tensorflow` extra requirement during install:\n\n```\npip install tensorflow-io[tensorflow]\n```\n\nSimilar extras exist for the `tensorflow-gpu`, `tensorflow-cpu` and `tensorflow-rocm`\npackages.\n\n### Docker Images\n\nIn addition to the pip packages, the docker images can be used to quickly get started.\n\nFor stable builds:\n```sh\n$ docker pull tfsigio/tfio:latest\n$ docker run -it --rm --name tfio-latest tfsigio/tfio:latest\n```\n\nFor nightly builds:\n```sh\n$ docker pull tfsigio/tfio:nightly\n$ docker run -it --rm --name tfio-nightly tfsigio/tfio:nightly\n```\n\n### R Package\n\nOnce the `tensorflow-io` Python package has been successfully installed, you\ncan install the development version of the R package from GitHub via the following:\n```r\nif (!require(\"remotes\")) install.packages(\"remotes\")\nremotes::install_github(\"tensorflow/io\", subdir = \"R-package\")\n```\n\n### TensorFlow Version Compatibility\n\nTo ensure compatibility with TensorFlow, it is recommended to install a matching\nversion of TensorFlow I/O according to the table below. You can find the list\nof releases [here](https://github.com/tensorflow/io/releases).\n\n| TensorFlow I/O Version | TensorFlow Compatibility | Release Date |\n| --- | --- | --- |\n| 0.32.0 | 2.12.x | Mar 28, 2022 |\n| 0.31.0 | 2.11.x | Feb 25, 2022 |\n| 0.30.0 | 2.11.x | Jan 20, 2022 |\n| 0.29.0 | 2.11.x | Dec 18, 2022 |\n| 0.28.0 | 2.11.x | Nov 21, 2022 |\n| 0.27.0 | 2.10.x | Sep 08, 2022 |\n| 0.26.0 | 2.9.x | May 17, 2022 |\n| 0.25.0 | 2.8.x | Apr 19, 2022 |\n| 0.24.0 | 2.8.x | Feb 04, 2022 |\n| 0.23.1 | 2.7.x | Dec 15, 2021 |\n| 0.23.0 | 2.7.x | Dec 14, 2021 |\n| 0.22.0 | 2.7.x | Nov 10, 2021 |\n| 0.21.0 | 2.6.x | Sep 12, 2021 |\n| 0.20.0 | 2.6.x | Aug 11, 2021 |\n| 0.19.1 | 2.5.x | Jul 25, 2021 |\n| 0.19.0 | 2.5.x | Jun 25, 2021 |\n| 0.18.0 | 2.5.x | May 13, 2021 |\n| 0.17.1 | 2.4.x | Apr 16, 2021 |\n| 0.17.0 | 2.4.x | Dec 14, 2020 |\n| 0.16.0 | 2.3.x | Oct 23, 2020 |\n| 0.15.0 | 2.3.x | Aug 03, 2020 |\n| 0.14.0 | 2.2.x | Jul 08, 2020 |\n| 0.13.0 | 2.2.x | May 10, 2020 |\n| 0.12.0 | 2.1.x | Feb 28, 2020 |\n| 0.11.0 | 2.1.x | Jan 10, 2020 |\n| 0.10.0 | 2.0.x | Dec 05, 2019 |\n| 0.9.1 | 2.0.x | Nov 15, 2019 |\n| 0.9.0 | 2.0.x | Oct 18, 2019 |\n| 0.8.1 | 1.15.x | Nov 15, 2019 |\n| 0.8.0 | 1.15.x | Oct 17, 2019 |\n| 0.7.2 | 1.14.x | Nov 15, 2019 |\n| 0.7.1 | 1.14.x | Oct 18, 2019 |\n| 0.7.0 | 1.14.x | Jul 14, 2019 |\n| 0.6.0 | 1.13.x | May 29, 2019 |\n| 0.5.0 | 1.13.x | Apr 12, 2019 |\n| 0.4.0 | 1.13.x | Mar 01, 2019 |\n| 0.3.0 | 1.12.0 | Feb 15, 2019 |\n| 0.2.0 | 1.12.0 | Jan 29, 2019 |\n| 0.1.0 | 1.12.0 | Dec 16, 2018 |\n\n\n## Performance Benchmarking\n\nWe use [github-pages](https://tensorflow.github.io/io/dev/bench/) to document the results of API performance benchmarks. The benchmark job is triggered on every commit to `master` branch and\nfacilitates tracking performance w.r.t commits.\n\n## Contributing\n\nTensorflow I/O is a community led open source project. As such, the project\ndepends on public contributions, bug-fixes, and documentation. Please see:\n\n- [contribution guidelines](CONTRIBUTING.md) for a guide on how to contribute.\n- [development doc](docs/development.md) for instructions on the development environment setup.\n- [tutorials](docs/tutorials) for a list of tutorial notebooks and instructions on how to write one.\n\n### Build Status and CI\n\n| Build | Status |\n| --- | --- |\n| Linux CPU Python 2 | [![Status](https://storage.googleapis.com/tensorflow-kokoro-build-badges/io/ubuntu-py2.svg)](https://storage.googleapis.com/tensorflow-kokoro-build-badges/io/ubuntu-py2.html) |\n| Linux CPU Python 3 | [![Status](https://storage.googleapis.com/tensorflow-kokoro-build-badges/io/ubuntu-py3.svg)](https://storage.googleapis.com/tensorflow-kokoro-build-badges/io/ubuntu-py3.html) |\n| Linux GPU Python 2| [![Status](https://storage.googleapis.com/tensorflow-kokoro-build-badges/io/ubuntu-gpu-py2.svg)](https://storage.googleapis.com/tensorflow-kokoro-build-badges/io/ubuntu-gpu-py2.html) |\n| Linux GPU Python 3| [![Status](https://storage.googleapis.com/tensorflow-kokoro-build-badges/io/ubuntu-gpu-py3.svg)](https://storage.googleapis.com/tensorflow-kokoro-build-badges/io/ubuntu-gpu-py3.html) |\n\nBecause of manylinux2010 requirement, TensorFlow I/O is built with\nUbuntu:16.04 + Developer Toolset 7 (GCC 7.3) on Linux. Configuration\nwith Ubuntu 16.04 with Developer Toolset 7 is not exactly straightforward.\nIf the system have docker installed, then the following command\nwill automatically build manylinux2010 compatible whl package:\n\n```sh\n#!/usr/bin/env bash\n\nls dist/*\nfor f in dist/*.whl; do\n  docker run -i --rm -v $PWD:/v -w /v --net=host quay.io/pypa/manylinux2010_x86_64 bash -x -e /v/tools/build/auditwheel repair --plat manylinux2010_x86_64 $f\ndone\nsudo chown -R $(id -nu):$(id -ng) .\nls wheelhouse/*\n```\n\nIt takes some time to build, but once complete, there will be python\n`3.5`, `3.6`, `3.7` compatible whl packages available in `wheelhouse`\ndirectory.\n\nOn macOS, the same command could be used. However, the script expects `python` in shell\nand will only generate a whl package that matches the version of `python` in shell. If\nyou want to build a whl package for a specific python then you have to alias this version\nof python to `python` in shell. See [.github/workflows/build.yml](.github/workflows/build.yml)\nAuditwheel step for instructions how to do that.\n\nNote the above command is also the command we use when releasing packages for Linux and macOS.\n\nTensorFlow I/O uses both GitHub Workflows and Google CI (Kokoro) for continuous integration.\nGitHub Workflows is used for macOS build and test. Kokoro is used for Linux build and test.\nAgain, because of the manylinux2010 requirement, on Linux whl packages are always\nbuilt with Ubuntu 16.04 + Developer Toolset 7. Tests are done on a variatiy of systems\nwith different python3 versions to ensure a good coverage:\n\n| Python | Ubuntu 18.04| Ubuntu 20.04 | macOS + osx9 | Windows-2019 |\n| ------- | ----- | ------- | ------- | --------- |\n| 2.7 |  :heavy_check_mark: | :heavy_check_mark: | :heavy_check_mark: | N/A |\n| 3.7 |  :heavy_check_mark: | :heavy_check_mark: | :heavy_check_mark: | :heavy_check_mark: |\n| 3.8 |  :heavy_check_mark: | :heavy_check_mark: | :heavy_check_mark: | :heavy_check_mark: |\n\n\nTensorFlow I/O has integrations with many systems and cloud vendors such as\nPrometheus, Apache Kafka, Apache Ignite, Google Cloud PubSub, AWS Kinesis,\nMicrosoft Azure Storage, Alibaba Cloud OSS etc.\n\nWe tried our best to test against those systems in our continuous integration\nwhenever possible. Some tests such as Prometheus, Kafka, and Ignite\nare done with live systems, meaning we install Prometheus/Kafka/Ignite on CI machine before\nthe test is run. Some tests such as Kinesis, PubSub, and Azure Storage are done\nthrough official or non-official emulators. Offline tests are also performed whenever\npossible, though systems covered through offine tests may not have the same\nlevel of coverage as live systems or emulators.\n\n\n|  | Live System | Emulator| CI Integration |  Offline |\n| ------- | ----- | ----- | ----- | ----- |\n| Apache Kafka | :heavy_check_mark:  | | :heavy_check_mark:| |\n| Apache Ignite |  :heavy_check_mark: | |:heavy_check_mark:| |\n| Prometheus |  :heavy_check_mark: | |:heavy_check_mark:| |\n| Google PubSub |   | :heavy_check_mark: |:heavy_check_mark:| |\n| Azure Storage |   | :heavy_check_mark: |:heavy_check_mark:| |\n| AWS Kinesis |   | :heavy_check_mark: |:heavy_check_mark:| |\n| Alibaba Cloud OSS |   | | |  :heavy_check_mark: |\n| Google BigTable/BigQuery |   | to be added | | |\n| Elasticsearch (experimental) |  :heavy_check_mark: | |:heavy_check_mark:| |\n| MongoDB (experimental) |  :heavy_check_mark: | |:heavy_check_mark:| |\n\n\nReferences for emulators:\n- Official [PubSub Emulator](https://cloud.google.com/sdk/gcloud/reference/beta/emulators/pubsub/) by Google Cloud for Cloud PubSub.\n- Official [Azurite Emulator](https://github.com/Azure/Azurite) by Azure for Azure Storage.\n- None-official [LocalStack emulator](https://github.com/localstack/localstack) by LocalStack for AWS Kinesis.\n\n\n## Community\n\n* SIG IO [Google Group](https://groups.google.com/a/tensorflow.org/forum/#!forum/io) and mailing list: [io@tensorflow.org](io@tensorflow.org)\n* SIG IO [Monthly Meeting Notes](https://docs.google.com/document/d/1CB51yJxns5WA4Ylv89D-a5qReiGTC0GYum6DU-9nKGo/edit)\n* Gitter room: [tensorflow/sig-io](https://gitter.im/tensorflow/sig-io)\n\n## Additional Information\n\n* [Streaming Machine Learning with Tiered Storage and Without a Data Lake](https://www.confluent.io/blog/streaming-machine-learning-with-tiered-storage/) - [Kai Waehner](https://github.com/kaiwaehner)\n* [TensorFlow with Apache Arrow Datasets](https://medium.com/tensorflow/tensorflow-with-apache-arrow-datasets-cdbcfe80a59f) - [Bryan Cutler](https://github.com/BryanCutler)\n* [How to build a custom Dataset for Tensorflow](https://towardsdatascience.com/how-to-build-a-custom-dataset-for-tensorflow-1fe3967544d8) - [Ivelin Ivanov](https://github.com/ivelin)\n* [TensorFlow on Apache Ignite](https://medium.com/tensorflow/tensorflow-on-apache-ignite-99f1fc60efeb) - [Anton Dmitriev](https://github.com/dmitrievanthony)\n\n## License\n\n[Apache License 2.0](LICENSE)\n\n\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/tensorflow_io_gcs_filesystem-0.32.0.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "termcolor",
        "version": "2.3.0",
        "summary": "ANSI color formatting for output in terminal",
        "description_content_type": "text/markdown",
        "keywords": [
          "ANSI",
          "ANSI color",
          "ANSI colour",
          "color",
          "colour",
          "formatting",
          "termcolor",
          "terminal"
        ],
        "author_email": "Konstantin Lepa <konstantin.lepa@gmail.com>",
        "maintainer": "Hugo van Kemenade",
        "license": "MIT",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Environment :: Console",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: MIT License",
          "Operating System :: OS Independent",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3 :: Only",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Programming Language :: Python :: 3.12",
          "Programming Language :: Python :: Implementation :: CPython",
          "Programming Language :: Python :: Implementation :: PyPy",
          "Topic :: Terminals"
        ],
        "requires_dist": [
          "pytest; extra == 'tests'",
          "pytest-cov; extra == 'tests'"
        ],
        "requires_python": ">=3.7",
        "project_url": [
          "Changelog, https://github.com/termcolor/termcolor/releases",
          "Homepage, https://github.com/termcolor/termcolor",
          "Source, https://github.com/termcolor/termcolor"
        ],
        "provides_extra": [
          "tests"
        ],
        "description": "# termcolor\n\n[![PyPI version](https://img.shields.io/pypi/v/termcolor.svg?logo=pypi&logoColor=FFE873)](https://pypi.org/project/termcolor)\n[![Supported Python versions](https://img.shields.io/pypi/pyversions/termcolor.svg?logo=python&logoColor=FFE873)](https://pypi.org/project/termcolor)\n[![PyPI downloads](https://img.shields.io/pypi/dm/termcolor.svg)](https://pypistats.org/packages/termcolor)\n[![GitHub Actions status](https://github.com/termcolor/termcolor/workflows/Test/badge.svg)](https://github.com/termcolor/termcolor/actions)\n[![Codecov](https://codecov.io/gh/termcolor/termcolor/branch/main/graph/badge.svg)](https://codecov.io/gh/termcolor/termcolor)\n[![Licence](https://img.shields.io/github/license/termcolor/termcolor.svg)](COPYING.txt)\n[![Code style: Black](https://img.shields.io/badge/code%20style-Black-000000.svg)](https://github.com/psf/black)\n[![Tidelift](https://tidelift.com/badges/package/pypi/termcolor)](https://tidelift.com/subscription/pkg/pypi-termcolor?utm_source=pypi-termcolor&utm_medium=referral&utm_campaign=readme)\n\n## Installation\n\n### From PyPI\n\n```bash\npython3 -m pip install --upgrade termcolor\n```\n\n### From source\n\n```bash\ngit clone https://github.com/termcolor/termcolor\ncd termcolor\npython3 -m pip install .\n```\n\n### Demo\n\nTo see demo output, run:\n\n```bash\npython3 -m termcolor\n```\n\n## Example\n\n```python\nimport sys\n\nfrom termcolor import colored, cprint\n\ntext = colored(\"Hello, World!\", \"red\", attrs=[\"reverse\", \"blink\"])\nprint(text)\ncprint(\"Hello, World!\", \"green\", \"on_red\")\n\nprint_red_on_cyan = lambda x: cprint(x, \"red\", \"on_cyan\")\nprint_red_on_cyan(\"Hello, World!\")\nprint_red_on_cyan(\"Hello, Universe!\")\n\nfor i in range(10):\n    cprint(i, \"magenta\", end=\" \")\n\ncprint(\"Attention!\", \"red\", attrs=[\"bold\"], file=sys.stderr)\n```\n\n## Text properties\n\n| Text colors     | Text highlights    | Attributes  |\n| --------------- | ------------------ | ----------- |\n| `black`         | `on_black`         | `bold`      |\n| `red`           | `on_red`           | `dark`      |\n| `green`         | `on_green`         | `underline` |\n| `yellow`        | `on_yellow`        | `blink`     |\n| `blue`          | `on_blue`          | `reverse`   |\n| `magenta`       | `on_magenta`       | `concealed` |\n| `cyan`          | `on_cyan`          |             |\n| `white`         | `on_white`         |             |\n| `light_grey`    | `on_light_grey`    |             |\n| `dark_grey`     | `on_dark_grey`     |             |\n| `light_red`     | `on_light_red`     |             |\n| `light_green`   | `on_light_green`   |             |\n| `light_yellow`  | `on_light_yellow`  |             |\n| `light_blue`    | `on_light_blue`    |             |\n| `light_magenta` | `on_light_magenta` |             |\n| `light_cyan`    | `on_light_cyan`    |             |\n\n## Terminal properties\n\n| Terminal     | bold    | dark | underline | blink      | reverse | concealed |\n| ------------ | ------- | ---- | --------- | ---------- | ------- | --------- |\n| xterm        | yes     | no   | yes       | bold       | yes     | yes       |\n| linux        | yes     | yes  | bold      | yes        | yes     | no        |\n| rxvt         | yes     | no   | yes       | bold/black | yes     | no        |\n| dtterm       | yes     | yes  | yes       | reverse    | yes     | yes       |\n| teraterm     | reverse | no   | yes       | rev/red    | yes     | no        |\n| aixterm      | normal  | no   | yes       | no         | yes     | yes       |\n| PuTTY        | color   | no   | yes       | no         | yes     | no        |\n| Windows      | no      | no   | no        | no         | yes     | no        |\n| Cygwin SSH   | yes     | no   | color     | color      | color   | yes       |\n| Mac Terminal | yes     | no   | yes       | yes        | yes     | yes       |\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/termcolor-2.3.0.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "threadpoolctl",
        "version": "3.1.0",
        "summary": "threadpoolctl",
        "description_content_type": "text/markdown",
        "home_page": "https://github.com/joblib/threadpoolctl",
        "author": "Thomas Moreau",
        "author_email": "thomas.moreau.2010@gmail.com",
        "license": "BSD-3-Clause",
        "classifier": [
          "Intended Audience :: Developers",
          "License :: OSI Approved :: BSD License",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Topic :: Software Development :: Libraries :: Python Modules"
        ],
        "requires_python": ">=3.6",
        "description": "# Thread-pool Controls [![Build Status](https://dev.azure.com/joblib/threadpoolctl/_apis/build/status/joblib.threadpoolctl?branchName=master)](https://dev.azure.com/joblib/threadpoolctl/_build/latest?definitionId=1&branchName=master) [![codecov](https://codecov.io/gh/joblib/threadpoolctl/branch/master/graph/badge.svg)](https://codecov.io/gh/joblib/threadpoolctl)\n\nPython helpers to limit the number of threads used in the\nthreadpool-backed of common native libraries used for scientific\ncomputing and data science (e.g. BLAS and OpenMP).\n\nFine control of the underlying thread-pool size can be useful in\nworkloads that involve nested parallelism so as to mitigate\noversubscription issues.\n\n## Installation\n\n- For users, install the last published version from PyPI:\n\n  ```bash\n  pip install threadpoolctl\n  ```\n\n- For contributors, install from the source repository in developer\n  mode:\n\n  ```bash\n  pip install -r dev-requirements.txt\n  flit install --symlink\n  ```\n\n  then you run the tests with pytest:\n\n  ```bash\n  pytest\n  ```\n\n## Usage\n\n### Command Line Interface\n\nGet a JSON description of thread-pools initialized when importing python\npackages such as numpy or scipy for instance:\n\n```\npython -m threadpoolctl -i numpy scipy.linalg\n[\n  {\n    \"filepath\": \"/home/ogrisel/miniconda3/envs/tmp/lib/libmkl_rt.so\",\n    \"prefix\": \"libmkl_rt\",\n    \"user_api\": \"blas\",\n    \"internal_api\": \"mkl\",\n    \"version\": \"2019.0.4\",\n    \"num_threads\": 2,\n    \"threading_layer\": \"intel\"\n  },\n  {\n    \"filepath\": \"/home/ogrisel/miniconda3/envs/tmp/lib/libiomp5.so\",\n    \"prefix\": \"libiomp\",\n    \"user_api\": \"openmp\",\n    \"internal_api\": \"openmp\",\n    \"version\": null,\n    \"num_threads\": 4\n  }\n]\n```\n\nThe JSON information is written on STDOUT. If some of the packages are missing,\na warning message is displayed on STDERR.\n\n### Python Runtime Programmatic Introspection\n\nIntrospect the current state of the threadpool-enabled runtime libraries\nthat are loaded when importing Python packages:\n\n```python\n>>> from threadpoolctl import threadpool_info\n>>> from pprint import pprint\n>>> pprint(threadpool_info())\n[]\n\n>>> import numpy\n>>> pprint(threadpool_info())\n[{'filepath': '/home/ogrisel/miniconda3/envs/tmp/lib/libmkl_rt.so',\n  'internal_api': 'mkl',\n  'num_threads': 2,\n  'prefix': 'libmkl_rt',\n  'threading_layer': 'intel',\n  'user_api': 'blas',\n  'version': '2019.0.4'},\n {'filepath': '/home/ogrisel/miniconda3/envs/tmp/lib/libiomp5.so',\n  'internal_api': 'openmp',\n  'num_threads': 4,\n  'prefix': 'libiomp',\n  'user_api': 'openmp',\n  'version': None}]\n\n>>> import xgboost\n>>> pprint(threadpool_info())\n[{'filepath': '/home/ogrisel/miniconda3/envs/tmp/lib/libmkl_rt.so',\n  'internal_api': 'mkl',\n  'num_threads': 2,\n  'prefix': 'libmkl_rt',\n  'threading_layer': 'intel',\n  'user_api': 'blas',\n  'version': '2019.0.4'},\n {'filepath': '/home/ogrisel/miniconda3/envs/tmp/lib/libiomp5.so',\n  'internal_api': 'openmp',\n  'num_threads': 4,\n  'prefix': 'libiomp',\n  'user_api': 'openmp',\n  'version': None},\n {'filepath': '/home/ogrisel/miniconda3/envs/tmp/lib/libgomp.so.1.0.0',\n  'internal_api': 'openmp',\n  'num_threads': 4,\n  'prefix': 'libgomp',\n  'user_api': 'openmp',\n  'version': None}]\n```\n\nIn the above example, `numpy` was installed from the default anaconda channel and comes\nwith MKL and its Intel OpenMP (`libiomp5`) implementation while `xgboost` was installed\nfrom pypi.org and links against GNU OpenMP (`libgomp`) so both OpenMP runtimes are\nloaded in the same Python program.\n\nThe state of these libraries is also accessible through the object oriented API:\n\n```python\n>>> from threadpoolctl import ThreadpoolController, threadpool_info\n>>> from pprint import pprint\n>>> import numpy\n>>> controller = ThreadpoolController()\n>>> pprint(controller.info())\n[{'architecture': 'Haswell',\n  'filepath': '/home/jeremie/miniconda/envs/dev/lib/libopenblasp-r0.3.17.so',\n  'internal_api': 'openblas',\n  'num_threads': 4,\n  'prefix': 'libopenblas',\n  'threading_layer': 'pthreads',\n  'user_api': 'blas',\n  'version': '0.3.17'}]\n\n>>> controller.info() == threadpool_info()\nTrue\n```\n\n### Setting the Maximum Size of Thread-Pools\n\nControl the number of threads used by the underlying runtime libraries\nin specific sections of your Python program:\n\n```python\n>>> from threadpoolctl import threadpool_limits\n>>> import numpy as np\n\n>>> with threadpool_limits(limits=1, user_api='blas'):\n...     # In this block, calls to blas implementation (like openblas or MKL)\n...     # will be limited to use only one thread. They can thus be used jointly\n...     # with thread-parallelism.\n...     a = np.random.randn(1000, 1000)\n...     a_squared = a @ a\n```\n\nThe threadpools can also be controlled via the object oriented API, which is especially\nuseful to avoid searching through all the loaded shared libraries each time. It will\nhowever not act on libraries loaded after the instantiation of the\n`ThreadpoolController`:\n\n```python\n>>> from threadpoolctl import ThreadpoolController\n>>> import numpy as np\n>>> controller = ThreadpoolController()\n\n>>> with controller.limit(limits=1, user_api='blas'):\n...     a = np.random.randn(1000, 1000)\n...     a_squared = a @ a\n```\n\n### Restricting the limits to the scope of a function\n\n`threadpool_limits` and `ThreadpoolController` can also be used as decorators to set\nthe maximum number of threads used by the supported libraries at a function level. The\ndecorators are accessible through their `wrap` method:\n\n```python\n>>> from threadpoolctl import ThreadpoolController, threadpool_limits\n>>> import numpy as np\n>>> controller = ThreadpoolController()\n\n>>> @controller.wrap(limits=1, user_api='blas')\n... # or @threadpool_limits.wrap(limits=1, user_api='blas')\n... def my_func():\n...     # Inside this function, calls to blas implementation (like openblas or MKL)\n...     # will be limited to use only one thread.\n...     a = np.random.randn(1000, 1000)\n...     a_squared = a @ a\n...\n```\n\n### Sequential BLAS within OpenMP parallel region\n\nWhen one wants to have sequential BLAS calls within an OpenMP parallel region, it's\nsafer to set `limits=\"sequential_blas_under_openmp\"` since setting `limits=1` and `user_api=\"blas\"` might not lead to the expected behavior in some configurations\n(e.g. OpenBLAS with the OpenMP threading layer\nhttps://github.com/xianyi/OpenBLAS/issues/2985).\n\n### Known Limitations\n\n- `threadpool_limits` can fail to limit the number of inner threads when nesting\n  parallel loops managed by distinct OpenMP runtime implementations (for instance\n  libgomp from GCC and libomp from clang/llvm or libiomp from ICC).\n\n  See the `test_openmp_nesting` function in [tests/test_threadpoolctl.py](\n  https://github.com/joblib/threadpoolctl/blob/master/tests/test_threadpoolctl.py)\n  for an example. More information can be found at:\n  https://github.com/jeremiedbb/Nested_OpenMP\n\n  Note however that this problem does not happen when `threadpool_limits` is\n  used to limit the number of threads used internally by BLAS calls that are\n  themselves nested under OpenMP parallel loops. `threadpool_limits` works as\n  expected, even if the inner BLAS implementation relies on a distinct OpenMP\n  implementation.\n\n- Using Intel OpenMP (ICC) and LLVM OpenMP (clang) in the same Python program\n  under Linux is known to cause problems. See the following guide for more details\n  and workarounds:\n  https://github.com/joblib/threadpoolctl/blob/master/multiple_openmp.md\n\n- Setting the maximum number of threads of the OpenMP and BLAS libraries has a global\n  effect and impacts the whole Python process. There is no thread level isolation as\n  these libraries do not offer thread-local APIs to configure the number of threads to\n  use in nested parallel calls.\n\n\n## Maintainers\n\nTo make a release:\n\nBump the version number (`__version__`) in `threadpoolctl.py`.\n\nBuild the distribution archives:\n\n```bash\npip install flit\nflit build\n```\n\nCheck the contents of `dist/`.\n\nIf everything is fine, make a commit for the release, tag it, push the\ntag to github and then:\n\n```bash\nflit publish\n```\n\n### Credits\n\nThe initial dynamic library introspection code was written by @anton-malakhov\nfor the smp package available at https://github.com/IntelPython/smp .\n\nthreadpoolctl extends this for other operating systems. Contrary to smp,\nthreadpoolctl does not attempt to limit the size of Python multiprocessing\npools (threads or processes) or set operating system-level CPU affinity\nconstraints: threadpoolctl only interacts with native libraries via their\npublic runtime APIs.\n\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/threadpoolctl-3.1.0.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "toml",
        "version": "0.10.2",
        "platform": [
          "UNKNOWN"
        ],
        "summary": "Python Library for Tom's Obvious, Minimal Language",
        "home_page": "https://github.com/uiri/toml",
        "author": "William Pearson",
        "author_email": "uiri@xqz.ca",
        "license": "MIT",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: MIT License",
          "Operating System :: OS Independent",
          "Programming Language :: Python",
          "Programming Language :: Python :: 2",
          "Programming Language :: Python :: 2.6",
          "Programming Language :: Python :: 2.7",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.3",
          "Programming Language :: Python :: 3.4",
          "Programming Language :: Python :: 3.5",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: Implementation :: CPython",
          "Programming Language :: Python :: Implementation :: PyPy"
        ],
        "requires_python": ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*",
        "description": "****\nTOML\n****\n\n.. image:: https://img.shields.io/pypi/v/toml\n    :target: https://pypi.org/project/toml/\n\n.. image:: https://travis-ci.org/uiri/toml.svg?branch=master\n    :target: https://travis-ci.org/uiri/toml\n\n.. image:: https://img.shields.io/pypi/pyversions/toml.svg\n    :target: https://pypi.org/project/toml/\n\n\nA Python library for parsing and creating `TOML <https://en.wikipedia.org/wiki/TOML>`_.\n\nThe module passes `the TOML test suite <https://github.com/BurntSushi/toml-test>`_.\n\nSee also:\n\n* `The TOML Standard <https://github.com/toml-lang/toml>`_\n* `The currently supported TOML specification <https://github.com/toml-lang/toml/blob/v0.5.0/README.md>`_\n\nInstallation\n============\n\nTo install the latest release on `PyPI <https://pypi.org/project/toml/>`_,\nsimply run:\n\n::\n\n  pip install toml\n\nOr to install the latest development version, run:\n\n::\n\n  git clone https://github.com/uiri/toml.git\n  cd toml\n  python setup.py install\n\nQuick Tutorial\n==============\n\n*toml.loads* takes in a string containing standard TOML-formatted data and\nreturns a dictionary containing the parsed data.\n\n.. code:: pycon\n\n  >>> import toml\n  >>> toml_string = \"\"\"\n  ... # This is a TOML document.\n  ...\n  ... title = \"TOML Example\"\n  ...\n  ... [owner]\n  ... name = \"Tom Preston-Werner\"\n  ... dob = 1979-05-27T07:32:00-08:00 # First class dates\n  ...\n  ... [database]\n  ... server = \"192.168.1.1\"\n  ... ports = [ 8001, 8001, 8002 ]\n  ... connection_max = 5000\n  ... enabled = true\n  ...\n  ... [servers]\n  ...\n  ...   # Indentation (tabs and/or spaces) is allowed but not required\n  ...   [servers.alpha]\n  ...   ip = \"10.0.0.1\"\n  ...   dc = \"eqdc10\"\n  ...\n  ...   [servers.beta]\n  ...   ip = \"10.0.0.2\"\n  ...   dc = \"eqdc10\"\n  ...\n  ... [clients]\n  ... data = [ [\"gamma\", \"delta\"], [1, 2] ]\n  ...\n  ... # Line breaks are OK when inside arrays\n  ... hosts = [\n  ...   \"alpha\",\n  ...   \"omega\"\n  ... ]\n  ... \"\"\"\n  >>> parsed_toml = toml.loads(toml_string)\n\n\n*toml.dumps* takes a dictionary and returns a string containing the\ncorresponding TOML-formatted data.\n\n.. code:: pycon\n\n  >>> new_toml_string = toml.dumps(parsed_toml)\n  >>> print(new_toml_string)\n  title = \"TOML Example\"\n  [owner]\n  name = \"Tom Preston-Werner\"\n  dob = 1979-05-27T07:32:00Z\n  [database]\n  server = \"192.168.1.1\"\n  ports = [ 8001, 8001, 8002,]\n  connection_max = 5000\n  enabled = true\n  [clients]\n  data = [ [ \"gamma\", \"delta\",], [ 1, 2,],]\n  hosts = [ \"alpha\", \"omega\",]\n  [servers.alpha]\n  ip = \"10.0.0.1\"\n  dc = \"eqdc10\"\n  [servers.beta]\n  ip = \"10.0.0.2\"\n  dc = \"eqdc10\"\n\n*toml.dump* takes a dictionary and a file descriptor and returns a string containing the\ncorresponding TOML-formatted data.\n\n.. code:: pycon\n\n  >>> with open('new_toml_file.toml', 'w') as f:\n  ...     new_toml_string = toml.dump(parsed_toml, f)\n  >>> print(new_toml_string)\n  title = \"TOML Example\"\n  [owner]\n  name = \"Tom Preston-Werner\"\n  dob = 1979-05-27T07:32:00Z\n  [database]\n  server = \"192.168.1.1\"\n  ports = [ 8001, 8001, 8002,]\n  connection_max = 5000\n  enabled = true\n  [clients]\n  data = [ [ \"gamma\", \"delta\",], [ 1, 2,],]\n  hosts = [ \"alpha\", \"omega\",]\n  [servers.alpha]\n  ip = \"10.0.0.1\"\n  dc = \"eqdc10\"\n  [servers.beta]\n  ip = \"10.0.0.2\"\n  dc = \"eqdc10\"\n\nFor more functions, view the API Reference below.\n\nNote\n----\n\nFor Numpy users, by default the data types ``np.floatX`` will not be translated to floats by toml, but will instead be encoded as strings. To get around this, specify the ``TomlNumpyEncoder`` when saving your data.\n\n.. code:: pycon\n\n  >>> import toml\n  >>> import numpy as np\n  >>> a = np.arange(0, 10, dtype=np.double)\n  >>> output = {'a': a}\n  >>> toml.dumps(output)\n  'a = [ \"0.0\", \"1.0\", \"2.0\", \"3.0\", \"4.0\", \"5.0\", \"6.0\", \"7.0\", \"8.0\", \"9.0\",]\\n'\n  >>> toml.dumps(output, encoder=toml.TomlNumpyEncoder())\n  'a = [ 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0,]\\n'\n\nAPI Reference\n=============\n\n``toml.load(f, _dict=dict)``\n  Parse a file or a list of files as TOML and return a dictionary.\n\n  :Args:\n    * ``f``: A path to a file, list of filepaths (to be read into single\n      object) or a file descriptor\n    * ``_dict``: The class of the dictionary object to be returned\n\n  :Returns:\n    A dictionary (or object ``_dict``) containing parsed TOML data\n\n  :Raises:\n    * ``TypeError``: When ``f`` is an invalid type or is a list containing\n      invalid types\n    * ``TomlDecodeError``: When an error occurs while decoding the file(s)\n\n``toml.loads(s, _dict=dict)``\n  Parse a TOML-formatted string to a dictionary.\n\n  :Args:\n    * ``s``: The TOML-formatted string to be parsed\n    * ``_dict``: Specifies the class of the returned toml dictionary\n\n  :Returns:\n    A dictionary (or object ``_dict``) containing parsed TOML data\n\n  :Raises:\n    * ``TypeError``: When a non-string object is passed\n    * ``TomlDecodeError``: When an error occurs while decoding the\n      TOML-formatted string\n\n``toml.dump(o, f, encoder=None)``\n  Write a dictionary to a file containing TOML-formatted data\n\n  :Args:\n    * ``o``: An object to be converted into TOML\n    * ``f``: A File descriptor where the TOML-formatted output should be stored\n    * ``encoder``: An instance of ``TomlEncoder`` (or subclass) for encoding the object. If ``None``, will default to ``TomlEncoder``\n\n  :Returns:\n    A string containing the TOML-formatted data corresponding to object ``o``\n\n  :Raises:\n    * ``TypeError``: When anything other than file descriptor is passed\n\n``toml.dumps(o, encoder=None)``\n  Create a TOML-formatted string from an input object\n\n  :Args:\n    * ``o``: An object to be converted into TOML\n    * ``encoder``: An instance of ``TomlEncoder`` (or subclass) for encoding the object. If ``None``, will default to ``TomlEncoder``\n\n  :Returns:\n    A string containing the TOML-formatted data corresponding to object ``o``\n\n\n\nLicensing\n=========\n\nThis project is released under the terms of the MIT Open Source License. View\n*LICENSE.txt* for more information.\n\n\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/toml-0.10.2.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "toolz",
        "version": "0.12.0",
        "platform": [
          "UNKNOWN"
        ],
        "summary": "List processing tools and functional utilities",
        "keywords": [
          "functional",
          "utility",
          "itertools",
          "functools"
        ],
        "home_page": "https://github.com/pytoolz/toolz/",
        "author": "https://raw.github.com/pytoolz/toolz/master/AUTHORS.md",
        "maintainer": "Erik Welch",
        "maintainer_email": "erik.n.welch@gmail.com",
        "license": "BSD",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "License :: OSI Approved :: BSD License",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.5",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: Implementation :: CPython",
          "Programming Language :: Python :: Implementation :: PyPy"
        ],
        "requires_python": ">=3.5",
        "description": "Toolz\n=====\n\n|Build Status| |Coverage Status| |Version Status|\n\nA set of utility functions for iterators, functions, and dictionaries.\n\nSee the PyToolz documentation at https://toolz.readthedocs.io\n\nLICENSE\n-------\n\nNew BSD. See `License File <https://github.com/pytoolz/toolz/blob/master/LICENSE.txt>`__.\n\nInstall\n-------\n\n``toolz`` is on the Python Package Index (PyPI):\n\n::\n\n    pip install toolz\n\nStructure and Heritage\n----------------------\n\n``toolz`` is implemented in three parts:\n\n|literal itertoolz|_, for operations on iterables. Examples: ``groupby``,\n``unique``, ``interpose``,\n\n|literal functoolz|_, for higher-order functions. Examples: ``memoize``,\n``curry``, ``compose``,\n\n|literal dicttoolz|_, for operations on dictionaries. Examples: ``assoc``,\n``update-in``, ``merge``.\n\n.. |literal itertoolz| replace:: ``itertoolz``\n.. _literal itertoolz: https://github.com/pytoolz/toolz/blob/master/toolz/itertoolz.py\n\n.. |literal functoolz| replace:: ``functoolz``\n.. _literal functoolz: https://github.com/pytoolz/toolz/blob/master/toolz/functoolz.py\n\n.. |literal dicttoolz| replace:: ``dicttoolz``\n.. _literal dicttoolz: https://github.com/pytoolz/toolz/blob/master/toolz/dicttoolz.py\n\nThese functions come from the legacy of functional languages for list\nprocessing. They interoperate well to accomplish common complex tasks.\n\nRead our `API\nDocumentation <https://toolz.readthedocs.io/en/latest/api.html>`__ for\nmore details.\n\nExample\n-------\n\nThis builds a standard wordcount function from pieces within ``toolz``:\n\n.. code:: python\n\n    >>> def stem(word):\n    ...     \"\"\" Stem word to primitive form \"\"\"\n    ...     return word.lower().rstrip(\",.!:;'-\\\"\").lstrip(\"'\\\"\")\n\n    >>> from toolz import compose, frequencies\n    >>> from toolz.curried import map\n    >>> wordcount = compose(frequencies, map(stem), str.split)\n\n    >>> sentence = \"This cat jumped over this other cat!\"\n    >>> wordcount(sentence)\n    {'this': 2, 'cat': 2, 'jumped': 1, 'over': 1, 'other': 1}\n\nDependencies\n------------\n\n``toolz`` supports Python 3.5+ with a common codebase.\nIt is pure Python and requires no dependencies beyond the standard\nlibrary.\n\nIt is, in short, a lightweight dependency.\n\n\nCyToolz\n-------\n\nThe ``toolz`` project has been reimplemented in `Cython <http://cython.org>`__.\nThe ``cytoolz`` project is a drop-in replacement for the Pure Python\nimplementation.\nSee `CyToolz GitHub Page <https://github.com/pytoolz/cytoolz/>`__ for more\ndetails.\n\nSee Also\n--------\n\n-  `Underscore.js <https://underscorejs.org/>`__: A similar library for\n   JavaScript\n-  `Enumerable <https://ruby-doc.org/core-2.0.0/Enumerable.html>`__: A\n   similar library for Ruby\n-  `Clojure <https://clojure.org/>`__: A functional language whose\n   standard library has several counterparts in ``toolz``\n-  `itertools <https://docs.python.org/2/library/itertools.html>`__: The\n   Python standard library for iterator tools\n-  `functools <https://docs.python.org/2/library/functools.html>`__: The\n   Python standard library for function tools\n\nContributions Welcome\n---------------------\n\n``toolz`` aims to be a repository for utility functions, particularly\nthose that come from the functional programming and list processing\ntraditions. We welcome contributions that fall within this scope.\n\nWe also try to keep the API small to keep ``toolz`` manageable.  The ideal\ncontribution is significantly different from existing functions and has\nprecedent in a few other functional systems.\n\nPlease take a look at our\n`issue page <https://github.com/pytoolz/toolz/issues>`__\nfor contribution ideas.\n\nCommunity\n---------\n\nSee our `mailing list <https://groups.google.com/forum/#!forum/pytoolz>`__.\nWe're friendly.\n\n.. |Build Status| image:: https://github.com/pytoolz/toolz/workflows/Test/badge.svg\n   :target: https://github.com/pytoolz/toolz/actions\n.. |Coverage Status| image:: https://coveralls.io/repos/pytoolz/toolz/badge.svg?branch=master\n   :target: https://coveralls.io/r/pytoolz/toolz\n.. |Version Status| image:: https://badge.fury.io/py/toolz.svg\n   :target: https://badge.fury.io/py/toolz\n\n\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/toolz-0.12.0.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "tornado",
        "version": "6.3.1",
        "summary": "Tornado is a Python web framework and asynchronous networking library, originally developed at FriendFeed.",
        "description_content_type": "text/x-rst",
        "home_page": "http://www.tornadoweb.org/",
        "author": "Facebook",
        "author_email": "python-tornado@googlegroups.com",
        "license": "Apache-2.0",
        "classifier": [
          "License :: OSI Approved :: Apache Software License",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Programming Language :: Python :: Implementation :: CPython",
          "Programming Language :: Python :: Implementation :: PyPy"
        ],
        "requires_python": ">= 3.8",
        "project_url": [
          "Source, https://github.com/tornadoweb/tornado"
        ],
        "description": "Tornado Web Server\n==================\n\n.. image:: https://badges.gitter.im/Join%20Chat.svg\n   :alt: Join the chat at https://gitter.im/tornadoweb/tornado\n   :target: https://gitter.im/tornadoweb/tornado?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge\n\n`Tornado <http://www.tornadoweb.org>`_ is a Python web framework and\nasynchronous networking library, originally developed at `FriendFeed\n<http://friendfeed.com>`_.  By using non-blocking network I/O, Tornado\ncan scale to tens of thousands of open connections, making it ideal for\n`long polling <http://en.wikipedia.org/wiki/Push_technology#Long_Polling>`_,\n`WebSockets <http://en.wikipedia.org/wiki/WebSocket>`_, and other\napplications that require a long-lived connection to each user.\n\nHello, world\n------------\n\nHere is a simple \"Hello, world\" example web app for Tornado:\n\n.. code-block:: python\n\n    import asyncio\n    import tornado\n\n    class MainHandler(tornado.web.RequestHandler):\n        def get(self):\n            self.write(\"Hello, world\")\n\n    def make_app():\n        return tornado.web.Application([\n            (r\"/\", MainHandler),\n        ])\n\n    async def main():\n        app = make_app()\n        app.listen(8888)\n        await asyncio.Event().wait()\n\n    if __name__ == \"__main__\":\n        asyncio.run(main())\n\nThis example does not use any of Tornado's asynchronous features; for\nthat see this `simple chat room\n<https://github.com/tornadoweb/tornado/tree/stable/demos/chat>`_.\n\nDocumentation\n-------------\n\nDocumentation and links to additional resources are available at\nhttps://www.tornadoweb.org\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/tornado-6.3.1.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "tqdm",
        "version": "4.65.0",
        "platform": [
          "any"
        ],
        "summary": "Fast, Extensible Progress Meter",
        "description_content_type": "text/x-rst",
        "keywords": [
          "progressbar",
          "progressmeter",
          "progress",
          "bar",
          "meter",
          "rate",
          "eta",
          "console",
          "terminal",
          "time"
        ],
        "home_page": "https://tqdm.github.io",
        "maintainer": "tqdm developers",
        "maintainer_email": "python.tqdm@gmail.com",
        "license": "MPLv2.0, MIT Licences",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Environment :: Console",
          "Environment :: MacOS X",
          "Environment :: Other Environment",
          "Environment :: Win32 (MS Windows)",
          "Environment :: X11 Applications",
          "Framework :: IPython",
          "Framework :: Jupyter",
          "Intended Audience :: Developers",
          "Intended Audience :: Education",
          "Intended Audience :: End Users/Desktop",
          "Intended Audience :: Other Audience",
          "Intended Audience :: System Administrators",
          "License :: OSI Approved :: MIT License",
          "License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)",
          "Operating System :: MacOS",
          "Operating System :: MacOS :: MacOS X",
          "Operating System :: Microsoft",
          "Operating System :: Microsoft :: MS-DOS",
          "Operating System :: Microsoft :: Windows",
          "Operating System :: POSIX",
          "Operating System :: POSIX :: BSD",
          "Operating System :: POSIX :: BSD :: FreeBSD",
          "Operating System :: POSIX :: Linux",
          "Operating System :: POSIX :: SunOS/Solaris",
          "Operating System :: Unix",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Programming Language :: Python :: 3 :: Only",
          "Programming Language :: Python :: Implementation",
          "Programming Language :: Python :: Implementation :: IronPython",
          "Programming Language :: Python :: Implementation :: PyPy",
          "Programming Language :: Unix Shell",
          "Topic :: Desktop Environment",
          "Topic :: Education :: Computer Aided Instruction (CAI)",
          "Topic :: Education :: Testing",
          "Topic :: Office/Business",
          "Topic :: Other/Nonlisted Topic",
          "Topic :: Software Development :: Build Tools",
          "Topic :: Software Development :: Libraries",
          "Topic :: Software Development :: Libraries :: Python Modules",
          "Topic :: Software Development :: Pre-processors",
          "Topic :: Software Development :: User Interfaces",
          "Topic :: System :: Installation/Setup",
          "Topic :: System :: Logging",
          "Topic :: System :: Monitoring",
          "Topic :: System :: Shells",
          "Topic :: Terminals",
          "Topic :: Utilities"
        ],
        "requires_dist": [
          "colorama ; platform_system == \"Windows\"",
          "py-make (>=0.1.0) ; extra == 'dev'",
          "twine ; extra == 'dev'",
          "wheel ; extra == 'dev'",
          "ipywidgets (>=6) ; extra == 'notebook'",
          "slack-sdk ; extra == 'slack'",
          "requests ; extra == 'telegram'"
        ],
        "requires_python": ">=3.7",
        "project_url": [
          "Changelog, https://tqdm.github.io/releases",
          "Source, https://github.com/tqdm/tqdm",
          "Wiki, https://github.com/tqdm/tqdm/wiki"
        ],
        "provides_extra": [
          "dev",
          "notebook",
          "slack",
          "telegram"
        ],
        "description": "|Logo|\n\ntqdm\n====\n\n|Py-Versions| |Versions| |Conda-Forge-Status| |Docker| |Snapcraft|\n\n|Build-Status| |Coverage-Status| |Branch-Coverage-Status| |Codacy-Grade| |Libraries-Rank| |PyPI-Downloads|\n\n|LICENCE| |OpenHub-Status| |binder-demo| |awesome-python|\n\n``tqdm`` derives from the Arabic word *taqaddum* (تقدّم) which can mean \"progress,\"\nand is an abbreviation for \"I love you so much\" in Spanish (*te quiero demasiado*).\n\nInstantly make your loops show a smart progress meter - just wrap any\niterable with ``tqdm(iterable)``, and you're done!\n\n.. code:: python\n\n    from tqdm import tqdm\n    for i in tqdm(range(10000)):\n        ...\n\n``76%|████████████████████████        | 7568/10000 [00:33<00:10, 229.00it/s]``\n\n``trange(N)`` can be also used as a convenient shortcut for\n``tqdm(range(N))``.\n\n|Screenshot|\n    |Video| |Slides| |Merch|\n\nIt can also be executed as a module with pipes:\n\n.. code:: sh\n\n    $ seq 9999999 | tqdm --bytes | wc -l\n    75.2MB [00:00, 217MB/s]\n    9999999\n\n    $ tar -zcf - docs/ | tqdm --bytes --total `du -sb docs/ | cut -f1` \\\n        > backup.tgz\n     32%|██████████▍                      | 8.89G/27.9G [00:42<01:31, 223MB/s]\n\nOverhead is low -- about 60ns per iteration (80ns with ``tqdm.gui``), and is\nunit tested against performance regression.\nBy comparison, the well-established\n`ProgressBar <https://github.com/niltonvolpato/python-progressbar>`__ has\nan 800ns/iter overhead.\n\nIn addition to its low overhead, ``tqdm`` uses smart algorithms to predict\nthe remaining time and to skip unnecessary iteration displays, which allows\nfor a negligible overhead in most cases.\n\n``tqdm`` works on any platform\n(Linux, Windows, Mac, FreeBSD, NetBSD, Solaris/SunOS),\nin any console or in a GUI, and is also friendly with IPython/Jupyter notebooks.\n\n``tqdm`` does not require any dependencies (not even ``curses``!), just\nPython and an environment supporting ``carriage return \\r`` and\n``line feed \\n`` control characters.\n\n------------------------------------------\n\n.. contents:: Table of contents\n   :backlinks: top\n   :local:\n\n\nInstallation\n------------\n\nLatest PyPI stable release\n~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n|Versions| |PyPI-Downloads| |Libraries-Dependents|\n\n.. code:: sh\n\n    pip install tqdm\n\nLatest development release on GitHub\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n|GitHub-Status| |GitHub-Stars| |GitHub-Commits| |GitHub-Forks| |GitHub-Updated|\n\nPull and install pre-release ``devel`` branch:\n\n.. code:: sh\n\n    pip install \"git+https://github.com/tqdm/tqdm.git@devel#egg=tqdm\"\n\nLatest Conda release\n~~~~~~~~~~~~~~~~~~~~\n\n|Conda-Forge-Status|\n\n.. code:: sh\n\n    conda install -c conda-forge tqdm\n\nLatest Snapcraft release\n~~~~~~~~~~~~~~~~~~~~~~~~\n\n|Snapcraft|\n\nThere are 3 channels to choose from:\n\n.. code:: sh\n\n    snap install tqdm  # implies --stable, i.e. latest tagged release\n    snap install tqdm  --candidate  # master branch\n    snap install tqdm  --edge  # devel branch\n\nNote that ``snap`` binaries are purely for CLI use (not ``import``-able), and\nautomatically set up ``bash`` tab-completion.\n\nLatest Docker release\n~~~~~~~~~~~~~~~~~~~~~\n\n|Docker|\n\n.. code:: sh\n\n    docker pull tqdm/tqdm\n    docker run -i --rm tqdm/tqdm --help\n\nOther\n~~~~~\n\nThere are other (unofficial) places where ``tqdm`` may be downloaded, particularly for CLI use:\n\n|Repology|\n\n.. |Repology| image:: https://repology.org/badge/tiny-repos/python:tqdm.svg\n   :target: https://repology.org/project/python:tqdm/versions\n\nChangelog\n---------\n\nThe list of all changes is available either on GitHub's Releases:\n|GitHub-Status|, on the\n`wiki <https://github.com/tqdm/tqdm/wiki/Releases>`__, or on the\n`website <https://tqdm.github.io/releases>`__.\n\n\nUsage\n-----\n\n``tqdm`` is very versatile and can be used in a number of ways.\nThe three main ones are given below.\n\nIterable-based\n~~~~~~~~~~~~~~\n\nWrap ``tqdm()`` around any iterable:\n\n.. code:: python\n\n    from tqdm import tqdm\n    from time import sleep\n\n    text = \"\"\n    for char in tqdm([\"a\", \"b\", \"c\", \"d\"]):\n        sleep(0.25)\n        text = text + char\n\n``trange(i)`` is a special optimised instance of ``tqdm(range(i))``:\n\n.. code:: python\n\n    from tqdm import trange\n\n    for i in trange(100):\n        sleep(0.01)\n\nInstantiation outside of the loop allows for manual control over ``tqdm()``:\n\n.. code:: python\n\n    pbar = tqdm([\"a\", \"b\", \"c\", \"d\"])\n    for char in pbar:\n        sleep(0.25)\n        pbar.set_description(\"Processing %s\" % char)\n\nManual\n~~~~~~\n\nManual control of ``tqdm()`` updates using a ``with`` statement:\n\n.. code:: python\n\n    with tqdm(total=100) as pbar:\n        for i in range(10):\n            sleep(0.1)\n            pbar.update(10)\n\nIf the optional variable ``total`` (or an iterable with ``len()``) is\nprovided, predictive stats are displayed.\n\n``with`` is also optional (you can just assign ``tqdm()`` to a variable,\nbut in this case don't forget to ``del`` or ``close()`` at the end:\n\n.. code:: python\n\n    pbar = tqdm(total=100)\n    for i in range(10):\n        sleep(0.1)\n        pbar.update(10)\n    pbar.close()\n\nModule\n~~~~~~\n\nPerhaps the most wonderful use of ``tqdm`` is in a script or on the command\nline. Simply inserting ``tqdm`` (or ``python -m tqdm``) between pipes will pass\nthrough all ``stdin`` to ``stdout`` while printing progress to ``stderr``.\n\nThe example below demonstrate counting the number of lines in all Python files\nin the current directory, with timing information included.\n\n.. code:: sh\n\n    $ time find . -name '*.py' -type f -exec cat \\{} \\; | wc -l\n    857365\n\n    real    0m3.458s\n    user    0m0.274s\n    sys     0m3.325s\n\n    $ time find . -name '*.py' -type f -exec cat \\{} \\; | tqdm | wc -l\n    857366it [00:03, 246471.31it/s]\n    857365\n\n    real    0m3.585s\n    user    0m0.862s\n    sys     0m3.358s\n\nNote that the usual arguments for ``tqdm`` can also be specified.\n\n.. code:: sh\n\n    $ find . -name '*.py' -type f -exec cat \\{} \\; |\n        tqdm --unit loc --unit_scale --total 857366 >> /dev/null\n    100%|█████████████████████████████████| 857K/857K [00:04<00:00, 246Kloc/s]\n\nBacking up a large directory?\n\n.. code:: sh\n\n    $ tar -zcf - docs/ | tqdm --bytes --total `du -sb docs/ | cut -f1` \\\n      > backup.tgz\n     44%|██████████████▊                   | 153M/352M [00:14<00:18, 11.0MB/s]\n\nThis can be beautified further:\n\n.. code:: sh\n\n    $ BYTES=\"$(du -sb docs/ | cut -f1)\"\n    $ tar -cf - docs/ \\\n      | tqdm --bytes --total \"$BYTES\" --desc Processing | gzip \\\n      | tqdm --bytes --total \"$BYTES\" --desc Compressed --position 1 \\\n      > ~/backup.tgz\n    Processing: 100%|██████████████████████| 352M/352M [00:14<00:00, 30.2MB/s]\n    Compressed:  42%|█████████▎            | 148M/352M [00:14<00:19, 10.9MB/s]\n\nOr done on a file level using 7-zip:\n\n.. code:: sh\n\n    $ 7z a -bd -r backup.7z docs/ | grep Compressing \\\n      | tqdm --total $(find docs/ -type f | wc -l) --unit files \\\n      | grep -v Compressing\n    100%|██████████████████████████▉| 15327/15327 [01:00<00:00, 712.96files/s]\n\nPre-existing CLI programs already outputting basic progress information will\nbenefit from ``tqdm``'s ``--update`` and ``--update_to`` flags:\n\n.. code:: sh\n\n    $ seq 3 0.1 5 | tqdm --total 5 --update_to --null\n    100%|████████████████████████████████████| 5.0/5 [00:00<00:00, 9673.21it/s]\n    $ seq 10 | tqdm --update --null  # 1 + 2 + ... + 10 = 55 iterations\n    55it [00:00, 90006.52it/s]\n\nFAQ and Known Issues\n--------------------\n\n|GitHub-Issues|\n\nThe most common issues relate to excessive output on multiple lines, instead\nof a neat one-line progress bar.\n\n- Consoles in general: require support for carriage return (``CR``, ``\\r``).\n- Nested progress bars:\n\n  * Consoles in general: require support for moving cursors up to the\n    previous line. For example,\n    `IDLE <https://github.com/tqdm/tqdm/issues/191#issuecomment-230168030>`__,\n    `ConEmu <https://github.com/tqdm/tqdm/issues/254>`__ and\n    `PyCharm <https://github.com/tqdm/tqdm/issues/203>`__ (also\n    `here <https://github.com/tqdm/tqdm/issues/208>`__,\n    `here <https://github.com/tqdm/tqdm/issues/307>`__, and\n    `here <https://github.com/tqdm/tqdm/issues/454#issuecomment-335416815>`__)\n    lack full support.\n  * Windows: additionally may require the Python module ``colorama``\n    to ensure nested bars stay within their respective lines.\n\n- Unicode:\n\n  * Environments which report that they support unicode will have solid smooth\n    progressbars. The fallback is an ``ascii``-only bar.\n  * Windows consoles often only partially support unicode and thus\n    `often require explicit ascii=True <https://github.com/tqdm/tqdm/issues/454#issuecomment-335416815>`__\n    (also `here <https://github.com/tqdm/tqdm/issues/499>`__). This is due to\n    either normal-width unicode characters being incorrectly displayed as\n    \"wide\", or some unicode characters not rendering.\n\n- Wrapping generators:\n\n  * Generator wrapper functions tend to hide the length of iterables.\n    ``tqdm`` does not.\n  * Replace ``tqdm(enumerate(...))`` with ``enumerate(tqdm(...))`` or\n    ``tqdm(enumerate(x), total=len(x), ...)``.\n    The same applies to ``numpy.ndenumerate``.\n  * Replace ``tqdm(zip(a, b))`` with ``zip(tqdm(a), b)`` or even\n    ``zip(tqdm(a), tqdm(b))``.\n  * The same applies to ``itertools``.\n  * Some useful convenience functions can be found under ``tqdm.contrib``.\n\n- `Hanging pipes in python2 <https://github.com/tqdm/tqdm/issues/359>`__:\n  when using ``tqdm`` on the CLI, you may need to use Python 3.5+ for correct\n  buffering.\n- `No intermediate output in docker-compose <https://github.com/tqdm/tqdm/issues/771>`__:\n  use ``docker-compose run`` instead of ``docker-compose up`` and ``tty: true``.\n\nIf you come across any other difficulties, browse and file |GitHub-Issues|.\n\nDocumentation\n-------------\n\n|Py-Versions| |README-Hits| (Since 19 May 2016)\n\n.. code:: python\n\n    class tqdm():\n      \"\"\"\n      Decorate an iterable object, returning an iterator which acts exactly\n      like the original iterable, but prints a dynamically updating\n      progressbar every time a value is requested.\n      \"\"\"\n\n      def __init__(self, iterable=None, desc=None, total=None, leave=True,\n                   file=None, ncols=None, mininterval=0.1,\n                   maxinterval=10.0, miniters=None, ascii=None, disable=False,\n                   unit='it', unit_scale=False, dynamic_ncols=False,\n                   smoothing=0.3, bar_format=None, initial=0, position=None,\n                   postfix=None, unit_divisor=1000):\n\nParameters\n~~~~~~~~~~\n\n* iterable  : iterable, optional  \n    Iterable to decorate with a progressbar.\n    Leave blank to manually manage the updates.\n* desc  : str, optional  \n    Prefix for the progressbar.\n* total  : int or float, optional  \n    The number of expected iterations. If unspecified,\n    len(iterable) is used if possible. If float(\"inf\") or as a last\n    resort, only basic progress statistics are displayed\n    (no ETA, no progressbar).\n    If ``gui`` is True and this parameter needs subsequent updating,\n    specify an initial arbitrary large positive number,\n    e.g. 9e9.\n* leave  : bool, optional  \n    If [default: True], keeps all traces of the progressbar\n    upon termination of iteration.\n    If ``None``, will leave only if ``position`` is ``0``.\n* file  : ``io.TextIOWrapper`` or ``io.StringIO``, optional  \n    Specifies where to output the progress messages\n    (default: sys.stderr). Uses ``file.write(str)`` and ``file.flush()``\n    methods.  For encoding, see ``write_bytes``.\n* ncols  : int, optional  \n    The width of the entire output message. If specified,\n    dynamically resizes the progressbar to stay within this bound.\n    If unspecified, attempts to use environment width. The\n    fallback is a meter width of 10 and no limit for the counter and\n    statistics. If 0, will not print any meter (only stats).\n* mininterval  : float, optional  \n    Minimum progress display update interval [default: 0.1] seconds.\n* maxinterval  : float, optional  \n    Maximum progress display update interval [default: 10] seconds.\n    Automatically adjusts ``miniters`` to correspond to ``mininterval``\n    after long display update lag. Only works if ``dynamic_miniters``\n    or monitor thread is enabled.\n* miniters  : int or float, optional  \n    Minimum progress display update interval, in iterations.\n    If 0 and ``dynamic_miniters``, will automatically adjust to equal\n    ``mininterval`` (more CPU efficient, good for tight loops).\n    If > 0, will skip display of specified number of iterations.\n    Tweak this and ``mininterval`` to get very efficient loops.\n    If your progress is erratic with both fast and slow iterations\n    (network, skipping items, etc) you should set miniters=1.\n* ascii  : bool or str, optional  \n    If unspecified or False, use unicode (smooth blocks) to fill\n    the meter. The fallback is to use ASCII characters \" 123456789#\".\n* disable  : bool, optional  \n    Whether to disable the entire progressbar wrapper\n    [default: False]. If set to None, disable on non-TTY.\n* unit  : str, optional  \n    String that will be used to define the unit of each iteration\n    [default: it].\n* unit_scale  : bool or int or float, optional  \n    If 1 or True, the number of iterations will be reduced/scaled\n    automatically and a metric prefix following the\n    International System of Units standard will be added\n    (kilo, mega, etc.) [default: False]. If any other non-zero\n    number, will scale ``total`` and ``n``.\n* dynamic_ncols  : bool, optional  \n    If set, constantly alters ``ncols`` and ``nrows`` to the\n    environment (allowing for window resizes) [default: False].\n* smoothing  : float, optional  \n    Exponential moving average smoothing factor for speed estimates\n    (ignored in GUI mode). Ranges from 0 (average speed) to 1\n    (current/instantaneous speed) [default: 0.3].\n* bar_format  : str, optional  \n    Specify a custom bar string formatting. May impact performance.\n    [default: '{l_bar}{bar}{r_bar}'], where\n    l_bar='{desc}: {percentage:3.0f}%|' and\n    r_bar='| {n_fmt}/{total_fmt} [{elapsed}<{remaining}, '\n    '{rate_fmt}{postfix}]'\n    Possible vars: l_bar, bar, r_bar, n, n_fmt, total, total_fmt,\n    percentage, elapsed, elapsed_s, ncols, nrows, desc, unit,\n    rate, rate_fmt, rate_noinv, rate_noinv_fmt,\n    rate_inv, rate_inv_fmt, postfix, unit_divisor,\n    remaining, remaining_s, eta.\n    Note that a trailing \": \" is automatically removed after {desc}\n    if the latter is empty.\n* initial  : int or float, optional  \n    The initial counter value. Useful when restarting a progress\n    bar [default: 0]. If using float, consider specifying ``{n:.3f}``\n    or similar in ``bar_format``, or specifying ``unit_scale``.\n* position  : int, optional  \n    Specify the line offset to print this bar (starting from 0)\n    Automatic if unspecified.\n    Useful to manage multiple bars at once (eg, from threads).\n* postfix  : dict or ``*``, optional  \n    Specify additional stats to display at the end of the bar.\n    Calls ``set_postfix(**postfix)`` if possible (dict).\n* unit_divisor  : float, optional  \n    [default: 1000], ignored unless ``unit_scale`` is True.\n* write_bytes  : bool, optional  \n    Whether to write bytes. If (default: False) will write unicode.\n* lock_args  : tuple, optional  \n    Passed to ``refresh`` for intermediate output\n    (initialisation, iterating, and updating).\n* nrows  : int, optional  \n    The screen height. If specified, hides nested bars outside this\n    bound. If unspecified, attempts to use environment height.\n    The fallback is 20.\n* colour  : str, optional  \n    Bar colour (e.g. 'green', '#00ff00').\n* delay  : float, optional  \n    Don't display until [default: 0] seconds have elapsed.\n\nExtra CLI Options\n~~~~~~~~~~~~~~~~~\n\n* delim  : chr, optional  \n    Delimiting character [default: '\\n']. Use '\\0' for null.\n    N.B.: on Windows systems, Python converts '\\n' to '\\r\\n'.\n* buf_size  : int, optional  \n    String buffer size in bytes [default: 256]\n    used when ``delim`` is specified.\n* bytes  : bool, optional  \n    If true, will count bytes, ignore ``delim``, and default\n    ``unit_scale`` to True, ``unit_divisor`` to 1024, and ``unit`` to 'B'.\n* tee  : bool, optional  \n    If true, passes ``stdin`` to both ``stderr`` and ``stdout``.\n* update  : bool, optional  \n    If true, will treat input as newly elapsed iterations,\n    i.e. numbers to pass to ``update()``. Note that this is slow\n    (~2e5 it/s) since every input must be decoded as a number.\n* update_to  : bool, optional  \n    If true, will treat input as total elapsed iterations,\n    i.e. numbers to assign to ``self.n``. Note that this is slow\n    (~2e5 it/s) since every input must be decoded as a number.\n* null  : bool, optional  \n    If true, will discard input (no stdout).\n* manpath  : str, optional  \n    Directory in which to install tqdm man pages.\n* comppath  : str, optional  \n    Directory in which to place tqdm completion.\n* log  : str, optional  \n    CRITICAL|FATAL|ERROR|WARN(ING)|[default: 'INFO']|DEBUG|NOTSET.\n\nReturns\n~~~~~~~\n\n* out  : decorated iterator.  \n\n.. code:: python\n\n    class tqdm():\n      def update(self, n=1):\n          \"\"\"\n          Manually update the progress bar, useful for streams\n          such as reading files.\n          E.g.:\n          >>> t = tqdm(total=filesize) # Initialise\n          >>> for current_buffer in stream:\n          ...    ...\n          ...    t.update(len(current_buffer))\n          >>> t.close()\n          The last line is highly recommended, but possibly not necessary if\n          ``t.update()`` will be called in such a way that ``filesize`` will be\n          exactly reached and printed.\n\n          Parameters\n          ----------\n          n  : int or float, optional\n              Increment to add to the internal counter of iterations\n              [default: 1]. If using float, consider specifying ``{n:.3f}``\n              or similar in ``bar_format``, or specifying ``unit_scale``.\n\n          Returns\n          -------\n          out  : bool or None\n              True if a ``display()`` was triggered.\n          \"\"\"\n\n      def close(self):\n          \"\"\"Cleanup and (if leave=False) close the progressbar.\"\"\"\n\n      def clear(self, nomove=False):\n          \"\"\"Clear current bar display.\"\"\"\n\n      def refresh(self):\n          \"\"\"\n          Force refresh the display of this bar.\n\n          Parameters\n          ----------\n          nolock  : bool, optional\n              If ``True``, does not lock.\n              If [default: ``False``]: calls ``acquire()`` on internal lock.\n          lock_args  : tuple, optional\n              Passed to internal lock's ``acquire()``.\n              If specified, will only ``display()`` if ``acquire()`` returns ``True``.\n          \"\"\"\n\n      def unpause(self):\n          \"\"\"Restart tqdm timer from last print time.\"\"\"\n\n      def reset(self, total=None):\n          \"\"\"\n          Resets to 0 iterations for repeated use.\n\n          Consider combining with ``leave=True``.\n\n          Parameters\n          ----------\n          total  : int or float, optional. Total to use for the new bar.\n          \"\"\"\n\n      def set_description(self, desc=None, refresh=True):\n          \"\"\"\n          Set/modify description of the progress bar.\n\n          Parameters\n          ----------\n          desc  : str, optional\n          refresh  : bool, optional\n              Forces refresh [default: True].\n          \"\"\"\n\n      def set_postfix(self, ordered_dict=None, refresh=True, **tqdm_kwargs):\n          \"\"\"\n          Set/modify postfix (additional stats)\n          with automatic formatting based on datatype.\n\n          Parameters\n          ----------\n          ordered_dict  : dict or OrderedDict, optional\n          refresh  : bool, optional\n              Forces refresh [default: True].\n          kwargs  : dict, optional\n          \"\"\"\n\n      @classmethod\n      def write(cls, s, file=sys.stdout, end=\"\\n\"):\n          \"\"\"Print a message via tqdm (without overlap with bars).\"\"\"\n\n      @property\n      def format_dict(self):\n          \"\"\"Public API for read-only member access.\"\"\"\n\n      def display(self, msg=None, pos=None):\n          \"\"\"\n          Use ``self.sp`` to display ``msg`` in the specified ``pos``.\n\n          Consider overloading this function when inheriting to use e.g.:\n          ``self.some_frontend(**self.format_dict)`` instead of ``self.sp``.\n\n          Parameters\n          ----------\n          msg  : str, optional. What to display (default: ``repr(self)``).\n          pos  : int, optional. Position to ``moveto``\n            (default: ``abs(self.pos)``).\n          \"\"\"\n\n      @classmethod\n      @contextmanager\n      def wrapattr(cls, stream, method, total=None, bytes=True, **tqdm_kwargs):\n          \"\"\"\n          stream  : file-like object.\n          method  : str, \"read\" or \"write\". The result of ``read()`` and\n              the first argument of ``write()`` should have a ``len()``.\n\n          >>> with tqdm.wrapattr(file_obj, \"read\", total=file_obj.size) as fobj:\n          ...     while True:\n          ...         chunk = fobj.read(chunk_size)\n          ...         if not chunk:\n          ...             break\n          \"\"\"\n\n      @classmethod\n      def pandas(cls, *targs, **tqdm_kwargs):\n          \"\"\"Registers the current `tqdm` class with `pandas`.\"\"\"\n\n    def trange(*args, **tqdm_kwargs):\n        \"\"\"Shortcut for `tqdm(range(*args), **tqdm_kwargs)`.\"\"\"\n\nConvenience Functions\n~~~~~~~~~~~~~~~~~~~~~\n\n.. code:: python\n\n    def tqdm.contrib.tenumerate(iterable, start=0, total=None,\n                                tqdm_class=tqdm.auto.tqdm, **tqdm_kwargs):\n        \"\"\"Equivalent of `numpy.ndenumerate` or builtin `enumerate`.\"\"\"\n\n    def tqdm.contrib.tzip(iter1, *iter2plus, **tqdm_kwargs):\n        \"\"\"Equivalent of builtin `zip`.\"\"\"\n\n    def tqdm.contrib.tmap(function, *sequences, **tqdm_kwargs):\n        \"\"\"Equivalent of builtin `map`.\"\"\"\n\nSubmodules\n~~~~~~~~~~\n\n.. code:: python\n\n    class tqdm.notebook.tqdm(tqdm.tqdm):\n        \"\"\"IPython/Jupyter Notebook widget.\"\"\"\n\n    class tqdm.auto.tqdm(tqdm.tqdm):\n        \"\"\"Automatically chooses beween `tqdm.notebook` and `tqdm.tqdm`.\"\"\"\n\n    class tqdm.asyncio.tqdm(tqdm.tqdm):\n      \"\"\"Asynchronous version.\"\"\"\n      @classmethod\n      def as_completed(cls, fs, *, loop=None, timeout=None, total=None,\n                       **tqdm_kwargs):\n          \"\"\"Wrapper for `asyncio.as_completed`.\"\"\"\n\n    class tqdm.gui.tqdm(tqdm.tqdm):\n        \"\"\"Matplotlib GUI version.\"\"\"\n\n    class tqdm.tk.tqdm(tqdm.tqdm):\n        \"\"\"Tkinter GUI version.\"\"\"\n\n    class tqdm.rich.tqdm(tqdm.tqdm):\n        \"\"\"`rich.progress` version.\"\"\"\n\n    class tqdm.keras.TqdmCallback(keras.callbacks.Callback):\n        \"\"\"Keras callback for epoch and batch progress.\"\"\"\n\n    class tqdm.dask.TqdmCallback(dask.callbacks.Callback):\n        \"\"\"Dask callback for task progress.\"\"\"\n\n\n``contrib``\n+++++++++++\n\nThe ``tqdm.contrib`` package also contains experimental modules:\n\n- ``tqdm.contrib.itertools``: Thin wrappers around ``itertools``\n- ``tqdm.contrib.concurrent``: Thin wrappers around ``concurrent.futures``\n- ``tqdm.contrib.slack``: Posts to `Slack <https://slack.com>`__ bots\n- ``tqdm.contrib.discord``: Posts to `Discord <https://discord.com>`__ bots\n- ``tqdm.contrib.telegram``: Posts to `Telegram <https://telegram.org>`__ bots\n- ``tqdm.contrib.bells``: Automagically enables all optional features\n\n  * ``auto``, ``pandas``, ``slack``, ``discord``, ``telegram``\n\nExamples and Advanced Usage\n---------------------------\n\n- See the `examples <https://github.com/tqdm/tqdm/tree/master/examples>`__\n  folder;\n- import the module and run ``help()``;\n- consult the `wiki <https://github.com/tqdm/tqdm/wiki>`__;\n\n  * this has an\n    `excellent article <https://github.com/tqdm/tqdm/wiki/How-to-make-a-great-Progress-Bar>`__\n    on how to make a **great** progressbar;\n\n- check out the `slides from PyData London <https://tqdm.github.io/PyData2019/slides.html>`__, or\n- run the |binder-demo|.\n\nDescription and additional stats\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nCustom information can be displayed and updated dynamically on ``tqdm`` bars\nwith the ``desc`` and ``postfix`` arguments:\n\n.. code:: python\n\n    from tqdm import tqdm, trange\n    from random import random, randint\n    from time import sleep\n\n    with trange(10) as t:\n        for i in t:\n            # Description will be displayed on the left\n            t.set_description('GEN %i' % i)\n            # Postfix will be displayed on the right,\n            # formatted automatically based on argument's datatype\n            t.set_postfix(loss=random(), gen=randint(1,999), str='h',\n                          lst=[1, 2])\n            sleep(0.1)\n\n    with tqdm(total=10, bar_format=\"{postfix[0]} {postfix[1][value]:>8.2g}\",\n              postfix=[\"Batch\", {\"value\": 0}]) as t:\n        for i in range(10):\n            sleep(0.1)\n            t.postfix[1][\"value\"] = i / 2\n            t.update()\n\nPoints to remember when using ``{postfix[...]}`` in the ``bar_format`` string:\n\n- ``postfix`` also needs to be passed as an initial argument in a compatible\n  format, and\n- ``postfix`` will be auto-converted to a string if it is a ``dict``-like\n  object. To prevent this behaviour, insert an extra item into the dictionary\n  where the key is not a string.\n\nAdditional ``bar_format`` parameters may also be defined by overriding\n``format_dict``, and the bar itself may be modified using ``ascii``:\n\n.. code:: python\n\n    from tqdm import tqdm\n    class TqdmExtraFormat(tqdm):\n        \"\"\"Provides a `total_time` format parameter\"\"\"\n        @property\n        def format_dict(self):\n            d = super(TqdmExtraFormat, self).format_dict\n            total_time = d[\"elapsed\"] * (d[\"total\"] or 0) / max(d[\"n\"], 1)\n            d.update(total_time=self.format_interval(total_time) + \" in total\")\n            return d\n\n    for i in TqdmExtraFormat(\n          range(9), ascii=\" .oO0\",\n          bar_format=\"{total_time}: {percentage:.0f}%|{bar}{r_bar}\"):\n        if i == 4:\n            break\n\n.. code::\n\n    00:00 in total: 44%|0000.     | 4/9 [00:00<00:00, 962.93it/s]\n\nNote that ``{bar}`` also supports a format specifier ``[width][type]``.\n\n- ``width``\n\n  * unspecified (default): automatic to fill ``ncols``\n  * ``int >= 0``: fixed width overriding ``ncols`` logic\n  * ``int < 0``: subtract from the automatic default\n\n- ``type``\n\n  * ``a``: ascii (``ascii=True`` override)\n  * ``u``: unicode (``ascii=False`` override)\n  * ``b``: blank (``ascii=\"  \"`` override)\n\nThis means a fixed bar with right-justified text may be created by using:\n``bar_format=\"{l_bar}{bar:10}|{bar:-10b}right-justified\"``\n\nNested progress bars\n~~~~~~~~~~~~~~~~~~~~\n\n``tqdm`` supports nested progress bars. Here's an example:\n\n.. code:: python\n\n    from tqdm.auto import trange\n    from time import sleep\n\n    for i in trange(4, desc='1st loop'):\n        for j in trange(5, desc='2nd loop'):\n            for k in trange(50, desc='3rd loop', leave=False):\n                sleep(0.01)\n\nFor manual control over positioning (e.g. for multi-processing use),\nyou may specify ``position=n`` where ``n=0`` for the outermost bar,\n``n=1`` for the next, and so on.\nHowever, it's best to check if ``tqdm`` can work without manual ``position``\nfirst.\n\n.. code:: python\n\n    from time import sleep\n    from tqdm import trange, tqdm\n    from multiprocessing import Pool, RLock, freeze_support\n\n    L = list(range(9))\n\n    def progresser(n):\n        interval = 0.001 / (n + 2)\n        total = 5000\n        text = \"#{}, est. {:<04.2}s\".format(n, interval * total)\n        for _ in trange(total, desc=text, position=n):\n            sleep(interval)\n\n    if __name__ == '__main__':\n        freeze_support()  # for Windows support\n        tqdm.set_lock(RLock())  # for managing output contention\n        p = Pool(initializer=tqdm.set_lock, initargs=(tqdm.get_lock(),))\n        p.map(progresser, L)\n\nNote that in Python 3, ``tqdm.write`` is thread-safe:\n\n.. code:: python\n\n    from time import sleep\n    from tqdm import tqdm, trange\n    from concurrent.futures import ThreadPoolExecutor\n\n    L = list(range(9))\n\n    def progresser(n):\n        interval = 0.001 / (n + 2)\n        total = 5000\n        text = \"#{}, est. {:<04.2}s\".format(n, interval * total)\n        for _ in trange(total, desc=text):\n            sleep(interval)\n        if n == 6:\n            tqdm.write(\"n == 6 completed.\")\n            tqdm.write(\"`tqdm.write()` is thread-safe in py3!\")\n\n    if __name__ == '__main__':\n        with ThreadPoolExecutor() as p:\n            p.map(progresser, L)\n\nHooks and callbacks\n~~~~~~~~~~~~~~~~~~~\n\n``tqdm`` can easily support callbacks/hooks and manual updates.\nHere's an example with ``urllib``:\n\n**``urllib.urlretrieve`` documentation**\n\n    | [...]\n    | If present, the hook function will be called once\n    | on establishment of the network connection and once after each block read\n    | thereafter. The hook will be passed three arguments; a count of blocks\n    | transferred so far, a block size in bytes, and the total size of the file.\n    | [...]\n\n.. code:: python\n\n    import urllib, os\n    from tqdm import tqdm\n    urllib = getattr(urllib, 'request', urllib)\n\n    class TqdmUpTo(tqdm):\n        \"\"\"Provides `update_to(n)` which uses `tqdm.update(delta_n)`.\"\"\"\n        def update_to(self, b=1, bsize=1, tsize=None):\n            \"\"\"\n            b  : int, optional\n                Number of blocks transferred so far [default: 1].\n            bsize  : int, optional\n                Size of each block (in tqdm units) [default: 1].\n            tsize  : int, optional\n                Total size (in tqdm units). If [default: None] remains unchanged.\n            \"\"\"\n            if tsize is not None:\n                self.total = tsize\n            return self.update(b * bsize - self.n)  # also sets self.n = b * bsize\n\n    eg_link = \"https://caspersci.uk.to/matryoshka.zip\"\n    with TqdmUpTo(unit='B', unit_scale=True, unit_divisor=1024, miniters=1,\n                  desc=eg_link.split('/')[-1]) as t:  # all optional kwargs\n        urllib.urlretrieve(eg_link, filename=os.devnull,\n                           reporthook=t.update_to, data=None)\n        t.total = t.n\n\nInspired by `twine#242 <https://github.com/pypa/twine/pull/242>`__.\nFunctional alternative in\n`examples/tqdm_wget.py <https://github.com/tqdm/tqdm/blob/master/examples/tqdm_wget.py>`__.\n\nIt is recommend to use ``miniters=1`` whenever there is potentially\nlarge differences in iteration speed (e.g. downloading a file over\na patchy connection).\n\n**Wrapping read/write methods**\n\nTo measure throughput through a file-like object's ``read`` or ``write``\nmethods, use ``CallbackIOWrapper``:\n\n.. code:: python\n\n    from tqdm.auto import tqdm\n    from tqdm.utils import CallbackIOWrapper\n\n    with tqdm(total=file_obj.size,\n              unit='B', unit_scale=True, unit_divisor=1024) as t:\n        fobj = CallbackIOWrapper(t.update, file_obj, \"read\")\n        while True:\n            chunk = fobj.read(chunk_size)\n            if not chunk:\n                break\n        t.reset()\n        # ... continue to use `t` for something else\n\nAlternatively, use the even simpler ``wrapattr`` convenience function,\nwhich would condense both the ``urllib`` and ``CallbackIOWrapper`` examples\ndown to:\n\n.. code:: python\n\n    import urllib, os\n    from tqdm import tqdm\n\n    eg_link = \"https://caspersci.uk.to/matryoshka.zip\"\n    response = getattr(urllib, 'request', urllib).urlopen(eg_link)\n    with tqdm.wrapattr(open(os.devnull, \"wb\"), \"write\",\n                       miniters=1, desc=eg_link.split('/')[-1],\n                       total=getattr(response, 'length', None)) as fout:\n        for chunk in response:\n            fout.write(chunk)\n\nThe ``requests`` equivalent is nearly identical:\n\n.. code:: python\n\n    import requests, os\n    from tqdm import tqdm\n\n    eg_link = \"https://caspersci.uk.to/matryoshka.zip\"\n    response = requests.get(eg_link, stream=True)\n    with tqdm.wrapattr(open(os.devnull, \"wb\"), \"write\",\n                       miniters=1, desc=eg_link.split('/')[-1],\n                       total=int(response.headers.get('content-length', 0))) as fout:\n        for chunk in response.iter_content(chunk_size=4096):\n            fout.write(chunk)\n\n**Custom callback**\n\n``tqdm`` is known for intelligently skipping unnecessary displays. To make a\ncustom callback take advantage of this, simply use the return value of\n``update()``. This is set to ``True`` if a ``display()`` was triggered.\n\n.. code:: python\n\n    from tqdm.auto import tqdm as std_tqdm\n\n    def external_callback(*args, **kwargs):\n        ...\n\n    class TqdmExt(std_tqdm):\n        def update(self, n=1):\n            displayed = super(TqdmExt, self).update(n)\n            if displayed:\n                external_callback(**self.format_dict)\n            return displayed\n\n``asyncio``\n~~~~~~~~~~~\n\nNote that ``break`` isn't currently caught by asynchronous iterators.\nThis means that ``tqdm`` cannot clean up after itself in this case:\n\n.. code:: python\n\n    from tqdm.asyncio import tqdm\n\n    async for i in tqdm(range(9)):\n        if i == 2:\n            break\n\nInstead, either call ``pbar.close()`` manually or use the context manager syntax:\n\n.. code:: python\n\n    from tqdm.asyncio import tqdm\n\n    with tqdm(range(9)) as pbar:\n        async for i in pbar:\n            if i == 2:\n                break\n\nPandas Integration\n~~~~~~~~~~~~~~~~~~\n\nDue to popular demand we've added support for ``pandas`` -- here's an example\nfor ``DataFrame.progress_apply`` and ``DataFrameGroupBy.progress_apply``:\n\n.. code:: python\n\n    import pandas as pd\n    import numpy as np\n    from tqdm import tqdm\n\n    df = pd.DataFrame(np.random.randint(0, 100, (100000, 6)))\n\n    # Register `pandas.progress_apply` and `pandas.Series.map_apply` with `tqdm`\n    # (can use `tqdm.gui.tqdm`, `tqdm.notebook.tqdm`, optional kwargs, etc.)\n    tqdm.pandas(desc=\"my bar!\")\n\n    # Now you can use `progress_apply` instead of `apply`\n    # and `progress_map` instead of `map`\n    df.progress_apply(lambda x: x**2)\n    # can also groupby:\n    # df.groupby(0).progress_apply(lambda x: x**2)\n\nIn case you're interested in how this works (and how to modify it for your\nown callbacks), see the\n`examples <https://github.com/tqdm/tqdm/tree/master/examples>`__\nfolder or import the module and run ``help()``.\n\nKeras Integration\n~~~~~~~~~~~~~~~~~\n\nA ``keras`` callback is also available:\n\n.. code:: python\n\n    from tqdm.keras import TqdmCallback\n\n    ...\n\n    model.fit(..., verbose=0, callbacks=[TqdmCallback()])\n\nDask Integration\n~~~~~~~~~~~~~~~~\n\nA ``dask`` callback is also available:\n\n.. code:: python\n\n    from tqdm.dask import TqdmCallback\n\n    with TqdmCallback(desc=\"compute\"):\n        ...\n        arr.compute()\n\n    # or use callback globally\n    cb = TqdmCallback(desc=\"global\")\n    cb.register()\n    arr.compute()\n\nIPython/Jupyter Integration\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nIPython/Jupyter is supported via the ``tqdm.notebook`` submodule:\n\n.. code:: python\n\n    from tqdm.notebook import trange, tqdm\n    from time import sleep\n\n    for i in trange(3, desc='1st loop'):\n        for j in tqdm(range(100), desc='2nd loop'):\n            sleep(0.01)\n\nIn addition to ``tqdm`` features, the submodule provides a native Jupyter\nwidget (compatible with IPython v1-v4 and Jupyter), fully working nested bars\nand colour hints (blue: normal, green: completed, red: error/interrupt,\nlight blue: no ETA); as demonstrated below.\n\n|Screenshot-Jupyter1|\n|Screenshot-Jupyter2|\n|Screenshot-Jupyter3|\n\nThe ``notebook`` version supports percentage or pixels for overall width\n(e.g.: ``ncols='100%'`` or ``ncols='480px'``).\n\nIt is also possible to let ``tqdm`` automatically choose between\nconsole or notebook versions by using the ``autonotebook`` submodule:\n\n.. code:: python\n\n    from tqdm.autonotebook import tqdm\n    tqdm.pandas()\n\nNote that this will issue a ``TqdmExperimentalWarning`` if run in a notebook\nsince it is not meant to be possible to distinguish between ``jupyter notebook``\nand ``jupyter console``. Use ``auto`` instead of ``autonotebook`` to suppress\nthis warning.\n\nNote that notebooks will display the bar in the cell where it was created.\nThis may be a different cell from the one where it is used.\nIf this is not desired, either\n\n- delay the creation of the bar to the cell where it must be displayed, or\n- create the bar with ``display=False``, and in a later cell call\n  ``display(bar.container)``:\n\n.. code:: python\n\n    from tqdm.notebook import tqdm\n    pbar = tqdm(..., display=False)\n\n.. code:: python\n\n    # different cell\n    display(pbar.container)\n\nThe ``keras`` callback has a ``display()`` method which can be used likewise:\n\n.. code:: python\n\n    from tqdm.keras import TqdmCallback\n    cbk = TqdmCallback(display=False)\n\n.. code:: python\n\n    # different cell\n    cbk.display()\n    model.fit(..., verbose=0, callbacks=[cbk])\n\nAnother possibility is to have a single bar (near the top of the notebook)\nwhich is constantly re-used (using ``reset()`` rather than ``close()``).\nFor this reason, the notebook version (unlike the CLI version) does not\nautomatically call ``close()`` upon ``Exception``.\n\n.. code:: python\n\n    from tqdm.notebook import tqdm\n    pbar = tqdm()\n\n.. code:: python\n\n    # different cell\n    iterable = range(100)\n    pbar.reset(total=len(iterable))  # initialise with new `total`\n    for i in iterable:\n        pbar.update()\n    pbar.refresh()  # force print final status but don't `close()`\n\nCustom Integration\n~~~~~~~~~~~~~~~~~~\n\nTo change the default arguments (such as making ``dynamic_ncols=True``),\nsimply use built-in Python magic:\n\n.. code:: python\n\n    from functools import partial\n    from tqdm import tqdm as std_tqdm\n    tqdm = partial(std_tqdm, dynamic_ncols=True)\n\nFor further customisation,\n``tqdm`` may be inherited from to create custom callbacks (as with the\n``TqdmUpTo`` example `above <#hooks-and-callbacks>`__) or for custom frontends\n(e.g. GUIs such as notebook or plotting packages). In the latter case:\n\n1. ``def __init__()`` to call ``super().__init__(..., gui=True)`` to disable\n   terminal ``status_printer`` creation.\n2. Redefine: ``close()``, ``clear()``, ``display()``.\n\nConsider overloading ``display()`` to use e.g.\n``self.frontend(**self.format_dict)`` instead of ``self.sp(repr(self))``.\n\nSome submodule examples of inheritance:\n\n- `tqdm/notebook.py <https://github.com/tqdm/tqdm/blob/master/tqdm/notebook.py>`__\n- `tqdm/gui.py <https://github.com/tqdm/tqdm/blob/master/tqdm/gui.py>`__\n- `tqdm/tk.py <https://github.com/tqdm/tqdm/blob/master/tqdm/tk.py>`__\n- `tqdm/contrib/slack.py <https://github.com/tqdm/tqdm/blob/master/tqdm/contrib/slack.py>`__\n- `tqdm/contrib/discord.py <https://github.com/tqdm/tqdm/blob/master/tqdm/contrib/discord.py>`__\n- `tqdm/contrib/telegram.py <https://github.com/tqdm/tqdm/blob/master/tqdm/contrib/telegram.py>`__\n\nDynamic Monitor/Meter\n~~~~~~~~~~~~~~~~~~~~~\n\nYou can use a ``tqdm`` as a meter which is not monotonically increasing.\nThis could be because ``n`` decreases (e.g. a CPU usage monitor) or ``total``\nchanges.\n\nOne example would be recursively searching for files. The ``total`` is the\nnumber of objects found so far, while ``n`` is the number of those objects which\nare files (rather than folders):\n\n.. code:: python\n\n    from tqdm import tqdm\n    import os.path\n\n    def find_files_recursively(path, show_progress=True):\n        files = []\n        # total=1 assumes `path` is a file\n        t = tqdm(total=1, unit=\"file\", disable=not show_progress)\n        if not os.path.exists(path):\n            raise IOError(\"Cannot find:\" + path)\n\n        def append_found_file(f):\n            files.append(f)\n            t.update()\n\n        def list_found_dir(path):\n            \"\"\"returns os.listdir(path) assuming os.path.isdir(path)\"\"\"\n            listing = os.listdir(path)\n            # subtract 1 since a \"file\" we found was actually this directory\n            t.total += len(listing) - 1\n            # fancy way to give info without forcing a refresh\n            t.set_postfix(dir=path[-10:], refresh=False)\n            t.update(0)  # may trigger a refresh\n            return listing\n\n        def recursively_search(path):\n            if os.path.isdir(path):\n                for f in list_found_dir(path):\n                    recursively_search(os.path.join(path, f))\n            else:\n                append_found_file(path)\n\n        recursively_search(path)\n        t.set_postfix(dir=path)\n        t.close()\n        return files\n\nUsing ``update(0)`` is a handy way to let ``tqdm`` decide when to trigger a\ndisplay refresh to avoid console spamming.\n\nWriting messages\n~~~~~~~~~~~~~~~~\n\nThis is a work in progress (see\n`#737 <https://github.com/tqdm/tqdm/issues/737>`__).\n\nSince ``tqdm`` uses a simple printing mechanism to display progress bars,\nyou should not write any message in the terminal using ``print()`` while\na progressbar is open.\n\nTo write messages in the terminal without any collision with ``tqdm`` bar\ndisplay, a ``.write()`` method is provided:\n\n.. code:: python\n\n    from tqdm.auto import tqdm, trange\n    from time import sleep\n\n    bar = trange(10)\n    for i in bar:\n        # Print using tqdm class method .write()\n        sleep(0.1)\n        if not (i % 3):\n            tqdm.write(\"Done task %i\" % i)\n        # Can also use bar.write()\n\nBy default, this will print to standard output ``sys.stdout``. but you can\nspecify any file-like object using the ``file`` argument. For example, this\ncan be used to redirect the messages writing to a log file or class.\n\nRedirecting writing\n~~~~~~~~~~~~~~~~~~~\n\nIf using a library that can print messages to the console, editing the library\nby  replacing ``print()`` with ``tqdm.write()`` may not be desirable.\nIn that case, redirecting ``sys.stdout`` to ``tqdm.write()`` is an option.\n\nTo redirect ``sys.stdout``, create a file-like class that will write\nany input string to ``tqdm.write()``, and supply the arguments\n``file=sys.stdout, dynamic_ncols=True``.\n\nA reusable canonical example is given below:\n\n.. code:: python\n\n    from time import sleep\n    import contextlib\n    import sys\n    from tqdm import tqdm\n    from tqdm.contrib import DummyTqdmFile\n\n\n    @contextlib.contextmanager\n    def std_out_err_redirect_tqdm():\n        orig_out_err = sys.stdout, sys.stderr\n        try:\n            sys.stdout, sys.stderr = map(DummyTqdmFile, orig_out_err)\n            yield orig_out_err[0]\n        # Relay exceptions\n        except Exception as exc:\n            raise exc\n        # Always restore sys.stdout/err if necessary\n        finally:\n            sys.stdout, sys.stderr = orig_out_err\n\n    def some_fun(i):\n        print(\"Fee, fi, fo,\".split()[i])\n\n    # Redirect stdout to tqdm.write() (don't forget the `as save_stdout`)\n    with std_out_err_redirect_tqdm() as orig_stdout:\n        # tqdm needs the original stdout\n        # and dynamic_ncols=True to autodetect console width\n        for i in tqdm(range(3), file=orig_stdout, dynamic_ncols=True):\n            sleep(.5)\n            some_fun(i)\n\n    # After the `with`, printing is restored\n    print(\"Done!\")\n\nRedirecting ``logging``\n~~~~~~~~~~~~~~~~~~~~~~~\n\nSimilar to ``sys.stdout``/``sys.stderr`` as detailed above, console ``logging``\nmay also be redirected to ``tqdm.write()``.\n\nWarning: if also redirecting ``sys.stdout``/``sys.stderr``, make sure to\nredirect ``logging`` first if needed.\n\nHelper methods are available in ``tqdm.contrib.logging``. For example:\n\n.. code:: python\n\n    import logging\n    from tqdm import trange\n    from tqdm.contrib.logging import logging_redirect_tqdm\n\n    LOG = logging.getLogger(__name__)\n\n    if __name__ == '__main__':\n        logging.basicConfig(level=logging.INFO)\n        with logging_redirect_tqdm():\n            for i in trange(9):\n                if i == 4:\n                    LOG.info(\"console logging redirected to `tqdm.write()`\")\n        # logging restored\n\nMonitoring thread, intervals and miniters\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n``tqdm`` implements a few tricks to increase efficiency and reduce overhead.\n\n- Avoid unnecessary frequent bar refreshing: ``mininterval`` defines how long\n  to wait between each refresh. ``tqdm`` always gets updated in the background,\n  but it will display only every ``mininterval``.\n- Reduce number of calls to check system clock/time.\n- ``mininterval`` is more intuitive to configure than ``miniters``.\n  A clever adjustment system ``dynamic_miniters`` will automatically adjust\n  ``miniters`` to the amount of iterations that fit into time ``mininterval``.\n  Essentially, ``tqdm`` will check if it's time to print without actually\n  checking time. This behaviour can be still be bypassed by manually setting\n  ``miniters``.\n\nHowever, consider a case with a combination of fast and slow iterations.\nAfter a few fast iterations, ``dynamic_miniters`` will set ``miniters`` to a\nlarge number. When iteration rate subsequently slows, ``miniters`` will\nremain large and thus reduce display update frequency. To address this:\n\n- ``maxinterval`` defines the maximum time between display refreshes.\n  A concurrent monitoring thread checks for overdue updates and forces one\n  where necessary.\n\nThe monitoring thread should not have a noticeable overhead, and guarantees\nupdates at least every 10 seconds by default.\nThis value can be directly changed by setting the ``monitor_interval`` of\nany ``tqdm`` instance (i.e. ``t = tqdm.tqdm(...); t.monitor_interval = 2``).\nThe monitor thread may be disabled application-wide by setting\n``tqdm.tqdm.monitor_interval = 0`` before instantiation of any ``tqdm`` bar.\n\n\nMerch\n-----\n\nYou can buy `tqdm branded merch <https://tqdm.github.io/merch>`__ now!\n\nContributions\n-------------\n\n|GitHub-Commits| |GitHub-Issues| |GitHub-PRs| |OpenHub-Status| |GitHub-Contributions| |CII Best Practices|\n\nAll source code is hosted on `GitHub <https://github.com/tqdm/tqdm>`__.\nContributions are welcome.\n\nSee the\n`CONTRIBUTING <https://github.com/tqdm/tqdm/blob/master/CONTRIBUTING.md>`__\nfile for more information.\n\nDevelopers who have made significant contributions, ranked by *SLoC*\n(surviving lines of code,\n`git fame <https://github.com/casperdcl/git-fame>`__ ``-wMC --excl '\\.(png|gif|jpg)$'``),\nare:\n\n==================== ======================================================== ==== ================================\nName                 ID                                                       SLoC Notes\n==================== ======================================================== ==== ================================\nCasper da Costa-Luis `casperdcl <https://github.com/casperdcl>`__             ~78% primary maintainer |Gift-Casper|\nStephen Larroque     `lrq3000 <https://github.com/lrq3000>`__                 ~10% team member\nMartin Zugnoni       `martinzugnoni <https://github.com/martinzugnoni>`__     ~4%\nDaniel Ecer          `de-code <https://github.com/de-code>`__                 ~2%\nRichard Sheridan     `richardsheridan <https://github.com/richardsheridan>`__ ~1%\nGuangshuo Chen       `chengs <https://github.com/chengs>`__                   ~1%\nKyle Altendorf       `altendky <https://github.com/altendky>`__               <1%\nMatthew Stevens      `mjstevens777 <https://github.com/mjstevens777>`__       <1%\nHadrien Mary         `hadim <https://github.com/hadim>`__                     <1%  team member\nNoam Yorav-Raphael   `noamraph <https://github.com/noamraph>`__               <1%  original author\nMikhail Korobov      `kmike <https://github.com/kmike>`__                     <1%  team member\n==================== ======================================================== ==== ================================\n\nPorts to Other Languages\n~~~~~~~~~~~~~~~~~~~~~~~~\n\nA list is available on\n`this wiki page <https://github.com/tqdm/tqdm/wiki/tqdm-ports>`__.\n\n\nLICENCE\n-------\n\nOpen Source (OSI approved): |LICENCE|\n\nCitation information: |DOI|\n\n|README-Hits| (Since 19 May 2016)\n\n.. |Logo| image:: https://img.tqdm.ml/logo.gif\n.. |Screenshot| image:: https://img.tqdm.ml/tqdm.gif\n.. |Video| image:: https://img.tqdm.ml/video.jpg\n   :target: https://tqdm.github.io/video\n.. |Slides| image:: https://img.tqdm.ml/slides.jpg\n   :target: https://tqdm.github.io/PyData2019/slides.html\n.. |Merch| image:: https://img.tqdm.ml/merch.jpg\n   :target: https://tqdm.github.io/merch\n.. |Build-Status| image:: https://img.shields.io/github/actions/workflow/status/tqdm/tqdm/test.yml?branch=master&label=tqdm&logo=GitHub\n   :target: https://github.com/tqdm/tqdm/actions/workflows/test.yml\n.. |Coverage-Status| image:: https://img.shields.io/coveralls/github/tqdm/tqdm/master?logo=coveralls\n   :target: https://coveralls.io/github/tqdm/tqdm\n.. |Branch-Coverage-Status| image:: https://codecov.io/gh/tqdm/tqdm/branch/master/graph/badge.svg\n   :target: https://codecov.io/gh/tqdm/tqdm\n.. |Codacy-Grade| image:: https://app.codacy.com/project/badge/Grade/3f965571598f44549c7818f29cdcf177\n   :target: https://www.codacy.com/gh/tqdm/tqdm/dashboard\n.. |CII Best Practices| image:: https://bestpractices.coreinfrastructure.org/projects/3264/badge\n   :target: https://bestpractices.coreinfrastructure.org/projects/3264\n.. |GitHub-Status| image:: https://img.shields.io/github/tag/tqdm/tqdm.svg?maxAge=86400&logo=github&logoColor=white\n   :target: https://github.com/tqdm/tqdm/releases\n.. |GitHub-Forks| image:: https://img.shields.io/github/forks/tqdm/tqdm.svg?logo=github&logoColor=white\n   :target: https://github.com/tqdm/tqdm/network\n.. |GitHub-Stars| image:: https://img.shields.io/github/stars/tqdm/tqdm.svg?logo=github&logoColor=white\n   :target: https://github.com/tqdm/tqdm/stargazers\n.. |GitHub-Commits| image:: https://img.shields.io/github/commit-activity/y/tqdm/tqdm.svg?logo=git&logoColor=white\n   :target: https://github.com/tqdm/tqdm/graphs/commit-activity\n.. |GitHub-Issues| image:: https://img.shields.io/github/issues-closed/tqdm/tqdm.svg?logo=github&logoColor=white\n   :target: https://github.com/tqdm/tqdm/issues?q=\n.. |GitHub-PRs| image:: https://img.shields.io/github/issues-pr-closed/tqdm/tqdm.svg?logo=github&logoColor=white\n   :target: https://github.com/tqdm/tqdm/pulls\n.. |GitHub-Contributions| image:: https://img.shields.io/github/contributors/tqdm/tqdm.svg?logo=github&logoColor=white\n   :target: https://github.com/tqdm/tqdm/graphs/contributors\n.. |GitHub-Updated| image:: https://img.shields.io/github/last-commit/tqdm/tqdm/master.svg?logo=github&logoColor=white&label=pushed\n   :target: https://github.com/tqdm/tqdm/pulse\n.. |Gift-Casper| image:: https://img.shields.io/badge/dynamic/json.svg?color=ff69b4&label=gifts%20received&prefix=%C2%A3&query=%24..sum&url=https%3A%2F%2Fcaspersci.uk.to%2Fgifts.json\n   :target: https://cdcl.ml/sponsor\n.. |Versions| image:: https://img.shields.io/pypi/v/tqdm.svg\n   :target: https://tqdm.github.io/releases\n.. |PyPI-Downloads| image:: https://img.shields.io/pypi/dm/tqdm.svg?label=pypi%20downloads&logo=PyPI&logoColor=white\n   :target: https://pepy.tech/project/tqdm\n.. |Py-Versions| image:: https://img.shields.io/pypi/pyversions/tqdm.svg?logo=python&logoColor=white\n   :target: https://pypi.org/project/tqdm\n.. |Conda-Forge-Status| image:: https://img.shields.io/conda/v/conda-forge/tqdm.svg?label=conda-forge&logo=conda-forge\n   :target: https://anaconda.org/conda-forge/tqdm\n.. |Snapcraft| image:: https://img.shields.io/badge/snap-install-82BEA0.svg?logo=snapcraft\n   :target: https://snapcraft.io/tqdm\n.. |Docker| image:: https://img.shields.io/badge/docker-pull-blue.svg?logo=docker&logoColor=white\n   :target: https://hub.docker.com/r/tqdm/tqdm\n.. |Libraries-Rank| image:: https://img.shields.io/librariesio/sourcerank/pypi/tqdm.svg?logo=koding&logoColor=white\n   :target: https://libraries.io/pypi/tqdm\n.. |Libraries-Dependents| image:: https://img.shields.io/librariesio/dependent-repos/pypi/tqdm.svg?logo=koding&logoColor=white\n    :target: https://github.com/tqdm/tqdm/network/dependents\n.. |OpenHub-Status| image:: https://www.openhub.net/p/tqdm/widgets/project_thin_badge?format=gif\n   :target: https://www.openhub.net/p/tqdm?ref=Thin+badge\n.. |awesome-python| image:: https://awesome.re/mentioned-badge.svg\n   :target: https://github.com/vinta/awesome-python\n.. |LICENCE| image:: https://img.shields.io/pypi/l/tqdm.svg\n   :target: https://raw.githubusercontent.com/tqdm/tqdm/master/LICENCE\n.. |DOI| image:: https://img.shields.io/badge/DOI-10.5281/zenodo.595120-blue.svg\n   :target: https://doi.org/10.5281/zenodo.595120\n.. |binder-demo| image:: https://mybinder.org/badge_logo.svg\n   :target: https://mybinder.org/v2/gh/tqdm/tqdm/master?filepath=DEMO.ipynb\n.. |Screenshot-Jupyter1| image:: https://img.tqdm.ml/jupyter-1.gif\n.. |Screenshot-Jupyter2| image:: https://img.tqdm.ml/jupyter-2.gif\n.. |Screenshot-Jupyter3| image:: https://img.tqdm.ml/jupyter-3.gif\n.. |README-Hits| image:: https://caspersci.uk.to/cgi-bin/hits.cgi?q=tqdm&style=social&r=https://github.com/tqdm/tqdm&l=https://img.tqdm.ml/favicon.png&f=https://img.tqdm.ml/logo.gif\n   :target: https://caspersci.uk.to/cgi-bin/hits.cgi?q=tqdm&a=plot&r=https://github.com/tqdm/tqdm&l=https://img.tqdm.ml/favicon.png&f=https://img.tqdm.ml/logo.gif&style=social\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/tqdm-4.65.0.dist-info",
      "installer": "pip",
      "requested": true
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "tritonclient",
        "version": "2.33.0",
        "summary": "Python client library and utilities for communicating with Triton Inference Server",
        "description_content_type": "text/markdown",
        "keywords": [
          "grpc",
          "http",
          "triton",
          "tensorrt",
          "inference",
          "server",
          "service",
          "client",
          "nvidia"
        ],
        "home_page": "https://developer.nvidia.com/nvidia-triton-inference-server",
        "author": "NVIDIA Inc.",
        "author_email": "sw-dl-triton@nvidia.com",
        "license": "BSD",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Intended Audience :: Developers",
          "Intended Audience :: Science/Research",
          "Intended Audience :: Information Technology",
          "Topic :: Scientific/Engineering",
          "Topic :: Scientific/Engineering :: Image Recognition",
          "Topic :: Scientific/Engineering :: Artificial Intelligence",
          "Topic :: Software Development :: Libraries",
          "Topic :: Utilities",
          "License :: OSI Approved :: BSD License",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Environment :: Console",
          "Natural Language :: English",
          "Operating System :: OS Independent"
        ],
        "requires_dist": [
          "numpy (>=1.19.1)",
          "python-rapidjson (>=0.9.1)",
          "protobuf (<4,>=3.5.0) ; extra == 'all'",
          "grpcio (>=1.41.0) ; extra == 'all'",
          "packaging (>=14.1) ; extra == 'all'",
          "numpy (>=1.19.1) ; extra == 'all'",
          "python-rapidjson (>=0.9.1) ; extra == 'all'",
          "geventhttpclient (<=2.0.2,>=1.4.4) ; extra == 'all'",
          "aiohttp (>=3.8.1) ; extra == 'all'",
          "protobuf (<4,>=3.5.0) ; extra == 'grpc'",
          "grpcio (>=1.41.0) ; extra == 'grpc'",
          "packaging (>=14.1) ; extra == 'grpc'",
          "numpy (>=1.19.1) ; extra == 'grpc'",
          "python-rapidjson (>=0.9.1) ; extra == 'grpc'",
          "geventhttpclient (<=2.0.2,>=1.4.4) ; extra == 'http'",
          "aiohttp (>=3.8.1) ; extra == 'http'",
          "numpy (>=1.19.1) ; extra == 'http'",
          "python-rapidjson (>=0.9.1) ; extra == 'http'"
        ],
        "provides_extra": [
          "all",
          "grpc",
          "http"
        ],
        "description": "See [download-using-python-package-installer-pip](https://github.com/triton-inference-server/client/tree/main#download-using-python-package-installer-pip) for package details.\n\nThe [client examples](https://github.com/triton-inference-server/client/tree/main/src/python/examples) demonstrate how to use the package to issue request to [triton inference server](https://github.com/triton-inference-server/server).\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/tritonclient-2.33.0.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "typing_extensions",
        "version": "4.5.0",
        "summary": "Backported and Experimental Type Hints for Python 3.7+",
        "description_content_type": "text/markdown",
        "keywords": [
          "annotations",
          "backport",
          "checker",
          "checking",
          "function",
          "hinting",
          "hints",
          "type",
          "typechecking",
          "typehinting",
          "typehints",
          "typing"
        ],
        "author_email": "\"Guido van Rossum, Jukka Lehtosalo, Łukasz Langa, Michael Lee\" <levkivskyi@gmail.com>",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Environment :: Console",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: Python Software Foundation License",
          "Operating System :: OS Independent",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3 :: Only",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Topic :: Software Development"
        ],
        "requires_python": ">=3.7",
        "project_url": [
          "Bug Tracker, https://github.com/python/typing_extensions/issues",
          "Changes, https://github.com/python/typing_extensions/blob/main/CHANGELOG.md",
          "Documentation, https://typing.readthedocs.io/",
          "Home, https://github.com/python/typing_extensions",
          "Q & A, https://github.com/python/typing/discussions",
          "Repository, https://github.com/python/typing_extensions"
        ],
        "description": "# Typing Extensions\n\n[![Chat at https://gitter.im/python/typing](https://badges.gitter.im/python/typing.svg)](https://gitter.im/python/typing)\n\n## Overview\n\nThe `typing_extensions` module serves two related purposes:\n\n- Enable use of new type system features on older Python versions. For example,\n  `typing.TypeGuard` is new in Python 3.10, but `typing_extensions` allows\n  users on previous Python versions to use it too.\n- Enable experimentation with new type system PEPs before they are accepted and\n  added to the `typing` module.\n\nNew features may be added to `typing_extensions` as soon as they are specified\nin a PEP that has been added to the [python/peps](https://github.com/python/peps)\nrepository. If the PEP is accepted, the feature will then be added to `typing`\nfor the next CPython release. No typing PEP has been rejected so far, so we\nhaven't yet figured out how to deal with that possibility.\n\nStarting with version 4.0.0, `typing_extensions` uses\n[Semantic Versioning](https://semver.org/). The\nmajor version is incremented for all backwards-incompatible changes.\nTherefore, it's safe to depend\non `typing_extensions` like this: `typing_extensions >=x.y, <(x+1)`,\nwhere `x.y` is the first version that includes all features you need.\n\n`typing_extensions` supports Python versions 3.7 and higher. In the future,\nsupport for older Python versions will be dropped some time after that version\nreaches end of life.\n\n## Included items\n\nThis module currently contains the following:\n\n- Experimental features\n\n  - `override` (see [PEP 698](https://peps.python.org/pep-0698/))\n  - The `default=` argument to `TypeVar`, `ParamSpec`, and `TypeVarTuple` (see [PEP 696](https://peps.python.org/pep-0696/))\n  - The `infer_variance=` argument to `TypeVar` (see [PEP 695](https://peps.python.org/pep-0695/))\n  - The `@deprecated` decorator (see [PEP 702](https://peps.python.org/pep-0702/))\n\n- In `typing` since Python 3.11\n\n  - `assert_never`\n  - `assert_type`\n  - `clear_overloads`\n  - `@dataclass_transform()` (see [PEP 681](https://peps.python.org/pep-0681/))\n  - `get_overloads`\n  - `LiteralString` (see [PEP 675](https://peps.python.org/pep-0675/))\n  - `Never`\n  - `NotRequired` (see [PEP 655](https://peps.python.org/pep-0655/))\n  - `reveal_type`\n  - `Required` (see [PEP 655](https://peps.python.org/pep-0655/))\n  - `Self` (see [PEP 673](https://peps.python.org/pep-0673/))\n  - `TypeVarTuple` (see [PEP 646](https://peps.python.org/pep-0646/); the `typing_extensions` version supports the `default=` argument from [PEP 696](https://peps.python.org/pep-0696/))\n  - `Unpack` (see [PEP 646](https://peps.python.org/pep-0646/))\n\n- In `typing` since Python 3.10\n\n  - `Concatenate` (see [PEP 612](https://peps.python.org/pep-0612/))\n  - `ParamSpec` (see [PEP 612](https://peps.python.org/pep-0612/); the `typing_extensions` version supports the `default=` argument from [PEP 696](https://peps.python.org/pep-0696/))\n  - `ParamSpecArgs` (see [PEP 612](https://peps.python.org/pep-0612/))\n  - `ParamSpecKwargs` (see [PEP 612](https://peps.python.org/pep-0612/))\n  - `TypeAlias` (see [PEP 613](https://peps.python.org/pep-0613/))\n  - `TypeGuard` (see [PEP 647](https://peps.python.org/pep-0647/))\n  - `is_typeddict`\n\n- In `typing` since Python 3.9\n\n  - `Annotated` (see [PEP 593](https://peps.python.org/pep-0593/))\n\n- In `typing` since Python 3.8\n\n  - `final` (see [PEP 591](https://peps.python.org/pep-0591/))\n  - `Final` (see [PEP 591](https://peps.python.org/pep-0591/))\n  - `Literal` (see [PEP 586](https://peps.python.org/pep-0586/))\n  - `Protocol` (see [PEP 544](https://peps.python.org/pep-0544/))\n  - `runtime_checkable` (see [PEP 544](https://peps.python.org/pep-0544/))\n  - `TypedDict` (see [PEP 589](https://peps.python.org/pep-0589/))\n  - `get_origin` (`typing_extensions` provides this function only in Python 3.7+)\n  - `get_args` (`typing_extensions` provides this function only in Python 3.7+)\n\n- In `typing` since Python 3.7\n\n  - `OrderedDict`\n\n- In `typing` since Python 3.5 or 3.6 (see [the typing documentation](https://docs.python.org/3.10/library/typing.html) for details)\n\n  - `AsyncContextManager`\n  - `AsyncGenerator`\n  - `AsyncIterable`\n  - `AsyncIterator`\n  - `Awaitable`\n  - `ChainMap`\n  - `ClassVar` (see [PEP 526](https://peps.python.org/pep-0526/))\n  - `ContextManager`\n  - `Coroutine`\n  - `Counter`\n  - `DefaultDict`\n  - `Deque`\n  - `NewType`\n  - `NoReturn`\n  - `overload`\n  - `Text`\n  - `Type`\n  - `TYPE_CHECKING`\n  - `get_type_hints`\n\n- The following have always been present in `typing`, but the `typing_extensions` versions provide\n  additional features:\n\n  - `Any` (supports inheritance since Python 3.11)\n  - `NamedTuple` (supports multiple inheritance with `Generic` since Python 3.11)\n  - `TypeVar` (see PEPs [695](https://peps.python.org/pep-0695/) and [696](https://peps.python.org/pep-0696/))\n\n# Other Notes and Limitations\n\nCertain objects were changed after they were added to `typing`, and\n`typing_extensions` provides a backport even on newer Python versions:\n\n- `TypedDict` does not store runtime information\n  about which (if any) keys are non-required in Python 3.8, and does not\n  honor the `total` keyword with old-style `TypedDict()` in Python\n  3.9.0 and 3.9.1. `TypedDict` also does not support multiple inheritance\n  with `typing.Generic` on Python <3.11.\n- `get_origin` and `get_args` lack support for `Annotated` in\n  Python 3.8 and lack support for `ParamSpecArgs` and `ParamSpecKwargs`\n  in 3.9.\n- `@final` was changed in Python 3.11 to set the `.__final__` attribute.\n- `@overload` was changed in Python 3.11 to make function overloads\n  introspectable at runtime. In order to access overloads with\n  `typing_extensions.get_overloads()`, you must use\n  `@typing_extensions.overload`.\n- `NamedTuple` was changed in Python 3.11 to allow for multiple inheritance\n  with `typing.Generic`.\n- Since Python 3.11, it has been possible to inherit from `Any` at\n  runtime. `typing_extensions.Any` also provides this capability.\n- `TypeVar` gains two additional parameters, `default=` and `infer_variance=`,\n  in the draft PEPs [695](https://peps.python.org/pep-0695/) and [696](https://peps.python.org/pep-0696/), which are being considered for inclusion\n  in Python 3.12.\n\nThere are a few types whose interface was modified between different\nversions of typing. For example, `typing.Sequence` was modified to\nsubclass `typing.Reversible` as of Python 3.5.3.\n\nThese changes are _not_ backported to prevent subtle compatibility\nissues when mixing the differing implementations of modified classes.\n\nCertain types have incorrect runtime behavior due to limitations of older\nversions of the typing module:\n\n- `ParamSpec` and `Concatenate` will not work with `get_args` and\n  `get_origin`. Certain [PEP 612](https://peps.python.org/pep-0612/) special cases in user-defined\n  `Generic`s are also not available.\n\nThese types are only guaranteed to work for static type checking.\n\n## Running tests\n\nTo run tests, navigate into the appropriate source directory and run\n`test_typing_extensions.py`.\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/typing_extensions-4.5.0.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "tzdata",
        "version": "2023.3",
        "summary": "Provider of IANA time zone data",
        "description_content_type": "text/x-rst",
        "home_page": "https://github.com/python/tzdata",
        "author": "Python Software Foundation",
        "author_email": "datetime-sig@python.org",
        "license": "Apache-2.0",
        "classifier": [
          "Development Status :: 4 - Beta",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: Apache Software License",
          "Programming Language :: Python :: 2",
          "Programming Language :: Python :: 3"
        ],
        "requires_python": ">=2",
        "project_url": [
          "Bug Reports, https://github.com/python/tzdata/issues",
          "Source, https://github.com/python/tzdata",
          "Documentation, https://tzdata.readthedocs.io"
        ],
        "description": "tzdata: Python package providing IANA time zone data\n====================================================\n\nThis is a Python package containing ``zic``-compiled binaries for the IANA time\nzone database. It is intended to be a fallback for systems that do not have\nsystem time zone data installed (or don't have it installed in a standard\nlocation), as a part of `PEP 615 <https://www.python.org/dev/peps/pep-0615/>`_\n\nThis repository generates a ``pip``-installable package, published on PyPI as\n`tzdata <https://pypi.org/project/tzdata>`_.\n\nFor more information, see `the documentation <https://tzdata.readthedocs.io>`_.\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/tzdata-2023.3.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "tzlocal",
        "version": "4.3",
        "platform": [
          "UNKNOWN"
        ],
        "summary": "tzinfo object for the local timezone",
        "keywords": [
          "timezone"
        ],
        "home_page": "UNKNOWN",
        "author": "Lennart Regebro",
        "author_email": "regebro@gmail.com",
        "license": "MIT",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "License :: OSI Approved :: MIT License",
          "Operating System :: Microsoft :: Windows",
          "Operating System :: Unix",
          "Operating System :: MacOS :: MacOS X",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3 :: Only",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11"
        ],
        "requires_dist": [
          "pytz-deprecation-shim",
          "tzdata ; platform_system == \"Windows\"",
          "backports.zoneinfo ; python_version < \"3.9\"",
          "black ; extra == 'devenv'",
          "check-manifest ; extra == 'devenv'",
          "flake8 ; extra == 'devenv'",
          "pyroma ; extra == 'devenv'",
          "pytest-cov ; extra == 'devenv'",
          "pytest-mock (>=3.3) ; extra == 'devenv'",
          "pytest (>=4.3) ; extra == 'devenv'",
          "zest.releaser ; extra == 'devenv'"
        ],
        "requires_python": ">=3.7",
        "project_url": [
          "Source code, https://github.com/regebro/tzlocal",
          "Issue tracker, https://github.com/regebro/tzlocal/issues"
        ],
        "provides_extra": [
          "devenv"
        ],
        "description": "tzlocal\n=======\n\nAPI CHANGE!\n-----------\n\nWith version 3.0 of tzlocal, tzlocal no longer returned `pytz` objects, but\n`zoneinfo` objects, which has a different API. Since 4.0, it now restored\npartial compatibility for `pytz` users through Paul Ganssle's\n`pytz_deprecation_shim`.\n\ntzlocal 4.0 also adds an official function `get_localzone_name()` to get only\nthe timezone name, instead of a timezone object. On unix, it can raise an\nerror if you don't have a timezone name configured, where `get_localzone()`\nwill succeed, so only use that if you need the timezone name.\n\n4.0 also adds way more information on what is going wrong in your\nconfiguration when the configuration files are unclear or contradictory.\n\n\nInfo\n----\n\nThis Python module returns a ``tzinfo`` object (with a pytz_deprecation_shim,\nfor pytz compatibility) with the local timezone information, under Unix and\nWindows.\n\nIt requires Python 3.7 or later, and will use the ``backports.tzinfo``\npackage, for Python 3.7 and 3.8.\n\nThis module attempts to fix a glaring hole in the ``pytz`` and ``zoneinfo``\nmodules, that there is no way to get the local timezone information, unless\nyou know the zoneinfo name, and under several Linux distros that's hard or\nimpossible to figure out.\n\nWith ``tzlocal`` you only need to call ``get_localzone()`` and you will get a\n``tzinfo`` object with the local time zone info. On some Unices you will\nstill not get to know what the timezone name is, but you don't need that when\nyou have the tzinfo file. However, if the timezone name is readily available\nit will be used.\n\n\nSupported systems\n-----------------\n\nThese are the systems that are in theory supported:\n\n * Windows 2000 and later\n\n * Any unix-like system with a ``/etc/localtime`` or ``/usr/local/etc/localtime``\n\nIf you have one of the above systems and it does not work, it's a bug.\nPlease report it.\n\nPlease note that if you are getting a time zone called ``local``, this is not\na bug, it's actually the main feature of ``tzlocal``, that even if your\nsystem does NOT have a configuration file with the zoneinfo name of your time\nzone, it will still work.\n\nYou can also use ``tzlocal`` to get the name of your local timezone, but only\nif your system is configured to make that possible. ``tzlocal`` looks for the\ntimezone name in ``/etc/timezone``, ``/var/db/zoneinfo``,\n``/etc/sysconfig/clock`` and ``/etc/conf.d/clock``. If your\n``/etc/localtime`` is a symlink it can also extract the name from that\nsymlink.\n\nIf you need the name of your local time zone, then please make sure your\nsystem is properly configured to allow that.\n\nIf your unix system doesn't have a timezone configured, tzlocal will default\nto UTC.\n\nNotes on Docker\n---------------\n\nIt turns out that Docker images frequently have broken timezone setups.\nThis usually resuts in a warning that the configuration is wrong, or that\nthe timezone offset doesn't match the found timezone.\n\nThe easiest way to fix that is to set a TZ variable in your docker setup\nto whatever timezone you want, which is usually the timezone your host\ncomputer has.\n\nUsage\n-----\n\nLoad the local timezone:\n\n    >>> from tzlocal import get_localzone\n    >>> tz = get_localzone()\n    >>> tz\n    <DstTzInfo 'Europe/Warsaw' WMT+1:24:00 STD>\n\nCreate a local datetime:\n\n    >>> from datetime import datetime\n    >>> dt = datetime(2015, 4, 10, 7, 22, tzinfo=tz)\n    >>> dt\n    datetime.datetime(2015, 4, 10, 7, 22, tzinfo=<DstTzInfo 'Europe/Warsaw' CEST+2:00:00 DST>)\n\nLookup another timezone with ``zoneinfo`` (``backports.zoneinfo`` on Python 3.8 or earlier):\n\n    >>> from zoneinfo import ZoneInfo\n    >>> eastern = ZoneInfo('US/Eastern')\n\nConvert the datetime:\n\n    >>> dt.astimezone(eastern)\n    datetime.datetime(2015, 4, 10, 1, 22, tzinfo=<DstTzInfo 'US/Eastern' EDT-1 day, 20:00:00 DST>)\n\nIf you just want the name of the local timezone, use `get_localzone_name()`:\n\n    >>> from tzlocal import get_localzone_name\n    >>> get_localzone_name()\n    \"Europe/Warsaw\"\n\nPlease note that under Unix, `get_localzone_name()` may fail if there is no zone\nconfigured, where `get_localzone()` would generally succeed.\n\n\nDevelopment\n-----------\n\nTo create a development environment, create a virtualenv and make a development installation::\n\n    $ virtualenv ve\n    $ source ve/bin/activation (Win32: .\\ve\\Scripts\\activate)\n    (ve) $ pip install -e .[test,devenv]\n\nTo run tests, just use pytest, coverage is nice as well::\n\n    (ve) $ pytest --cov=tzlocal\n\n\n\nMaintainer\n----------\n\n* Lennart Regebro, regebro@gmail.com\n\nContributors\n------------\n\n* Marc Van Olmen\n* Benjamen Meyer\n* Manuel Ebert\n* Xiaokun Zhu\n* Cameris\n* Edward Betts\n* McK KIM\n* Cris Ewing\n* Ayala Shachar\n* Lev Maximov\n* Jakub Wilk\n* John Quarles\n* Preston Landers\n* Victor Torres\n* Jean Jordaan\n* Zackary Welch\n* Mickaël Schoentgen\n* Gabriel Corona\n* Alex Grönholm\n* Julin S\n* Miroslav Šedivý\n* revansSZ\n* Sam Treweek\n* Peter Di Pasquale\n* Rongrong\n\n(Sorry if I forgot someone)\n\nLicense\n-------\n\n* MIT https://opensource.org/licenses/MIT\n\nChanges\n=======\n\n4.3 (2023-03-18)\n----------------\n\n- Improved the error message when the ZoneInfo cannot be found\n\n- Don't error out because we find multiple possible timezones for \n  a symlink. \n  \n- More stable on Android/Termux with proot\n\n\n4.2 (2022-04-02)\n----------------\n\n- If TZ environment variable is set to /etc/localhost, and that's a link to\n  a zoneinfo file, then tzlocal will now find the timezone name, and not\n  just return a localtime TZ object.\n\n\n4.1 (2021-10-29)\n----------------\n\n- No changes from 4.1b1.\n\n\n4.1b1 (2021-10-28)\n------------------\n\n- It turns out a lot of Linux distributions make the links between zoneinfo\n  aliases backwards, so instead of linking GB to Europe/London it actually\n  links the other way. When /etc/localtime then links to Europe/London, and you\n  also have a config file saying Europe/London, the code that checks if\n  /etc/localtime is a symlink ends up at GB instead of Europe/London and\n  we get an error, as it thinks GB and Europe/London are different zones.\n\n  So now we check the symlink of all timezones in the uniqueness test. We still\n  return the name in the config file, though, so you would only get GB or Zulu\n  returned as the time zone instead of Europe/London or UTC if your only\n  configuration is the /etc/localtime symlink, as that's checked last, and\n  tzlocal will return the first configuration found.\n\n- The above change also means that GMT and UTC are no longer seen as synonyms,\n  as zoneinfo does not see them as synonyms. This might be controversial,\n  but you just have to live with it. Pick one and stay with it. ;-)\n\n\n4.0.2 (2021-10-26)\n------------------\n\n- Improved the error message when you had a conflict including a\n  /etc/localtime symlink.\n\n\n4.0.1 (2021-10-19)\n------------------\n\n- A long time bug in Ubuntu docker images seem to not get fixed,\n  so I added a workaround.\n\n\n4.0.1b1 (2021-10-18)\n--------------------\n\n- Handle UCT and Zulu as synonyms for UTC, while treating GMT and\n  UTC as different.\n\n\n4.0 (2021-10-18)\n----------------\n\n- No changes.\n\n\n4.0b5 (2021-10-18)\n------------------\n\n- Fixed a bug in the Windows DST support.\n\n\n4.0b4 (2021-10-18)\n------------------\n\n- Added support for turning off DST in Windows. That only works in\n  whole hour timezones, and honestly, if you need to turn off DST,\n  you should just use UTC as a timezone.\n\n\n4.0b3 (2021-10-08)\n------------------\n\n- Returning pytz_deprecation_shim zones to lower the surprise for pytz users.\n\n- The Windows OS environment variable 'TZ' will allow an override for\n  setting the timezone. The override timezone will be asserted for\n  timezone validity bit not compared against the systems timezone offset.\n  This allows for overriding the timezone when running tests.\n\n- Dropped support for Windows 2000, XP and Vista, supports Windows 7, 8 and 10.\n\n\n4.0b2 (2021-09-26)\n------------------\n\n- Big refactor; Implemented get_localzone_name() functions.\n\n- Adding a Windows OS environment variable 'TZ' will allow an override for\n  setting the timezone (also see 4.0b3).\n\n\n4.0b1 (2021-08-21)\n------------------\n\n- Now finds and compares all the configs (under Unix-like systems) and\n  tells you what files it found and how they conflict. This should make\n  it a lot easier to figure out what goes wrong.\n\n\n3.0 (2021-08-13)\n----------------\n\n- Modernized the packaging, moving to setup.cfg etc.\n\n- Handles if the text config files incorrectly is a TZ file. (revanSZ)\n\n\n3.0b1 (2020-09-21)\n------------------\n\n- Dropped Python 2 support\n- Switched timezone provider from pytz to zoneinfo (PEP 615)\n\n\n2.1 (2020-05-08)\n----------------\n\n- No changes.\n\n\n2.1b1 (2020-02-08)\n------------------\n\n- The is_dst flag is wrong for Europe/Dublin on some Unix releases.\n  I changed to another way of determining if DST is in effect or not.\n\n- Added support for Python 3.7 and 3.8. Dropped 3.5 although it still works.\n\n\n2.0.0 (2019-07-23)\n------------------\n\n- No differences since 2.0.0b3\n\nMajor differences since 1.5.1\n.............................\n\n- When no time zone configuration can be find, tzlocal now return UTC.\n  This is a major difference from 1.x, where an exception would be raised.\n  This change is because Docker images often have no configuration at all,\n  and the unix utilities will then default to UTC, so we follow that.\n\n- If tzlocal on Unix finds a timezone name in a /etc config file, then\n  tzlocal now verifies that the timezone it fouds has the same offset as\n  the local computer is configured with. If it doesn't, something is\n  configured incorrectly. (Victor Torres, regebro)\n\n- Get timezone via Termux `getprop` wrapper on Android. It's not officially\n  supported because we can't test it, but at least we make an effort.\n  (Jean Jordaan)\n\nMinor differences and bug fixes\n...............................\n\n- Skip comment lines when parsing /etc/timezone. (Edward Betts)\n\n- Don't load timezone from current directory. (Gabriel Corona)\n\n- Now verifies that the config files actually contain something before\n  reading them. (Zackary Welch, regebro)\n\n- Got rid of a BytesWarning (Mickaël Schoentgen)\n\n- Now handles if config file paths exists, but are directories.\n\n- Moved tests out from distributions\n\n- Support wheels\n\n\n1.5.1 (2017-12-01)\n------------------\n\n- 1.5 had a bug that slipped through testing, fixed that,\n  increased test coverage.\n\n\n1.5 (2017-11-30)\n----------------\n\n- No longer treats macOS as special, but as a unix.\n\n- get_windows_info.py is renamed to update_windows_mappings.py\n\n- Windows mappings now also contain mappings from deprecated zoneinfo names.\n  (Preston-Landers, regebro)\n\n\n1.4 (2017-04-18)\n----------------\n\n- I use MIT on my other projects, so relicensing.\n\n\n1.4b1 (2017-04-14)\n------------------\n\n- Dropping support for Python versions nobody uses (2.5, 3.1, 3.2), adding 3.6\n  Python 3.1 and 3.2 still works, 2.5 has been broken for some time.\n\n- Ayalash's OS X fix didn't work on Python 2.7, fixed that.\n\n\n1.3.2 (2017-04-12)\n------------------\n\n- Ensure closing of subprocess on OS X (ayalash)\n\n- Removed unused imports (jwilk)\n\n- Closes stdout and stderr to get rid of ResourceWarnings (johnwquarles)\n\n- Updated Windows timezones (axil)\n\n\n1.3 (2016-10-15)\n----------------\n\n- #34: Added support for /var/db/zoneinfo\n\n\n1.2.2 (2016-03-02)\n------------------\n\n- #30: Fixed a bug on OS X.\n\n\n1.2.1 (2016-02-28)\n------------------\n\n- Tests failed if TZ was set in the environment. (EdwardBetts)\n\n- Replaces os.popen() with subprocess.Popen() for OS X to\n  handle when systemsetup doesn't exist. (mckabi, cewing)\n\n\n1.2 (2015-06-14)\n----------------\n\n- Systemd stores no time zone name, forcing us to look at the name of the file\n  that localtime symlinks to. (cameris)\n\n\n1.1.2 (2014-10-18)\n------------------\n\n- Timezones that has 3 items did not work on Mac OS X.\n  (Marc Van Olmen)\n\n- Now doesn't fail if the TZ environment variable isn't an Olsen time zone.\n\n- Some timezones on Windows can apparently be empty (perhaps the are deleted).\n  Now these are ignored.\n  (Xiaokun Zhu)\n\n\n1.1.1 (2014-01-29)\n------------------\n\n- I forgot to add Etc/UTC as an alias for Etc/GMT.\n\n\n1.1 (2014-01-28)\n----------------\n\n- Adding better support for OS X.\n\n- Added support to map from tzdata/Olsen names to Windows names.\n  (Thanks to Benjamen Meyer).\n\n\n1.0 (2013-05-29)\n----------------\n\n- Fixed some more cases where spaces needs replacing with underscores.\n\n- Better handling of misconfigured /etc/timezone.\n\n- Better error message on Windows if we can't find a timezone at all.\n\n\n0.3 (2012-09-13)\n----------------\n\n- Windows 7 support.\n\n- Python 2.5 supported; because it only needed a __future__ import.\n\n- Python 3.3 tested, it worked.\n\n- Got rid of relative imports, because I don't actually like them,\n  so I don't know why I used them in the first place.\n\n- For each Windows zone, use the default zoneinfo zone, not the last one.\n\n\n0.2 (2012-09-12)\n----------------\n\n- Python 3 support.\n\n\n0.1 (2012-09-11)\n----------------\n\n- Initial release.\n\n\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/tzlocal-4.3.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "uc-micro-py",
        "version": "1.0.2",
        "summary": "Micro subset of unicode data files for linkify-it-py projects.",
        "description_content_type": "text/markdown",
        "keywords": [
          "unicode"
        ],
        "author": "tsutsu3",
        "license": "MIT",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "License :: OSI Approved :: MIT License",
          "Operating System :: OS Independent",
          "Intended Audience :: Developers",
          "Topic :: Software Development :: Libraries :: Python Modules"
        ],
        "requires_dist": [
          "pytest ; extra == 'test'",
          "coverage ; extra == 'test'",
          "pytest-cov ; extra == 'test'"
        ],
        "requires_python": ">=3.7",
        "project_url": [
          "Homepage, https://github.com/tsutsu3/uc.micro-py"
        ],
        "provides_extra": [
          "test"
        ],
        "description": "# uc.micro-py\n\n[![pypi](https://img.shields.io/pypi/v/uc-micro-py)](https://pypi.org/project/uc-micro-py/)\n[![Anaconda-Server Badge](https://anaconda.org/conda-forge/uc-micro-py/badges/version.svg)](https://anaconda.org/conda-forge/uc-micro-py)\n[![CI](https://github.com/tsutsu3/uc.micro-py/workflows/CI/badge.svg?branch=main)](https://github.com/tsutsu3/uc.micro-py/actions)\n[![codecov](https://codecov.io/gh/tsutsu3/uc.micro-py/branch/main/graph/badge.svg?token=5Y7559D69U)](https://codecov.io/gh/tsutsu3/uc.micro-py)\n\nThis is a Python port of [uc.micro](https://github.com/markdown-it/uc.micro).\n\n> Micro subset of unicode data files for [linkify-it-py](https://github.com/tsutsu3/linkify-it-py) projects.\n\n**This package content is ONLY for [linkify-it-py](https://github.com/tsutsu3/linkify-it-py)projects needs.**\n\n## install\n\n```bash\npip install uc-micro-py\n```\n\nor\n\n```bash\nconda install -c conda-forge uc-micro-py\n```\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/uc_micro_py-1.0.2.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "ujson",
        "version": "5.7.0",
        "platform": [
          "any"
        ],
        "summary": "Ultra fast JSON encoder and decoder for Python",
        "description_content_type": "text/markdown",
        "home_page": "https://github.com/ultrajson/ultrajson",
        "download_url": "https://github.com/ultrajson/ultrajson",
        "author": "Jonas Tarnstrom",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: BSD License",
          "Programming Language :: C",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3 :: Only",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11"
        ],
        "requires_python": ">=3.7",
        "project_url": [
          "Source, https://github.com/ultrajson/ultrajson"
        ],
        "description": "# UltraJSON\n\n[![PyPI version](https://img.shields.io/pypi/v/ujson.svg?logo=pypi&logoColor=FFE873)](https://pypi.org/project/ujson)\n[![Supported Python versions](https://img.shields.io/pypi/pyversions/ujson.svg?logo=python&logoColor=FFE873)](https://pypi.org/project/ujson)\n[![PyPI downloads](https://img.shields.io/pypi/dm/ujson.svg)](https://pypistats.org/packages/ujson)\n[![GitHub Actions status](https://github.com/ultrajson/ultrajson/workflows/Test/badge.svg)](https://github.com/ultrajson/ultrajson/actions)\n[![codecov](https://codecov.io/gh/ultrajson/ultrajson/branch/main/graph/badge.svg)](https://codecov.io/gh/ultrajson/ultrajson)\n[![DOI](https://zenodo.org/badge/1418941.svg)](https://zenodo.org/badge/latestdoi/1418941)\n[![Code style: Black](https://img.shields.io/badge/code%20style-Black-000000.svg)](https://github.com/psf/black)\n\nUltraJSON is an ultra fast JSON encoder and decoder written in pure C with bindings for\nPython 3.7+.\n\nInstall with pip:\n\n```sh\npython -m pip install ujson\n```\n\n## Usage\n\nMay be used as a drop in replacement for most other JSON parsers for Python:\n\n```pycon\n>>> import ujson\n>>> ujson.dumps([{\"key\": \"value\"}, 81, True])\n'[{\"key\":\"value\"},81,true]'\n>>> ujson.loads(\"\"\"[{\"key\": \"value\"}, 81, true]\"\"\")\n[{'key': 'value'}, 81, True]\n```\n\n### Encoder options\n\n#### encode_html_chars\n\nUsed to enable special encoding of \"unsafe\" HTML characters into safer Unicode\nsequences. Default is `False`:\n\n```pycon\n>>> ujson.dumps(\"<script>John&Doe\", encode_html_chars=True)\n'\"\\\\u003cscript\\\\u003eJohn\\\\u0026Doe\"'\n```\n\n#### ensure_ascii\n\nLimits output to ASCII and escapes all extended characters above 127. Default is `True`.\nIf your end format supports UTF-8, setting this option to false is highly recommended to\nsave space:\n\n```pycon\n>>> ujson.dumps(\"åäö\")\n'\"\\\\u00e5\\\\u00e4\\\\u00f6\"'\n>>> ujson.dumps(\"åäö\", ensure_ascii=False)\n'\"åäö\"'\n```\n\n#### escape_forward_slashes\n\nControls whether forward slashes (`/`) are escaped. Default is `True`:\n\n```pycon\n>>> ujson.dumps(\"http://esn.me\")\n'\"http:\\\\/\\\\/esn.me\"'\n>>> ujson.dumps(\"http://esn.me\", escape_forward_slashes=False)\n'\"http://esn.me\"'\n```\n\n#### indent\n\nControls whether indentation (\"pretty output\") is enabled. Default is `0` (disabled):\n\n```pycon\n>>> ujson.dumps({\"foo\": \"bar\"})\n'{\"foo\":\"bar\"}'\n>>> print(ujson.dumps({\"foo\": \"bar\"}, indent=4))\n{\n    \"foo\":\"bar\"\n}\n```\n\n## Benchmarks\n\n*UltraJSON* calls/sec compared to other popular JSON parsers with performance gain\nspecified below each.\n\n### Test machine\n\nLinux 5.0.0-1032-azure x86_64 #34-Ubuntu SMP Mon Feb 10 19:37:25 UTC 2020\n\n### Versions\n\n- CPython 3.8.2 (default, Feb 28 2020, 14:28:43) [GCC 7.4.0]\n- nujson    : 1.35.2\n- orjson    : 2.6.1\n- simplejson: 3.17.0\n- ujson     : 2.0.2\n\n|                                                                               | ujson      | nujson     | orjson     | simplejson | json       |\n|-------------------------------------------------------------------------------|-----------:|-----------:|-----------:|-----------:|-----------:|\n| Array with 256 doubles                                                        |            |            |            |            |            |\n| encode                                                                        |     22,082 |      4,282 |     76,975 |      5,328 |      5,436 |\n| decode                                                                        |     24,127 |     34,349 |     29,059 |     14,174 |     13,822 |\n| Array with 256 UTF-8 strings                                                  |            |            |            |            |            |\n| encode                                                                        |      3,557 |      2,528 |     24,300 |      3,061 |      2,068 |\n| decode                                                                        |      2,030 |      2,490 |        931 |        406 |        358 |\n| Array with 256 strings                                                        |            |            |            |            |            |\n| encode                                                                        |     39,041 |     31,769 |     76,403 |     16,615 |     16,910 |\n| decode                                                                        |     25,185 |     24,287 |     34,437 |     32,388 |     27,999 |\n| Medium complex object                                                         |            |            |            |            |            |\n| encode                                                                        |     10,382 |     11,427 |     32,995 |      3,959 |      5,275 |\n| decode                                                                        |      9,785 |      9,796 |     11,515 |      5,898 |      7,200 |\n| Array with 256 True values                                                    |            |            |            |            |            |\n| encode                                                                        |    114,341 |    101,039 |    344,256 |     62,382 |     72,872 |\n| decode                                                                        |    149,367 |    151,615 |    181,123 |    114,597 |    130,392 |\n| Array with 256 dict{string, int} pairs                                        |            |            |            |            |            |\n| encode                                                                        |     13,715 |     14,420 |     51,942 |      3,271 |      6,584 |\n| decode                                                                        |     12,670 |     11,788 |     12,176 |      6,743 |      8,278 |\n| Dict with 256 arrays with 256 dict{string, int} pairs                         |            |            |            |            |            |\n| encode                                                                        |         50 |         54 |        216 |         10 |         23 |\n| decode                                                                        |         32 |         32 |         30 |         20 |         23 |\n| Dict with 256 arrays with 256 dict{string, int} pairs, outputting sorted keys |            |            |            |            |            |\n| encode                                                                        |         46 |         41 |            |          8 |         24 |\n| Complex object                                                                |            |            |            |            |            |\n| encode                                                                        |        533 |        582 |            |        408 |        431 |\n| decode                                                                        |        466 |        454 |            |        154 |        164 |\n\n## Build options\n\nFor those with particular needs, such as Linux distribution packagers, several\nbuild options are provided in the form of environment variables.\n\n### Debugging symbols\n\n#### UJSON_BUILD_NO_STRIP\n\nBy default, debugging symbols are stripped on Linux platforms. Setting this\nenvironment variable with a value of `1` or `True` disables this behavior.\n\n### Using an external or system copy of the double-conversion library\n\nThese two environment variables are typically used together, something like:\n\n```sh\nexport UJSON_BUILD_DC_INCLUDES='/usr/include/double-conversion'\nexport UJSON_BUILD_DC_LIBS='-ldouble-conversion'\n```\n\nUsers planning to link against an external shared library should be aware of\nthe ABI-compatibility requirements this introduces when upgrading system\nlibraries or copying compiled wheels to other machines.\n\n#### UJSON_BUILD_DC_INCLUDES\n\nOne or more directories, delimited by `os.pathsep` (same as the `PATH`\nenvironment variable), in which to look for `double-conversion` header files;\nthe default is to use the bundled copy.\n\n#### UJSON_BUILD_DC_LIBS\n\nCompiler flags needed to link the `double-conversion` library; the default\nis to use the bundled copy.\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/ujson-5.7.0.dist-info",
      "installer": "pip",
      "requested": true
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "uvicorn",
        "version": "0.22.0",
        "summary": "The lightning-fast ASGI server.",
        "description_content_type": "text/markdown",
        "author_email": "Tom Christie <tom@tomchristie.com>",
        "classifier": [
          "Development Status :: 4 - Beta",
          "Environment :: Web Environment",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: BSD License",
          "Operating System :: OS Independent",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Programming Language :: Python :: Implementation :: CPython",
          "Programming Language :: Python :: Implementation :: PyPy",
          "Topic :: Internet :: WWW/HTTP"
        ],
        "requires_dist": [
          "click>=7.0",
          "h11>=0.8",
          "typing-extensions; python_version < '3.8'",
          "colorama>=0.4; sys_platform == 'win32' and extra == 'standard'",
          "httptools>=0.5.0; extra == 'standard'",
          "python-dotenv>=0.13; extra == 'standard'",
          "pyyaml>=5.1; extra == 'standard'",
          "uvloop!=0.15.0,!=0.15.1,>=0.14.0; sys_platform != 'win32' and (sys_platform != 'cygwin' and platform_python_implementation != 'PyPy') and extra == 'standard'",
          "watchfiles>=0.13; extra == 'standard'",
          "websockets>=10.4; extra == 'standard'"
        ],
        "requires_python": ">=3.7",
        "project_url": [
          "Changelog, https://github.com/encode/uvicorn/blob/master/CHANGELOG.md",
          "Funding, https://github.com/sponsors/encode",
          "Homepage, https://www.uvicorn.org/",
          "Source, https://github.com/encode/uvicorn"
        ],
        "provides_extra": [
          "standard"
        ],
        "description": "<p align=\"center\">\n  <img width=\"320\" height=\"320\" src=\"https://raw.githubusercontent.com/tomchristie/uvicorn/master/docs/uvicorn.png\" alt='uvicorn'>\n</p>\n\n<p align=\"center\">\n<em>An ASGI web server, for Python.</em>\n</p>\n\n---\n\n[![Build Status](https://github.com/encode/uvicorn/workflows/Test%20Suite/badge.svg)](https://github.com/encode/uvicorn/actions)\n[![Package version](https://badge.fury.io/py/uvicorn.svg)](https://pypi.python.org/pypi/uvicorn)\n\n**Documentation**: [https://www.uvicorn.org](https://www.uvicorn.org)\n\n**Requirements**: Python 3.7+ (For Python 3.6 support, install version 0.16.0.)\n\nUvicorn is an ASGI web server implementation for Python.\n\nUntil recently Python has lacked a minimal low-level server/application interface for\nasync frameworks. The [ASGI specification][asgi] fills this gap, and means we're now able to\nstart building a common set of tooling usable across all async frameworks.\n\nUvicorn supports HTTP/1.1 and WebSockets.\n\n## Quickstart\n\nInstall using `pip`:\n\n```shell\n$ pip install uvicorn\n```\n\nThis will install uvicorn with minimal (pure Python) dependencies.\n\n```shell\n$ pip install 'uvicorn[standard]'\n```\n\nThis will install uvicorn with \"Cython-based\" dependencies (where possible) and other \"optional extras\".\n\nIn this context, \"Cython-based\" means the following:\n\n- the event loop `uvloop` will be installed and used if possible.\n- the http protocol will be handled by `httptools` if possible.\n\nMoreover, \"optional extras\" means that:\n\n- the websocket protocol will be handled by `websockets` (should you want to use `wsproto` you'd need to install it manually) if possible.\n- the `--reload` flag in development mode will use `watchfiles`.\n- windows users will have `colorama` installed for the colored logs.\n- `python-dotenv` will be installed should you want to use the `--env-file` option.\n- `PyYAML` will be installed to allow you to provide a `.yaml` file to `--log-config`, if desired.\n\nCreate an application, in `example.py`:\n\n```python\nasync def app(scope, receive, send):\n    assert scope['type'] == 'http'\n\n    await send({\n        'type': 'http.response.start',\n        'status': 200,\n        'headers': [\n            (b'content-type', b'text/plain'),\n        ],\n    })\n    await send({\n        'type': 'http.response.body',\n        'body': b'Hello, world!',\n    })\n```\n\nRun the server:\n\n```shell\n$ uvicorn example:app\n```\n\n---\n\n## Why ASGI?\n\nMost well established Python Web frameworks started out as WSGI-based frameworks.\n\nWSGI applications are a single, synchronous callable that takes a request and returns a response.\nThis doesn’t allow for long-lived connections, like you get with long-poll HTTP or WebSocket connections,\nwhich WSGI doesn't support well.\n\nHaving an async concurrency model also allows for options such as lightweight background tasks,\nand can be less of a limiting factor for endpoints that have long periods being blocked on network\nI/O such as dealing with slow HTTP requests.\n\n---\n\n## Alternative ASGI servers\n\nA strength of the ASGI protocol is that it decouples the server implementation\nfrom the application framework. This allows for an ecosystem of interoperating\nwebservers and application frameworks.\n\n### Daphne\n\nThe first ASGI server implementation, originally developed to power Django Channels, is [the Daphne webserver][daphne].\n\nIt is run widely in production, and supports HTTP/1.1, HTTP/2, and WebSockets.\n\nAny of the example applications given here can equally well be run using `daphne` instead.\n\n```\n$ pip install daphne\n$ daphne app:App\n```\n\n### Hypercorn\n\n[Hypercorn][hypercorn] was initially part of the Quart web framework, before\nbeing separated out into a standalone ASGI server.\n\nHypercorn supports HTTP/1.1, HTTP/2, and WebSockets.\n\nIt also supports [the excellent `trio` async framework][trio], as an alternative to `asyncio`.\n\n```\n$ pip install hypercorn\n$ hypercorn app:App\n```\n\n### Mangum\n\n[Mangum][mangum] is an adapter for using ASGI applications with AWS Lambda & API Gateway.\n\n---\n\n<p align=\"center\"><i>Uvicorn is <a href=\"https://github.com/encode/uvicorn/blob/master/LICENSE.md\">BSD licensed</a> code.<br/>Designed & crafted with care.</i><br/>&mdash; 🦄  &mdash;</p>\n\n[asgi]: https://asgi.readthedocs.io/en/latest/\n[daphne]: https://github.com/django/daphne\n[hypercorn]: https://github.com/pgjones/hypercorn\n[mangum]: https://mangum.io\n[trio]: https://trio.readthedocs.io\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/uvicorn-0.22.0.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "validators",
        "version": "0.20.0",
        "platform": [
          "any"
        ],
        "summary": "Python Data Validation for Humans™.",
        "home_page": "https://github.com/kvesteri/validators",
        "author": "Konsta Vesterinen",
        "author_email": "konsta@fastmonkeys.com",
        "license": "MIT",
        "classifier": [
          "Environment :: Web Environment",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: MIT License",
          "Operating System :: OS Independent",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.5",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: Implementation :: CPython",
          "Programming Language :: Python :: Implementation :: PyPy",
          "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
          "Topic :: Software Development :: Libraries :: Python Modules"
        ],
        "requires_dist": [
          "decorator (>=3.4.0)",
          "flake8 (>=2.4.0) ; extra == 'test'",
          "isort (>=4.2.2) ; extra == 'test'",
          "pytest (>=2.2.3) ; extra == 'test'"
        ],
        "requires_python": ">=3.4",
        "provides_extra": [
          "test"
        ],
        "description": "\nvalidators\n----------\n\nPython Data Validation for Humans™.\n\n\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/validators-0.20.0.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "virtualenv",
        "version": "20.23.0",
        "summary": "Virtual Python Environment builder",
        "description_content_type": "text/markdown",
        "keywords": [
          "environments",
          "isolated",
          "virtual"
        ],
        "maintainer_email": "Bernat Gabor <gaborjbernat@gmail.com>",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: MIT License",
          "Operating System :: MacOS :: MacOS X",
          "Operating System :: Microsoft :: Windows",
          "Operating System :: POSIX",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3 :: Only",
          "Programming Language :: Python :: Implementation :: CPython",
          "Programming Language :: Python :: Implementation :: PyPy",
          "Topic :: Software Development :: Libraries",
          "Topic :: Software Development :: Testing",
          "Topic :: Utilities"
        ],
        "requires_dist": [
          "distlib<1,>=0.3.6",
          "filelock<4,>=3.11",
          "importlib-metadata>=6.4.1; python_version < '3.8'",
          "platformdirs<4,>=3.2",
          "furo>=2023.3.27; extra == 'docs'",
          "proselint>=0.13; extra == 'docs'",
          "sphinx-argparse>=0.4; extra == 'docs'",
          "sphinx>=6.1.3; extra == 'docs'",
          "sphinxcontrib-towncrier>=0.2.1a0; extra == 'docs'",
          "towncrier>=22.12; extra == 'docs'",
          "covdefaults>=2.3; extra == 'test'",
          "coverage-enable-subprocess>=1; extra == 'test'",
          "coverage>=7.2.3; extra == 'test'",
          "flaky>=3.7; extra == 'test'",
          "packaging>=23.1; extra == 'test'",
          "pytest-env>=0.8.1; extra == 'test'",
          "pytest-freezegun>=0.4.2; platform_python_implementation == 'PyPy' and extra == 'test'",
          "pytest-mock>=3.10; extra == 'test'",
          "pytest-randomly>=3.12; extra == 'test'",
          "pytest-timeout>=2.1; extra == 'test'",
          "pytest>=7.3.1; extra == 'test'",
          "setuptools>=67.7.1; extra == 'test'",
          "time-machine>=2.9; platform_python_implementation == 'CPython' and extra == 'test'"
        ],
        "requires_python": ">=3.7",
        "project_url": [
          "Documentation, https://virtualenv.pypa.io",
          "Homepage, https://github.com/pypa/virtualenv",
          "Source, https://github.com/pypa/virtualenv",
          "Tracker, https://github.com/pypa/virtualenv/issues"
        ],
        "provides_extra": [
          "docs",
          "test"
        ],
        "description": "# virtualenv\n\n[![PyPI](https://img.shields.io/pypi/v/virtualenv?style=flat-square)](https://pypi.org/project/virtualenv)\n[![PyPI - Implementation](https://img.shields.io/pypi/implementation/virtualenv?style=flat-square)](https://pypi.org/project/virtualenv)\n[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/virtualenv?style=flat-square)](https://pypi.org/project/virtualenv)\n[![Documentation](https://readthedocs.org/projects/virtualenv/badge/?version=latest&style=flat-square)](http://virtualenv.pypa.io)\n[![Discord](https://img.shields.io/discord/803025117553754132)](https://discord.gg/pypa)\n[![PyPI - Downloads](https://img.shields.io/pypi/dm/virtualenv?style=flat-square)](https://pypistats.org/packages/virtualenv)\n[![PyPI - License](https://img.shields.io/pypi/l/virtualenv?style=flat-square)](https://opensource.org/licenses/MIT)\n[![Build Status](https://github.com/pypa/virtualenv/workflows/check/badge.svg?branch=main&event=push)](https://github.com/pypa/virtualenv/actions?query=workflow%3Acheck)\n[![Code style:\nblack](https://img.shields.io/badge/code%20style-black-000000.svg?style=flat-square)](https://github.com/psf/black)\n\nA tool for creating isolated `virtual` python environments.\n\n- [Installation](https://virtualenv.pypa.io/en/latest/installation.html)\n- [Documentation](https://virtualenv.pypa.io)\n- [Changelog](https://virtualenv.pypa.io/en/latest/changelog.html)\n- [Issues](https://github.com/pypa/virtualenv/issues)\n- [PyPI](https://pypi.org/project/virtualenv)\n- [Github](https://github.com/pypa/virtualenv)\n\n## Code of Conduct\n\nEveryone interacting in the virtualenv project's codebases, issue trackers, chat rooms, and mailing lists is expected to\nfollow the [PSF Code of Conduct](https://github.com/pypa/.github/blob/main/CODE_OF_CONDUCT.md).\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/virtualenv-20.23.0.dist-info",
      "installer": "pip",
      "requested": true
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "visualdl",
        "version": "2.5.2",
        "platform": [
          "UNKNOWN"
        ],
        "summary": "Visualize Deep Learning",
        "description_content_type": "text/markdown",
        "keywords": [
          "visualization",
          "deeplearning"
        ],
        "home_page": "UNKNOWN",
        "author": "PaddlePaddle and Echarts team",
        "license": "Apache License",
        "requires_dist": [
          "bce-python-sdk",
          "flask (>=1.1.1)",
          "Flask-Babel (>=3.0.0)",
          "numpy",
          "Pillow (>=7.0.0)",
          "protobuf (>=3.20.0)",
          "requests",
          "six (>=1.14.0)",
          "matplotlib",
          "pandas",
          "packaging",
          "x2paddle (>=1.4.0)",
          "paddle2onnx (>=1.0.5)",
          "rarfile",
          "gradio (==3.11.0)",
          "tritonclient[all]",
          "psutil",
          "onnx (>=1.6.0)"
        ],
        "description": "[**中文**](./README_CN.md)\n\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/PaddlePaddle/VisualDL/develop/frontend/packages/core/public/images/logo-visualdl.svg?sanitize=true\" width=\"70%\"/>\n</p>\n\n\n\n<p align=\"center\">\n<a href=\"https://actions-badge.atrox.dev/PaddlePaddle/VisualDL/goto?ref=develop\"><img alt=\"Build Status\" src=\"https://img.shields.io/endpoint.svg?url=https%3A%2F%2Factions-badge.atrox.dev%2FPaddlePaddle%2FVisualDL%2Fbadge%3Fref%3Ddevelop&style=flat-square\" alt=\"Build Status\" /></a>\n<a href=\"https://pypi.org/project/visualdl/\"><img src=\"https://img.shields.io/pypi/v/visualdl?style=flat-square\" alt=\"PyPI\" /></a>\n<a href=\"https://pypi.org/project/visualdl/#files\"><img src=\"https://img.shields.io/pypi/dm/visualdl?style=flat-square\" alt=\"Downloads\" /></a>\n<a href=\"https://github.com/PaddlePaddle/VisualDL/blob/develop/LICENSE\"><img src=\"https://img.shields.io/github/license/paddlepaddle/visualdl?style=flat-square\" alt=\"License\" /></a>\n</p>\n\n\n<p align=\"center\">\n<a href=\"javascript:void(0)\"><img src=\"https://img.shields.io/badge/QQ_Group-1045783368-52B6EF?style=social&logo=tencent-qq&logoColor=000&logoWidth=20\" alt=\"QQ Group\" /></a>\n</p>\n\n\n## Introduction\n\nVisualDL, a visualization analysis tool of PaddlePaddle, provides a variety of charts to show the trends of parameters, and visualizes model structures, data samples, histograms of tensors, PR curves , ROC curves and high-dimensional data distributions. It enables users to understand the training process and the model structure more clearly and intuitively so as to optimize models efficiently.\n\nVisualDL provides various visualization functions, including **tracking metrics in real-time, visualizing the model structure, displaying the data sample, visualizing the relationship between hyperparameters and model metrics, presenting the changes of distributions of tensors, showing the pr curves, projecting high-dimensional data to a lower dimensional space and more.** Additionally, VisualDL provides VDL.service, which enables developers easily to save, track and share visualization results of experiments. For specific guidelines of each function, please refer to  [**VisualDL User Guide**](./docs/components/README.md). For up-to-date experience, please feel free to try our [**Online Demo**](https://www.paddlepaddle.org.cn/paddle/visualdl/demo). Currently, VisualDL iterates rapidly and new functions will be continuously added.\n\nBrowsers supported by VisualDL are:\n\n- Google Chrome ≥ 79\n- Firefox ≥ 67\n- Microsoft Edge ≥ 79\n- Safari ≥ 11.1\n\nVisualDL natively supports the use of Python. Developers can retrieve plentiful visualization results by simply adding a few lines of Python code into the model before training.\n\n\n\n## Contents\n\n* [Key Highlights](#Key-Highlights)\n* [Installation](#Installation)\n* [Usage Guideline](#Usage-Guideline)\n* [Function Preview](#Function-Preview)\n* [Frequently Asked Questions](#Frequently-Asked-Questions)\n* [Contribution](#Contribution)\n* [More Details](#More-Details)\n* [Technical Communication](#Technical-Communication)\n\n\n\n## Key Highlights\n\n### Easy to Use\n\nThe high-level design of API makes it easy to use. Only one click can initiate the visualization of model structures.\n\n\n### Various Functions\n\nThe function contains the visualization of training parameters, data samples, graph structures, histograms of tensors, PR curves and high-dimensional data distributions.\n\n### High Compatibility\n\nVisualDL provides the visualization of the mainstream model structures such as Paddle, ONNX, Caffe, widely supporting visual analysis for diverse users.\n\n### Fully Support\n\nBy Integrating into PaddlePaddle and related modules, VisualDL allows developers to use different components without obstructions, and thus to have the best experience in the PaddlePaddle ecosystem.\n\n## Installation\n\n\n### Install by PiP\n\n```shell\npython -m pip install visualdl -i https://mirror.baidu.com/pypi/simple\n```\n\n### Install by Code\n\n```\ngit clone https://github.com/PaddlePaddle/VisualDL.git\ncd VisualDL\n\npython setup.py bdist_wheel\npip install --upgrade dist/visualdl-*.whl\n```\n\nPlease note that Python 2 is no longer maintained officially since January 1, 2020. VisualDL now only supports Python 3 in order to ensure the usability of codes.\n\n\n## Usage Guideline\n\nVisualDL stores the data, parameters and other information of the training process in a log file. Users can launch the panel to observe the visualization results.\n\n### 1. Log\n\nThe Python SDK is provided at the back end of VisualDL, and a logger can be customized through LogWriter. The interface description is shown as follows:\n\n```python\nclass LogWriter(logdir=None,\n                max_queue=10,\n                flush_secs=120,\n                filename_suffix='',\n                **kwargs)\n```\n\n#### Interface Parameters\n\n| parameters      | type    | meaning                                                      |\n| --------------- | ------- | ------------------------------------------------------------ |\n| logdir          | string  | The path location of log file. VisualDL will create a log file under this path to record information generated by the training process. If not specified, the path will be  `runs/${CURRENT_TIME}`as default. |\n| max_queue       | int     | The maximum capacity of the data generated before recording in a log file. Default value is 10. If the capacity is reached, the data are immediately written into the log file. |\n| flush_secs      | int     | The maximum cache time of the data generated before recording in a log file. Default value is 120. When this time is reached, the data are immediately written to the log file. (When the log message queue reaches the maximum cache time or maximum capacity, it will be written to the log file immediately)|\n| filename_suffix | string  | Add a suffix to the default log file name.                   |\n| display_name    | string  | This parameter is displayed in the location of `Select Data Stream` in the panel. If not set, the default name is `logdir`.(When `logdir` is too long or needed to be hidden). |\n| file_name    | string  | Set the name of the log file. If the file_name already exists, setting the file_name will be new records in the same log file, which will continue to be used. Note that the name should include 'vdlrecords'. |\n<p align=\"center\">\n  <img src=\"https://user-images.githubusercontent.com/48054808/103187556-b9714280-48ff-11eb-9052-008e02a21199.png\" width=\"100%\"/>\n</p>\n\n<p align=\"center\">\n  <img src=\"https://user-images.githubusercontent.com/48054808/103187552-b4ac8e80-48ff-11eb-998a-57d5a1bc7ee6.png\" width=\"100%\"/>\n</p>\n\n\n#### Example\n\nCreate a log file and record scalar values:\n\n```python\nfrom visualdl import LogWriter\n\n# create a log file under `./log/scalar_test/train`\nwith LogWriter(logdir=\"./log/scalar_test/train\") as writer:\n    # use `add_scalar` to record scalar values\n    writer.add_scalar(tag=\"acc\", step=1, value=0.5678)\n    writer.add_scalar(tag=\"acc\", step=2, value=0.6878)\n    writer.add_scalar(tag=\"acc\", step=3, value=0.9878)\n# you can also use the following method without using context manager `with`:\n\"\"\"\nwriter = LogWriter(logdir=\"./log/scalar_test/train\")\n\nwriter.add_scalar(tag=\"acc\", step=1, value=0.5678)\nwriter.add_scalar(tag=\"acc\", step=2, value=0.6878)\nwriter.add_scalar(tag=\"acc\", step=3, value=0.9878)\n\nwriter.close()\n\"\"\"\n```\n\n### 2. Launch Panel\n\nIn the above example, the log has recorded three sets of scalar values. Developers can view the visualization results of the log file through launching the visualDL panel. There are two ways to launch the log file:\n\n#### Launch by Command Line\n\nUse the command line to launch the VisualDL panel：\n\n```python\nvisualdl --logdir <dir_1, dir_2, ... , dir_n> --model <model_file> --host <host> --port <port> --cache-timeout <cache_timeout> --language <language> --public-path <public_path> --api-only --component_tabs <tab_name1, tab_name2, ...>\n```\n\nParameter details:\n\n| parameters      | meaning                                                      |\n| --------------- | ------------------------------------------------------------ |\n| --logdir        | Set one or more directories of the log. All the logs in the paths or subdirectories will be displayed on the VisualDL Board indepentently. |\n| --model         | Set a path to the model file (not a directory). VisualDL will visualize the model file in Graph page. PaddlePaddle、ONNX、Keras、Core ML、Caffe and other model formats are supported. Please refer to [Graph - Functional Instructions](./docs/components/README.md#functional-instructions-2). |\n| --host          | Specify IP address. The default value is `127.0.0.1`. Specify it as `0.0.0.0` or public IP address so that other machines can visit VisualDL Board.       |\n| --port          | Set the port. The default value is `8040`.                   |\n| --cache-timeout | Cache time of the backend. During the cache time, the front end requests the same URL multiple times, and then the returned data are obtained from the cache. The default cache time is 20 seconds. |\n| --language      | The language of the VisualDL panel. Language can be specified as 'en' or 'zh', and the default is the language used by the browser. |\n| --public-path   | The URL path of the VisualDL panel. The default path is '/app', meaning that the access address is 'http://&lt;host&gt;:&lt;port&gt;/app'. |\n| --api-only      | Decide whether or not to provide only API. If this parameter is set, VisualDL will only provides API service without displaying the web page, and the API address is 'http://&lt;host&gt;:&lt;port&gt;/&lt;public_path&gt;/api'. Additionally, If the public_path parameter is not specified, the default address is 'http://&lt;host&gt;:&lt;port&gt;/api'. |\n| --component_tabs  | Decide which components are presented in page, currently support 15 components, i.e. 'scalar', 'image', 'text', 'embeddings', 'audio', 'histogram', 'hyper_parameters', 'static_graph', 'dynamic_graph', 'pr_curve', 'roc_curve', 'profiler', 'x2paddle', 'fastdeploy_server', 'fastdeploy_client'. If this parameter is set, only specified components will be presented. If not set, and specify --logdir parameter, only components with data in vdlrecords log are presented. If both --component_tabs and --logdir are not set, only present 'static_graph', 'x2paddle', 'fastdeploy_server', 'fastdeploy_client' components by default |\n\nTo visualize the log file generated in the previous step, developers can launch the panel through the command:\n\n```\nvisualdl --logdir ./log\n```\n\n#### Launch in Python Script\n\n\nDevelopers can start the VisualDL panel in Python script as follows:\n\n```python\nvisualdl.server.app.run(logdir,\n                        model=\"path/to/model\",\n                        host=\"127.0.0.1\",\n                        port=8080,\n                        cache_timeout=20,\n                        language=None,\n                        public_path=None,\n                        api_only=False,\n                        open_browser=False)\n```\n\nPlease note: since all parameters are indefinite except `logdir`, developers should specify parameter names when using them.\n\nThe interface parameters are as follows:\n\n| parameters    | type                                               | meaning                                                      |\n| ------------- | -------------------------------------------------- | ------------------------------------------------------------ |\n| logdir        | string or list[string_1, string_2, ... , string_n] | Set one or more directories of the log. All the logs in the paths or subdirectories will be displayed on the VisualDL Board indepentently.|\n| model         | string                                             | Set a path to the model file (not a directory). VisualDL will visualize the model file in Graph page. |\n| host          | string                                             | Specify IP address. The default value is `127.0.0.1`. Specify it as `0.0.0.0` or public IP address so that other machines can visit VisualDL Board.       |\n| port          | int                                                | Set the port. The default value is `8040`.                   |\n| cache_timeout | int                                                | Cache time of the backend. During the cache time, the front end requests the same URL multiple times, and then the returned data are obtained from the cache. The default cache time is 20 seconds. |\n| language      | string                                             | The language of the VisualDL panel. Language can be specified as 'en' or 'zh', and the default is the language used by the browser. |\n| public_path   | string                                             | The URL path of the VisualDL panel. The default path is '/app', meaning that the access address is 'http://&lt;host&gt;:&lt;port&gt;/app'. |\n| api_only      | boolean                                            | Decide whether or not to provide only API. If this parameter is set, VisualDL will only provides API service without displaying the web page, and the API address is 'http://&lt;host&gt;:&lt;port&gt;/&lt;public_path&gt;/api'. Additionally, If the parameter public_path is not specified, the default address is 'http://&lt;host&gt;:&lt;port&gt;/api'. |\n| open_browser  | boolean                                            | Whether or not to open the browser. If this parameter is set as True, the browser will be opened automatically and VisualDL panel will be launched at the same time. If parameter api_only is specified as True,  parameter open_browser can be ignored. |\n| component_tabs | string or list[string_1, string_2, ... , string_n] | Decide which components are presented in page, currently support 15 components, i.e. 'scalar', 'image', 'text', 'embeddings', 'audio', 'histogram', 'hyper_parameters', 'static_graph', 'dynamic_graph', 'pr_curve', 'roc_curve', 'profiler', 'x2paddle', 'fastdeploy_server', 'fastdeploy_client'. If this parameter is set, only specified components will be presented. If not set, and specify --logdir parameter, only components with data in vdlrecords log are presented. If both --component_tabs and --logdir are not set, only present 'static_graph', 'x2paddle', 'fastdeploy_server', 'fastdeploy_client' components by default |\n\nTo visualize the log file generated in the previous step, developers can launch the panel through the command:\n\n```python\nfrom visualdl.server import app\n\napp.run(logdir=\"./log\")\n```\n\nAfter launching the panel by one of the above methods, developers can see the visualization results on the browser shown as blow:\n\n<p align=\"center\">\n  <img src=\"https://user-images.githubusercontent.com/48054808/90868674-ba321f00-e3c9-11ea-83c1-f03c6dd19187.png\" width=\"70%\"/>\n</p>\n\n### 3. Read data in log files using LogReader\n\nVisualDL also provides `LogReader` interface to read any data from log files.\n\n```python\nclass LogReader(file_path='')\n```\n#### Interface Parameters\n| parameters | type   | meaning                              |\n| ---------- | ------ | ------------------------------------ |\n| file_path  | string | File path of the log file. Required. |\n#### Example\nIf there is a log file named `vdlrecords.1605533348.log` in the directory of `./log`, we can retrieve the data under the 'loss' tag in the scalar by:\n```python\nfrom visualdl import LogReader\nreader = LogReader(file_path='./vdlrecords.1605533348.log')\ndata = reader.get_data('scalar', 'loss')\nprint(data)\n```\nThe result will be a list shown as below：\n```python\n...\nid: 5\ntag: \"Metrics/Training(Step): loss\"\ntimestamp: 1605533356039\nvalue: 3.1297709941864014\n...\n```\n\nFor more information of `LogReader`, please refer to [LogReader](./docs/io/LogReader.md).\n\n\n## Function Preview\n\n### Scalar\n\n**Scalar** makes use of various charts to display how the parameters, such as accuracy, loss and learning rate, changes during the training process. In this case, developers can observe not only the single but also the multiple groups of parameters in order to understand the training process and thus speed up the process of model tuning.\n\n#### Dynamic Display\n\nAfter the launch of VisualDL Board, the LogReader will continuously record the data to display in the front-end. Hence, the changes of parameters can be visualized in real-time, as shown below:\n\n<p align=\"center\">\n  <img src=\"https://visualdl.bj.bcebos.com/images/dynamic_display.gif\" width=\"60%\"/>\n</p>\n\n\n\n#### Comparison of Multiple Experiments\n\nDevelopers can compare multiple experiments by specifying and uploading the path of each experiment at the same time so as to visualize the same parameters in the same chart.\n\n<p align=\"center\">\n  <img src=\"https://user-images.githubusercontent.com/48054808/90869567-fdd95880-e3ca-11ea-9855-6c97ad5c8ae7.gif\" width=\"100%\"/>\n</p>\n\n\n\n### Image\n\n**Image** provides real-time visualizations of the image data during the training process, allowing developers to observe the changes of images at different training stages and  to deeply understand the effects of the training process.\n\n<p align=\"center\">\n<img src=\"https://user-images.githubusercontent.com/48054808/90869677-22353500-e3cb-11ea-9830-2334bdd8e52e.gif\" width=\"55%\"/>\n</p>\n\n\n### Audio\n\n**Audio** aims to allow developers to listen to the audio data in real-time during the training process, helping developers to monitor the process of speech recognition and text-to-speech.\n\n<p align=\"center\">\n<img src=\"https://user-images.githubusercontent.com/48054808/90869771-47c23e80-e3cb-11ea-8b2a-a38b6c33d64b.png\" width=\"85%\"/>\n</p>\n\n\n### Text\n**Text** visualizes the text output of NLP models within any stage, aiding developers to compare the changes of outputs so as to deeply understand the training process and simply evaluate the performance of the model.\n\n<p align=\"center\">\n<img src=\"https://user-images.githubusercontent.com/28444161/106248340-cdd09400-624b-11eb-8ea9-5a07a239c365.png\" width=\"85%\"/>\n</p>\n\n\n### Graph\n\n**Graph** enables developers to visualize model structures by only one click. Moreover, **Graph** allows developers to explore model attributes, node information, node input and output. aiding them analyze model structures quickly and understand the direction of data flow easily. Additionally, Graph supports the visualization of dynamic and static model graph respectively.\n\n- dynamic graph\n\n<p align=\"center\">\n<img src=\"https://user-images.githubusercontent.com/22424850/175811841-64b44d99-7d48-4fe9-a679-01156d15af74.gif\" width=\"85%\"/>\n</p>\n\n- static graph\n\n<p align=\"center\">\n<img src=\"https://user-images.githubusercontent.com/22424850/175811795-1fd21737-06f0-42fc-bea3-ef7a17216fc9.gif\" width=\"85%\"/>\n</p>\n\n\n### Histogram\n\n**Histogram** displays how the trend of tensor (weight, bias, gradient, etc.) changes during the training process in the form of histogram. Developers can adjust the model structures accurately by having an in-depth understanding of the effect of each layer.\n\n- Offset Mode\n\n<p align=\"center\">\n<img src=\"https://user-images.githubusercontent.com/48054808/90870121-bd2e0f00-e3cb-11ea-89cf-6622cb607b89.png\" width=\"85%\"/>\n</p>\n\n\n\n- Overlay Mode\n\n<p align=\"center\">\n<img src=\"https://user-images.githubusercontent.com/48054808/90870194-cfa84880-e3cb-11ea-8a66-bebcad267a10.png\" width=\"85%\"/>\n</p>\n\n### PR Curve\n\n**PR Curve** displays the precision and recall values under different thresholds, helping developers to find the best threshold efficiently.\n\n<p align=\"center\">\n<img src=\"https://user-images.githubusercontent.com/48054808/103274647-1ef72900-49fd-11eb-9284-2a5b63bdf2e3.png\" width=\"85%\"/>\n</p>\n\n### ROC Curve\n\n**ROC Curve** shows the performance of a classification model at all classification thresholds; the larger the area under the curve, the better the model performs, aiding developers in evaluating the model performance and choosing an appropriate threshold.\n\n<p align=\"center\">\n<img src=\"https://user-images.githubusercontent.com/48054808/103344081-8928d000-4ac8-11eb-84d0-28f249886172.gif\" width=\"85%\"/>\n</p>\n\n\n### High Dimensional\n\n**High Dimensional** provides three approaches--T-SNE, PCA and UMAP--to do the dimensionality reduction, allowing developers to have an in-depth analysis of the relationship between high-dimensional data and to optimize algorithms based on the analysis.\n\n<p align=\"center\">\n<img src=\"https://user-images.githubusercontent.com/48054808/103188111-1b32ac00-4902-11eb-914e-c2368bdb8373.gif\" width=\"85%\"/>\n</p>\n\n\n### Hyper Parameters\n\n**Hyper Parameters** visualize the relationship between hyperparameters and model metrics (such as accuracy and loss) in a rich view, helping you identify the best hyperparameters in an efficient way.\n\n<p align=\"center\">\n<img src=\"https://user-images.githubusercontent.com/28444161/119247155-e9c0c280-bbb9-11eb-8175-58a9c7657a9c.gif\" width=\"85%\"/>\n</p>\n\n### Performance Analysis\n**Performance Analysis**(Profiler) visualize the profiling data collected during your program runs, helping you identify program bottlenecks and optimize performance. Please refer to [VisualDL Profiler Guide](./profiler/README.md)。\n<p align=\"center\">\n<img src=\"https://user-images.githubusercontent.com/22424850/185894151-53ffc60b-7203-4cb8-a289-5d97332d0691.gif\" width=\"85%\"/>\n</p>\n\n### Performance Analysis\n**Performance Analysis**(Profiler) visualize the profiling data collected during your program runs, helping you identify program bottlenecks and optimize performance. Please refer to [VisualDL Profiler Guide](./docs/components/profiler/README.md).\n<p align=\"center\">\n<img src=\"https://user-images.githubusercontent.com/22424850/185894151-53ffc60b-7203-4cb8-a289-5d97332d0691.gif\" width=\"85%\"/>\n</p>\n\n### X2Paddle\nThe X2Paddle component provides the functions of onnx model format visualization and transformation to paddle format.\n\n<p align=\"center\">\n  <img src=\"https://user-images.githubusercontent.com/22424850/211203066-f2e43ef5-104f-436a-b44c-cad2b37ad518.gif\" width=\"100%\"/>\n</p>\n\n\n### FastDeployServer\nThe FastDeployServer component provides the functions of loading and editing the model repository, fastdeployserver service management and monitoring, and providing the client to test service. Please refer to [use VisualDL for fastdeploy serving deployment visualization](./docs/components/fastdeploy_server/README.md).\n\n <p align=\"center\">\n  <img src=\"https://user-images.githubusercontent.com/22424850/211196832-1a05bf80-5aaa-493f-bba2-27e819c18bb9.gif\" width=\"100%\"/>\n</p>\n\n\n### FastDeployClient\nThe FastDeployClient component is mainly used to quickly access the fastdeployserver service, to help users visualize prediction requests and results. Please refer to [use VisualDL as fastdeploy client for request visualization](./docs/components/fastdeploy_client/README.md).\n\n<p align=\"center\">\n  <img src=\"https://user-images.githubusercontent.com/22424850/211203852-059d5b98-6299-4057-97d8-5209805aa67f.gif\" width=\"100%\"/>\n</p>\n\n\n### VDL.service\n\n**VDL.service** enables developers to easily save, track and share visualization results with anyone for free.\n\n<p align=\"center\">\n<img src=https://user-images.githubusercontent.com/48054808/93731055-fbeafb00-fbfd-11ea-80f4-bbfd08a0fc35.png width=\"85%\"/>\n</p>\n\n\n## Frequently Asked Questions\n\nIf you are confronted with some problems when using VisualDL, please refer to [our FAQs](./docs/faq.md).\n\n## Contribution\n\nVisualDL, in which Graph is powered by [Netron](https://github.com/lutzroeder/netron), is an open source project supported by [PaddlePaddle](https://www.paddlepaddle.org/) and [ECharts](https://echarts.apache.org/).\n\nDevelopers are warmly welcomed to use, comment and contribute.\n\n## More Details\n\nFor more details related to the use of VisualDL, please refer to [**VisualDL User Guide**](./docs/components/README.md), [**VisualDL Profiler Guide**](./docs/components/profiler/README.md), [**Use VisualDL for fastdeploy serving deployment visualization**](./docs/components/fastdeploy_server/README.md), [**Use VisualDL as fastdeploy client for request visualization**](./docs/components/fastdeploy_client/README.md).\n\n## Technical Communication\n\nWelcome to join the official QQ group 1045783368 to communicate with PaddlePaddle team and other developers.\n\n<p align=\"center\">\n<img src=\"https://user-images.githubusercontent.com/48054808/82522691-c2758680-9b5c-11ea-9aee-fca994aba175.png\" width=\"20%\"/>\n</p>\n\n\n\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/visualdl-2.5.2.dist-info",
      "installer": "pip",
      "requested": true
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "watchdog",
        "version": "3.0.0",
        "summary": "Filesystem events monitoring",
        "description_content_type": "text/x-rst",
        "keywords": [
          "python",
          "filesystem",
          "monitoring",
          "monitor",
          "FSEvents",
          "kqueue",
          "inotify",
          "ReadDirectoryChangesW",
          "polling",
          "DirectorySnapshot"
        ],
        "home_page": "https://github.com/gorakhargosh/watchdog",
        "author": "Yesudeep Mangalapilly",
        "author_email": "yesudeep@gmail.com",
        "license": "Apache License 2.0",
        "classifier": [
          "Development Status :: 3 - Alpha",
          "Environment :: Console",
          "Intended Audience :: Developers",
          "Intended Audience :: System Administrators",
          "License :: OSI Approved :: Apache Software License",
          "Natural Language :: English",
          "Operating System :: POSIX :: Linux",
          "Operating System :: MacOS :: MacOS X",
          "Operating System :: POSIX :: BSD",
          "Operating System :: Microsoft :: Windows :: Windows Vista",
          "Operating System :: Microsoft :: Windows :: Windows 7",
          "Operating System :: Microsoft :: Windows :: Windows 8",
          "Operating System :: Microsoft :: Windows :: Windows 8.1",
          "Operating System :: Microsoft :: Windows :: Windows 10",
          "Operating System :: Microsoft :: Windows :: Windows 11",
          "Operating System :: OS Independent",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3 :: Only",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Programming Language :: Python :: Implementation :: PyPy",
          "Programming Language :: C",
          "Topic :: Software Development :: Libraries",
          "Topic :: System :: Monitoring",
          "Topic :: System :: Filesystems",
          "Topic :: Utilities"
        ],
        "requires_dist": [
          "PyYAML (>=3.10) ; extra == 'watchmedo'"
        ],
        "requires_python": ">=3.7",
        "project_url": [
          "Documentation, https://python-watchdog.readthedocs.io/en/stable/",
          "Source, https://github.com/gorakhargosh/watchdog/",
          "Issues, https://github.com/gorakhargosh/watchdog/issues",
          "Changelog, https://github.com/gorakhargosh/watchdog/blob/master/changelog.rst"
        ],
        "provides_extra": [
          "watchmedo"
        ],
        "description": "Watchdog\n========\n\n|Build Status|\n|CirrusCI Status|\n\nPython API and shell utilities to monitor file system events.\n\nWorks on 3.7+.\n\nExample API Usage\n-----------------\n\nA simple program that uses watchdog to monitor directories specified\nas command-line arguments and logs events generated:\n\n.. code-block:: python\n\n    import sys\n    import time\n    import logging\n    from watchdog.observers import Observer\n    from watchdog.events import LoggingEventHandler\n\n    if __name__ == \"__main__\":\n        logging.basicConfig(level=logging.INFO,\n                            format='%(asctime)s - %(message)s',\n                            datefmt='%Y-%m-%d %H:%M:%S')\n        path = sys.argv[1] if len(sys.argv) > 1 else '.'\n        event_handler = LoggingEventHandler()\n        observer = Observer()\n        observer.schedule(event_handler, path, recursive=True)\n        observer.start()\n        try:\n            while True:\n                time.sleep(1)\n        finally:\n            observer.stop()\n            observer.join()\n\n\nShell Utilities\n---------------\n\nWatchdog comes with an *optional* utility script called ``watchmedo``.\nPlease type ``watchmedo --help`` at the shell prompt to\nknow more about this tool.\n\nHere is how you can log the current directory recursively\nfor events related only to ``*.py`` and ``*.txt`` files while\nignoring all directory events:\n\n.. code-block:: bash\n\n    watchmedo log \\\n        --patterns=\"*.py;*.txt\" \\\n        --ignore-directories \\\n        --recursive \\\n        --verbose \\\n        .\n\nYou can use the ``shell-command`` subcommand to execute shell commands in\nresponse to events:\n\n.. code-block:: bash\n\n    watchmedo shell-command \\\n        --patterns=\"*.py;*.txt\" \\\n        --recursive \\\n        --command='echo \"${watch_src_path}\"' \\\n        .\n\nPlease see the help information for these commands by typing:\n\n.. code-block:: bash\n\n    watchmedo [command] --help\n\n\nAbout ``watchmedo`` Tricks\n~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n``watchmedo`` can read ``tricks.yaml`` files and execute tricks within them in\nresponse to file system events. Tricks are actually event handlers that\nsubclass ``watchdog.tricks.Trick`` and are written by plugin authors. Trick\nclasses are augmented with a few additional features that regular event handlers\ndon't need.\n\nAn example ``tricks.yaml`` file:\n\n.. code-block:: yaml\n\n    tricks:\n    - watchdog.tricks.LoggerTrick:\n        patterns: [\"*.py\", \"*.js\"]\n    - watchmedo_webtricks.GoogleClosureTrick:\n        patterns: ['*.js']\n        hash_names: true\n        mappings_format: json                  # json|yaml|python\n        mappings_module: app/javascript_mappings\n        suffix: .min.js\n        compilation_level: advanced            # simple|advanced\n        source_directory: app/static/js/\n        destination_directory: app/public/js/\n        files:\n          index-page:\n          - app/static/js/vendor/jquery*.js\n          - app/static/js/base.js\n          - app/static/js/index-page.js\n          about-page:\n          - app/static/js/vendor/jquery*.js\n          - app/static/js/base.js\n          - app/static/js/about-page/**/*.js\n\nThe directory containing the ``tricks.yaml`` file will be monitored. Each trick\nclass is initialized with its corresponding keys in the ``tricks.yaml`` file as\narguments and events are fed to an instance of this class as they arrive.\n\nInstallation\n------------\nInstall from PyPI using ``pip``:\n\n.. code-block:: bash\n\n    $ python -m pip install -U watchdog\n\n    # or to install the watchmedo utility:\n    $ python -m pip install -U \"watchdog[watchmedo]\"\n\nInstall from source:\n\n.. code-block:: bash\n\n    $ python -m pip install -e .\n\n    # or to install the watchmedo utility:\n    $ python -m pip install -e \".[watchmedo]\"\n\n\nDocumentation\n-------------\n\nYou can browse the latest release documentation_ online.\n\nContribute\n----------\n\nFork the `repository`_ on GitHub and send a pull request, or file an issue\nticket at the `issue tracker`_. For general help and questions use\n`stackoverflow`_ with tag `python-watchdog`.\n\nCreate and activate your virtual environment, then::\n\n    python -m pip install pytest pytest-cov\n    python -m pip install -e \".[watchmedo]\"\n    python -m pytest tests\n\nIf you are making a substantial change, add an entry to the \"Unreleased\" section\nof the `changelog`_.\n\nSupported Platforms\n-------------------\n\n* Linux 2.6 (inotify)\n* macOS (FSEvents, kqueue)\n* FreeBSD/BSD (kqueue)\n* Windows (ReadDirectoryChangesW with I/O completion ports;\n  ReadDirectoryChangesW worker threads)\n* OS-independent (polling the disk for directory snapshots and comparing them\n  periodically; slow and not recommended)\n\nNote that when using watchdog with kqueue, you need the\nnumber of file descriptors allowed to be opened by programs\nrunning on your system to be increased to more than the\nnumber of files that you will be monitoring. The easiest way\nto do that is to edit your ``~/.profile`` file and add\na line similar to::\n\n    ulimit -n 1024\n\nThis is an inherent problem with kqueue because it uses\nfile descriptors to monitor files. That plus the enormous\namount of bookkeeping that watchdog needs to do in order\nto monitor file descriptors just makes this a painful way\nto monitor files and directories. In essence, kqueue is\nnot a very scalable way to monitor a deeply nested\ndirectory of files and directories with a large number of\nfiles.\n\nAbout using watchdog with editors like Vim\n------------------------------------------\n\nVim does not modify files unless directed to do so.\nIt creates backup files and then swaps them in to replace\nthe files you are editing on the disk. This means that\nif you use Vim to edit your files, the on-modified events\nfor those files will not be triggered by watchdog.\nYou may need to configure Vim appropriately to disable\nthis feature.\n\n\nAbout using watchdog with CIFS\n------------------------------\n\nWhen you want to watch changes in CIFS, you need to explicitly tell watchdog to\nuse ``PollingObserver``, that is, instead of letting watchdog decide an\nappropriate observer like in the example above, do::\n\n    from watchdog.observers.polling import PollingObserver as Observer\n\n\nDependencies\n------------\n\n1. Python 3.7 or above.\n2. XCode_ (only on macOS when installing from sources)\n3. PyYAML_ (only for ``watchmedo``)\n\nLicensing\n---------\n\nWatchdog is licensed under the terms of the `Apache License, version 2.0`_.\n\nCopyright 2011 `Yesudeep Mangalapilly`_.\n\nCopyright 2012 Google, Inc & contributors.\n\nProject `source code`_ is available at Github. Please report bugs and file\nenhancement requests at the `issue tracker`_.\n\nWhy Watchdog?\n-------------\n\nToo many people tried to do the same thing and none did what I needed Python\nto do:\n\n* pnotify_\n* `unison fsmonitor`_\n* fsmonitor_\n* guard_\n* pyinotify_\n* `inotify-tools`_\n* jnotify_\n* treewatcher_\n* `file.monitor`_\n* pyfilesystem_\n\n.. links:\n.. _Yesudeep Mangalapilly: yesudeep@gmail.com\n.. _source code: https://github.com/gorakhargosh/watchdog\n.. _issue tracker: https://github.com/gorakhargosh/watchdog/issues\n.. _Apache License, version 2.0: https://www.apache.org/licenses/LICENSE-2.0\n.. _documentation: https://python-watchdog.readthedocs.io/\n.. _stackoverflow: https://stackoverflow.com/questions/tagged/python-watchdog\n.. _repository: https://github.com/gorakhargosh/watchdog\n.. _issue tracker: https://github.com/gorakhargosh/watchdog/issues\n.. _changelog: https://github.com/gorakhargosh/watchdog/blob/master/changelog.rst\n\n.. _PyYAML: https://www.pyyaml.org/\n.. _XCode: https://developer.apple.com/technologies/tools/xcode.html\n\n.. _pnotify: http://mark.heily.com/pnotify\n.. _unison fsmonitor: https://webdav.seas.upenn.edu/viewvc/unison/trunk/src/fsmonitor.py?view=markup&pathrev=471\n.. _fsmonitor: https://github.com/shaurz/fsmonitor\n.. _guard: https://github.com/guard/guard\n.. _pyinotify: https://github.com/seb-m/pyinotify\n.. _inotify-tools: https://github.com/rvoicilas/inotify-tools\n.. _jnotify: http://jnotify.sourceforge.net/\n.. _treewatcher: https://github.com/jbd/treewatcher\n.. _file.monitor: https://github.com/pke/file.monitor\n.. _pyfilesystem: https://github.com/PyFilesystem/pyfilesystem\n\n.. |Build Status| image:: https://github.com/gorakhargosh/watchdog/workflows/Tests/badge.svg\n   :target: https://github.com/gorakhargosh/watchdog/actions?query=workflow%3ATests\n.. |CirrusCI Status| image:: https://api.cirrus-ci.com/github/gorakhargosh/watchdog.svg\n   :target: https://cirrus-ci.com/github/gorakhargosh/watchdog/\n\n\n.. :changelog:\n\nChangelog\n---------\n\n3.0.0\n~~~~~\n\n2023-03-20 • `full history <https://github.com/gorakhargosh/watchdog/compare/v2.3.1...v3.0.0>`__\n\n- Drop support for Python 3.6.\n- ``watchdog`` is now PEP 561 compatible, and tested with ``mypy``\n- Fix missing ``>`` in ``FileSystemEvent.__repr__()``  (`#980 <https://github.com/gorakhargosh/watchdog/pull/980>`__)\n- [ci] Lots of improvements\n- [inotify] Return from ``InotifyEmitter.queue_events()`` if not launched when thread is inactive (`#963 <https://github.com/gorakhargosh/watchdog/pull/963>`__)\n- [tests] Stability improvements\n- [utils] Remove handling of ``threading.Event.isSet`` spelling (`#962 <https://github.com/gorakhargosh/watchdog/pull/962>`__)\n- [watchmedo] Fixed tricks YAML generation (`#965 <https://github.com/gorakhargosh/watchdog/pull/965>`__)\n- Thanks to our beloved contributors: @kurtmckee, @altendky, @agroszer, @BoboTiG\n\n2.3.1\n~~~~~\n\n2023-02-28 • `full history <https://github.com/gorakhargosh/watchdog/compare/v2.3.0...v2.3.1>`__\n\n- Run ``black`` on the entire source code\n- Bundle the ``requirements-tests.txt`` file in the source distribution (`#939 <https://github.com/gorakhargosh/watchdog/pull/939>`__)\n- [watchmedo] Exclude ``FileOpenedEvent`` events from ``AutoRestartTrick``, and ``ShellCommandTrick``, to restore watchdog < 2.3.0 behavior. A better solution should be found in the future. (`#949 <https://github.com/gorakhargosh/watchdog/pull/949>`__)\n- [watchmedo] Log ``FileOpenedEvent``, and ``FileClosedEvent``, events in ``LoggerTrick``\n- Thanks to our beloved contributors: @BoboTiG\n\n2.3.0\n~~~~~\n\n2023-02-23 • `full history <https://github.com/gorakhargosh/watchdog/compare/v2.2.1...v2.3.0>`__\n\n- [inotify] Add support for ``IN_OPEN`` events: a ``FileOpenedEvent`` event will be fired (`#941 <https://github.com/gorakhargosh/watchdog/pull/941>`__)\n- [watchmedo] Add optional event debouncing for ``auto-restart``, only restarting once if many events happen in quick succession (``--debounce-interval``) (`#940 <https://github.com/gorakhargosh/watchdog/pull/940>`__)\n- [watchmedo] Exit gracefully on ``KeyboardInterrupt`` exception (Ctrl+C) (`#945 <https://github.com/gorakhargosh/watchdog/pull/945>`__)\n- [watchmedo] Add option to not auto-restart the command after it exits (``--no-restart-on-command-exit``) (`#946 <https://github.com/gorakhargosh/watchdog/pull/946>`__)\n- Thanks to our beloved contributors: @BoboTiG, @dstaple, @taleinat, @cernekj\n\n2.2.1\n~~~~~\n\n2023-01-01 • `full history <https://github.com/gorakhargosh/watchdog/compare/v2.2.0...v2.2.1>`__\n\n- Enable ``mypy`` to discover type hints as specified in PEP 561 (`#933 <https://github.com/gorakhargosh/watchdog/pull/933>`__)\n- [ci] Set the expected Python version when building release files\n- [ci] Update actions versions in use\n- [watchmedo] [regression] Fix usage of missing ``signal.SIGHUP`` attribute on non-Unix OSes (`#935 <https://github.com/gorakhargosh/watchdog/pull/935>`__)\n- Thanks to our beloved contributors: @BoboTiG, @simon04, @piotrpdev\n\n2.2.0\n~~~~~\n\n2022-12-05 • `full history <https://github.com/gorakhargosh/watchdog/compare/v2.1.9...v2.2.0>`__\n\n- [build] Wheels are now available for Python 3.11 (`#932 <https://github.com/gorakhargosh/watchdog/pull/932>`__)\n- [documentation] HTML documentation builds are now tested for errors (`#902 <https://github.com/gorakhargosh/watchdog/pull/902>`__)\n- [documentation] Fix typos here, and there (`#910 <https://github.com/gorakhargosh/watchdog/pull/910>`__)\n- [fsevents2] The ``fsevents2`` observer is now deprecated (`#909 <https://github.com/gorakhargosh/watchdog/pull/909>`__)\n- [tests] The error message returned by musl libc for error code ``-1`` is now allowed (`#923 <https://github.com/gorakhargosh/watchdog/pull/923>`__)\n- [utils] Remove unnecessary code in ``dirsnapshot.py`` (`#930 <https://github.com/gorakhargosh/watchdog/pull/930>`__)\n- [watchmedo] Handle shutdown events from ``SIGHUP`` (`#912 <https://github.com/gorakhargosh/watchdog/pull/912>`__)\n- Thanks to our beloved contributors: @kurtmckee, @babymastodon, @QuantumEnergyE, @timgates42, @BoboTiG\n\n2.1.9\n~~~~~\n\n2022-06-10 • `full history <https://github.com/gorakhargosh/watchdog/compare/v2.1.8...v2.1.9>`__\n\n- [fsevents] Fix flakey test to assert that there are no errors when stopping the emitter.\n- [inotify] Suppress occasional ``OSError: [Errno 9] Bad file descriptor`` at shutdown. (`#805 <https://github.com/gorakhargosh/watchdog/issues/805>`__)\n- [watchmedo] Make ``auto-restart`` restart the sub-process if it terminates. (`#896 <https://github.com/gorakhargosh/watchdog/pull/896>`__)\n- [watchmedo] Avoid zombie sub-processes when running ``shell-command`` without ``--wait``. (`#405 <https://github.com/gorakhargosh/watchdog/issues/405>`__)\n- Thanks to our beloved contributors: @samschott, @taleinat, @altendky, @BoboTiG\n\n2.1.8\n~~~~~\n\n2022-05-15 • `full history <https://github.com/gorakhargosh/watchdog/compare/v2.1.7...v2.1.8>`__\n\n- Fix adding failed emitters on observer schedule. (`#872 <https://github.com/gorakhargosh/watchdog/issues/872>`__)\n- [inotify] Fix hang when unscheduling watch on a path in an unmounted filesystem. (`#869 <https://github.com/gorakhargosh/watchdog/pull/869>`__)\n- [watchmedo] Fix broken parsing of ``--kill-after`` argument for the ``auto-restart`` command. (`#870 <https://github.com/gorakhargosh/watchdog/issues/870>`__)\n- [watchmedo] Fix broken parsing of boolean arguments. (`#887 <https://github.com/gorakhargosh/watchdog/issues/887>`__)\n- [watchmedo] Fix broken parsing of commands from ``auto-restart``, and ``shell-command``. (`#888 <https://github.com/gorakhargosh/watchdog/issues/888>`__)\n- [watchmedo] Support setting verbosity level via ``-q/--quiet`` and ``-v/--verbose`` arguments. (`#889 <https://github.com/gorakhargosh/watchdog/pull/889>`__)\n- Thanks to our beloved contributors: @taleinat, @kianmeng, @palfrey, @IlayRosenberg, @BoboTiG\n\n2.1.7\n~~~~~\n\n2022-03-25 • `full history <https://github.com/gorakhargosh/watchdog/compare/v2.1.6...v2.1.7>`__\n\n- Eliminate timeout in waiting on event queue. (`#861 <https://github.com/gorakhargosh/watchdog/pull/861>`__)\n- [inotify] Fix ``not`` equality implementation for ``InotifyEvent``. (`#848 <https://github.com/gorakhargosh/watchdog/pull/848>`__)\n- [watchmedo] Fix calling commands from within a Python script. (`#879 <https://github.com/gorakhargosh/watchdog/pull/879>`__)\n- [watchmedo] ``PyYAML`` is loaded only when strictly necessary. Simple usages of ``watchmedo`` are possible without the module being installed. (`#847 <https://github.com/gorakhargosh/watchdog/pull/847>`__)\n- Thanks to our beloved contributors: @sattlerc, @JanzenLiu, @BoboTiG\n\n2.1.6\n~~~~~\n\n2021-10-01 • `full history <https://github.com/gorakhargosh/watchdog/compare/v2.1.5...v2.1.6>`__\n\n- [bsd] Fixed returned paths in ``kqueue.py`` and restored the overall results of the test suite. (`#842 <https://github.com/gorakhargosh/watchdog/pull/842>`__)\n- [bsd] Updated FreeBSD CI support .(`#841 <https://github.com/gorakhargosh/watchdog/pull/841>`__)\n- [watchmedo] Removed the ``argh`` dependency in favor of the builtin ``argparse`` module. (`#836 <https://github.com/gorakhargosh/watchdog/pull/836>`__)\n- [watchmedo] Removed unexistant ``WindowsApiAsyncObserver`` references and ``--debug-force-winapi-async`` arguments.\n- [watchmedo] Improved the help output.\n- Thanks to our beloved contributors: @knobix, @AndreaRe9, @BoboTiG\n\n2.1.5\n~~~~~\n\n2021-08-23 • `full history <https://github.com/gorakhargosh/watchdog/compare/v2.1.4...v2.1.5>`__\n\n- Fix regression introduced in 2.1.4 (reverted \"Allow overriding or adding custom event handlers to event dispatch map. (`#814 <https://github.com/gorakhargosh/watchdog/pull/814>`__)\"). (`#830 <https://github.com/gorakhargosh/watchdog/pull/830>`__)\n- Convert regexes of type ``str`` to ``list``. (`831 <https://github.com/gorakhargosh/watchdog/pull/831>`__)\n- Thanks to our beloved contributors: @unique1o1, @BoboTiG\n\n2.1.4\n~~~~~\n\n2021-08-19 • `full history <https://github.com/gorakhargosh/watchdog/compare/v2.1.3...v2.1.4>`__\n\n- [watchmedo] Fix usage of ``os.setsid()`` and ``os.killpg()`` Unix-only functions. (`#809 <https://github.com/gorakhargosh/watchdog/pull/809>`__)\n- [mac] Fix missing ``FileModifiedEvent`` on permission or ownership changes of a file. (`#815 <https://github.com/gorakhargosh/watchdog/pull/815>`__)\n- [mac] Convert absolute watch path in ``FSEeventsEmitter`` with ``os.path.realpath()``. (`#822 <https://github.com/gorakhargosh/watchdog/pull/822>`__)\n- Fix a possible ``AttributeError`` in ``SkipRepeatsQueue._put()``. (`#818 <https://github.com/gorakhargosh/watchdog/pull/818>`__)\n- Allow overriding or adding custom event handlers to event dispatch map. (`#814 <https://github.com/gorakhargosh/watchdog/pull/814>`__)\n- Fix tests on big endian platforms. (`#828 <https://github.com/gorakhargosh/watchdog/pull/828>`__)\n- Thanks to our beloved contributors: @replabrobin, @BoboTiG, @SamSchott, @AndreiB97, @NiklasRosenstein, @ikokollari, @mgorny\n\n2.1.3\n~~~~~\n\n2021-06-26 • `full history <https://github.com/gorakhargosh/watchdog/compare/v2.1.2...v2.1.3>`__\n\n- Publish macOS ``arm64`` and ``universal2`` wheels. (`#740 <https://github.com/gorakhargosh/watchdog/pull/740>`__)\n- Thanks to our beloved contributors: @kainjow, @BoboTiG\n\n2.1.2\n~~~~~\n\n2021-05-19 • `full history <https://github.com/gorakhargosh/watchdog/compare/v2.1.1...v2.1.2>`__\n\n- [mac] Fix relative path handling for non-recursive watch. (`#797 <https://github.com/gorakhargosh/watchdog/pull/797>`__)\n- [windows] On PyPy, events happening right after ``start()`` were missed. Add a workaround for that. (`#796 <https://github.com/gorakhargosh/watchdog/pull/796>`__)\n- Thanks to our beloved contributors: @oprypin, @CCP-Aporia, @BoboTiG\n\n2.1.1\n~~~~~\n\n2021-05-10 • `full history <https://github.com/gorakhargosh/watchdog/compare/v2.1.0...v2.1.1>`__\n\n- [mac] Fix callback exceptions when the watcher is deleted but still receiving events (`#786 <https://github.com/gorakhargosh/watchdog/pull/786>`__)\n- Thanks to our beloved contributors: @rom1win, @BoboTiG, @CCP-Aporia\n\n\n2.1.0\n~~~~~\n\n2021-05-04 • `full history <https://github.com/gorakhargosh/watchdog/compare/v2.0.3...v2.1.0>`__\n\n- [inotify] Simplify ``libc`` loading (`#776 <https://github.com/gorakhargosh/watchdog/pull/776>`__)\n- [mac] Add support for non-recursive watches in ``FSEventsEmitter`` (`#779 <https://github.com/gorakhargosh/watchdog/pull/779>`__)\n- [watchmedo] Add support for ``--debug-force-*`` arguments to ``tricks`` (`#781 <https://github.com/gorakhargosh/watchdog/pull/781>`__)\n- Thanks to our beloved contributors: @CCP-Aporia, @aodj, @UnitedMarsupials, @BoboTiG\n\n\n2.0.3\n~~~~~\n\n2021-04-22 • `full history <https://github.com/gorakhargosh/watchdog/compare/v2.0.2...v2.0.3>`__\n\n- [mac] Use ``logger.debug()`` instead of ``logger.info()`` (`#774 <https://github.com/gorakhargosh/watchdog/pull/774>`__)\n- Updated documentation links (`#777 <https://github.com/gorakhargosh/watchdog/pull/777>`__)\n- Thanks to our beloved contributors: @globau, @imba-tjd, @BoboTiG\n\n\n2.0.2\n~~~~~\n\n2021-02-22 • `full history <https://github.com/gorakhargosh/watchdog/compare/v2.0.1...v2.0.2>`__\n\n- [mac] Add missing exception objects (`#766 <https://github.com/gorakhargosh/watchdog/pull/766>`__)\n- Thanks to our beloved contributors: @CCP-Aporia, @BoboTiG\n\n\n2.0.1\n~~~~~\n\n2021-02-17 • `full history <https://github.com/gorakhargosh/watchdog/compare/v2.0.0...v2.0.1>`__\n\n- [mac] Fix a segmentation fault when dealing with unicode paths (`#763 <https://github.com/gorakhargosh/watchdog/pull/763>`__)\n- Moved the CI from Travis-CI to GitHub Actions (`#764 <https://github.com/gorakhargosh/watchdog/pull/764>`__)\n- Thanks to our beloved contributors: @SamSchott, @BoboTiG\n\n\n2.0.0\n~~~~~\n\n2021-02-11 • `full history <https://github.com/gorakhargosh/watchdog/compare/v1.0.2...v2.0.0>`__\n\n- Avoid deprecated ``PyEval_InitThreads`` on Python 3.7+ (`#746 <https://github.com/gorakhargosh/watchdog/pull/746>`__)\n- [inotify] Add support for ``IN_CLOSE_WRITE`` events. A ``FileCloseEvent`` event will be fired. Note that ``IN_CLOSE_NOWRITE`` events are not handled to prevent much noise. (`#184 <https://github.com/gorakhargosh/watchdog/pull/184>`__, `#245 <https://github.com/gorakhargosh/watchdog/pull/245>`__, `#280 <https://github.com/gorakhargosh/watchdog/pull/280>`__, `#313 <https://github.com/gorakhargosh/watchdog/pull/313>`__, `#690 <https://github.com/gorakhargosh/watchdog/pull/690>`__)\n- [inotify] Allow to stop the emitter multiple times (`#760 <https://github.com/gorakhargosh/watchdog/pull/760>`__)\n- [mac] Support coalesced filesystem events (`#734 <https://github.com/gorakhargosh/watchdog/pull/734>`__)\n- [mac] Drop support for macOS 10.12 and earlier (`#750 <https://github.com/gorakhargosh/watchdog/pull/750>`__)\n- [mac] Fix an issue when renaming an item changes only the casing (`#750 <https://github.com/gorakhargosh/watchdog/pull/750>`__)\n- Thanks to our beloved contributors: @bstaletic, @lukassup, @ysard, @SamSchott, @CCP-Aporia, @BoboTiG\n\n\n1.0.2\n~~~~~\n\n2020-12-18 • `full history <https://github.com/gorakhargosh/watchdog/compare/v1.0.1...v1.0.2>`__\n\n- Wheels are published for GNU/Linux, macOS and Windows (`#739 <https://github.com/gorakhargosh/watchdog/pull/739>`__)\n- [mac] Fix missing ``event_id`` attribute in ``fsevents`` (`#721 <https://github.com/gorakhargosh/watchdog/pull/721>`__)\n- [mac] Return byte paths if a byte path was given in ``fsevents`` (`#726 <https://github.com/gorakhargosh/watchdog/pull/726>`__)\n- [mac] Add compatibility with old macOS versions (`#733 <https://github.com/gorakhargosh/watchdog/pull/733>`__)\n- Uniformize event for deletion of watched dir (`#727 <https://github.com/gorakhargosh/watchdog/pull/727>`__)\n- Thanks to our beloved contributors: @SamSchott, @CCP-Aporia, @di, @BoboTiG\n\n\n1.0.1\n~~~~~\n\n2020-12-10 • Fix version with good metadatas.\n\n\n1.0.0\n~~~~~\n\n2020-12-10 • `full history <https://github.com/gorakhargosh/watchdog/compare/v0.10.4...v1.0.0>`__\n\n- Versioning is now following the `semver <https://semver.org/>`__\n- Drop support for Python 2.7, 3.4 and 3.5\n- [mac] Regression fixes for native ``fsevents`` (`#717 <https://github.com/gorakhargosh/watchdog/pull/717>`__)\n- [windows] ``winapi.BUFFER_SIZE`` now defaults to ``64000`` (instead of ``2048``) (`#700 <https://github.com/gorakhargosh/watchdog/pull/700>`__)\n- [windows] Introduced ``winapi.PATH_BUFFER_SIZE`` (defaults to ``2048``) to keep the old behavior with path-realted functions (`#700 <https://github.com/gorakhargosh/watchdog/pull/700>`__)\n- Use ``pathlib`` from the standard library, instead of pathtools (`#556 <https://github.com/gorakhargosh/watchdog/pull/556>`__)\n- Allow file paths on Unix that don't follow the file system encoding (`#703 <https://github.com/gorakhargosh/watchdog/pull/703>`__)\n- Removed the long-time deprecated ``events.LoggingFileSystemEventHandler`` class, use ``LoggingEventHandler`` instead\n- Thanks to our beloved contributors: @SamSchott, @bstaletic, @BoboTiG, @CCP-Aporia\n\n\n0.10.4\n~~~~~~\n\n2020-11-21 • `full history <https://github.com/gorakhargosh/watchdog/compare/v0.10.3...v0.10.4>`__\n\n- Add ``logger`` parameter for the ``LoggingEventHandler`` (`#676 <https://github.com/gorakhargosh/watchdog/pull/676>`__)\n- Replace mutable default arguments with ``if None`` implementation (`#677 <https://github.com/gorakhargosh/watchdog/pull/677>`__)\n- Expand tests to Python 2.7 and 3.5-3.10 for GNU/Linux, macOS and Windows\n- [mac] Performance improvements for the ``fsevents`` module (`#680 <https://github.com/gorakhargosh/watchdog/pull/680>`__)\n- [mac] Prevent compilation of ``watchdog_fsevents.c`` on non-macOS machines (`#687 <https://github.com/gorakhargosh/watchdog/pull/687>`__)\n- [watchmedo] Handle shutdown events from ``SIGTERM`` and ``SIGINT`` more reliably (`#693 <https://github.com/gorakhargosh/watchdog/pull/693>`__)\n- Thanks to our beloved contributors: @Sraw, @CCP-Aporia, @BoboTiG, @maybe-sybr\n\n\n0.10.3\n~~~~~~\n\n2020-06-25 • `full history <https://github.com/gorakhargosh/watchdog/compare/v0.10.2...v0.10.3>`__\n\n- Ensure ``ObservedWatch.path`` is a string (`#651 <https://github.com/gorakhargosh/watchdog/pull/651>`__)\n- [inotify] Allow to monitor single file (`#655 <https://github.com/gorakhargosh/watchdog/pull/655>`__)\n- [inotify] Prevent raising an exception when a file in a monitored folder has no permissions (`#669 <https://github.com/gorakhargosh/watchdog/pull/669>`__, `#670 <https://github.com/gorakhargosh/watchdog/pull/670>`__)\n- Thanks to our beloved contributors: @brant-ruan, @rec, @andfoy, @BoboTiG\n\n\n0.10.2\n~~~~~~\n\n2020-02-08 • `full history <https://github.com/gorakhargosh/watchdog/compare/v0.10.1...v0.10.2>`__\n\n- Fixed the ``build_ext`` command on macOS Catalina (`#628 <https://github.com/gorakhargosh/watchdog/pull/628>`__)\n- Fixed the installation of macOS requirements on non-macOS OSes (`#635 <https://github.com/gorakhargosh/watchdog/pull/635>`__)\n- Refactored ``dispatch()`` method of ``FileSystemEventHandler``,\n  ``PatternMatchingEventHandler`` and ``RegexMatchingEventHandler``\n- [bsd] Improved tests support on non Windows/Linux platforms (`#633 <https://github.com/gorakhargosh/watchdog/pull/633>`__, `#639 <https://github.com/gorakhargosh/watchdog/pull/639>`__)\n- [bsd] Added FreeBSD CI support (`#532 <https://github.com/gorakhargosh/watchdog/pull/532>`__)\n- [bsd] Restored full support (`#638 <https://github.com/gorakhargosh/watchdog/pull/638>`__, `#641 <https://github.com/gorakhargosh/watchdog/pull/641>`__)\n- Thanks to our beloved contributors: @BoboTiG, @evilham, @danilobellini\n\n\n0.10.1\n~~~~~~\n\n2020-01-30 • `full history <https://github.com/gorakhargosh/watchdog/compare/v0.10.0...v0.10.1>`__\n\n- Fixed Python 2.7 to 3.6 installation when the OS locale is set to POSIX (`#615 <https://github.com/gorakhargosh/watchdog/pull/615>`__)\n- Fixed the ``build_ext`` command on macOS  (`#618 <https://github.com/gorakhargosh/watchdog/pull/618>`__, `#620 <https://github.com/gorakhargosh/watchdog/pull/620>`__)\n- Moved requirements to ``setup.cfg``  (`#617 <https://github.com/gorakhargosh/watchdog/pull/617>`__)\n- [mac] Removed old C code for Python 2.5 in the `fsevents` C implementation\n- [snapshot] Added ``EmptyDirectorySnapshot`` (`#613 <https://github.com/gorakhargosh/watchdog/pull/613>`__)\n- Thanks to our beloved contributors: @Ajordat, @tehkirill, @BoboTiG\n\n\n0.10.0\n~~~~~~\n\n2020-01-26 • `full history <https://github.com/gorakhargosh/watchdog/compare/v0.9.0...v0.10.0>`__\n\n**Breaking Changes**\n\n- Dropped support for Python 2.6, 3.2 and 3.3\n- Emitters that failed to start are now removed\n- [snapshot] Removed the deprecated ``walker_callback`` argument,\n  use ``stat`` instead\n- [watchmedo] The utility is no more installed by default but via the extra\n  ``watchdog[watchmedo]``\n\n**Other Changes**\n\n- Fixed several Python 3 warnings\n- Identify synthesized events with ``is_synthetic`` attribute (`#369 <https://github.com/gorakhargosh/watchdog/pull/369>`__)\n- Use ``os.scandir()`` to improve memory usage (`#503 <https://github.com/gorakhargosh/watchdog/pull/503>`__)\n- [bsd] Fixed flavors of FreeBSD detection (`#529 <https://github.com/gorakhargosh/watchdog/pull/529>`__)\n- [bsd] Skip unprocessable socket files (`#509 <https://github.com/gorakhargosh/watchdog/issue/509>`__)\n- [inotify] Fixed events containing non-ASCII characters (`#516 <https://github.com/gorakhargosh/watchdog/issues/516>`__)\n- [inotify] Fixed the way ``OSError`` are re-raised (`#377 <https://github.com/gorakhargosh/watchdog/issues/377>`__)\n- [inotify] Fixed wrong source path after renaming a top level folder (`#515 <https://github.com/gorakhargosh/watchdog/pull/515>`__)\n- [inotify] Removed  delay from non-move events (`#477 <https://github.com/gorakhargosh/watchdog/pull/477>`__)\n- [mac] Fixed a bug when calling ``FSEventsEmitter.stop()`` twice (`#466 <https://github.com/gorakhargosh/watchdog/pull/466>`__)\n- [mac] Support for unscheduling deleted watch (`#541 <https://github.com/gorakhargosh/watchdog/issue/541>`__)\n- [mac] Fixed missing field initializers and unused parameters in\n  ``watchdog_fsevents.c``\n- [snapshot] Don't walk directories without read permissions (`#408 <https://github.com/gorakhargosh/watchdog/pull/408>`__)\n- [snapshot] Fixed a race condition crash when a directory is swapped for a file (`#513 <https://github.com/gorakhargosh/watchdog/pull/513>`__)\n- [snasphot] Fixed an ``AttributeError`` about forgotten ``path_for_inode`` attr (`#436 <https://github.com/gorakhargosh/watchdog/issues/436>`__)\n- [snasphot] Added the ``ignore_device=False`` parameter to the ctor (`597 <https://github.com/gorakhargosh/watchdog/pull/597>`__)\n- [watchmedo] Fixed the path separator used (`#478 <https://github.com/gorakhargosh/watchdog/pull/478>`__)\n- [watchmedo] Fixed the use of ``yaml.load()`` for ``yaml.safe_load()`` (`#453 <https://github.com/gorakhargosh/watchdog/issues/453>`__)\n- [watchmedo] Handle all available signals (`#549 <https://github.com/gorakhargosh/watchdog/issue/549>`__)\n- [watchmedo] Added the ``--debug-force-polling`` argument (`#404 <https://github.com/gorakhargosh/watchdog/pull/404>`__)\n- [windows] Fixed issues when the observed directory is deleted (`#570 <https://github.com/gorakhargosh/watchdog/issues/570>`__ and `#601 <https://github.com/gorakhargosh/watchdog/pull/601>`__)\n- [windows] ``WindowsApiEmitter`` made easier to subclass (`#344 <https://github.com/gorakhargosh/watchdog/pull/344>`__)\n- [windows] Use separate ctypes DLL instances\n- [windows] Generate sub created events only if ``recursive=True`` (`#454 <https://github.com/gorakhargosh/watchdog/pull/454>`__)\n- Thanks to our beloved contributors: @BoboTiG, @LKleinNux, @rrzaripov,\n  @wildmichael, @TauPan, @segevfiner, @petrblahos, @QuantumEnergyE,\n  @jeffwidman, @kapsh, @nickoala, @petrblahos, @julianolf, @tonybaloney,\n  @mbakiev, @pR0Ps, javaguirre, @skurfer, @exarkun, @joshuaskelly,\n  @danilobellini, @Ajordat\n\n\n0.9.0\n~~~~~\n\n2018-08-28 • `full history <https://github.com/gorakhargosh/watchdog/compare/v0.8.3...v0.9.0>`__\n\n- Deleting the observed directory now emits a ``DirDeletedEvent`` event\n- [bsd] Improved the platform detection (`#378 <https://github.com/gorakhargosh/watchdog/pull/378>`__)\n- [inotify] Fixed a crash when the root directory being watched by was deleted (`#374 <https://github.com/gorakhargosh/watchdog/pull/374>`__)\n- [inotify] Handle systems providing uClibc\n- [linux] Fixed a possible ``DirDeletedEvent`` duplication when\n  deleting a directory\n- [mac] Fixed unicode path handling ``fsevents2.py`` (`#298 <https://github.com/gorakhargosh/watchdog/pull/298>`__)\n- [watchmedo] Added the ``--debug-force-polling`` argument (`#336 <https://github.com/gorakhargosh/watchdog/pull/336>`__)\n- [windows] Fixed the ``FILE_LIST_DIRECTORY`` constant (`#376 <https://github.com/gorakhargosh/watchdog/pull/376>`__)\n- Thanks to our beloved contributors: @vulpeszerda, @hpk42, @tamland, @senden9,\n  @gorakhargosh, @nolsto, @mafrosis, @DonyorM, @anthrotype, @danilobellini,\n  @pierregr, @ShinNoNoir, @adrpar, @gforcada, @pR0Ps, @yegorich, @dhke\n\n\n0.8.3\n~~~~~\n\n2015-02-11 • `full history <https://github.com/gorakhargosh/watchdog/compare/v0.8.2...v0.8.3>`__\n\n- Fixed the use of the root logger (`#274 <https://github.com/gorakhargosh/watchdog/issues/274>`__)\n- [inotify] Refactored libc loading and improved error handling in\n  ``inotify_c.py``\n- [inotify] Fixed a possible unbound local error in ``inotify_c.py``\n- Thanks to our beloved contributors: @mmorearty, @tamland, @tony,\n  @gorakhargosh\n\n\n0.8.2\n~~~~~\n\n2014-10-29 • `full history <https://github.com/gorakhargosh/watchdog/compare/v0.8.1...v0.8.2>`__\n\n- Event emitters are no longer started on schedule if ``Observer`` is not\n  already running\n- [mac] Fixed usued arguments to pass clang compilation (`#265 <https://github.com/gorakhargosh/watchdog/pull/265>`__)\n- [snapshot] Fixed a possible race condition crash on directory deletion (`#281 <https://github.com/gorakhargosh/watchdog/pull/281>`__)\n- [windows] Fixed an error when watching the same folder again (`#270 <https://github.com/gorakhargosh/watchdog/pull/270>`__)\n- Thanks to our beloved contributors: @tamland, @apetrone, @Falldog,\n  @theospears\n\n\n0.8.1\n~~~~~\n\n2014-07-28 • `full history <https://github.com/gorakhargosh/watchdog/compare/v0.8.0...v0.8.1>`__\n\n- Fixed ``anon_inode`` descriptors leakage  (`#249 <https://github.com/gorakhargosh/watchdog/pull/249>`__)\n- [inotify] Fixed thread stop dead lock (`#250 <https://github.com/gorakhargosh/watchdog/issues/250>`__)\n- Thanks to our beloved contributors: @Witos, @adiroiban, @tamland\n\n\n0.8.0\n~~~~~\n\n2014-07-02 • `full history <https://github.com/gorakhargosh/watchdog/compare/v0.7.1...v0.8.0>`__\n\n- Fixed ``argh`` deprecation warnings (`#242 <https://github.com/gorakhargosh/watchdog/pull/242>`__)\n- [snapshot] Methods returning internal stats info were replaced by\n  ``mtime()``, ``inode()`` and ``path()`` methods\n- [snapshot] Deprecated the ``walker_callback`` argument\n- [watchmedo] Fixed ``auto-restart`` to terminate all children processes (`#225 <https://github.com/gorakhargosh/watchdog/pull/225>`__)\n- [watchmedo] Added the ``--no-parallel`` argument (`#227 <https://github.com/gorakhargosh/watchdog/issues/227>`__)\n- [windows] Fixed the value of ``INVALID_HANDLE_VALUE`` (`#123 <https://github.com/gorakhargosh/watchdog/issues/123>`__)\n- [windows] Fixed octal usages to work with Python 3 as well (`#223 <https://github.com/gorakhargosh/watchdog/issues/223>`__)\n- Thanks to our beloved contributors: @tamland, @Ormod, @berdario, @cro,\n  @BernieSumption, @pypingou, @gotcha, @tommorris, @frewsxcv\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/watchdog-3.0.0.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "wcwidth",
        "version": "0.2.6",
        "summary": "Measures the displayed width of unicode strings in a terminal",
        "keywords": [
          "cjk",
          "combining",
          "console",
          "eastasian",
          "emoji",
          "emulator",
          "terminal",
          "unicode",
          "wcswidth",
          "wcwidth",
          "xterm"
        ],
        "home_page": "https://github.com/jquast/wcwidth",
        "author": "Jeff Quast",
        "author_email": "contact@jeffquast.com",
        "license": "MIT",
        "classifier": [
          "Intended Audience :: Developers",
          "Natural Language :: English",
          "Development Status :: 5 - Production/Stable",
          "Environment :: Console",
          "License :: OSI Approved :: MIT License",
          "Operating System :: POSIX",
          "Programming Language :: Python :: 2.7",
          "Programming Language :: Python :: 3.5",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Topic :: Software Development :: Libraries",
          "Topic :: Software Development :: Localization",
          "Topic :: Software Development :: Internationalization",
          "Topic :: Terminals"
        ],
        "requires_dist": [
          "backports.functools-lru-cache (>=1.2.1) ; python_version < \"3.2\""
        ],
        "description": "|pypi_downloads| |codecov| |license|\n\n============\nIntroduction\n============\n\nThis library is mainly for CLI programs that carefully produce output for\nTerminals, or make pretend to be an emulator.\n\n**Problem Statement**: The printable length of *most* strings are equal to the\nnumber of cells they occupy on the screen ``1 character : 1 cell``.  However,\nthere are categories of characters that *occupy 2 cells* (full-wide), and\nothers that *occupy 0* cells (zero-width).\n\n**Solution**: POSIX.1-2001 and POSIX.1-2008 conforming systems provide\n`wcwidth(3)`_ and `wcswidth(3)`_ C functions of which this python module's\nfunctions precisely copy.  *These functions return the number of cells a\nunicode string is expected to occupy.*\n\nInstallation\n------------\n\nThe stable version of this package is maintained on pypi, install using pip::\n\n    pip install wcwidth\n\nExample\n-------\n\n**Problem**: given the following phrase (Japanese),\n\n   >>>  text = u'コンニチハ'\n\nPython **incorrectly** uses the *string length* of 5 codepoints rather than the\n*printible length* of 10 cells, so that when using the `rjust` function, the\noutput length is wrong::\n\n    >>> print(len('コンニチハ'))\n    5\n\n    >>> print('コンニチハ'.rjust(20, '_'))\n    _______________コンニチハ\n\nBy defining our own \"rjust\" function that uses wcwidth, we can correct this::\n\n   >>> def wc_rjust(text, length, padding=' '):\n   ...    from wcwidth import wcswidth\n   ...    return padding * max(0, (length - wcswidth(text))) + text\n   ...\n\nOur **Solution** uses wcswidth to determine the string length correctly::\n\n   >>> from wcwidth import wcswidth\n   >>> print(wcswidth('コンニチハ'))\n   10\n\n   >>> print(wc_rjust('コンニチハ', 20, '_'))\n   __________コンニチハ\n\n\nChoosing a Version\n------------------\n\nExport an environment variable, ``UNICODE_VERSION``. This should be done by\n*terminal emulators* or those developers experimenting with authoring one of\ntheir own, from shell::\n\n   $ export UNICODE_VERSION=13.0\n\nIf unspecified, the latest version is used. If your Terminal Emulator does not\nexport this variable, you can use the `jquast/ucs-detect`_ utility to\nautomatically detect and export it to your shell.\n\nwcwidth, wcswidth\n-----------------\nUse function ``wcwidth()`` to determine the length of a *single unicode\ncharacter*, and ``wcswidth()`` to determine the length of many, a *string\nof unicode characters*.\n\nBriefly, return values of function ``wcwidth()`` are:\n\n``-1``\n  Indeterminate (not printable).\n\n``0``\n  Does not advance the cursor, such as NULL or Combining.\n\n``2``\n  Characters of category East Asian Wide (W) or East Asian\n  Full-width (F) which are displayed using two terminal cells.\n\n``1``\n  All others.\n\nFunction ``wcswidth()`` simply returns the sum of all values for each character\nalong a string, or ``-1`` when it occurs anywhere along a string.\n\nFull API Documentation at http://wcwidth.readthedocs.org\n\n==========\nDeveloping\n==========\n\nInstall wcwidth in editable mode::\n\n   pip install -e.\n\nExecute unit tests using tox_::\n\n   tox\n\nRegenerate python code tables from latest Unicode Specification data files::\n\n   tox -e update\n\nSupplementary tools for browsing and testing terminals for wide unicode\ncharacters are found in the `bin/`_ of this project's source code.  Just ensure\nto first ``pip install -erequirements-develop.txt`` from this projects main\nfolder. For example, an interactive browser for testing::\n\n  python ./bin/wcwidth-browser.py\n\nUses\n----\n\nThis library is used in:\n\n- `jquast/blessed`_: a thin, practical wrapper around terminal capabilities in\n  Python.\n\n- `jonathanslenders/python-prompt-toolkit`_: a Library for building powerful\n  interactive command lines in Python.\n\n- `dbcli/pgcli`_: Postgres CLI with autocompletion and syntax highlighting.\n\n- `thomasballinger/curtsies`_: a Curses-like terminal wrapper with a display\n  based on compositing 2d arrays of text.\n\n- `selectel/pyte`_: Simple VTXXX-compatible linux terminal emulator.\n\n- `astanin/python-tabulate`_: Pretty-print tabular data in Python, a library\n  and a command-line utility.\n\n- `LuminosoInsight/python-ftfy`_: Fixes mojibake and other glitches in Unicode\n  text.\n\n- `nbedos/termtosvg`_: Terminal recorder that renders sessions as SVG\n  animations.\n\n- `peterbrittain/asciimatics`_: Package to help people create full-screen text\n  UIs.\n\nOther Languages\n---------------\n\n- `timoxley/wcwidth`_: JavaScript\n- `janlelis/unicode-display_width`_: Ruby\n- `alecrabbit/php-wcwidth`_: PHP\n- `Text::CharWidth`_: Perl\n- `bluebear94/Terminal-WCWidth`: Perl 6\n- `mattn/go-runewidth`_: Go\n- `emugel/wcwidth`_: Haxe\n- `aperezdc/lua-wcwidth`: Lua\n- `joachimschmidt557/zig-wcwidth`: Zig\n- `fumiyas/wcwidth-cjk`: `LD_PRELOAD` override\n- `joshuarubin/wcwidth9`: Unicode version 9 in C\n\nHistory\n-------\n\n0.2.6 *2023-01-14*\n  * **Updated** tables to include Unicode Specification 14.0.0 and 15.0.0.\n  * **Changed** developer tools to use pip-compile, and to use jinja2 templates\n    for code generation in `bin/update-tables.py` to prepare for possible\n    compiler optimization release.\n\n0.2.1 .. 0.2.5 *2020-06-23*\n  * **Repository** changes to update tests and packaging issues, and\n    begin tagging repository with matching release versions.\n\n0.2.0 *2020-06-01*\n  * **Enhancement**: Unicode version may be selected by exporting the\n    Environment variable ``UNICODE_VERSION``, such as ``13.0``, or ``6.3.0``.\n    See the `jquast/ucs-detect`_ CLI utility for automatic detection.\n  * **Enhancement**:\n    API Documentation is published to readthedocs.org.\n  * **Updated** tables for *all* Unicode Specifications with files\n    published in a programmatically consumable format, versions 4.1.0\n    through 13.0\n\n0.1.9 *2020-03-22*\n  * **Performance** optimization by `Avram Lubkin`_, `PR #35`_.\n  * **Updated** tables to Unicode Specification 13.0.0.\n\n0.1.8 *2020-01-01*\n  * **Updated** tables to Unicode Specification 12.0.0. (`PR #30`_).\n\n0.1.7 *2016-07-01*\n  * **Updated** tables to Unicode Specification 9.0.0. (`PR #18`_).\n\n0.1.6 *2016-01-08 Production/Stable*\n  * ``LICENSE`` file now included with distribution.\n\n0.1.5 *2015-09-13 Alpha*\n  * **Bugfix**:\n    Resolution of \"combining_ character width\" issue, most especially\n    those that previously returned -1 now often (correctly) return 0.\n    resolved by `Philip Craig`_ via `PR #11`_.\n  * **Deprecated**:\n    The module path ``wcwidth.table_comb`` is no longer available,\n    it has been superseded by module path ``wcwidth.table_zero``.\n\n0.1.4 *2014-11-20 Pre-Alpha*\n  * **Feature**: ``wcswidth()`` now determines printable length\n    for (most) combining_ characters.  The developer's tool\n    `bin/wcwidth-browser.py`_ is improved to display combining_\n    characters when provided the ``--combining`` option\n    (`Thomas Ballinger`_ and `Leta Montopoli`_ `PR #5`_).\n  * **Feature**: added static analysis (prospector_) to testing\n    framework.\n\n0.1.3 *2014-10-29 Pre-Alpha*\n  * **Bugfix**: 2nd parameter of wcswidth was not honored.\n    (`Thomas Ballinger`_, `PR #4`_).\n\n0.1.2 *2014-10-28 Pre-Alpha*\n  * **Updated** tables to Unicode Specification 7.0.0.\n    (`Thomas Ballinger`_, `PR #3`_).\n\n0.1.1 *2014-05-14 Pre-Alpha*\n  * Initial release to pypi, Based on Unicode Specification 6.3.0\n\nThis code was originally derived directly from C code of the same name,\nwhose latest version is available at\nhttp://www.cl.cam.ac.uk/~mgk25/ucs/wcwidth.c::\n\n * Markus Kuhn -- 2007-05-26 (Unicode 5.0)\n *\n * Permission to use, copy, modify, and distribute this software\n * for any purpose and without fee is hereby granted. The author\n * disclaims all warranties with regard to this software.\n\n.. _`tox`: https://testrun.org/tox/latest/install.html\n.. _`prospector`: https://github.com/landscapeio/prospector\n.. _`combining`: https://en.wikipedia.org/wiki/Combining_character\n.. _`bin/`: https://github.com/jquast/wcwidth/tree/master/bin\n.. _`bin/wcwidth-browser.py`: https://github.com/jquast/wcwidth/tree/master/bin/wcwidth-browser.py\n.. _`Thomas Ballinger`: https://github.com/thomasballinger\n.. _`Leta Montopoli`: https://github.com/lmontopo\n.. _`Philip Craig`: https://github.com/philipc\n.. _`PR #3`: https://github.com/jquast/wcwidth/pull/3\n.. _`PR #4`: https://github.com/jquast/wcwidth/pull/4\n.. _`PR #5`: https://github.com/jquast/wcwidth/pull/5\n.. _`PR #11`: https://github.com/jquast/wcwidth/pull/11\n.. _`PR #18`: https://github.com/jquast/wcwidth/pull/18\n.. _`PR #30`: https://github.com/jquast/wcwidth/pull/30\n.. _`PR #35`: https://github.com/jquast/wcwidth/pull/35\n.. _`jquast/blessed`: https://github.com/jquast/blessed\n.. _`selectel/pyte`: https://github.com/selectel/pyte\n.. _`thomasballinger/curtsies`: https://github.com/thomasballinger/curtsies\n.. _`dbcli/pgcli`: https://github.com/dbcli/pgcli\n.. _`jonathanslenders/python-prompt-toolkit`: https://github.com/jonathanslenders/python-prompt-toolkit\n.. _`timoxley/wcwidth`: https://github.com/timoxley/wcwidth\n.. _`wcwidth(3)`:  http://man7.org/linux/man-pages/man3/wcwidth.3.html\n.. _`wcswidth(3)`: http://man7.org/linux/man-pages/man3/wcswidth.3.html\n.. _`astanin/python-tabulate`: https://github.com/astanin/python-tabulate\n.. _`janlelis/unicode-display_width`: https://github.com/janlelis/unicode-display_width\n.. _`LuminosoInsight/python-ftfy`: https://github.com/LuminosoInsight/python-ftfy\n.. _`alecrabbit/php-wcwidth`: https://github.com/alecrabbit/php-wcwidth\n.. _`Text::CharWidth`: https://metacpan.org/pod/Text::CharWidth\n.. _`bluebear94/Terminal-WCWidth`: https://github.com/bluebear94/Terminal-WCWidth\n.. _`mattn/go-runewidth`: https://github.com/mattn/go-runewidth\n.. _`emugel/wcwidth`: https://github.com/emugel/wcwidth\n.. _`jquast/ucs-detect`: https://github.com/jquast/ucs-detect\n.. _`Avram Lubkin`: https://github.com/avylove\n.. _`nbedos/termtosvg`: https://github.com/nbedos/termtosvg\n.. _`peterbrittain/asciimatics`: https://github.com/peterbrittain/asciimatics\n.. _`aperezdc/lua-wcwidth`: https://github.com/aperezdc/lua-wcwidth\n.. _`fumiyas/wcwidth-cjk`: https://github.com/fumiyas/wcwidth-cjk\n.. |pypi_downloads| image:: https://img.shields.io/pypi/dm/wcwidth.svg?logo=pypi\n    :alt: Downloads\n    :target: https://pypi.org/project/wcwidth/\n.. |codecov| image:: https://codecov.io/gh/jquast/wcwidth/branch/master/graph/badge.svg\n    :alt: codecov.io Code Coverage\n    :target: https://codecov.io/gh/jquast/wcwidth/\n.. |license| image:: https://img.shields.io/github/license/jquast/wcwidth.svg\n    :target: https://pypi.python.org/pypi/wcwidth/\n    :alt: MIT License\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/wcwidth-0.2.6.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "websockets",
        "version": "11.0.3",
        "summary": "An implementation of the WebSocket Protocol (RFC 6455 & 7692)",
        "keywords": [
          "WebSocket"
        ],
        "author_email": "Aymeric Augustin <aymeric.augustin@m4x.org>",
        "license": "BSD-3-Clause",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Environment :: Web Environment",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: BSD License",
          "Operating System :: OS Independent",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11"
        ],
        "requires_python": ">=3.7",
        "project_url": [
          "homepage, https://github.com/aaugustin/websockets",
          "changelog, https://websockets.readthedocs.io/en/stable/project/changelog.html",
          "documentation, https://websockets.readthedocs.io/",
          "funding, https://tidelift.com/subscription/pkg/pypi-websockets?utm_source=pypi-websockets&utm_medium=referral&utm_campaign=readme",
          "tracker, https://github.com/aaugustin/websockets/issues"
        ],
        "description": ".. image:: logo/horizontal.svg\n   :width: 480px\n   :alt: websockets\n\n|licence| |version| |pyversions| |tests| |docs| |openssf|\n\n.. |licence| image:: https://img.shields.io/pypi/l/websockets.svg\n    :target: https://pypi.python.org/pypi/websockets\n\n.. |version| image:: https://img.shields.io/pypi/v/websockets.svg\n    :target: https://pypi.python.org/pypi/websockets\n\n.. |pyversions| image:: https://img.shields.io/pypi/pyversions/websockets.svg\n    :target: https://pypi.python.org/pypi/websockets\n\n.. |tests| image:: https://img.shields.io/github/checks-status/aaugustin/websockets/main?label=tests\n   :target: https://github.com/aaugustin/websockets/actions/workflows/tests.yml\n\n.. |docs| image:: https://img.shields.io/readthedocs/websockets.svg\n   :target: https://websockets.readthedocs.io/\n\n.. |openssf| image:: https://bestpractices.coreinfrastructure.org/projects/6475/badge\n   :target: https://bestpractices.coreinfrastructure.org/projects/6475\n\nWhat is ``websockets``?\n-----------------------\n\nwebsockets is a library for building WebSocket_ servers and clients in Python\nwith a focus on correctness, simplicity, robustness, and performance.\n\n.. _WebSocket: https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API\n\nBuilt on top of ``asyncio``, Python's standard asynchronous I/O framework, the\ndefault implementation provides an elegant coroutine-based API.\n\nAn implementation on top of ``threading`` and a Sans-I/O implementation are also\navailable.\n\n`Documentation is available on Read the Docs. <https://websockets.readthedocs.io/>`_\n\n.. copy-pasted because GitHub doesn't support the include directive\n\nHere's an echo server with the ``asyncio`` API:\n\n.. code:: python\n\n    #!/usr/bin/env python\n\n    import asyncio\n    from websockets.server import serve\n\n    async def echo(websocket):\n        async for message in websocket:\n            await websocket.send(message)\n\n    async def main():\n        async with serve(echo, \"localhost\", 8765):\n            await asyncio.Future()  # run forever\n\n    asyncio.run(main())\n\nHere's how a client sends and receives messages with the ``threading`` API:\n\n.. code:: python\n\n    #!/usr/bin/env python\n\n    import asyncio\n    from websockets.sync.client import connect\n\n    def hello():\n        with connect(\"ws://localhost:8765\") as websocket:\n            websocket.send(\"Hello world!\")\n            message = websocket.recv()\n            print(f\"Received: {message}\")\n\n    hello()\n\n\nDoes that look good?\n\n`Get started with the tutorial! <https://websockets.readthedocs.io/en/stable/intro/index.html>`_\n\nWhy should I use ``websockets``?\n--------------------------------\n\nThe development of ``websockets`` is shaped by four principles:\n\n1. **Correctness**: ``websockets`` is heavily tested for compliance with\n   :rfc:`6455`. Continuous integration fails under 100% branch coverage.\n\n2. **Simplicity**: all you need to understand is ``msg = await ws.recv()`` and\n   ``await ws.send(msg)``. ``websockets`` takes care of managing connections\n   so you can focus on your application.\n\n3. **Robustness**: ``websockets`` is built for production. For example, it was\n   the only library to `handle backpressure correctly`_ before the issue\n   became widely known in the Python community.\n\n4. **Performance**: memory usage is optimized and configurable. A C extension\n   accelerates expensive operations. It's pre-compiled for Linux, macOS and\n   Windows and packaged in the wheel format for each system and Python version.\n\nDocumentation is a first class concern in the project. Head over to `Read the\nDocs`_ and see for yourself.\n\n.. _Read the Docs: https://websockets.readthedocs.io/\n.. _handle backpressure correctly: https://vorpus.org/blog/some-thoughts-on-asynchronous-api-design-in-a-post-asyncawait-world/#websocket-servers\n\nWhy shouldn't I use ``websockets``?\n-----------------------------------\n\n* If you prefer callbacks over coroutines: ``websockets`` was created to\n  provide the best coroutine-based API to manage WebSocket connections in\n  Python. Pick another library for a callback-based API.\n\n* If you're looking for a mixed HTTP / WebSocket library: ``websockets`` aims\n  at being an excellent implementation of :rfc:`6455`: The WebSocket Protocol\n  and :rfc:`7692`: Compression Extensions for WebSocket. Its support for HTTP\n  is minimal — just enough for an HTTP health check.\n\n  If you want to do both in the same server, look at HTTP frameworks that\n  build on top of ``websockets`` to support WebSocket connections, like\n  Sanic_.\n\n.. _Sanic: https://sanicframework.org/en/\n\nWhat else?\n----------\n\nBug reports, patches and suggestions are welcome!\n\nTo report a security vulnerability, please use the `Tidelift security\ncontact`_. Tidelift will coordinate the fix and disclosure.\n\n.. _Tidelift security contact: https://tidelift.com/security\n\nFor anything else, please open an issue_ or send a `pull request`_.\n\n.. _issue: https://github.com/aaugustin/websockets/issues/new\n.. _pull request: https://github.com/aaugustin/websockets/compare/\n\nParticipants must uphold the `Contributor Covenant code of conduct`_.\n\n.. _Contributor Covenant code of conduct: https://github.com/aaugustin/websockets/blob/main/CODE_OF_CONDUCT.md\n\n``websockets`` is released under the `BSD license`_.\n\n.. _BSD license: https://github.com/aaugustin/websockets/blob/main/LICENSE\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/websockets-11.0.3.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "wrapt",
        "version": "1.14.1",
        "platform": [
          "any"
        ],
        "summary": "Module for decorators, wrappers and monkey patching.",
        "description_content_type": "text/x-rst",
        "keywords": [
          "wrapper",
          "proxy",
          "decorator"
        ],
        "home_page": "https://github.com/GrahamDumpleton/wrapt",
        "author": "Graham Dumpleton",
        "author_email": "Graham.Dumpleton@gmail.com",
        "license": "BSD",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "License :: OSI Approved :: BSD License",
          "Programming Language :: Python :: 2",
          "Programming Language :: Python :: 2.7",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.5",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Programming Language :: Python :: Implementation :: CPython",
          "Programming Language :: Python :: Implementation :: PyPy"
        ],
        "requires_python": "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,>=2.7",
        "project_url": [
          "Bug Tracker, https://github.com/GrahamDumpleton/wrapt/issues/",
          "Changelog, https://wrapt.readthedocs.io/en/latest/changes.html",
          "Documentation, https://wrapt.readthedocs.io/"
        ],
        "description": "wrapt\n=====\n\n|Actions| |PyPI|\n\nThe aim of the **wrapt** module is to provide a transparent object proxy\nfor Python, which can be used as the basis for the construction of function\nwrappers and decorator functions.\n\nThe **wrapt** module focuses very much on correctness. It therefore goes\nway beyond existing mechanisms such as ``functools.wraps()`` to ensure that\ndecorators preserve introspectability, signatures, type checking abilities\netc. The decorators that can be constructed using this module will work in\nfar more scenarios than typical decorators and provide more predictable and\nconsistent behaviour.\n\nTo ensure that the overhead is as minimal as possible, a C extension module\nis used for performance critical components. An automatic fallback to a\npure Python implementation is also provided where a target system does not\nhave a compiler to allow the C extension to be compiled.\n\nDocumentation\n-------------\n\nFor further information on the **wrapt** module see:\n\n* http://wrapt.readthedocs.org/\n\nQuick Start\n-----------\n\nTo implement your decorator you need to first define a wrapper function.\nThis will be called each time a decorated function is called. The wrapper\nfunction needs to take four positional arguments:\n\n* ``wrapped`` - The wrapped function which in turns needs to be called by your wrapper function.\n* ``instance`` - The object to which the wrapped function was bound when it was called.\n* ``args`` - The list of positional arguments supplied when the decorated function was called.\n* ``kwargs`` - The dictionary of keyword arguments supplied when the decorated function was called.\n\nThe wrapper function would do whatever it needs to, but would usually in\nturn call the wrapped function that is passed in via the ``wrapped``\nargument.\n\nThe decorator ``@wrapt.decorator`` then needs to be applied to the wrapper\nfunction to convert it into a decorator which can in turn be applied to\nother functions.\n\n.. code-block:: python\n\n    import wrapt\n    \n    @wrapt.decorator\n    def pass_through(wrapped, instance, args, kwargs):\n        return wrapped(*args, **kwargs)\n\n    @pass_through\n    def function():\n        pass\n\nIf you wish to implement a decorator which accepts arguments, then wrap the\ndefinition of the decorator in a function closure. Any arguments supplied\nto the outer function when the decorator is applied, will be available to\nthe inner wrapper when the wrapped function is called.\n\n.. code-block:: python\n\n    import wrapt\n\n    def with_arguments(myarg1, myarg2):\n        @wrapt.decorator\n        def wrapper(wrapped, instance, args, kwargs):\n            return wrapped(*args, **kwargs)\n        return wrapper\n\n    @with_arguments(1, 2)\n    def function():\n        pass\n\nWhen applied to a normal function or static method, the wrapper function\nwhen called will be passed ``None`` as the ``instance`` argument.\n\nWhen applied to an instance method, the wrapper function when called will\nbe passed the instance of the class the method is being called on as the\n``instance`` argument. This will be the case even when the instance method\nwas called explicitly via the class and the instance passed as the first\nargument. That is, the instance will never be passed as part of ``args``.\n\nWhen applied to a class method, the wrapper function when called will be\npassed the class type as the ``instance`` argument.\n\nWhen applied to a class, the wrapper function when called will be passed\n``None`` as the ``instance`` argument. The ``wrapped`` argument in this\ncase will be the class.\n\nThe above rules can be summarised with the following example.\n\n.. code-block:: python\n\n    import inspect\n    \n    @wrapt.decorator\n    def universal(wrapped, instance, args, kwargs):\n        if instance is None:\n            if inspect.isclass(wrapped):\n                # Decorator was applied to a class.\n                return wrapped(*args, **kwargs)\n            else:\n                # Decorator was applied to a function or staticmethod.\n                return wrapped(*args, **kwargs)\n        else:\n            if inspect.isclass(instance):\n                # Decorator was applied to a classmethod.\n                return wrapped(*args, **kwargs)\n            else:\n                # Decorator was applied to an instancemethod.\n                return wrapped(*args, **kwargs)\n\nUsing these checks it is therefore possible to create a universal decorator\nthat can be applied in all situations. It is no longer necessary to create\ndifferent variants of decorators for normal functions and instance methods,\nor use additional wrappers to convert a function decorator into one that\nwill work for instance methods.\n\nIn all cases, the wrapped function passed to the wrapper function is called\nin the same way, with ``args`` and ``kwargs`` being passed. The\n``instance`` argument doesn't need to be used in calling the wrapped\nfunction.\n\nRepository\n----------\n\nFull source code for the **wrapt** module, including documentation files\nand unit tests, can be obtained from github.\n\n* https://github.com/GrahamDumpleton/wrapt\n\n.. |Actions| image:: https://img.shields.io/github/workflow/status/GrahamDumpleton/wrapt/Test/develop?logo=github&cacheSeconds=600\n   :target: https://github.com/GrahamDumpleton/wrapt/actions\n.. |PyPI| image:: https://img.shields.io/pypi/v/wrapt.svg?logo=python&cacheSeconds=3600\n   :target: https://pypi.python.org/pypi/wrapt\n\n\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/wrapt-1.14.1.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "x2paddle",
        "version": "1.4.1",
        "platform": [
          "UNKNOWN"
        ],
        "summary": "a toolkit for converting trained model to PaddlePaddle from other deep learning frameworks.",
        "description_content_type": "text/plain",
        "home_page": "https://github.com/PaddlePaddle/x2paddle",
        "author": "dltp-sz",
        "author_email": "dltp-sz@baidu.com",
        "license": "Apache 2.0",
        "classifier": [
          "Programming Language :: Python :: 3",
          "License :: OSI Approved :: Apache Software License",
          "Operating System :: OS Independent"
        ],
        "requires_dist": [
          "sympy"
        ],
        "description": "X2Paddle is a toolkit for converting trained model to PaddlePaddle from other deep learning frameworks.\n\nUsage: x2paddle --framework tensorflow --model tf_model.pb --save_dir paddle_model\nGitHub: https://github.com/PaddlePaddle/X2Paddle\nEmail: dltp-sz@baidu.com\n\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/x2paddle-1.4.1.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "yarl",
        "version": "1.9.2",
        "summary": "Yet another URL library",
        "description_content_type": "text/x-rst",
        "home_page": "https://github.com/aio-libs/yarl/",
        "author": "Andrew Svetlov",
        "author_email": "andrew.svetlov@gmail.com",
        "license": "Apache-2.0",
        "classifier": [
          "License :: OSI Approved :: Apache Software License",
          "Intended Audience :: Developers",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Topic :: Internet :: WWW/HTTP"
        ],
        "requires_dist": [
          "multidict (>=4.0)",
          "idna (>=2.0)",
          "typing-extensions (>=3.7.4) ; python_version < \"3.8\""
        ],
        "requires_python": ">=3.7",
        "description": "yarl\n====\n\nThe module provides handy URL class for URL parsing and changing.\n\n.. image:: https://github.com/aio-libs/yarl/workflows/CI/badge.svg\n  :target: https://github.com/aio-libs/yarl/actions?query=workflow%3ACI\n  :align: right\n\n.. image:: https://codecov.io/gh/aio-libs/yarl/branch/master/graph/badge.svg\n  :target: https://codecov.io/gh/aio-libs/yarl\n\n.. image:: https://badge.fury.io/py/yarl.svg\n    :target: https://badge.fury.io/py/yarl\n\n\n.. image:: https://readthedocs.org/projects/yarl/badge/?version=latest\n    :target: https://yarl.readthedocs.io\n\n\n.. image:: https://img.shields.io/pypi/pyversions/yarl.svg\n    :target: https://pypi.python.org/pypi/yarl\n\n.. image:: https://badges.gitter.im/Join%20Chat.svg\n    :target: https://gitter.im/aio-libs/Lobby\n    :alt: Chat on Gitter\n\nIntroduction\n------------\n\nUrl is constructed from ``str``:\n\n.. code-block:: pycon\n\n   >>> from yarl import URL\n   >>> url = URL('https://www.python.org/~guido?arg=1#frag')\n   >>> url\n   URL('https://www.python.org/~guido?arg=1#frag')\n\nAll url parts: *scheme*, *user*, *password*, *host*, *port*, *path*,\n*query* and *fragment* are accessible by properties:\n\n.. code-block:: pycon\n\n   >>> url.scheme\n   'https'\n   >>> url.host\n   'www.python.org'\n   >>> url.path\n   '/~guido'\n   >>> url.query_string\n   'arg=1'\n   >>> url.query\n   <MultiDictProxy('arg': '1')>\n   >>> url.fragment\n   'frag'\n\nAll url manipulations produce a new url object:\n\n.. code-block:: pycon\n\n   >>> url = URL('https://www.python.org')\n   >>> url / 'foo' / 'bar'\n   URL('https://www.python.org/foo/bar')\n   >>> url / 'foo' % {'bar': 'baz'}\n   URL('https://www.python.org/foo?bar=baz')\n\nStrings passed to constructor and modification methods are\nautomatically encoded giving canonical representation as result:\n\n.. code-block:: pycon\n\n   >>> url = URL('https://www.python.org/путь')\n   >>> url\n   URL('https://www.python.org/%D0%BF%D1%83%D1%82%D1%8C')\n\nRegular properties are *percent-decoded*, use ``raw_`` versions for\ngetting *encoded* strings:\n\n.. code-block:: pycon\n\n   >>> url.path\n   '/путь'\n\n   >>> url.raw_path\n   '/%D0%BF%D1%83%D1%82%D1%8C'\n\nHuman readable representation of URL is available as ``.human_repr()``:\n\n.. code-block:: pycon\n\n   >>> url.human_repr()\n   'https://www.python.org/путь'\n\nFor full documentation please read https://yarl.readthedocs.org.\n\n\nInstallation\n------------\n\n::\n\n   $ pip install yarl\n\nThe library is Python 3 only!\n\nPyPI contains binary wheels for Linux, Windows and MacOS.  If you want to install\n``yarl`` on another operating system (like *Alpine Linux*, which is not\nmanylinux-compliant because of the missing glibc and therefore, cannot be\nused with our wheels) the the tarball will be used to compile the library from\nthe source code. It requires a C compiler and and Python headers installed.\n\nTo skip the compilation you must explicitly opt-in by setting the `YARL_NO_EXTENSIONS`\nenvironment variable to a non-empty value, e.g.:\n\n.. code-block:: bash\n\n   $ YARL_NO_EXTENSIONS=1 pip install yarl\n\nPlease note that the pure-Python (uncompiled) version is much slower. However,\nPyPy always uses a pure-Python implementation, and, as such, it is unaffected\nby this variable.\n\nDependencies\n------------\n\nYARL requires multidict_ library.\n\n\nAPI documentation\n------------------\n\nThe documentation is located at https://yarl.readthedocs.org\n\n\nWhy isn't boolean supported by the URL query API?\n-------------------------------------------------\n\nThere is no standard for boolean representation of boolean values.\n\nSome systems prefer ``true``/``false``, others like ``yes``/``no``, ``on``/``off``,\n``Y``/``N``, ``1``/``0``, etc.\n\n``yarl`` cannot make an unambiguous decision on how to serialize ``bool`` values because\nit is specific to how the end-user's application is built and would be different for\ndifferent apps.  The library doesn't accept booleans in the API; a user should convert\nbools into strings using own preferred translation protocol.\n\n\nComparison with other URL libraries\n------------------------------------\n\n* furl (https://pypi.python.org/pypi/furl)\n\n  The library has rich functionality but the ``furl`` object is mutable.\n\n  I'm afraid to pass this object into foreign code: who knows if the\n  code will modify my url in a terrible way while I just want to send URL\n  with handy helpers for accessing URL properties.\n\n  ``furl`` has other non-obvious tricky things but the main objection\n  is mutability.\n\n* URLObject (https://pypi.python.org/pypi/URLObject)\n\n  URLObject is immutable, that's pretty good.\n\n  Every URL change generates a new URL object.\n\n  But the library doesn't do any decode/encode transformations leaving the\n  end user to cope with these gory details.\n\n\nSource code\n-----------\n\nThe project is hosted on GitHub_\n\nPlease file an issue on the `bug tracker\n<https://github.com/aio-libs/yarl/issues>`_ if you have found a bug\nor have some suggestion in order to improve the library.\n\nThe library uses `Azure Pipelines <https://dev.azure.com/aio-libs/yarl>`_ for\nContinuous Integration.\n\nDiscussion list\n---------------\n\n*aio-libs* google group: https://groups.google.com/forum/#!forum/aio-libs\n\nFeel free to post your questions and ideas here.\n\n\nAuthors and License\n-------------------\n\nThe ``yarl`` package is written by Andrew Svetlov.\n\nIt's *Apache 2* licensed and freely available.\n\n\n.. _GitHub: https://github.com/aio-libs/yarl\n\n.. _multidict: https://github.com/aio-libs/multidict\n\n\n=========\nChangelog\n=========\n\n..\n    You should *NOT* be adding new change log entries to this file, this\n    file is managed by towncrier. You *may* edit previous change logs to\n    fix problems like typo corrections or such.\n    To add a new change log entry, please see\n    https://pip.pypa.io/en/latest/development/#adding-a-news-entry\n    we named the news folder \"changes\".\n\n    WARNING: Don't drop the next directive!\n\n.. towncrier release notes start\n\n1.9.2 (2023-04-25)\n==================\n\nBugfixes\n--------\n\n- Fix regression with truediv and absolute URLs with empty paths causing the raw path to lack the leading ``/``. (`#854 <https://github.com/aio-libs/yarl/issues/854>`_)\n\n\n1.9.1 (2023-04-21)\n==================\n\nBugfixes\n--------\n\n- Marked tests that fail on older Python patch releases (< 3.7.10, < 3.8.8 and < 3.9.2) as expected to fail due to missing a security fix for CVE-2021-23336. (`#850 <https://github.com/aio-libs/yarl/issues/850>`_)\n\n\n1.9.0 (2023-04-19)\n==================\n\nThis release was never published to PyPI, due to issues with the build process.\n\nFeatures\n--------\n\n- Added ``URL.joinpath(*elements)``, to create a new URL appending multiple path elements. (`#704 <https://github.com/aio-libs/yarl/issues/704>`_)\n- Made :py``(?P=rendered_text)`` return ``NotImplemented`` if called with an unsupported type — by ``(?P=rendered_text)``. (`#832 <https://github.com/aio-libs/yarl/issues/832>`_)\n\n\nBugfixes\n--------\n\n- Path normalisation for absolute URLs no longer raises a ValueError exception\n  when `..` segments would otherwise go beyond the URL path root. (`#536 <https://github.com/aio-libs/yarl/issues/536>`_)\n- Fixed an issue with update_query() not getting rid of the query when argument is None. (`#792 <https://github.com/aio-libs/yarl/issues/792>`_)\n- Added some input restrictions on with_port() function to prevent invalid boolean inputs or out of valid port inputs; handled incorrect 0 port representation. (`#793 <https://github.com/aio-libs/yarl/issues/793>`_)\n- Made :py``(?P=rendered_text)`` raise a :py``(?P=rendered_text)`` if the ``host`` argument is :py``(?P=rendered_text)`` — by ``(?P=rendered_text)``. (`#808 <https://github.com/aio-libs/yarl/issues/808>`_)\n- Fixed an issue with ``update_query()`` getting rid of the query when the argument\n  is empty but not ``None``. (`#845 <https://github.com/aio-libs/yarl/issues/845>`_)\n\n\nMisc\n----\n\n- `#220 <https://github.com/aio-libs/yarl/issues/220>`_\n\n\n1.8.2 (2022-12-03)\n==================\n\nThis is the first release that started shipping wheels for Python 3.11.\n\n\n1.8.1 (2022-08-01)\n==================\n\nMisc\n----\n\n- `#694 <https://github.com/aio-libs/yarl/issues/694>`_, `#699 <https://github.com/aio-libs/yarl/issues/699>`_, `#700 <https://github.com/aio-libs/yarl/issues/700>`_, `#701 <https://github.com/aio-libs/yarl/issues/701>`_, `#702 <https://github.com/aio-libs/yarl/issues/702>`_, `#703 <https://github.com/aio-libs/yarl/issues/703>`_, `#739 <https://github.com/aio-libs/yarl/issues/739>`_\n\n\n1.8.0 (2022-08-01)\n==================\n\nFeatures\n--------\n\n- Added ``URL.raw_suffix``, ``URL.suffix``, ``URL.raw_suffixes``, ``URL.suffixes``, ``URL.with_suffix``. (`#613 <https://github.com/aio-libs/yarl/issues/613>`_)\n\n\nImproved Documentation\n----------------------\n\n- Fixed broken internal references to ``(?P=rendered_text)``. (`#665 <https://github.com/aio-libs/yarl/issues/665>`_)\n- Fixed broken external references to ``(?P=rendered_text)`` docs. (`#665 <https://github.com/aio-libs/yarl/issues/665>`_)\n\n\nDeprecations and Removals\n-------------------------\n\n- Dropped Python 3.6 support. (`#672 <https://github.com/aio-libs/yarl/issues/672>`_)\n\n\nMisc\n----\n\n- `#646 <https://github.com/aio-libs/yarl/issues/646>`_, `#699 <https://github.com/aio-libs/yarl/issues/699>`_, `#701 <https://github.com/aio-libs/yarl/issues/701>`_\n\n\n1.7.2 (2021-11-01)\n==================\n\nBugfixes\n--------\n\n- Changed call in ``with_port()`` to stop reencoding parts of the URL that were already encoded. (`#623 <https://github.com/aio-libs/yarl/issues/623>`_)\n\n\n1.7.1 (2021-10-07)\n==================\n\nBugfixes\n--------\n\n- Fix 1.7.0 build error\n\n1.7.0 (2021-10-06)\n==================\n\nFeatures\n--------\n\n- Add `__bytes__()` magic method so that `bytes(url)` will work and use optimal ASCII encoding. (`#582 <https://github.com/aio-libs/yarl/issues/582>`_)\n- Started shipping platform-specific arm64 wheels for Apple Silicon. (`#622 <https://github.com/aio-libs/yarl/issues/622>`_)\n- Started shipping platform-specific wheels with the ``musl`` tag targeting typical Alpine Linux runtimes. (`#622 <https://github.com/aio-libs/yarl/issues/622>`_)\n- Added support for Python 3.10. (`#622 <https://github.com/aio-libs/yarl/issues/622>`_)\n\n\n1.6.3 (2020-11-14)\n==================\n\nBugfixes\n--------\n\n- No longer loose characters when decoding incorrect percent-sequences (like ``%e2%82%f8``). All non-decodable percent-sequences are now preserved.\n  `#517 <https://github.com/aio-libs/yarl/issues/517>`_\n- Provide x86 Windows wheels.\n  `#535 <https://github.com/aio-libs/yarl/issues/535>`_\n\n\n----\n\n\n1.6.2 (2020-10-12)\n==================\n\n\nBugfixes\n--------\n\n- Provide generated ``.c`` files in TarBall distribution.\n  `#530  <https://github.com/aio-libs/multidict/issues/530>`_\n\n1.6.1 (2020-10-12)\n==================\n\nFeatures\n--------\n\n- Provide wheels for ``aarch64``, ``i686``, ``ppc64le``, ``s390x`` architectures on\n  Linux as well as ``x86_64``.\n  `#507  <https://github.com/aio-libs/yarl/issues/507>`_\n- Provide wheels for Python 3.9.\n  `#526 <https://github.com/aio-libs/yarl/issues/526>`_\n\nBugfixes\n--------\n\n- ``human_repr()`` now always produces valid representation equivalent to the original URL (if the original URL is valid).\n  `#511 <https://github.com/aio-libs/yarl/issues/511>`_\n- Fixed  requoting a single percent followed by a percent-encoded character in the Cython implementation.\n  `#514 <https://github.com/aio-libs/yarl/issues/514>`_\n- Fix ValueError when decoding ``%`` which is not followed by two hexadecimal digits.\n  `#516 <https://github.com/aio-libs/yarl/issues/516>`_\n- Fix decoding ``%`` followed by a space and hexadecimal digit.\n  `#520 <https://github.com/aio-libs/yarl/issues/520>`_\n- Fix annotation of ``with_query()``/``update_query()`` methods for ``key=[val1, val2]`` case.\n  `#528 <https://github.com/aio-libs/yarl/issues/528>`_\n\nRemoval\n-------\n\n- Drop Python 3.5 support; Python 3.6 is the minimal supported Python version.\n\n\n----\n\n\n1.6.0 (2020-09-23)\n==================\n\nFeatures\n--------\n\n- Allow for int and float subclasses in query, while still denying bool.\n  `#492 <https://github.com/aio-libs/yarl/issues/492>`_\n\n\nBugfixes\n--------\n\n- Do not requote arguments in ``URL.build()``, ``with_xxx()`` and in ``/`` operator.\n  `#502 <https://github.com/aio-libs/yarl/issues/502>`_\n- Keep IPv6 brackets in ``origin()``.\n  `#504 <https://github.com/aio-libs/yarl/issues/504>`_\n\n\n----\n\n\n1.5.1 (2020-08-01)\n==================\n\nBugfixes\n--------\n\n- Fix including relocated internal ``yarl._quoting_c`` C-extension into published PyPI dists.\n  `#485 <https://github.com/aio-libs/yarl/issues/485>`_\n\n\nMisc\n----\n\n- `#484 <https://github.com/aio-libs/yarl/issues/484>`_\n\n\n----\n\n\n1.5.0 (2020-07-26)\n==================\n\nFeatures\n--------\n\n- Convert host to lowercase on URL building.\n  `#386 <https://github.com/aio-libs/yarl/issues/386>`_\n- Allow using ``mod`` operator (`%`) for updating query string (an alias for ``update_query()`` method).\n  `#435 <https://github.com/aio-libs/yarl/issues/435>`_\n- Allow use of sequences such as ``list`` and ``tuple`` in the values\n  of a mapping such as ``dict`` to represent that a key has many values::\n\n      url = URL(\"http://example.com\")\n      assert url.with_query({\"a\": [1, 2]}) == URL(\"http://example.com/?a=1&a=2\")\n\n  `#443 <https://github.com/aio-libs/yarl/issues/443>`_\n- Support URL.build() with scheme and path (creates a relative URL).\n  `#464 <https://github.com/aio-libs/yarl/issues/464>`_\n- Cache slow IDNA encode/decode calls.\n  `#476 <https://github.com/aio-libs/yarl/issues/476>`_\n- Add ``@final`` / ``Final`` type hints\n  `#477 <https://github.com/aio-libs/yarl/issues/477>`_\n- Support URL authority/raw_authority properties and authority argument of ``URL.build()`` method.\n  `#478 <https://github.com/aio-libs/yarl/issues/478>`_\n- Hide the library implementation details, make the exposed public list very clean.\n  `#483 <https://github.com/aio-libs/yarl/issues/483>`_\n\n\nBugfixes\n--------\n\n- Fix tests with newer Python (3.7.6, 3.8.1 and 3.9.0+).\n  `#409 <https://github.com/aio-libs/yarl/issues/409>`_\n- Fix a bug where query component, passed in a form of mapping or sequence, is unquoted in unexpected way.\n  `#426 <https://github.com/aio-libs/yarl/issues/426>`_\n- Hide `Query` and `QueryVariable` type aliases in `__init__.pyi`, now they are prefixed with underscore.\n  `#431 <https://github.com/aio-libs/yarl/issues/431>`_\n- Keep ipv6 brackets after updating port/user/password.\n  `#451 <https://github.com/aio-libs/yarl/issues/451>`_\n\n\n----\n\n\n1.4.2 (2019-12-05)\n==================\n\nFeatures\n--------\n\n- Workaround for missing `str.isascii()` in Python 3.6\n  `#389 <https://github.com/aio-libs/yarl/issues/389>`_\n\n\n----\n\n\n1.4.1 (2019-11-29)\n==================\n\n* Fix regression, make the library work on Python 3.5 and 3.6 again.\n\n1.4.0 (2019-11-29)\n==================\n\n* Distinguish an empty password in URL from a password not provided at all (#262)\n\n* Fixed annotations for optional parameters of ``URL.build`` (#309)\n\n* Use None as default value of ``user`` parameter of ``URL.build`` (#309)\n\n* Enforce building C Accelerated modules when installing from source tarball, use\n  ``YARL_NO_EXTENSIONS`` environment variable for falling back to (slower) Pure Python\n  implementation (#329)\n\n* Drop Python 3.5 support\n\n* Fix quoting of plus in path by pure python version (#339)\n\n* Don't create a new URL if fragment is unchanged (#292)\n\n* Included in error msg the path that produces starting slash forbidden error (#376)\n\n* Skip slow IDNA encoding for ASCII-only strings (#387)\n\n\n1.3.0 (2018-12-11)\n==================\n\n* Fix annotations for ``query`` parameter (#207)\n\n* An incoming query sequence can have int variables (the same as for\n  Mapping type) (#208)\n\n* Add ``URL.explicit_port`` property (#218)\n\n* Give a friendlier error when port can't be converted to int (#168)\n\n* ``bool(URL())`` now returns ``False`` (#272)\n\n1.2.6 (2018-06-14)\n==================\n\n* Drop Python 3.4 trove classifier (#205)\n\n1.2.5 (2018-05-23)\n==================\n\n* Fix annotations for ``build`` (#199)\n\n1.2.4 (2018-05-08)\n==================\n\n* Fix annotations for ``cached_property`` (#195)\n\n1.2.3 (2018-05-03)\n==================\n\n* Accept ``str`` subclasses in ``URL`` constructor (#190)\n\n1.2.2 (2018-05-01)\n==================\n\n* Fix build\n\n1.2.1 (2018-04-30)\n==================\n\n* Pin minimal required Python to 3.5.3 (#189)\n\n1.2.0 (2018-04-30)\n==================\n\n* Forbid inheritance, replace ``__init__`` with ``__new__`` (#171)\n\n* Support PEP-561 (provide type hinting marker) (#182)\n\n1.1.1 (2018-02-17)\n==================\n\n* Fix performance regression: don't encode empty netloc (#170)\n\n1.1.0 (2018-01-21)\n==================\n\n* Make pure Python quoter consistent with Cython version (#162)\n\n1.0.0 (2018-01-15)\n==================\n\n* Use fast path if quoted string does not need requoting (#154)\n\n* Speed up quoting/unquoting by ``_Quoter`` and ``_Unquoter`` classes (#155)\n\n* Drop ``yarl.quote`` and ``yarl.unquote`` public functions (#155)\n\n* Add custom string writer, reuse static buffer if available (#157)\n  Code is 50-80 times faster than Pure Python version (was 4-5 times faster)\n\n* Don't recode IP zone (#144)\n\n* Support ``encoded=True`` in ``yarl.URL.build()`` (#158)\n\n* Fix updating query with multiple keys (#160)\n\n0.18.0 (2018-01-10)\n===================\n\n* Fallback to IDNA 2003 if domain name is not IDNA 2008 compatible (#152)\n\n0.17.0 (2017-12-30)\n===================\n\n* Use IDNA 2008 for domain name processing (#149)\n\n0.16.0 (2017-12-07)\n===================\n\n* Fix raising ``TypeError`` by ``url.query_string()`` after\n  ``url.with_query({})`` (empty mapping) (#141)\n\n0.15.0 (2017-11-23)\n===================\n\n* Add ``raw_path_qs`` attribute (#137)\n\n0.14.2 (2017-11-14)\n===================\n\n* Restore ``strict`` parameter as no-op in ``quote`` / ``unquote``\n\n0.14.1 (2017-11-13)\n===================\n\n* Restore ``strict`` parameter as no-op for sake of compatibility with\n  aiohttp 2.2\n\n0.14.0 (2017-11-11)\n===================\n\n* Drop strict mode (#123)\n\n* Fix ``\"ValueError: Unallowed PCT %\"`` when there's a ``\"%\"`` in the url (#124)\n\n0.13.0 (2017-10-01)\n===================\n\n* Document ``encoded`` parameter (#102)\n\n* Support relative urls like ``'?key=value'`` (#100)\n\n* Unsafe encoding for QS fixed. Encode ``;`` char in value param (#104)\n\n* Process passwords without user names (#95)\n\n0.12.0 (2017-06-26)\n===================\n\n* Properly support paths without leading slash in ``URL.with_path()`` (#90)\n\n* Enable type annotation checks\n\n0.11.0 (2017-06-26)\n===================\n\n* Normalize path (#86)\n\n* Clear query and fragment parts in ``.with_path()`` (#85)\n\n0.10.3 (2017-06-13)\n===================\n\n* Prevent double URL args unquoting (#83)\n\n0.10.2 (2017-05-05)\n===================\n\n* Unexpected hash behaviour (#75)\n\n\n0.10.1 (2017-05-03)\n===================\n\n* Unexpected compare behaviour (#73)\n\n* Do not quote or unquote + if not a query string. (#74)\n\n\n0.10.0 (2017-03-14)\n===================\n\n* Added ``URL.build`` class method (#58)\n\n* Added ``path_qs`` attribute (#42)\n\n\n0.9.8 (2017-02-16)\n==================\n\n* Do not quote ``:`` in path\n\n\n0.9.7 (2017-02-16)\n==================\n\n* Load from pickle without _cache (#56)\n\n* Percent-encoded pluses in path variables become spaces (#59)\n\n\n0.9.6 (2017-02-15)\n==================\n\n* Revert backward incompatible change (BaseURL)\n\n\n0.9.5 (2017-02-14)\n==================\n\n* Fix BaseURL rich comparison support\n\n\n0.9.4 (2017-02-14)\n==================\n\n* Use BaseURL\n\n\n0.9.3 (2017-02-14)\n==================\n\n* Added BaseURL\n\n\n0.9.2 (2017-02-08)\n==================\n\n* Remove debug print\n\n\n0.9.1 (2017-02-07)\n==================\n\n* Do not lose tail chars (#45)\n\n\n0.9.0 (2017-02-07)\n==================\n\n* Allow to quote ``%`` in non strict mode (#21)\n\n* Incorrect parsing of query parameters with %3B (;) inside (#34)\n\n* Fix core dumps (#41)\n\n* tmpbuf - compiling error (#43)\n\n* Added ``URL.update_path()`` method\n\n* Added ``URL.update_query()`` method (#47)\n\n\n0.8.1 (2016-12-03)\n==================\n\n* Fix broken aiohttp: revert back ``quote`` / ``unquote``.\n\n\n0.8.0 (2016-12-03)\n==================\n\n* Support more verbose error messages in ``.with_query()`` (#24)\n\n* Don't percent-encode ``@`` and ``:`` in path (#32)\n\n* Don't expose ``yarl.quote`` and ``yarl.unquote``, these functions are\n  part of private API\n\n0.7.1 (2016-11-18)\n==================\n\n* Accept not only ``str`` but all classes inherited from ``str`` also (#25)\n\n0.7.0 (2016-11-07)\n==================\n\n* Accept ``int`` as value for ``.with_query()``\n\n0.6.0 (2016-11-07)\n==================\n\n* Explicitly use UTF8 encoding in setup.py (#20)\n* Properly unquote non-UTF8 strings (#19)\n\n0.5.3 (2016-11-02)\n==================\n\n* Don't use namedtuple fields but indexes on URL construction\n\n0.5.2 (2016-11-02)\n==================\n\n* Inline ``_encode`` class method\n\n0.5.1 (2016-11-02)\n==================\n\n* Make URL construction faster by removing extra classmethod calls\n\n0.5.0 (2016-11-02)\n==================\n\n* Add cython optimization for quoting/unquoting\n* Provide binary wheels\n\n0.4.3 (2016-09-29)\n==================\n\n* Fix typing stubs\n\n0.4.2 (2016-09-29)\n==================\n\n* Expose ``quote()`` and ``unquote()`` as public API\n\n0.4.1 (2016-09-28)\n==================\n\n* Support empty values in query (``'/path?arg'``)\n\n0.4.0 (2016-09-27)\n==================\n\n* Introduce ``relative()`` (#16)\n\n0.3.2 (2016-09-27)\n==================\n\n* Typo fixes #15\n\n0.3.1 (2016-09-26)\n==================\n\n* Support sequence of pairs as ``with_query()`` parameter\n\n0.3.0 (2016-09-26)\n==================\n\n* Introduce ``is_default_port()``\n\n0.2.1 (2016-09-26)\n==================\n\n* Raise ValueError for URLs like 'http://:8080/'\n\n0.2.0 (2016-09-18)\n==================\n\n* Avoid doubling slashes when joining paths (#13)\n\n* Appending path starting from slash is forbidden (#12)\n\n0.1.4 (2016-09-09)\n==================\n\n* Add kwargs support for ``with_query()`` (#10)\n\n0.1.3 (2016-09-07)\n==================\n\n* Document ``with_query()``, ``with_fragment()`` and ``origin()``\n\n* Allow ``None`` for ``with_query()`` and ``with_fragment()``\n\n0.1.2 (2016-09-07)\n==================\n\n* Fix links, tune docs theme.\n\n0.1.1 (2016-09-06)\n==================\n\n* Update README, old version used obsolete API\n\n0.1.0 (2016-09-06)\n==================\n\n* The library was deeply refactored, bytes are gone away but all\n  accepted strings are encoded if needed.\n\n0.0.1 (2016-08-30)\n==================\n\n* The first release.\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/yarl-1.9.2.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "zipp",
        "version": "3.15.0",
        "summary": "Backport of pathlib-compatible object wrapper for zip files",
        "home_page": "https://github.com/jaraco/zipp",
        "author": "Jason R. Coombs",
        "author_email": "jaraco@jaraco.com",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: MIT License",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3 :: Only"
        ],
        "requires_dist": [
          "sphinx (>=3.5) ; extra == 'docs'",
          "jaraco.packaging (>=9) ; extra == 'docs'",
          "rst.linker (>=1.9) ; extra == 'docs'",
          "furo ; extra == 'docs'",
          "sphinx-lint ; extra == 'docs'",
          "jaraco.tidelift (>=1.4) ; extra == 'docs'",
          "pytest (>=6) ; extra == 'testing'",
          "pytest-checkdocs (>=2.4) ; extra == 'testing'",
          "flake8 (<5) ; extra == 'testing'",
          "pytest-cov ; extra == 'testing'",
          "pytest-enabler (>=1.3) ; extra == 'testing'",
          "jaraco.itertools ; extra == 'testing'",
          "jaraco.functools ; extra == 'testing'",
          "more-itertools ; extra == 'testing'",
          "big-O ; extra == 'testing'",
          "pytest-black (>=0.3.7) ; (platform_python_implementation != \"PyPy\") and extra == 'testing'",
          "pytest-mypy (>=0.9.1) ; (platform_python_implementation != \"PyPy\") and extra == 'testing'",
          "pytest-flake8 ; (python_version < \"3.12\") and extra == 'testing'"
        ],
        "requires_python": ">=3.7",
        "provides_extra": [
          "docs",
          "testing"
        ],
        "description": ".. image:: https://img.shields.io/pypi/v/zipp.svg\n   :target: https://pypi.org/project/zipp\n\n.. image:: https://img.shields.io/pypi/pyversions/zipp.svg\n\n.. image:: https://github.com/jaraco/zipp/workflows/tests/badge.svg\n   :target: https://github.com/jaraco/zipp/actions?query=workflow%3A%22tests%22\n   :alt: tests\n\n.. image:: https://img.shields.io/badge/code%20style-black-000000.svg\n   :target: https://github.com/psf/black\n   :alt: Code style: Black\n\n.. .. image:: https://readthedocs.org/projects/skeleton/badge/?version=latest\n..    :target: https://skeleton.readthedocs.io/en/latest/?badge=latest\n\n.. image:: https://img.shields.io/badge/skeleton-2023-informational\n   :target: https://blog.jaraco.com/skeleton\n\n.. image:: https://tidelift.com/badges/package/pypi/zipp\n   :target: https://tidelift.com/subscription/pkg/pypi-zipp?utm_source=pypi-zipp&utm_medium=readme\n\n\nA pathlib-compatible Zipfile object wrapper. Official backport of the standard library\n`Path object <https://docs.python.org/3.8/library/zipfile.html#path-objects>`_.\n\n\nCompatibility\n=============\n\nNew features are introduced in this third-party library and later merged\ninto CPython. The following table indicates which versions of this library\nwere contributed to different versions in the standard library:\n\n.. list-table::\n   :header-rows: 1\n\n   * - zipp\n     - stdlib\n   * - 3.9\n     - 3.12\n   * - 3.5\n     - 3.11\n   * - 3.2\n     - 3.10\n   * - 3.3 ??\n     - 3.9\n   * - 1.0\n     - 3.8\n\n\nUsage\n=====\n\nUse ``zipp.Path`` in place of ``zipfile.Path`` on any Python.\n\nFor Enterprise\n==============\n\nAvailable as part of the Tidelift Subscription.\n\nThis project and the maintainers of thousands of other packages are working with Tidelift to deliver one enterprise subscription that covers all of the open source you use.\n\n`Learn more <https://tidelift.com/subscription/pkg/pypi-zipp?utm_source=pypi-zipp&utm_medium=referral&utm_campaign=github>`_.\n\nSecurity Contact\n================\n\nTo report a security vulnerability, please use the\n`Tidelift security contact <https://tidelift.com/security>`_.\nTidelift will coordinate the fix and disclosure.\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/zipp-3.15.0.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "zope.event",
        "version": "4.6",
        "platform": [
          "UNKNOWN"
        ],
        "summary": "Very basic event publishing system",
        "keywords": [
          "event",
          "framework",
          "dispatch",
          "subscribe",
          "publish"
        ],
        "home_page": "https://github.com/zopefoundation/zope.event",
        "author": "Zope Foundation and Contributors",
        "author_email": "zope-dev@zope.org",
        "license": "ZPL-2.1",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: Zope Public License",
          "Operating System :: OS Independent",
          "Programming Language :: Python",
          "Programming Language :: Python :: 2",
          "Programming Language :: Python :: 2.7",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.5",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Programming Language :: Python :: Implementation :: CPython",
          "Programming Language :: Python :: Implementation :: Jython",
          "Programming Language :: Python :: Implementation :: PyPy",
          "Framework :: Zope :: 3",
          "Topic :: Software Development :: Libraries :: Python Modules"
        ],
        "requires_dist": [
          "setuptools",
          "Sphinx ; extra == 'docs'",
          "zope.testrunner ; extra == 'test'"
        ],
        "provides_extra": [
          "docs",
          "test"
        ],
        "description": "=======================\n ``zope.event`` README\n=======================\n\n.. image:: https://img.shields.io/pypi/v/zope.event.svg\n        :target: https://pypi.python.org/pypi/zope.event/\n        :alt: Latest Version\n\n.. image:: https://github.com/zopefoundation/zope.event/actions/workflows/tests.yml/badge.svg\n        :target: https://github.com/zopefoundation/zope.event/actions/workflows/tests.yml\n\n.. image:: https://readthedocs.org/projects/zopeevent/badge/?version=latest\n        :target: http://zopeevent.readthedocs.org/en/latest/\n        :alt: Documentation Status\n\nThe ``zope.event`` package provides a simple event system, including:\n\n- An event publishing API, intended for use by applications which are\n  unaware of any subscribers to their events.\n\n- A very simple synchronous event-dispatching system, on which more sophisticated\n  event dispatching systems can be built. For example, a type-based\n  event dispatching system that builds on ``zope.event`` can be found in\n  ``zope.component``.\n\nPlease see http://zopeevent.readthedocs.io/ for the documentation.\n\n==========================\n ``zope.event`` Changelog\n==========================\n\n4.6 (2022-12-15)\n================\n\n- Port documentation to Python 3.\n\n- Add support for Python 3.10, 3.11.\n\n\n4.5.0 (2020-09-18)\n==================\n\n- Add support for Python 3.8 and 3.9.\n\n- Remove support for Python 3.4.\n\n\n4.4 (2018-10-05)\n================\n\n- Add support for Python 3.7\n\n\n4.3.0 (2017-07-25)\n==================\n\n- Add support for Python 3.6.\n\n- Drop support for Python 3.3.\n\n\n4.2.0 (2016-02-17)\n==================\n\n- Add support for Python 3.5.\n\n- Drop support for Python 2.6 and 3.2.\n\n\n4.1.0 (2015-10-18)\n==================\n\n- Require 100% branch (as well as statement) coverage.\n\n- Add a simple class-based handler implementation.\n\n\n4.0.3 (2014-03-19)\n==================\n\n- Add support for Python 3.4.\n\n- Update ``boostrap.py`` to version 2.2.\n\n\n4.0.2 (2012-12-31)\n==================\n\n- Flesh out PyPI Trove classifiers.\n\n- Add support for jython 2.7.\n\n\n4.0.1 (2012-11-21)\n==================\n\n- Add support for Python 3.3.\n\n\n4.0.0 (2012-05-16)\n==================\n\n- Automate build of Sphinx HTML docs and running doctest snippets via tox.\n\n- Drop explicit support for Python 2.4 / 2.5 / 3.1.\n\n- Add support for PyPy.\n\n\n3.5.2 (2012-03-30)\n==================\n\n- This release is the last which will maintain support for Python 2.4 /\n  Python 2.5.\n\n- Add support for continuous integration using ``tox`` and ``jenkins``.\n\n- Add 'setup.py dev' alias (runs ``setup.py develop`` plus installs\n  ``nose`` and ``coverage``).\n\n- Add 'setup.py docs' alias (installs ``Sphinx`` and dependencies).\n\n\n3.5.1 (2011-08-04)\n==================\n\n- Add Sphinx documentation.\n\n\n3.5.0 (2010-05-01)\n==================\n\n- Add change log to ``long-description``.\n\n- Add support for Python 3.x.\n\n\n3.4.1 (2009-03-03)\n==================\n\n- A few minor cleanups.\n\n\n3.4.0 (2007-07-14)\n==================\n\n- Initial release as a separate project.\n\n\n"
      },
      "metadata_location": "/home/liukun/.local/lib/python3.8/site-packages/zope.event-4.6.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "Django",
        "version": "4.2.1",
        "platform": [
          "UNKNOWN"
        ],
        "summary": "A high-level Python web framework that encourages rapid development and clean, pragmatic design.",
        "home_page": "https://www.djangoproject.com/",
        "author": "Django Software Foundation",
        "author_email": "foundation@djangoproject.com",
        "license": "BSD-3-Clause",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Environment :: Web Environment",
          "Framework :: Django",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: BSD License",
          "Operating System :: OS Independent",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3 :: Only",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Topic :: Internet :: WWW/HTTP",
          "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
          "Topic :: Internet :: WWW/HTTP :: WSGI",
          "Topic :: Software Development :: Libraries :: Application Frameworks",
          "Topic :: Software Development :: Libraries :: Python Modules"
        ],
        "requires_dist": [
          "asgiref (<4,>=3.6.0)",
          "sqlparse (>=0.3.1)",
          "backports.zoneinfo ; python_version < \"3.9\"",
          "tzdata ; sys_platform == \"win32\"",
          "argon2-cffi (>=19.1.0) ; extra == 'argon2'",
          "bcrypt ; extra == 'bcrypt'"
        ],
        "requires_python": ">=3.8",
        "project_url": [
          "Documentation, https://docs.djangoproject.com/",
          "Release notes, https://docs.djangoproject.com/en/stable/releases/",
          "Funding, https://www.djangoproject.com/fundraising/",
          "Source, https://github.com/django/django",
          "Tracker, https://code.djangoproject.com/"
        ],
        "provides_extra": [
          "argon2",
          "bcrypt"
        ],
        "description": "======\nDjango\n======\n\nDjango is a high-level Python web framework that encourages rapid development\nand clean, pragmatic design. Thanks for checking it out.\n\nAll documentation is in the \"``docs``\" directory and online at\nhttps://docs.djangoproject.com/en/stable/. If you're just getting started,\nhere's how we recommend you read the docs:\n\n* First, read ``docs/intro/install.txt`` for instructions on installing Django.\n\n* Next, work through the tutorials in order (``docs/intro/tutorial01.txt``,\n  ``docs/intro/tutorial02.txt``, etc.).\n\n* If you want to set up an actual deployment server, read\n  ``docs/howto/deployment/index.txt`` for instructions.\n\n* You'll probably want to read through the topical guides (in ``docs/topics``)\n  next; from there you can jump to the HOWTOs (in ``docs/howto``) for specific\n  problems, and check out the reference (``docs/ref``) for gory details.\n\n* See ``docs/README`` for instructions on building an HTML version of the docs.\n\nDocs are updated rigorously. If you find any problems in the docs, or think\nthey should be clarified in any way, please take 30 seconds to fill out a\nticket here: https://code.djangoproject.com/newticket\n\nTo get more help:\n\n* Join the ``#django`` channel on ``irc.libera.chat``. Lots of helpful people\n  hang out there. See https://web.libera.chat if you're new to IRC.\n\n* Join the django-users mailing list, or read the archives, at\n  https://groups.google.com/group/django-users.\n\nTo contribute to Django:\n\n* Check out https://docs.djangoproject.com/en/dev/internals/contributing/ for\n  information about getting involved.\n\nTo run Django's test suite:\n\n* Follow the instructions in the \"Unit tests\" section of\n  ``docs/internals/contributing/writing-code/unit-tests.txt``, published online at\n  https://docs.djangoproject.com/en/dev/internals/contributing/writing-code/unit-tests/#running-the-unit-tests\n\nSupporting the Development of Django\n====================================\n\nDjango's development depends on your contributions. \n\nIf you depend on Django, remember to support the Django Software Foundation: https://www.djangoproject.com/fundraising/\n\n\n"
      },
      "metadata_location": "/usr/local/lib/python3.8/dist-packages/Django-4.2.1.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "PyMySQL",
        "version": "1.0.3",
        "summary": "Pure Python MySQL Driver",
        "description_content_type": "text/markdown",
        "keywords": [
          "MySQL"
        ],
        "author_email": "Inada Naoki <songofacandy@gmail.com>, Yutaka Matsubara <yutaka.matsubara@gmail.com>",
        "license": "MIT License",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Programming Language :: Python :: Implementation :: CPython",
          "Programming Language :: Python :: Implementation :: PyPy",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: MIT License",
          "Topic :: Database"
        ],
        "requires_dist": [
          "PyNaCl (>=1.4.0) ; extra == 'ed25519'",
          "cryptography ; extra == 'rsa'"
        ],
        "requires_python": ">=3.7",
        "project_url": [
          "Project, https://github.com/PyMySQL/PyMySQL",
          "Documentation, https://pymysql.readthedocs.io/"
        ],
        "provides_extra": [
          "ed25519",
          "rsa"
        ],
        "description": "[![Documentation Status](https://readthedocs.org/projects/pymysql/badge/?version=latest)](https://pymysql.readthedocs.io/)\n[![image](https://coveralls.io/repos/PyMySQL/PyMySQL/badge.svg?branch=main&service=github)](https://coveralls.io/github/PyMySQL/PyMySQL?branch=main)\n\n# PyMySQL\n\nThis package contains a pure-Python MySQL client library, based on [PEP\n249](https://www.python.org/dev/peps/pep-0249/).\n\n## Requirements\n\n- Python -- one of the following:\n  - [CPython](https://www.python.org/) : 3.7 and newer\n  - [PyPy](https://pypy.org/) : Latest 3.x version\n- MySQL Server -- one of the following:\n  - [MySQL](https://www.mysql.com/) \\>= 5.7\n  - [MariaDB](https://mariadb.org/) \\>= 10.3\n\n## Installation\n\nPackage is uploaded on [PyPI](https://pypi.org/project/PyMySQL).\n\nYou can install it with pip:\n\n    $ python3 -m pip install PyMySQL\n\nTo use \"sha256_password\" or \"caching_sha2_password\" for authenticate,\nyou need to install additional dependency:\n\n    $ python3 -m pip install PyMySQL[rsa]\n\nTo use MariaDB's \"ed25519\" authentication method, you need to install\nadditional dependency:\n\n    $ python3 -m pip install PyMySQL[ed25519]\n\n## Documentation\n\nDocumentation is available online: <https://pymysql.readthedocs.io/>\n\nFor support, please refer to the\n[StackOverflow](https://stackoverflow.com/questions/tagged/pymysql).\n\n## Example\n\nThe following examples make use of a simple table\n\n``` sql\nCREATE TABLE `users` (\n    `id` int(11) NOT NULL AUTO_INCREMENT,\n    `email` varchar(255) COLLATE utf8_bin NOT NULL,\n    `password` varchar(255) COLLATE utf8_bin NOT NULL,\n    PRIMARY KEY (`id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_bin\nAUTO_INCREMENT=1 ;\n```\n\n``` python\nimport pymysql.cursors\n\n# Connect to the database\nconnection = pymysql.connect(host='localhost',\n                             user='user',\n                             password='passwd',\n                             database='db',\n                             cursorclass=pymysql.cursors.DictCursor)\n\nwith connection:\n    with connection.cursor() as cursor:\n        # Create a new record\n        sql = \"INSERT INTO `users` (`email`, `password`) VALUES (%s, %s)\"\n        cursor.execute(sql, ('webmaster@python.org', 'very-secret'))\n\n    # connection is not autocommit by default. So you must commit to save\n    # your changes.\n    connection.commit()\n\n    with connection.cursor() as cursor:\n        # Read a single record\n        sql = \"SELECT `id`, `password` FROM `users` WHERE `email`=%s\"\n        cursor.execute(sql, ('webmaster@python.org',))\n        result = cursor.fetchone()\n        print(result)\n```\n\nThis example will print:\n\n``` python\n{'password': 'very-secret', 'id': 1}\n```\n\n## Resources\n\n- DB-API 2.0: <https://www.python.org/dev/peps/pep-0249/>\n- MySQL Reference Manuals: <https://dev.mysql.com/doc/>\n- MySQL client/server protocol:\n  <https://dev.mysql.com/doc/internals/en/client-server-protocol.html>\n- \"Connector\" channel in MySQL Community Slack:\n  <https://lefred.be/mysql-community-on-slack/>\n- PyMySQL mailing list:\n  <https://groups.google.com/forum/#!forum/pymysql-users>\n\n## License\n\nPyMySQL is released under the MIT License. See LICENSE for more\ninformation.\n"
      },
      "metadata_location": "/usr/local/lib/python3.8/dist-packages/PyMySQL-1.0.3.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "asgiref",
        "version": "3.6.0",
        "summary": "ASGI specs, helper code, and adapters",
        "home_page": "https://github.com/django/asgiref/",
        "author": "Django Software Foundation",
        "author_email": "foundation@djangoproject.com",
        "license": "BSD-3-Clause",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Environment :: Web Environment",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: BSD License",
          "Operating System :: OS Independent",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3 :: Only",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Topic :: Internet :: WWW/HTTP"
        ],
        "requires_dist": [
          "typing-extensions ; python_version < \"3.8\"",
          "pytest ; extra == 'tests'",
          "pytest-asyncio ; extra == 'tests'",
          "mypy (>=0.800) ; extra == 'tests'"
        ],
        "requires_python": ">=3.7",
        "project_url": [
          "Documentation, https://asgi.readthedocs.io/",
          "Further Documentation, https://docs.djangoproject.com/en/stable/topics/async/#async-adapter-functions",
          "Changelog, https://github.com/django/asgiref/blob/master/CHANGELOG.txt"
        ],
        "provides_extra": [
          "tests"
        ],
        "description": "asgiref\n=======\n\n.. image:: https://api.travis-ci.org/django/asgiref.svg\n    :target: https://travis-ci.org/django/asgiref\n\n.. image:: https://img.shields.io/pypi/v/asgiref.svg\n    :target: https://pypi.python.org/pypi/asgiref\n\nASGI is a standard for Python asynchronous web apps and servers to communicate\nwith each other, and positioned as an asynchronous successor to WSGI. You can\nread more at https://asgi.readthedocs.io/en/latest/\n\nThis package includes ASGI base libraries, such as:\n\n* Sync-to-async and async-to-sync function wrappers, ``asgiref.sync``\n* Server base classes, ``asgiref.server``\n* A WSGI-to-ASGI adapter, in ``asgiref.wsgi``\n\n\nFunction wrappers\n-----------------\n\nThese allow you to wrap or decorate async or sync functions to call them from\nthe other style (so you can call async functions from a synchronous thread,\nor vice-versa).\n\nIn particular:\n\n* AsyncToSync lets a synchronous subthread stop and wait while the async\n  function is called on the main thread's event loop, and then control is\n  returned to the thread when the async function is finished.\n\n* SyncToAsync lets async code call a synchronous function, which is run in\n  a threadpool and control returned to the async coroutine when the synchronous\n  function completes.\n\nThe idea is to make it easier to call synchronous APIs from async code and\nasynchronous APIs from synchronous code so it's easier to transition code from\none style to the other. In the case of Channels, we wrap the (synchronous)\nDjango view system with SyncToAsync to allow it to run inside the (asynchronous)\nASGI server.\n\nNote that exactly what threads things run in is very specific, and aimed to\nkeep maximum compatibility with old synchronous code. See\n\"Synchronous code & Threads\" below for a full explanation. By default,\n``sync_to_async`` will run all synchronous code in the program in the same\nthread for safety reasons; you can disable this for more performance with\n``@sync_to_async(thread_sensitive=False)``, but make sure that your code does\nnot rely on anything bound to threads (like database connections) when you do.\n\n\nThreadlocal replacement\n-----------------------\n\nThis is a drop-in replacement for ``threading.local`` that works with both\nthreads and asyncio Tasks. Even better, it will proxy values through from a\ntask-local context to a thread-local context when you use ``sync_to_async``\nto run things in a threadpool, and vice-versa for ``async_to_sync``.\n\nIf you instead want true thread- and task-safety, you can set\n``thread_critical`` on the Local object to ensure this instead.\n\n\nServer base classes\n-------------------\n\nIncludes a ``StatelessServer`` class which provides all the hard work of\nwriting a stateless server (as in, does not handle direct incoming sockets\nbut instead consumes external streams or sockets to work out what is happening).\n\nAn example of such a server would be a chatbot server that connects out to\na central chat server and provides a \"connection scope\" per user chatting to\nit. There's only one actual connection, but the server has to separate things\ninto several scopes for easier writing of the code.\n\nYou can see an example of this being used in `frequensgi <https://github.com/andrewgodwin/frequensgi>`_.\n\n\nWSGI-to-ASGI adapter\n--------------------\n\nAllows you to wrap a WSGI application so it appears as a valid ASGI application.\n\nSimply wrap it around your WSGI application like so::\n\n    asgi_application = WsgiToAsgi(wsgi_application)\n\nThe WSGI application will be run in a synchronous threadpool, and the wrapped\nASGI application will be one that accepts ``http`` class messages.\n\nPlease note that not all extended features of WSGI may be supported (such as\nfile handles for incoming POST bodies).\n\n\nDependencies\n------------\n\n``asgiref`` requires Python 3.7 or higher.\n\n\nContributing\n------------\n\nPlease refer to the\n`main Channels contributing docs <https://github.com/django/channels/blob/master/CONTRIBUTING.rst>`_.\n\n\nTesting\n'''''''\n\nTo run tests, make sure you have installed the ``tests`` extra with the package::\n\n    cd asgiref/\n    pip install -e .[tests]\n    pytest\n\n\nBuilding the documentation\n''''''''''''''''''''''''''\n\nThe documentation uses `Sphinx <http://www.sphinx-doc.org>`_::\n\n    cd asgiref/docs/\n    pip install sphinx\n\nTo build the docs, you can use the default tools::\n\n    sphinx-build -b html . _build/html  # or `make html`, if you've got make set up\n    cd _build/html\n    python -m http.server\n\n...or you can use ``sphinx-autobuild`` to run a server and rebuild/reload\nyour documentation changes automatically::\n\n    pip install sphinx-autobuild\n    sphinx-autobuild . _build/html\n\n\nReleasing\n'''''''''\n\nTo release, first add details to CHANGELOG.txt and update the version number in ``asgiref/__init__.py``.\n\nThen, build and push the packages::\n\n    python -m build\n    twine upload dist/*\n    rm -r build/ dist/\n\n\nImplementation Details\n----------------------\n\nSynchronous code & threads\n''''''''''''''''''''''''''\n\nThe ``asgiref.sync`` module provides two wrappers that let you go between\nasynchronous and synchronous code at will, while taking care of the rough edges\nfor you.\n\nUnfortunately, the rough edges are numerous, and the code has to work especially\nhard to keep things in the same thread as much as possible. Notably, the\nrestrictions we are working with are:\n\n* All synchronous code called through ``SyncToAsync`` and marked with\n  ``thread_sensitive`` should run in the same thread as each other (and if the\n  outer layer of the program is synchronous, the main thread)\n\n* If a thread already has a running async loop, ``AsyncToSync`` can't run things\n  on that loop if it's blocked on synchronous code that is above you in the\n  call stack.\n\nThe first compromise you get to might be that ``thread_sensitive`` code should\njust run in the same thread and not spawn in a sub-thread, fulfilling the first\nrestriction, but that immediately runs you into the second restriction.\n\nThe only real solution is to essentially have a variant of ThreadPoolExecutor\nthat executes any ``thread_sensitive`` code on the outermost synchronous\nthread - either the main thread, or a single spawned subthread.\n\nThis means you now have two basic states:\n\n* If the outermost layer of your program is synchronous, then all async code\n  run through ``AsyncToSync`` will run in a per-call event loop in arbitrary\n  sub-threads, while all ``thread_sensitive`` code will run in the main thread.\n\n* If the outermost layer of your program is asynchronous, then all async code\n  runs on the main thread's event loop, and all ``thread_sensitive`` synchronous\n  code will run in a single shared sub-thread.\n\nCrucially, this means that in both cases there is a thread which is a shared\nresource that all ``thread_sensitive`` code must run on, and there is a chance\nthat this thread is currently blocked on its own ``AsyncToSync`` call. Thus,\n``AsyncToSync`` needs to act as an executor for thread code while it's blocking.\n\nThe ``CurrentThreadExecutor`` class provides this functionality; rather than\nsimply waiting on a Future, you can call its ``run_until_future`` method and\nit will run submitted code until that Future is done. This means that code\ninside the call can then run code on your thread.\n\n\nMaintenance and Security\n------------------------\n\nTo report security issues, please contact security@djangoproject.com. For GPG\nsignatures and more security process information, see\nhttps://docs.djangoproject.com/en/dev/internals/security/.\n\nTo report bugs or request new features, please open a new GitHub issue.\n\nThis repository is part of the Channels project. For the shepherd and maintenance team, please see the\n`main Channels readme <https://github.com/django/channels/blob/master/README.rst>`_.\n"
      },
      "metadata_location": "/usr/local/lib/python3.8/dist-packages/asgiref-3.6.0.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "sqlparse",
        "version": "0.4.4",
        "summary": "A non-validating SQL parser.",
        "description_content_type": "text/x-rst",
        "author_email": "Andi Albrecht <albrecht.andi@gmail.com>",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: BSD License",
          "Operating System :: OS Independent",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3 :: Only",
          "Programming Language :: Python :: 3.5",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: Implementation :: CPython",
          "Programming Language :: Python :: Implementation :: PyPy",
          "Topic :: Database",
          "Topic :: Software Development"
        ],
        "requires_dist": [
          "flake8 ; extra == \"dev\"",
          "build ; extra == \"dev\"",
          "sphinx ; extra == \"doc\"",
          "pytest ; extra == \"test\"",
          "pytest-cov ; extra == \"test\""
        ],
        "requires_python": ">=3.5",
        "project_url": [
          "Documentation, https://sqlparse.readthedocs.io/",
          "Home, https://github.com/andialbrecht/sqlparse",
          "Release Notes, https://sqlparse.readthedocs.io/en/latest/changes/",
          "Source, https://github.com/andialbrecht/sqlparse",
          "Tracker, https://github.com/andialbrecht/sqlparse/issues"
        ],
        "provides_extra": [
          "dev",
          "doc",
          "test"
        ],
        "description": "python-sqlparse - Parse SQL statements\n======================================\n\n|buildstatus|_\n|coverage|_\n|docs|_\n|packageversion|_\n\n.. docincludebegin\n\nsqlparse is a non-validating SQL parser for Python.\nIt provides support for parsing, splitting and formatting SQL statements.\n\nThe module is compatible with Python 3.5+ and released under the terms of the\n`New BSD license <https://opensource.org/licenses/BSD-3-Clause>`_.\n\nVisit the project page at https://github.com/andialbrecht/sqlparse for\nfurther information about this project.\n\n\nQuick Start\n-----------\n\n.. code-block:: sh\n\n   $ pip install sqlparse\n\n.. code-block:: python\n\n   >>> import sqlparse\n\n   >>> # Split a string containing two SQL statements:\n   >>> raw = 'select * from foo; select * from bar;'\n   >>> statements = sqlparse.split(raw)\n   >>> statements\n   ['select * from foo;', 'select * from bar;']\n\n   >>> # Format the first statement and print it out:\n   >>> first = statements[0]\n   >>> print(sqlparse.format(first, reindent=True, keyword_case='upper'))\n   SELECT *\n   FROM foo;\n\n   >>> # Parsing a SQL statement:\n   >>> parsed = sqlparse.parse('select * from foo')[0]\n   >>> parsed.tokens\n   [<DML 'select' at 0x7f22c5e15368>, <Whitespace ' ' at 0x7f22c5e153b0>, <Wildcard '*' … ]\n   >>>\n\nLinks\n-----\n\nProject page\n   https://github.com/andialbrecht/sqlparse\n\nBug tracker\n   https://github.com/andialbrecht/sqlparse/issues\n\nDocumentation\n   https://sqlparse.readthedocs.io/\n\nOnline Demo\n   https://sqlformat.org/\n\n\nsqlparse is licensed under the BSD license.\n\nParts of the code are based on pygments written by Georg Brandl and others.\npygments-Homepage: http://pygments.org/\n\n.. |buildstatus| image:: https://github.com/andialbrecht/sqlparse/actions/workflows/python-app.yml/badge.svg\n.. _buildstatus: https://github.com/andialbrecht/sqlparse/actions/workflows/python-app.yml\n.. |coverage| image:: https://codecov.io/gh/andialbrecht/sqlparse/branch/master/graph/badge.svg\n.. _coverage: https://codecov.io/gh/andialbrecht/sqlparse\n.. |docs| image:: https://readthedocs.org/projects/sqlparse/badge/?version=latest\n.. _docs: https://sqlparse.readthedocs.io/en/latest/?badge=latest\n.. |packageversion| image:: https://img.shields.io/pypi/v/sqlparse?color=%2334D058&label=pypi%20package\n.. _packageversion: https://pypi.org/project/sqlparse\n\n"
      },
      "metadata_location": "/usr/local/lib/python3.8/dist-packages/sqlparse-0.4.4.dist-info",
      "installer": "pip",
      "requested": false
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "Automat",
        "version": "0.8.0",
        "platform": [
          "UNKNOWN"
        ],
        "summary": "Self-service finite-state machines for the programmer on the go.",
        "description": "# Automat #\n        \n        [![Documentation Status](https://readthedocs.org/projects/automat/badge/?version=latest)](http://automat.readthedocs.io/en/latest/)\n        [![Build Status](https://travis-ci.org/glyph/automat.svg?branch=master)](https://travis-ci.org/glyph/automat)\n        [![Coverage Status](https://coveralls.io/repos/glyph/automat/badge.png)](https://coveralls.io/r/glyph/automat)\n        \n        ## Self-service finite-state machines for the programmer on the go. ##\n        \n        Automat is a library for concise, idiomatic Python expression of finite-state\n        automata (particularly deterministic finite-state transducers).\n        \n        Read more here, or on [Read the Docs](https://automat.readthedocs.io/), or watch the following videos for an overview and presentation\n        \n        Overview and presentation by **Glyph Lefkowitz** at the first talk of the first Pyninsula meetup, on February 21st, 2017:\n        [![Glyph Lefkowitz - Automat - Pyninsula #0](https://img.youtube.com/vi/0wOZBpD1VVk/0.jpg)](https://www.youtube.com/watch?v=0wOZBpD1VVk)\n        \n        Presentation by **Clinton Roy** at PyCon Australia, on August 6th 2017:\n        [![Clinton Roy - State Machines - Pycon Australia 2017](https://img.youtube.com/vi/TedUKXhu9kE/0.jpg)](https://www.youtube.com/watch?v=TedUKXhu9kE)\n        \n        ### Why use state machines? ###\n        \n        Sometimes you have to create an object whose behavior varies with its state,\n        but still wishes to present a consistent interface to its callers.\n        \n        For example, let's say you're writing the software for a coffee machine.  It\n        has a lid that can be opened or closed, a chamber for water, a chamber for\n        coffee beans, and a button for \"brew\".\n        \n        There are a number of possible states for the coffee machine.  It might or\n        might not have water.  It might or might not have beans.  The lid might be open\n        or closed.  The \"brew\" button should only actually attempt to brew coffee in\n        one of these configurations, and the \"open lid\" button should only work if the\n        coffee is not, in fact, brewing.\n        \n        With diligence and attention to detail, you can implement this correctly using\n        a collection of attributes on an object; `has_water`, `has_beans`,\n        `is_lid_open` and so on.  However, you have to keep all these attributes\n        consistent.  As the coffee maker becomes more complex - perhaps you add an\n        additional chamber for flavorings so you can make hazelnut coffee, for\n        example - you have to keep adding more and more checks and more and more\n        reasoning about which combinations of states are allowed.\n        \n        Rather than adding tedious 'if' checks to every single method to make sure that\n        each of these flags are exactly what you expect, you can use a state machine to\n        ensure that if your code runs at all, it will be run with all the required\n        values initialized, because they have to be called in the order you declare\n        them.\n        \n        You can read about state machines and their advantages for Python programmers\n        in considerably more detail\n        [in this excellent series of articles from ClusterHQ](https://clusterhq.com/blog/what-is-a-state-machine/).\n        \n        ### What makes Automat different? ###\n        \n        There are\n        [dozens of libraries on PyPI implementing state machines](https://pypi.org/search/?q=finite+state+machine).\n        So it behooves me to say why yet another one would be a good idea.\n        \n        Automat is designed around this principle: while organizing your code around\n        state machines is a good idea, your callers don't, and shouldn't have to, care\n        that you've done so.  In Python, the \"input\" to a stateful system is a method\n        call; the \"output\" may be a method call, if you need to invoke a side effect,\n        or a return value, if you are just performing a computation in memory.  Most\n        other state-machine libraries require you to explicitly create an input object,\n        provide that object to a generic \"input\" method, and then receive results,\n        sometimes in terms of that library's interfaces and sometimes in terms of\n        classes you define yourself.\n        \n        For example, a snippet of the coffee-machine example above might be implemented\n        as follows in naive Python:\n        \n        ```python\n        class CoffeeMachine(object):\n            def brew_button(self):\n                if self.has_water and self.has_beans and not self.is_lid_open:\n                    self.heat_the_heating_element()\n                    # ...\n        ```\n        \n        With Automat, you'd create a class with a `MethodicalMachine` attribute:\n        \n        ```python\n        from automat import MethodicalMachine\n        \n        class CoffeeBrewer(object):\n            _machine = MethodicalMachine()\n        ```\n        \n        and then you would break the above logic into two pieces - the `brew_button`\n        *input*, declared like so:\n        \n        ```python\n            @_machine.input()\n            def brew_button(self):\n                \"The user pressed the 'brew' button.\"\n        ```\n        \n        It wouldn't do any good to declare a method *body* on this, however, because\n        input methods don't actually execute their bodies when called; doing actual\n        work is the *output*'s job:\n        \n        ```python\n            @_machine.output()\n            def _heat_the_heating_element(self):\n                \"Heat up the heating element, which should cause coffee to happen.\"\n                self._heating_element.turn_on()\n        ```\n        \n        As well as a couple of *states* - and for simplicity's sake let's say that the\n        only two states are `have_beans` and `dont_have_beans`:\n        \n        ```python\n            @_machine.state()\n            def have_beans(self):\n                \"In this state, you have some beans.\"\n            @_machine.state(initial=True)\n            def dont_have_beans(self):\n                \"In this state, you don't have any beans.\"\n        ```\n        \n        `dont_have_beans` is the `initial` state because `CoffeeBrewer` starts without beans\n        in it.\n        \n        (And another input to put some beans in:)\n        \n        ```python\n            @_machine.input()\n            def put_in_beans(self):\n                \"The user put in some beans.\"\n        ```\n        \n        Finally, you hook everything together with the `upon` method of the functions\n        decorated with `_machine.state`:\n        \n        ```python\n        \n            # When we don't have beans, upon putting in beans, we will then have beans\n            # (and produce no output)\n            dont_have_beans.upon(put_in_beans, enter=have_beans, outputs=[])\n        \n            # When we have beans, upon pressing the brew button, we will then not have\n            # beans any more (as they have been entered into the brewing chamber) and\n            # our output will be heating the heating element.\n            have_beans.upon(brew_button, enter=dont_have_beans,\n                            outputs=[_heat_the_heating_element])\n        ```\n        \n        To *users* of this coffee machine class though, it still looks like a POPO\n        (Plain Old Python Object):\n        \n        ```python\n        >>> coffee_machine = CoffeeMachine()\n        >>> coffee_machine.put_in_beans()\n        >>> coffee_machine.brew_button()\n        ```\n        \n        All of the *inputs* are provided by calling them like methods, all of the\n        *outputs* are automatically invoked when they are produced according to the\n        outputs specified to `upon` and all of the states are simply opaque tokens -\n        although the fact that they're defined as methods like inputs and outputs\n        allows you to put docstrings on them easily to document them.\n        \n        ## How do I get the current state of a state machine?\n        \n        Don't do that.\n        \n        One major reason for having a state machine is that you want the callers of the\n        state machine to just provide the appropriate input to the machine at the\n        appropriate time, and *not have to check themselves* what state the machine is\n        in.  So if you are tempted to write some code like this:\n        \n        ```python\n        if connection_state_machine.state == \"CONNECTED\":\n            connection_state_machine.send_message()\n        else:\n            print(\"not connected\")\n        ```\n        \n        Instead, just make your calling code do this:\n        \n        ```python\n        connection_state_machine.send_message()\n        ```\n        \n        and then change your state machine to look like this:\n        \n        ```python\n            @_machine.state()\n            def connected(self):\n                \"connected\"\n            @_machine.state()\n            def not_connected(self):\n                \"not connected\"\n            @_machine.input()\n            def send_message(self):\n                \"send a message\"\n            @_machine.output()\n            def _actually_send_message(self):\n                self._transport.send(b\"message\")\n            @_machine.output()\n            def _report_sending_failure(self):\n                print(\"not connected\")\n            connected.upon(send_message, enter=connected, [_actually_send_message])\n            not_connected.upon(send_message, enter=not_connected, [_report_sending_failure])\n        ```\n        \n        so that the responsibility for knowing which state the state machine is in\n        remains within the state machine itself.\n        \n        ## Input for Inputs and Output for Outputs\n        \n        Quite often you want to be able to pass parameters to your methods, as well as\n        inspecting their results.  For example, when you brew the coffee, you might\n        expect a cup of coffee to result, and you would like to see what kind of coffee\n        it is.  And if you were to put delicious hand-roasted small-batch artisanal\n        beans into the machine, you would expect a *better* cup of coffee than if you\n        were to use mass-produced beans.  You would do this in plain old Python by\n        adding a parameter, so that's how you do it in Automat as well.\n        \n        ```python\n            @_machine.input()\n            def put_in_beans(self, beans):\n                \"The user put in some beans.\"\n        ```\n        \n        However, one important difference here is that *we can't add any\n        implementation code to the input method*.  Inputs are purely a declaration of\n        the interface; the behavior must all come from outputs.  Therefore, the change\n        in the state of the coffee machine must be represented as an output.  We can\n        add an output method like this:\n        \n        ```python\n            @_machine.output()\n            def _save_beans(self, beans):\n                \"The beans are now in the machine; save them.\"\n                self._beans = beans\n        ```\n        \n        and then connect it to the `put_in_beans` by changing the transition from\n        `dont_have_beans` to `have_beans` like so:\n        \n        ```python\n            dont_have_beans.upon(put_in_beans, enter=have_beans,\n                                 outputs=[_save_beans])\n        ```\n        \n        Now, when you call:\n        \n        ```python\n        coffee_machine.put_in_beans(\"real good beans\")\n        ```\n        \n        the machine will remember the beans for later.\n        \n        So how do we get the beans back out again?  One of our outputs needs to have a\n        return value.  It would make sense if our `brew_button` method returned the cup\n        of coffee that it made, so we should add an output.  So, in addition to heating\n        the heating element, let's add a return value that describes the coffee.  First\n        a new output:\n        \n        ```python\n            @_machine.output()\n            def _describe_coffee(self):\n                return \"A cup of coffee made with {}.\".format(self._beans)\n        ```\n        \n        Note that we don't need to check first whether `self._beans` exists or not,\n        because we can only reach this output method if the state machine says we've\n        gone through a set of states that sets this attribute.\n        \n        Now, we need to hook up `_describe_coffee` to the process of brewing, so change\n        the brewing transition to:\n        \n        ```python\n            have_beans.upon(brew_button, enter=dont_have_beans,\n                            outputs=[_heat_the_heating_element,\n                                     _describe_coffee])\n        ```\n        \n        Now, we can call it:\n        \n        ```python\n        >>> coffee_machine.brew_button()\n        [None, 'A cup of coffee made with real good beans.']\n        ```\n        \n        Except... wait a second, what's that `None` doing there?\n        \n        Since every input can produce multiple outputs, in automat, the default return\n        value from every input invocation is a `list`.  In this case, we have both\n        `_heat_the_heating_element` and `_describe_coffee` outputs, so we're seeing\n        both of their return values.  However, this can be customized, with the\n        `collector` argument to `upon`; the `collector` is a callable which takes an\n        iterable of all the outputs' return values and \"collects\" a single return value\n        to return to the caller of the state machine.\n        \n        In this case, we only care about the last output, so we can adjust the call to\n        `upon` like this:\n        \n        ```python\n            have_beans.upon(brew_button, enter=dont_have_beans,\n                            outputs=[_heat_the_heating_element,\n                                     _describe_coffee],\n                            collector=lambda iterable: list(iterable)[-1]\n            )\n        ```\n        \n        And now, we'll get just the return value we want:\n        \n        ```python\n        >>> coffee_machine.brew_button()\n        'A cup of coffee made with real good beans.'\n        ```\n        \n        ## If I can't get the state of the state machine, how can I save it to (a database, an API response, a file on disk...)\n        \n        There are APIs for serializing the state machine.\n        \n        First, you have to decide on a persistent representation of each state, via the\n        `serialized=` argument to the `MethodicalMachine.state()` decorator.\n        \n        Let's take this very simple \"light switch\" state machine, which can be on or\n        off, and flipped to reverse its state:\n        \n        ```python\n        class LightSwitch(object):\n            _machine = MethodicalMachine()\n            @_machine.state(serialized=\"on\")\n            def on_state(self):\n                \"the switch is on\"\n            @_machine.state(serialized=\"off\", initial=True)\n            def off_state(self):\n                \"the switch is off\"\n            @_machine.input()\n            def flip(self):\n                \"flip the switch\"\n            on_state.upon(flip, enter=off_state, outputs=[])\n            off_state.upon(flip, enter=on_state, outputs=[])\n        ```\n        \n        In this case, we've chosen a serialized representation for each state via the\n        `serialized` argument.  The on state is represented by the string `\"on\"`, and\n        the off state is represented by the string `\"off\"`.\n        \n        Now, let's just add an input that lets us tell if the switch is on or not.\n        \n        ```python\n            @_machine.input()\n            def query_power(self):\n                \"return True if powered, False otherwise\"\n            @_machine.output()\n            def _is_powered(self):\n                return True\n            @_machine.output()\n            def _not_powered(self):\n                return False\n            on_state.upon(query_power, enter=on_state, outputs=[_is_powered],\n                          collector=next)\n            off_state.upon(query_power, enter=off_state, outputs=[_not_powered],\n                           collector=next)\n        ```\n        \n        To save the state, we have the `MethodicalMachine.serializer()` method.  A\n        method decorated with `@serializer()` gets an extra argument injected at the\n        beginning of its argument list: the serialized identifier for the state.  In\n        this case, either `\"on\"` or `\"off\"`.  Since state machine output methods can\n        also affect other state on the object, a serializer method is expected to\n        return *all* relevant state for serialization.\n        \n        For our simple light switch, such a method might look like this:\n        \n        ```python\n            @_machine.serializer()\n            def save(self, state):\n                return {\"is-it-on\": state}\n        ```\n        \n        Serializers can be public methods, and they can return whatever you like.  If\n        necessary, you can have different serializers - just multiple methods decorated\n        with `@_machine.serializer()` - for different formats; return one data-structure\n        for JSON, one for XML, one for a database row, and so on.\n        \n        When it comes time to unserialize, though, you generally want a private method,\n        because an unserializer has to take a not-fully-initialized instance and\n        populate it with state.  It is expected to *return* the serialized machine\n        state token that was passed to the serializer, but it can take whatever\n        arguments you like.  Of course, in order to return that, it probably has to\n        take it somewhere in its arguments, so it will generally take whatever a paired\n        serializer has returned as an argument.\n        \n        So our unserializer would look like this:\n        \n        ```python\n            @_machine.unserializer()\n            def _restore(self, blob):\n                return blob[\"is-it-on\"]\n        ```\n        \n        Generally you will want a classmethod deserialization constructor which you\n        write yourself to call this, so that you know how to create an instance of your\n        own object, like so:\n        \n        ```python\n            @classmethod\n            def from_blob(cls, blob):\n                self = cls()\n                self._restore(blob)\n                return self\n        ```\n        \n        Saving and loading our `LightSwitch` along with its state-machine state can now\n        be accomplished as follows:\n        \n        ```python\n        >>> switch1 = LightSwitch()\n        >>> switch1.query_power()\n        False\n        >>> switch1.flip()\n        []\n        >>> switch1.query_power()\n        True\n        >>> blob = switch1.save()\n        >>> switch2 = LightSwitch.from_blob(blob)\n        >>> switch2.query_power()\n        True\n        ```\n        \n        More comprehensive (tested, working) examples are present in `docs/examples`.\n        \n        Go forth and machine all the state!\n        ",
        "keywords": [
          "fsm",
          "finite",
          "state",
          "machine",
          "automata"
        ],
        "home_page": "https://github.com/glyph/Automat",
        "author": "Glyph",
        "author_email": "glyph@twistedmatrix.com",
        "license": "MIT",
        "classifier": [
          "Intended Audience :: Developers",
          "License :: OSI Approved :: MIT License",
          "Operating System :: OS Independent",
          "Programming Language :: Python",
          "Programming Language :: Python :: 2",
          "Programming Language :: Python :: 2.7",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.5",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8"
        ],
        "requires_dist": [
          "Twisted>=16.1.1 ; extra == \"visualize\"",
          "graphviz>0.5.1 ; extra == \"visualize\""
        ],
        "provides_extra": [
          "visualize"
        ]
      },
      "metadata_location": "/usr/lib/python3/dist-packages/Automat-0.8.0.egg-info"
    },
    {
      "metadata": {
        "metadata_version": "1.2",
        "name": "PyGObject",
        "version": "3.36.0",
        "platform": [
          "POSIX, Windows"
        ],
        "summary": "Python bindings for GObject Introspection",
        "description": ".. image:: https://pygobject.readthedocs.io/en/latest/_images/pygobject.svg\n           :align: center\n           :width: 400px\n           :height: 98px\n        \n        |\n        \n        **PyGObject** is a Python package which provides bindings for `GObject\n        <https://developer.gnome.org/gobject/stable/>`__ based libraries such as `GTK\n        <https://www.gtk.org/>`__, `GStreamer <https://gstreamer.freedesktop.org/>`__,\n        `WebKitGTK <https://webkitgtk.org/>`__, `GLib\n        <https://developer.gnome.org/glib/stable/>`__, `GIO\n        <https://developer.gnome.org/gio/stable/>`__ and many more.\n        \n        It supports Linux, Windows and macOS and works with **Python 2.7+**, **Python\n        3.5+**, **PyPy** and **PyPy3**. PyGObject, including this documentation, is\n        licensed under the **LGPLv2.1+**.\n        \n        \n        ----\n        \n        For more information visit https://pygobject.readthedocs.io\n        ",
        "home_page": "https://pygobject.readthedocs.io",
        "author": "James Henstridge",
        "author_email": "james@daa.com.au",
        "maintainer": "Simon Feltman",
        "maintainer_email": "sfeltman@src.gnome.org",
        "license": "GNU LGPL",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: GNU Lesser General Public License v2 or later (LGPLv2+)",
          "Operating System :: POSIX",
          "Operating System :: Microsoft :: Windows",
          "Programming Language :: C",
          "Programming Language :: Python",
          "Topic :: Software Development :: Libraries :: Python Modules"
        ],
        "requires_dist": [
          "pycairo>=1.11.1"
        ],
        "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4"
      },
      "metadata_location": "/usr/lib/python3/dist-packages/PyGObject-3.36.0.egg-info"
    },
    {
      "metadata": {
        "metadata_version": "1.1",
        "name": "PyHamcrest",
        "version": "1.9.0",
        "platform": [
          "All"
        ],
        "summary": "Hamcrest framework for matcher objects",
        "description": "PyHamcrest\n        ==========\n        \n        | |docs| |travis| |coveralls| |landscape| |scrutinizer| |codeclimate|\n        | |version| |downloads| |wheel| |supported-versions| |supported-implementations|\n        \n        .. |docs| image:: https://readthedocs.org/projects/pyhamcrest/badge/?style=flat\n            :target: https://pyhamcrest.readthedocs.org/\n            :alt: Documentation Status\n        \n        .. |travis| image:: http://img.shields.io/travis/hamcrest/PyHamcrest/master.png?style=flat\n            :alt: Travis-CI Build Status\n            :target: https://travis-ci.org/hamcrest/PyHamcrest\n        \n        .. |appveyor| image:: https://ci.appveyor.com/api/projects/status/github/hamcrest/PyHamcrest?branch=master\n            :alt: AppVeyor Build Status\n            :target: https://ci.appveyor.com/project/hamcrest/PyHamcrest\n        \n        .. |coveralls| image:: http://img.shields.io/coveralls/hamcrest/PyHamcrest/master.png?style=flat\n            :alt: Coverage Status\n            :target: https://coveralls.io/r/hamcrest/PyHamcrest\n        \n        .. |landscape| image:: https://landscape.io/github/hamcrest/PyHamcrest/master/landscape.svg?style=flat\n            :target: https://landscape.io/github/hamcrest/PyHamcrest/master\n            :alt: Code Quality Status\n        \n        .. |codeclimate| image:: https://codeclimate.com/github/hamcrest/PyHamcrest/badges/gpa.svg\n           :target: https://codeclimate.com/github/hamcrest/PyHamcrest\n           :alt: Code Climate\n        \n        .. |version| image:: http://img.shields.io/pypi/v/PyHamcrest.png?style=flat\n            :alt: PyPI Package latest release\n            :target: https://pypi.python.org/pypi/PyHamcrest\n        \n        .. |downloads| image:: http://img.shields.io/pypi/dm/PyHamcrest.png?style=flat\n            :alt: PyPI Package monthly downloads\n            :target: https://pypi.python.org/pypi/PyHamcrest\n        \n        .. |wheel| image:: https://pypip.in/wheel/PyHamcrest/badge.png?style=flat\n            :alt: PyPI Wheel\n            :target: https://pypi.python.org/pypi/PyHamcrest\n        \n        .. |supported-versions| image:: https://pypip.in/py_versions/PyHamcrest/badge.png?style=flat\n            :alt: Supported versions\n            :target: https://pypi.python.org/pypi/PyHamcrest\n        \n        .. |supported-implementations| image:: https://pypip.in/implementation/PyHamcrest/badge.png?style=flat\n            :alt: Supported imlementations\n            :target: https://pypi.python.org/pypi/PyHamcrest\n        \n        .. |scrutinizer| image:: https://img.shields.io/scrutinizer/g/hamcrest/PyHamcrest/master.png?style=flat\n            :alt: Scrtinizer Status\n            :target: https://scrutinizer-ci.com/g/hamcrest/PyHamcrest/\n        \n        \n        Introduction\n        ============\n        \n        PyHamcrest is a framework for writing matcher objects, allowing you to\n        declaratively define \"match\" rules. There are a number of situations where\n        matchers are invaluable, such as UI validation, or data filtering, but it is in\n        the area of writing flexible tests that matchers are most commonly used. This\n        tutorial shows you how to use PyHamcrest for unit testing.\n        \n        When writing tests it is sometimes difficult to get the balance right between\n        overspecifying the test (and making it brittle to changes), and not specifying\n        enough (making the test less valuable since it continues to pass even when the\n        thing being tested is broken). Having a tool that allows you to pick out\n        precisely the aspect under test and describe the values it should have, to a\n        controlled level of precision, helps greatly in writing tests that are \"just\n        right.\" Such tests fail when the behavior of the aspect under test deviates\n        from the expected behavior, yet continue to pass when minor, unrelated changes\n        to the behaviour are made.\n        \n        Installation\n        ============\n        \n        Hamcrest can be installed using the usual Python packaging tools. It depends on\n        distribute, but as long as you have a network connection when you install, the\n        installation process will take care of that for you.\n        \n        My first PyHamcrest test\n        ========================\n        \n        We'll start by writing a very simple PyUnit test, but instead of using PyUnit's\n        ``assertEqual`` method, we'll use PyHamcrest's ``assert_that`` construct and\n        the standard set of matchers:\n        \n        .. code:: python\n        \n         from hamcrest import *\n         import unittest\n        \n         class BiscuitTest(unittest.TestCase):\n             def testEquals(self):\n                 theBiscuit = Biscuit('Ginger')\n                 myBiscuit = Biscuit('Ginger')\n                 assert_that(theBiscuit, equal_to(myBiscuit))\n        \n         if __name__ == '__main__':\n             unittest.main()\n        \n        The ``assert_that`` function is a stylized sentence for making a test\n        assertion. In this example, the subject of the assertion is the object\n        ``theBiscuit``, which is the first method parameter. The second method\n        parameter is a matcher for ``Biscuit`` objects, here a matcher that checks one\n        object is equal to another using the Python ``==`` operator. The test passes\n        since the ``Biscuit`` class defines an ``__eq__`` method.\n        \n        If you have more than one assertion in your test you can include an identifier\n        for the tested value in the assertion:\n        \n        .. code:: python\n        \n         assert_that(theBiscuit.getChocolateChipCount(), equal_to(10), 'chocolate chips')\n         assert_that(theBiscuit.getHazelnutCount(), equal_to(3), 'hazelnuts')\n        \n        As a convenience, assert_that can also be used to verify a boolean condition:\n        \n        .. code:: python\n        \n         assert_that(theBiscuit.isCooked(), 'cooked')\n        \n        This is equivalent to the ``assert_`` method of unittest.TestCase, but because\n        it's a standalone function, it offers greater flexibility in test writing.\n        \n        \n        Predefined matchers\n        ===================\n        \n        PyHamcrest comes with a library of useful matchers:\n        \n        * Object\n        \n          * ``equal_to`` - match equal object\n          * ``has_length`` - match ``len()``\n          * ``has_property`` - match value of property with given name\n          * ``has_properties`` - match an object that has all of the given properties.\n          * ``has_string`` - match ``str()``\n          * ``instance_of`` - match object type\n          * ``none``, ``not_none`` - match ``None``, or not ``None``\n          * ``same_instance`` - match same object\n          * ``calling, raises`` - wrap a method call and assert that it raises an exception\n        \n        * Number\n        \n          * ``close_to`` - match number close to a given value\n          * ``greater_than``, ``greater_than_or_equal_to``, ``less_than``,\n            ``less_than_or_equal_to`` - match numeric ordering\n        \n        * Text\n        \n          * ``contains_string`` - match part of a string\n          * ``ends_with`` - match the end of a string\n          * ``equal_to_ignoring_case`` - match the complete string but ignore case\n          * ``equal_to_ignoring_whitespace`` - match the complete string but ignore extra whitespace\n          * ``matches_regexp`` - match a regular expression in a string\n          * ``starts_with`` - match the beginning of a string\n          * ``string_contains_in_order`` - match parts of a string, in relative order\n        \n        * Logical\n        \n          * ``all_of`` - ``and`` together all matchers\n          * ``any_of`` - ``or`` together all matchers\n          * ``anything`` - match anything, useful in composite matchers when you don't care about a particular value\n          * ``is_not`` - negate the matcher\n        \n        * Sequence\n        \n          * ``contains`` - exactly match the entire sequence\n          * ``contains_inanyorder`` - match the entire sequence, but in any order\n          * ``has_item`` - match if given item appears in the sequence\n          * ``has_items`` - match if all given items appear in the sequence, in any order\n          * ``is_in`` - match if item appears in the given sequence\n          * ``only_contains`` - match if sequence's items appear in given list\n          * ``empty`` - match if the sequence is empty\n        \n        * Dictionary\n        \n          * ``has_entries`` - match dictionary with list of key-value pairs\n          * ``has_entry`` - match dictionary containing a key-value pair\n          * ``has_key`` - match dictionary with a key\n          * ``has_value`` - match dictionary with a value\n        \n        * Decorator\n        \n          * ``calling`` - wrap a callable in a deffered object, for subsequent matching on calling behaviour\n          * ``raises`` - Ensure that a deferred callable raises as expected\n          * ``described_as`` - give the matcher a custom failure description\n          * ``is_`` - decorator to improve readability - see `Syntactic sugar` below\n        \n        The arguments for many of these matchers accept not just a matching value, but\n        another matcher, so matchers can be composed for greater flexibility. For\n        example, ``only_contains(less_than(5))`` will match any sequence where every\n        item is less than 5.\n        \n        \n        Syntactic sugar\n        ===============\n        \n        PyHamcrest strives to make your tests as readable as possible. For example, the\n        ``is_`` matcher is a wrapper that doesn't add any extra behavior to the\n        underlying matcher. The following assertions are all equivalent:\n        \n        .. code:: python\n        \n         assert_that(theBiscuit, equal_to(myBiscuit))\n         assert_that(theBiscuit, is_(equal_to(myBiscuit)))\n         assert_that(theBiscuit, is_(myBiscuit))\n        \n        The last form is allowed since ``is_(value)`` wraps most non-matcher arguments\n        with ``equal_to``. But if the argument is a type, it is wrapped with\n        ``instance_of``, so the following are also equivalent:\n        \n        .. code:: python\n        \n         assert_that(theBiscuit, instance_of(Biscuit))\n         assert_that(theBiscuit, is_(instance_of(Biscuit)))\n         assert_that(theBiscuit, is_(Biscuit))\n        \n        *Note that PyHamcrest's ``is_`` matcher is unrelated to Python's ``is``\n        operator. The matcher for object identity is ``same_instance``.*\n        \n        \n        Writing custom matchers\n        =======================\n        \n        PyHamcrest comes bundled with lots of useful matchers, but you'll probably find\n        that you need to create your own from time to time to fit your testing needs.\n        This commonly occurs when you find a fragment of code that tests the same set\n        of properties over and over again (and in different tests), and you want to\n        bundle the fragment into a single assertion. By writing your own matcher you'll\n        eliminate code duplication and make your tests more readable!\n        \n        Let's write our own matcher for testing if a calendar date falls on a Saturday.\n        This is the test we want to write:\n        \n        .. code:: python\n        \n         def testDateIsOnASaturday(self):\n             d = datetime.date(2008, 04, 26)\n             assert_that(d, is_(on_a_saturday()))\n        \n        And here's the implementation:\n        \n        .. code:: python\n        \n         from hamcrest.core.base_matcher import BaseMatcher\n         from hamcrest.core.helpers.hasmethod import hasmethod\n        \n         class IsGivenDayOfWeek(BaseMatcher):\n        \n             def __init__(self, day):\n                 self.day = day  # Monday is 0, Sunday is 6\n        \n             def _matches(self, item):\n                 if not hasmethod(item, 'weekday'):\n                     return False\n                 return item.weekday() == self.day\n        \n             def describe_to(self, description):\n                 day_as_string = ['Monday', 'Tuesday', 'Wednesday', 'Thursday',\n                                  'Friday', 'Saturday', 'Sunday']\n                 description.append_text('calendar date falling on ')    \\\n                            .append_text(day_as_string[self.day])\n        \n         def on_a_saturday():\n             return IsGivenDayOfWeek(5)\n        \n        For our Matcher implementation we implement the ``_matches`` method - which\n        calls the ``weekday`` method after confirming that the argument (which may not\n        be a date) has such a method - and the ``describe_to`` method - which is used\n        to produce a failure message when a test fails. Here's an example of how the\n        failure message looks:\n        \n        .. code:: python\n        \n         assert_that(datetime.date(2008, 04, 06), is_(on_a_saturday()))\n        \n        fails with the message::\n        \n            AssertionError:\n            Expected: is calendar date falling on Saturday\n                 got: <2008-04-06>\n        \n        Let's say this matcher is saved in a module named ``isgivendayofweek``. We\n        could use it in our test by importing the factory function ``on_a_saturday``:\n        \n        .. code:: python\n        \n         from hamcrest import *\n         import unittest\n         from isgivendayofweek import on_a_saturday\n        \n         class DateTest(unittest.TestCase):\n             def testDateIsOnASaturday(self):\n                 d = datetime.date(2008, 04, 26)\n                 assert_that(d, is_(on_a_saturday()))\n        \n         if __name__ == '__main__':\n             unittest.main()\n        \n        Even though the ``on_a_saturday`` function creates a new matcher each time it\n        is called, you should not assume this is the only usage pattern for your\n        matcher. Therefore you should make sure your matcher is stateless, so a single\n        instance can be reused between matches.\n        \n        \n        More resources\n        ==============\n        \n        * Documentation_\n        * Package_\n        * Sources_\n        * Hamcrest_\n        \n        .. _Documentation: http://readthedocs.org/docs/pyhamcrest/en/V1.8.2/\n        .. _Package: http://pypi.python.org/pypi/PyHamcrest\n        .. _Sources: https://github.com/hamcrest/PyHamcrest\n        .. _Hamcrest: http://hamcrest.org\n        ",
        "keywords": [
          "hamcrest",
          "matchers",
          "pyunit",
          "unit",
          "test",
          "testing",
          "unittest",
          "unittesting"
        ],
        "home_page": "https://github.com/hamcrest/PyHamcrest",
        "download_url": "http://pypi.python.org/packages/source/P/PyHamcrest/PyHamcrest-1.9.0.tar.gz",
        "author": "Chris Rose",
        "author_email": "offline@offby1.net",
        "license": "New BSD",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Environment :: Console",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: BSD License",
          "Natural Language :: English",
          "Operating System :: OS Independent",
          "Programming Language :: Python :: 2",
          "Programming Language :: Python :: 2.7",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.4",
          "Programming Language :: Python :: Implementation :: CPython",
          "Programming Language :: Python :: Implementation :: Jython",
          "Programming Language :: Python :: Implementation :: PyPy",
          "Topic :: Software Development",
          "Topic :: Software Development :: Quality Assurance",
          "Topic :: Software Development :: Testing"
        ]
      },
      "metadata_location": "/usr/lib/python3/dist-packages/PyHamcrest-1.9.0.egg-info"
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "PyJWT",
        "version": "1.7.1",
        "platform": [
          "UNKNOWN"
        ],
        "summary": "JSON Web Token implementation in Python",
        "description": "PyJWT\n        =====\n        \n        .. image:: https://travis-ci.com/jpadilla/pyjwt.svg?branch=master\n           :target: http://travis-ci.com/jpadilla/pyjwt?branch=master\n        \n        .. image:: https://ci.appveyor.com/api/projects/status/h8nt70aqtwhht39t?svg=true\n           :target: https://ci.appveyor.com/project/jpadilla/pyjwt\n        \n        .. image:: https://img.shields.io/pypi/v/pyjwt.svg\n           :target: https://pypi.python.org/pypi/pyjwt\n        \n        .. image:: https://coveralls.io/repos/jpadilla/pyjwt/badge.svg?branch=master\n           :target: https://coveralls.io/r/jpadilla/pyjwt?branch=master\n        \n        .. image:: https://readthedocs.org/projects/pyjwt/badge/?version=latest\n           :target: https://pyjwt.readthedocs.io\n        \n        A Python implementation of `RFC 7519 <https://tools.ietf.org/html/rfc7519>`_. Original implementation was written by `@progrium <https://github.com/progrium>`_.\n        \n        Sponsor\n        -------\n        \n        +--------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n        | |auth0-logo| | If you want to quickly add secure token-based authentication to Python projects, feel free to check Auth0's Python SDK and free plan at `auth0.com/overview <https://auth0.com/overview?utm_source=GHsponsor&utm_medium=GHsponsor&utm_campaign=pyjwt&utm_content=auth>`_. |\n        +--------------+-----------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n        \n        .. |auth0-logo| image:: https://user-images.githubusercontent.com/83319/31722733-de95bbde-b3ea-11e7-96bf-4f4e8f915588.png\n        \n        Installing\n        ----------\n        \n        Install with **pip**:\n        \n        .. code-block:: sh\n        \n            $ pip install PyJWT\n        \n        \n        Usage\n        -----\n        \n        .. code:: python\n        \n            >>> import jwt\n            >>> encoded = jwt.encode({'some': 'payload'}, 'secret', algorithm='HS256')\n            'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzb21lIjoicGF5bG9hZCJ9.4twFt5NiznN84AWoo1d7KO1T_yoc0Z6XOpOVswacPZg'\n        \n            >>> jwt.decode(encoded, 'secret', algorithms=['HS256'])\n            {'some': 'payload'}\n        \n        \n        Command line\n        ------------\n        \n        Usage::\n        \n            pyjwt [options] INPUT\n        \n        Decoding examples::\n        \n            pyjwt --key=secret decode TOKEN\n            pyjwt decode --no-verify TOKEN\n        \n        See more options executing ``pyjwt --help``.\n        \n        \n        Documentation\n        -------------\n        \n        View the full docs online at https://pyjwt.readthedocs.io/en/latest/\n        \n        \n        Tests\n        -----\n        \n        You can run tests from the project root after cloning with:\n        \n        .. code-block:: sh\n        \n            $ python setup.py test\n        ",
        "keywords": [
          "jwt",
          "json",
          "web",
          "token",
          "security",
          "signing"
        ],
        "home_page": "http://github.com/jpadilla/pyjwt",
        "author": "Jose Padilla",
        "author_email": "hello@jpadilla.com",
        "license": "MIT",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Intended Audience :: Developers",
          "Natural Language :: English",
          "License :: OSI Approved :: MIT License",
          "Programming Language :: Python",
          "Programming Language :: Python :: 2.7",
          "Programming Language :: Python :: 3.4",
          "Programming Language :: Python :: 3.5",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "Topic :: Utilities"
        ],
        "requires_dist": [
          "cryptography>=1.4 ; extra == \"crypto\"",
          "flake8 ; extra == \"flake8\"",
          "flake8-import-order ; extra == \"flake8\"",
          "pep8-naming ; extra == \"flake8\"",
          "pytest-cov<3.0.0,>=2.6.0 ; extra == \"test\"",
          "pytest-runner<5.0.0,>=4.2 ; extra == \"test\"",
          "pytest<5.0.0,>=4.0.1 ; extra == \"test\""
        ],
        "provides_extra": [
          "crypto",
          "flake8",
          "test"
        ]
      },
      "metadata_location": "/usr/lib/python3/dist-packages/PyJWT-1.7.1.egg-info"
    },
    {
      "metadata": {
        "metadata_version": "1.1",
        "name": "PyYAML",
        "version": "5.3.1",
        "platform": [
          "Any"
        ],
        "summary": "YAML parser and emitter for Python",
        "description": "YAML is a data serialization format designed for human readability\n        and interaction with scripting languages.  PyYAML is a YAML parser\n        and emitter for Python.\n        \n        PyYAML features a complete YAML 1.1 parser, Unicode support, pickle\n        support, capable extension API, and sensible error messages.  PyYAML\n        supports standard YAML tags and provides Python-specific tags that\n        allow to represent an arbitrary Python object.\n        \n        PyYAML is applicable for a broad range of tasks from complex\n        configuration files to object serialization and persistence.",
        "home_page": "https://github.com/yaml/pyyaml",
        "download_url": "https://pypi.org/project/PyYAML/",
        "author": "Kirill Simonov",
        "author_email": "xi@resolvent.net",
        "license": "MIT",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: MIT License",
          "Operating System :: OS Independent",
          "Programming Language :: Cython",
          "Programming Language :: Python",
          "Programming Language :: Python :: 2",
          "Programming Language :: Python :: 2.7",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.5",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: Implementation :: CPython",
          "Programming Language :: Python :: Implementation :: PyPy",
          "Topic :: Software Development :: Libraries :: Python Modules",
          "Topic :: Text Processing :: Markup"
        ]
      },
      "metadata_location": null
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "SecretStorage",
        "version": "2.3.1",
        "platform": [
          "Linux"
        ],
        "summary": "Python bindings to FreeDesktop.org Secret Service API",
        "description": "\n        .. image:: https://api.travis-ci.org/mitya57/secretstorage.svg\n           :target: https://travis-ci.org/mitya57/secretstorage\n           :alt: Travis CI status\n        \n        Module description\n        ==================\n        \n        This module provides a way for securely storing passwords and other secrets.\n        \n        It uses D-Bus `Secret Service`_ API that is supported by GNOME Keyring\n        (since version 2.30) and KSecretsService.\n        \n        The main classes provided are ``secretstorage.Item``, representing a secret\n        item (that has a *label*, a *secret* and some *attributes*) and\n        ``secretstorage.Collection``, a place items are stored in.\n        \n        SecretStorage supports most of the functions provided by Secret Service,\n        including creating and deleting items and collections, editing items,\n        locking and unlocking collections (asynchronous unlocking is also supported).\n        \n        The documentation can be found on `secretstorage.readthedocs.io`_.\n        \n        .. _`Secret Service`: https://specifications.freedesktop.org/secret-service/\n        .. _`secretstorage.readthedocs.io`: https://secretstorage.readthedocs.io/en/latest/\n        \n        Building the module\n        ===================\n        \n        .. note::\n           SecretStorage supports Python 2.7 and all versions of Python since 3.3.\n           Here we assume that your Python version is 3.x.\n        \n        SecretStorage requires these packages to work:\n        \n        * `dbus-python`_\n        * `python-cryptography`_\n        \n        To build SecretStorage, use this command::\n        \n           python3 setup.py build\n        \n        If you have Sphinx_ installed, you can also build the documentation::\n        \n           python3 setup.py build_sphinx\n        \n        .. _`dbus-python`: https://www.freedesktop.org/wiki/Software/DBusBindings/#dbus-python\n        .. _`python-cryptography`: https://pypi.python.org/pypi/cryptography\n        .. _Sphinx: http://sphinx-doc.org/\n        \n        Testing the module\n        ==================\n        \n        First, make sure that you have the Secret Service daemon installed.\n        The `GNOME Keyring`_ is the reference server-side implementation for the\n        Secret Service specification.\n        \n        .. _`GNOME Keyring`: https://download.gnome.org/sources/gnome-keyring/\n        \n        Then, start the daemon and unlock the ``default`` collection, if needed.\n        The testsuite will fail to run if the ``default`` collection exists and is\n        locked. If it does not exist, the testsuite can also use the temporary\n        ``session`` collection, as provided by the GNOME Keyring.\n        \n        Then, run the Python unittest module::\n        \n           python3 -m unittest discover -s tests\n        \n        If you want to run the tests in an isolated or headless environment, run\n        this command in a D-Bus session::\n        \n           dbus-run-session -- python3 -m unittest discover -s tests\n        \n        Get the code\n        ============\n        \n        SecretStorage is available under BSD license. The source code can be found\n        on GitHub_.\n        \n        .. _GitHub: https://github.com/mitya57/secretstorage\n        ",
        "home_page": "https://github.com/mitya57/secretstorage",
        "author": "Dmitry Shachnev",
        "author_email": "mitya57@gmail.com",
        "license": "BSD",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "License :: OSI Approved :: BSD License",
          "Operating System :: POSIX",
          "Programming Language :: Python",
          "Programming Language :: Python :: 2",
          "Programming Language :: Python :: 2.7",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.3",
          "Programming Language :: Python :: 3.4",
          "Programming Language :: Python :: 3.5",
          "Topic :: Security",
          "Topic :: Software Development :: Libraries :: Python Modules"
        ],
        "requires_dist": [
          "dbus-python ; extra == \"dbus-python\""
        ],
        "provides_extra": [
          "dbus-python"
        ]
      },
      "metadata_location": "/usr/lib/python3/dist-packages/SecretStorage-2.3.1.egg-info"
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "attrs",
        "version": "19.3.0",
        "platform": [
          "UNKNOWN"
        ],
        "summary": "Classes Without Boilerplate",
        "description": ".. image:: https://www.attrs.org/en/latest/_static/attrs_logo.png\n           :alt: attrs Logo\n        \n        ======================================\n        ``attrs``: Classes Without Boilerplate\n        ======================================\n        \n        .. image:: https://readthedocs.org/projects/attrs/badge/?version=stable\n           :target: https://www.attrs.org/en/stable/?badge=stable\n           :alt: Documentation Status\n        \n        .. image:: https://attrs.visualstudio.com/attrs/_apis/build/status/python-attrs.attrs?branchName=master\n           :target: https://attrs.visualstudio.com/attrs/_build/latest?definitionId=1&branchName=master\n           :alt: CI Status\n        \n        .. image:: https://codecov.io/github/python-attrs/attrs/branch/master/graph/badge.svg\n           :target: https://codecov.io/github/python-attrs/attrs\n           :alt: Test Coverage\n        \n        .. image:: https://img.shields.io/badge/code%20style-black-000000.svg\n           :target: https://github.com/psf/black\n           :alt: Code style: black\n        \n        .. teaser-begin\n        \n        ``attrs`` is the Python package that will bring back the **joy** of **writing classes** by relieving you from the drudgery of implementing object protocols (aka `dunder <https://nedbatchelder.com/blog/200605/dunder.html>`_ methods).\n        \n        Its main goal is to help you to write **concise** and **correct** software without slowing down your code.\n        \n        .. -spiel-end-\n        \n        For that, it gives you a class decorator and a way to declaratively define the attributes on that class:\n        \n        .. -code-begin-\n        \n        .. code-block:: pycon\n        \n           >>> import attr\n        \n           >>> @attr.s\n           ... class SomeClass(object):\n           ...     a_number = attr.ib(default=42)\n           ...     list_of_numbers = attr.ib(factory=list)\n           ...\n           ...     def hard_math(self, another_number):\n           ...         return self.a_number + sum(self.list_of_numbers) * another_number\n        \n        \n           >>> sc = SomeClass(1, [1, 2, 3])\n           >>> sc\n           SomeClass(a_number=1, list_of_numbers=[1, 2, 3])\n        \n           >>> sc.hard_math(3)\n           19\n           >>> sc == SomeClass(1, [1, 2, 3])\n           True\n           >>> sc != SomeClass(2, [3, 2, 1])\n           True\n        \n           >>> attr.asdict(sc)\n           {'a_number': 1, 'list_of_numbers': [1, 2, 3]}\n        \n           >>> SomeClass()\n           SomeClass(a_number=42, list_of_numbers=[])\n        \n           >>> C = attr.make_class(\"C\", [\"a\", \"b\"])\n           >>> C(\"foo\", \"bar\")\n           C(a='foo', b='bar')\n        \n        \n        After *declaring* your attributes ``attrs`` gives you:\n        \n        - a concise and explicit overview of the class's attributes,\n        - a nice human-readable ``__repr__``,\n        - a complete set of comparison methods (equality and ordering),\n        - an initializer,\n        - and much more,\n        \n        *without* writing dull boilerplate code again and again and *without* runtime performance penalties.\n        \n        On Python 3.6 and later, you can often even drop the calls to ``attr.ib()`` by using `type annotations <https://www.attrs.org/en/latest/types.html>`_.\n        \n        This gives you the power to use actual classes with actual types in your code instead of confusing ``tuple``\\ s or `confusingly behaving <https://www.attrs.org/en/stable/why.html#namedtuples>`_ ``namedtuple``\\ s.\n        Which in turn encourages you to write *small classes* that do `one thing well <https://www.destroyallsoftware.com/talks/boundaries>`_.\n        Never again violate the `single responsibility principle <https://en.wikipedia.org/wiki/Single_responsibility_principle>`_ just because implementing ``__init__`` et al is a painful drag.\n        \n        \n        .. -testimonials-\n        \n        Testimonials\n        ============\n        \n        **Amber Hawkie Brown**, Twisted Release Manager and Computer Owl:\n        \n          Writing a fully-functional class using attrs takes me less time than writing this testimonial.\n        \n        \n        **Glyph Lefkowitz**, creator of `Twisted <https://twistedmatrix.com/>`_, `Automat <https://pypi.org/project/Automat/>`_, and other open source software, in `The One Python Library Everyone Needs <https://glyph.twistedmatrix.com/2016/08/attrs.html>`_:\n        \n          I’m looking forward to is being able to program in Python-with-attrs everywhere.\n          It exerts a subtle, but positive, design influence in all the codebases I’ve see it used in.\n        \n        \n        **Kenneth Reitz**, creator of `Requests <https://github.com/psf/requests>`_ (`on paper no less <https://twitter.com/hynek/status/866817877650751488>`_!):\n        \n          attrs—classes for humans.  I like it.\n        \n        \n        **Łukasz Langa**, creator of `Black <https://github.com/psf/black>`_, prolific Python core developer, and release manager for Python 3.8 and 3.9:\n        \n          I'm increasingly digging your attr.ocity. Good job!\n        \n        \n        .. -end-\n        \n        .. -project-information-\n        \n        Getting Help\n        ============\n        \n        Please use the ``python-attrs`` tag on `StackOverflow <https://stackoverflow.com/questions/tagged/python-attrs>`_ to get help.\n        \n        Answering questions of your fellow developers is also great way to help the project!\n        \n        \n        Project Information\n        ===================\n        \n        ``attrs`` is released under the `MIT <https://choosealicense.com/licenses/mit/>`_ license,\n        its documentation lives at `Read the Docs <https://www.attrs.org/>`_,\n        the code on `GitHub <https://github.com/python-attrs/attrs>`_,\n        and the latest release on `PyPI <https://pypi.org/project/attrs/>`_.\n        It’s rigorously tested on Python 2.7, 3.4+, and PyPy.\n        \n        We collect information on **third-party extensions** in our `wiki <https://github.com/python-attrs/attrs/wiki/Extensions-to-attrs>`_.\n        Feel free to browse and add your own!\n        \n        If you'd like to contribute to ``attrs`` you're most welcome and we've written `a little guide <https://www.attrs.org/en/latest/contributing.html>`_ to get you started!\n        \n        \n        Release Information\n        ===================\n        \n        19.3.0 (2019-10-15)\n        -------------------\n        \n        Changes\n        ^^^^^^^\n        \n        - Fixed ``auto_attribs`` usage when default values cannot be compared directly with ``==``, such as ``numpy`` arrays.\n          `#585 <https://github.com/python-attrs/attrs/issues/585>`_\n        \n        `Full changelog <https://www.attrs.org/en/stable/changelog.html>`_.\n        \n        Credits\n        =======\n        \n        ``attrs`` is written and maintained by `Hynek Schlawack <https://hynek.me/>`_.\n        \n        The development is kindly supported by `Variomedia AG <https://www.variomedia.de/>`_.\n        \n        A full list of contributors can be found in `GitHub's overview <https://github.com/python-attrs/attrs/graphs/contributors>`_.\n        \n        It’s the spiritual successor of `characteristic <https://characteristic.readthedocs.io/>`_ and aspires to fix some of it clunkiness and unfortunate decisions.\n        Both were inspired by Twisted’s `FancyEqMixin <https://twistedmatrix.com/documents/current/api/twisted.python.util.FancyEqMixin.html>`_ but both are implemented using class decorators because `subclassing is bad for you <https://www.youtube.com/watch?v=3MNVP9-hglc>`_, m’kay?\n        ",
        "description_content_type": "text/x-rst",
        "keywords": [
          "class",
          "attribute",
          "boilerplate"
        ],
        "home_page": "https://www.attrs.org/",
        "author": "Hynek Schlawack",
        "author_email": "hs@ox.cx",
        "maintainer": "Hynek Schlawack",
        "maintainer_email": "hs@ox.cx",
        "license": "MIT",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Intended Audience :: Developers",
          "Natural Language :: English",
          "License :: OSI Approved :: MIT License",
          "Operating System :: OS Independent",
          "Programming Language :: Python",
          "Programming Language :: Python :: 2",
          "Programming Language :: Python :: 2.7",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.4",
          "Programming Language :: Python :: 3.5",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: Implementation :: CPython",
          "Programming Language :: Python :: Implementation :: PyPy",
          "Topic :: Software Development :: Libraries :: Python Modules"
        ],
        "requires_dist": [
          "coverage ; extra == \"azure-pipelines\"",
          "hypothesis ; extra == \"azure-pipelines\"",
          "pympler ; extra == \"azure-pipelines\"",
          "pytest-azurepipelines ; extra == \"azure-pipelines\"",
          "pytest>=4.3.0 ; extra == \"azure-pipelines\"",
          "six ; extra == \"azure-pipelines\"",
          "zope.interface ; extra == \"azure-pipelines\"",
          "coverage ; extra == \"dev\"",
          "hypothesis ; extra == \"dev\"",
          "pre-commit ; extra == \"dev\"",
          "pympler ; extra == \"dev\"",
          "pytest>=4.3.0 ; extra == \"dev\"",
          "six ; extra == \"dev\"",
          "sphinx ; extra == \"dev\"",
          "zope.interface ; extra == \"dev\"",
          "zope.interface ; extra == \"dev\"",
          "sphinx ; extra == \"docs\"",
          "zope.interface ; extra == \"docs\"",
          "coverage ; extra == \"tests\"",
          "hypothesis ; extra == \"tests\"",
          "pympler ; extra == \"tests\"",
          "pytest>=4.3.0 ; extra == \"tests\"",
          "six ; extra == \"tests\"",
          "zope.interface ; extra == \"tests\""
        ],
        "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*",
        "project_url": [
          "Documentation, https://www.attrs.org/",
          "Bug Tracker, https://github.com/python-attrs/attrs/issues",
          "Source Code, https://github.com/python-attrs/attrs"
        ],
        "provides_extra": [
          "azure-pipelines",
          "dev",
          "docs",
          "tests"
        ]
      },
      "metadata_location": "/usr/lib/python3/dist-packages/attrs-19.3.0.egg-info"
    },
    {
      "metadata": {
        "metadata_version": "1.1",
        "name": "certifi",
        "version": "2019.11.28",
        "platform": [
          "UNKNOWN"
        ],
        "summary": "Python package for providing Mozilla's CA Bundle.",
        "description": "Certifi: Python SSL Certificates\n        ================================\n        \n        `Certifi`_ is a carefully curated collection of Root Certificates for\n        validating the trustworthiness of SSL certificates while verifying the identity\n        of TLS hosts. It has been extracted from the `Requests`_ project.\n        \n        Installation\n        ------------\n        \n        ``certifi`` is available on PyPI. Simply install it with ``pip``::\n        \n            $ pip install certifi\n        \n        Usage\n        -----\n        \n        To reference the installed certificate authority (CA) bundle, you can use the\n        built-in function::\n        \n            >>> import certifi\n        \n            >>> certifi.where()\n            '/usr/local/lib/python2.7/site-packages/certifi/cacert.pem'\n        \n        Or from the command line::\n        \n            $ python -m certifi\n            /usr/local/lib/python2.7/site-packages/certifi/cacert.pem\n        \n        Enjoy!\n        \n        1024-bit Root Certificates\n        ~~~~~~~~~~~~~~~~~~~~~~~~~~\n        \n        Browsers and certificate authorities have concluded that 1024-bit keys are\n        unacceptably weak for certificates, particularly root certificates. For this\n        reason, Mozilla has removed any weak (i.e. 1024-bit key) certificate from its\n        bundle, replacing it with an equivalent strong (i.e. 2048-bit or greater key)\n        certificate from the same CA. Because Mozilla removed these certificates from\n        its bundle, ``certifi`` removed them as well.\n        \n        In previous versions, ``certifi`` provided the ``certifi.old_where()`` function\n        to intentionally re-add the 1024-bit roots back into your bundle. This was not\n        recommended in production and therefore was removed at the end of 2018.\n        \n        .. _`Certifi`: https://certifi.io/en/latest/\n        .. _`Requests`: http://docs.python-requests.org/en/latest/\n        ",
        "home_page": "https://certifi.io/",
        "author": "Kenneth Reitz",
        "author_email": "me@kennethreitz.com",
        "license": "MPL-2.0",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)",
          "Natural Language :: English",
          "Programming Language :: Python",
          "Programming Language :: Python :: 2",
          "Programming Language :: Python :: 2.6",
          "Programming Language :: Python :: 2.7",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.3",
          "Programming Language :: Python :: 3.4",
          "Programming Language :: Python :: 3.5",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7"
        ]
      },
      "metadata_location": "/usr/lib/python3/dist-packages/certifi-2019.11.28.egg-info"
    },
    {
      "metadata": {
        "metadata_version": "1.2",
        "name": "chardet",
        "version": "3.0.4",
        "platform": [
          "UNKNOWN"
        ],
        "summary": "Universal encoding detector for Python 2 and 3",
        "description": "Chardet: The Universal Character Encoding Detector\n        --------------------------------------------------\n        \n        .. image:: https://img.shields.io/travis/chardet/chardet/stable.svg\n           :alt: Build status\n           :target: https://travis-ci.org/chardet/chardet\n        \n        .. image:: https://img.shields.io/coveralls/chardet/chardet/stable.svg\n           :target: https://coveralls.io/r/chardet/chardet\n        \n        .. image:: https://img.shields.io/pypi/v/chardet.svg\n           :target: https://warehouse.python.org/project/chardet/\n           :alt: Latest version on PyPI\n        \n        .. image:: https://img.shields.io/pypi/l/chardet.svg\n           :alt: License\n        \n        \n        Detects\n         - ASCII, UTF-8, UTF-16 (2 variants), UTF-32 (4 variants)\n         - Big5, GB2312, EUC-TW, HZ-GB-2312, ISO-2022-CN (Traditional and Simplified Chinese)\n         - EUC-JP, SHIFT_JIS, CP932, ISO-2022-JP (Japanese)\n         - EUC-KR, ISO-2022-KR (Korean)\n         - KOI8-R, MacCyrillic, IBM855, IBM866, ISO-8859-5, windows-1251 (Cyrillic)\n         - ISO-8859-5, windows-1251 (Bulgarian)\n         - ISO-8859-1, windows-1252 (Western European languages)\n         - ISO-8859-7, windows-1253 (Greek)\n         - ISO-8859-8, windows-1255 (Visual and Logical Hebrew)\n         - TIS-620 (Thai)\n        \n        .. note::\n           Our ISO-8859-2 and windows-1250 (Hungarian) probers have been temporarily\n           disabled until we can retrain the models.\n        \n        Requires Python 2.6, 2.7, or 3.3+.\n        \n        Installation\n        ------------\n        \n        Install from `PyPI <https://pypi.python.org/pypi/chardet>`_::\n        \n            pip install chardet\n        \n        Documentation\n        -------------\n        \n        For users, docs are now available at https://chardet.readthedocs.io/.\n        \n        Command-line Tool\n        -----------------\n        \n        chardet comes with a command-line script which reports on the encodings of one\n        or more files::\n        \n            % chardetect somefile someotherfile\n            somefile: windows-1252 with confidence 0.5\n            someotherfile: ascii with confidence 1.0\n        \n        About\n        -----\n        \n        This is a continuation of Mark Pilgrim's excellent chardet. Previously, two\n        versions needed to be maintained: one that supported python 2.x and one that\n        supported python 3.x.  We've recently merged with `Ian Cordasco <https://github.com/sigmavirus24>`_'s\n        `charade <https://github.com/sigmavirus24/charade>`_ fork, so now we have one\n        coherent version that works for Python 2.6+.\n        \n        :maintainer: Dan Blanchard\n        ",
        "keywords": [
          "encoding",
          "i18n",
          "xml"
        ],
        "home_page": "https://github.com/chardet/chardet",
        "author": "Mark Pilgrim",
        "author_email": "mark@diveintomark.org",
        "maintainer": "Daniel Blanchard",
        "maintainer_email": "dan.blanchard@gmail.com",
        "license": "LGPL",
        "classifier": [
          "Development Status :: 4 - Beta",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: GNU Library or Lesser General Public License (LGPL)",
          "Operating System :: OS Independent",
          "Programming Language :: Python",
          "Programming Language :: Python :: 2",
          "Programming Language :: Python :: 2.6",
          "Programming Language :: Python :: 2.7",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.3",
          "Programming Language :: Python :: 3.4",
          "Programming Language :: Python :: 3.5",
          "Programming Language :: Python :: 3.6",
          "Topic :: Software Development :: Libraries :: Python Modules",
          "Topic :: Text Processing :: Linguistic"
        ]
      },
      "metadata_location": "/usr/lib/python3/dist-packages/chardet-3.0.4.egg-info"
    },
    {
      "metadata": {
        "metadata_version": "1.0",
        "name": "cloud-init",
        "version": "23.1.2",
        "platform": [
          "UNKNOWN"
        ],
        "summary": "Cloud instance initialisation magic",
        "description": "UNKNOWN",
        "home_page": "http://launchpad.net/cloud-init/",
        "author": "Scott Moser",
        "author_email": "scott.moser@canonical.com",
        "license": "Dual-licensed under GPLv3 or Apache 2.0"
      },
      "metadata_location": "/usr/lib/python3/dist-packages/cloud_init-23.1.2.egg-info"
    },
    {
      "metadata": {
        "metadata_version": "1.2",
        "name": "colorama",
        "version": "0.4.3",
        "platform": [
          "UNKNOWN"
        ],
        "summary": "Cross-platform colored terminal text.",
        "description": ".. image:: https://img.shields.io/pypi/v/colorama.svg\n            :target: https://pypi.org/project/colorama/\n            :alt: Latest Version\n        \n        .. image:: https://img.shields.io/pypi/pyversions/colorama.svg\n            :target: https://pypi.org/project/colorama/\n            :alt: Supported Python versions\n        \n        .. image:: https://travis-ci.org/tartley/colorama.svg?branch=master\n            :target: https://travis-ci.org/tartley/colorama\n            :alt: Build Status\n        \n        Download and docs:\n            https://pypi.org/project/colorama/\n        Source code & Development:\n            https://github.com/tartley/colorama\n        Colorama for Enterprise:\n            https://github.com/tartley/colorama/blob/master/ENTERPRISE.md\n        \n        Description\n        ===========\n        \n        Makes ANSI escape character sequences (for producing colored terminal text and\n        cursor positioning) work under MS Windows.\n        \n        ANSI escape character sequences have long been used to produce colored terminal\n        text and cursor positioning on Unix and Macs. Colorama makes this work on\n        Windows, too, by wrapping ``stdout``, stripping ANSI sequences it finds (which\n        would appear as gobbledygook in the output), and converting them into the\n        appropriate win32 calls to modify the state of the terminal. On other platforms,\n        Colorama does nothing.\n        \n        Colorama also provides some shortcuts to help generate ANSI sequences\n        but works fine in conjunction with any other ANSI sequence generation library,\n        such as the venerable Termcolor (https://pypi.org/project/termcolor/)\n        or the fabulous Blessings (https://pypi.org/project/blessings/).\n        \n        This has the upshot of providing a simple cross-platform API for printing\n        colored terminal text from Python, and has the happy side-effect that existing\n        applications or libraries which use ANSI sequences to produce colored output on\n        Linux or Macs can now also work on Windows, simply by calling\n        ``colorama.init()``.\n        \n        An alternative approach is to install ``ansi.sys`` on Windows machines, which\n        provides the same behaviour for all applications running in terminals. Colorama\n        is intended for situations where that isn't easy (e.g., maybe your app doesn't\n        have an installer.)\n        \n        Demo scripts in the source code repository print some colored text using\n        ANSI sequences. Compare their output under Gnome-terminal's built in ANSI\n        handling, versus on Windows Command-Prompt using Colorama:\n        \n        .. image:: https://github.com/tartley/colorama/raw/master/screenshots/ubuntu-demo.png\n            :width: 661\n            :height: 357\n            :alt: ANSI sequences on Ubuntu under gnome-terminal.\n        \n        .. image:: https://github.com/tartley/colorama/raw/master/screenshots/windows-demo.png\n            :width: 668\n            :height: 325\n            :alt: Same ANSI sequences on Windows, using Colorama.\n        \n        These screengrabs show that, on Windows, Colorama does not support ANSI 'dim\n        text'; it looks the same as 'normal text'.\n        \n        \n        License\n        =======\n        \n        Copyright Jonathan Hartley & Arnon Yaari, 2013. BSD 3-Clause license; see LICENSE file.\n        \n        \n        Dependencies\n        ============\n        \n        None, other than Python. Tested on Python 2.7, 3.5, 3.6, 3.7 and 3.8.\n        \n        Usage\n        =====\n        \n        Initialisation\n        --------------\n        \n        Applications should initialise Colorama using:\n        \n        .. code-block:: python\n        \n            from colorama import init\n            init()\n        \n        On Windows, calling ``init()`` will filter ANSI escape sequences out of any\n        text sent to ``stdout`` or ``stderr``, and replace them with equivalent Win32\n        calls.\n        \n        On other platforms, calling ``init()`` has no effect (unless you request other\n        optional functionality; see \"Init Keyword Args\", below). By design, this permits\n        applications to call ``init()`` unconditionally on all platforms, after which\n        ANSI output should just work.\n        \n        To stop using colorama before your program exits, simply call ``deinit()``.\n        This will restore ``stdout`` and ``stderr`` to their original values, so that\n        Colorama is disabled. To resume using Colorama again, call ``reinit()``; it is\n        cheaper to calling ``init()`` again (but does the same thing).\n        \n        \n        Colored Output\n        --------------\n        \n        Cross-platform printing of colored text can then be done using Colorama's\n        constant shorthand for ANSI escape sequences:\n        \n        .. code-block:: python\n        \n            from colorama import Fore, Back, Style\n            print(Fore.RED + 'some red text')\n            print(Back.GREEN + 'and with a green background')\n            print(Style.DIM + 'and in dim text')\n            print(Style.RESET_ALL)\n            print('back to normal now')\n        \n        ...or simply by manually printing ANSI sequences from your own code:\n        \n        .. code-block:: python\n        \n            print('\\033[31m' + 'some red text')\n            print('\\033[39m') # and reset to default color\n        \n        ...or, Colorama can be used happily in conjunction with existing ANSI libraries\n        such as Termcolor:\n        \n        .. code-block:: python\n        \n            from colorama import init\n            from termcolor import colored\n        \n            # use Colorama to make Termcolor work on Windows too\n            init()\n        \n            # then use Termcolor for all colored text output\n            print(colored('Hello, World!', 'green', 'on_red'))\n        \n        Available formatting constants are::\n        \n            Fore: BLACK, RED, GREEN, YELLOW, BLUE, MAGENTA, CYAN, WHITE, RESET.\n            Back: BLACK, RED, GREEN, YELLOW, BLUE, MAGENTA, CYAN, WHITE, RESET.\n            Style: DIM, NORMAL, BRIGHT, RESET_ALL\n        \n        ``Style.RESET_ALL`` resets foreground, background, and brightness. Colorama will\n        perform this reset automatically on program exit.\n        \n        \n        Cursor Positioning\n        ------------------\n        \n        ANSI codes to reposition the cursor are supported. See ``demos/demo06.py`` for\n        an example of how to generate them.\n        \n        \n        Init Keyword Args\n        -----------------\n        \n        ``init()`` accepts some ``**kwargs`` to override default behaviour.\n        \n        init(autoreset=False):\n            If you find yourself repeatedly sending reset sequences to turn off color\n            changes at the end of every print, then ``init(autoreset=True)`` will\n            automate that:\n        \n            .. code-block:: python\n        \n                from colorama import init\n                init(autoreset=True)\n                print(Fore.RED + 'some red text')\n                print('automatically back to default color again')\n        \n        init(strip=None):\n            Pass ``True`` or ``False`` to override whether ansi codes should be\n            stripped from the output. The default behaviour is to strip if on Windows\n            or if output is redirected (not a tty).\n        \n        init(convert=None):\n            Pass ``True`` or ``False`` to override whether to convert ANSI codes in the\n            output into win32 calls. The default behaviour is to convert if on Windows\n            and output is to a tty (terminal).\n        \n        init(wrap=True):\n            On Windows, colorama works by replacing ``sys.stdout`` and ``sys.stderr``\n            with proxy objects, which override the ``.write()`` method to do their work.\n            If this wrapping causes you problems, then this can be disabled by passing\n            ``init(wrap=False)``. The default behaviour is to wrap if ``autoreset`` or\n            ``strip`` or ``convert`` are True.\n        \n            When wrapping is disabled, colored printing on non-Windows platforms will\n            continue to work as normal. To do cross-platform colored output, you can\n            use Colorama's ``AnsiToWin32`` proxy directly:\n        \n            .. code-block:: python\n        \n                import sys\n                from colorama import init, AnsiToWin32\n                init(wrap=False)\n                stream = AnsiToWin32(sys.stderr).stream\n        \n                # Python 2\n                print >>stream, Fore.BLUE + 'blue text on stderr'\n        \n                # Python 3\n                print(Fore.BLUE + 'blue text on stderr', file=stream)\n        \n        \n        Installation\n        =======================\n        colorama is currently installable from PyPI:\n        \n            pip install colorama\n            \n        colorama also can be installed by the conda package manager:\n        \n            conda install -c anaconda colorama \n        \n        \n        Status & Known Problems\n        =======================\n        \n        I've personally only tested it on Windows XP (CMD, Console2), Ubuntu\n        (gnome-terminal, xterm), and OS X.\n        \n        Some presumably valid ANSI sequences aren't recognised (see details below),\n        but to my knowledge nobody has yet complained about this. Puzzling.\n        \n        See outstanding issues and wishlist:\n        https://github.com/tartley/colorama/issues\n        \n        If anything doesn't work for you, or doesn't do what you expected or hoped for,\n        I'd love to hear about it on that issues list, would be delighted by patches,\n        and would be happy to grant commit access to anyone who submits a working patch\n        or two.\n        \n        \n        Recognised ANSI Sequences\n        =========================\n        \n        ANSI sequences generally take the form:\n        \n            ESC [ <param> ; <param> ... <command>\n        \n        Where ``<param>`` is an integer, and ``<command>`` is a single letter. Zero or\n        more params are passed to a ``<command>``. If no params are passed, it is\n        generally synonymous with passing a single zero. No spaces exist in the\n        sequence; they have been inserted here simply to read more easily.\n        \n        The only ANSI sequences that colorama converts into win32 calls are::\n        \n            ESC [ 0 m       # reset all (colors and brightness)\n            ESC [ 1 m       # bright\n            ESC [ 2 m       # dim (looks same as normal brightness)\n            ESC [ 22 m      # normal brightness\n        \n            # FOREGROUND:\n            ESC [ 30 m      # black\n            ESC [ 31 m      # red\n            ESC [ 32 m      # green\n            ESC [ 33 m      # yellow\n            ESC [ 34 m      # blue\n            ESC [ 35 m      # magenta\n            ESC [ 36 m      # cyan\n            ESC [ 37 m      # white\n            ESC [ 39 m      # reset\n        \n            # BACKGROUND\n            ESC [ 40 m      # black\n            ESC [ 41 m      # red\n            ESC [ 42 m      # green\n            ESC [ 43 m      # yellow\n            ESC [ 44 m      # blue\n            ESC [ 45 m      # magenta\n            ESC [ 46 m      # cyan\n            ESC [ 47 m      # white\n            ESC [ 49 m      # reset\n        \n            # cursor positioning\n            ESC [ y;x H     # position cursor at x across, y down\n            ESC [ y;x f     # position cursor at x across, y down\n            ESC [ n A       # move cursor n lines up\n            ESC [ n B       # move cursor n lines down\n            ESC [ n C       # move cursor n characters forward\n            ESC [ n D       # move cursor n characters backward\n        \n            # clear the screen\n            ESC [ mode J    # clear the screen\n        \n            # clear the line\n            ESC [ mode K    # clear the line\n        \n        Multiple numeric params to the ``'m'`` command can be combined into a single\n        sequence::\n        \n            ESC [ 36 ; 45 ; 1 m     # bright cyan text on magenta background\n        \n        All other ANSI sequences of the form ``ESC [ <param> ; <param> ... <command>``\n        are silently stripped from the output on Windows.\n        \n        Any other form of ANSI sequence, such as single-character codes or alternative\n        initial characters, are not recognised or stripped. It would be cool to add\n        them though. Let me know if it would be useful for you, via the Issues on\n        GitHub.\n        \n        \n        Development\n        ===========\n        \n        Help and fixes welcome!\n        \n        Running tests requires:\n        \n        - Michael Foord's ``mock`` module to be installed.\n        - Tests are written using 2010-era updates to ``unittest``\n        \n        To run tests::\n        \n           python -m unittest discover -p *_test.py\n        \n        This, like a few other handy commands, is captured in a ``Makefile``.\n        \n        If you use nose to run the tests, you must pass the ``-s`` flag; otherwise,\n        ``nosetests`` applies its own proxy to ``stdout``, which confuses the unit\n        tests.\n        \n        \n        Professional support\n        ====================\n        \n        .. |tideliftlogo| image:: https://cdn2.hubspot.net/hubfs/4008838/website/logos/logos_for_download/Tidelift_primary-shorthand-logo.png\n           :alt: Tidelift\n           :target: https://tidelift.com/subscription/pkg/pypi-colorama?utm_source=pypi-colorama&utm_medium=referral&utm_campaign=readme\n        \n        .. list-table::\n           :widths: 10 100\n        \n           * - |tideliftlogo|\n             - Professional support for colorama is available as part of the\n               `Tidelift Subscription`_.\n               Tidelift gives software development teams a single source for purchasing\n               and maintaining their software, with professional grade assurances from\n               the experts who know it best, while seamlessly integrating with existing\n               tools.\n        \n        .. _Tidelift Subscription: https://tidelift.com/subscription/pkg/pypi-colorama?utm_source=pypi-colorama&utm_medium=referral&utm_campaign=readme\n        \n        \n        Thanks\n        ======\n        * Marc Schlaich (schlamar) for a ``setup.py`` fix for Python2.5.\n        * Marc Abramowitz, reported & fixed a crash on exit with closed ``stdout``,\n          providing a solution to issue #7's setuptools/distutils debate,\n          and other fixes.\n        * User 'eryksun', for guidance on correctly instantiating ``ctypes.windll``.\n        * Matthew McCormick for politely pointing out a longstanding crash on non-Win.\n        * Ben Hoyt, for a magnificent fix under 64-bit Windows.\n        * Jesse at Empty Square for submitting a fix for examples in the README.\n        * User 'jamessp', an observant documentation fix for cursor positioning.\n        * User 'vaal1239', Dave Mckee & Lackner Kristof for a tiny but much-needed Win7\n          fix.\n        * Julien Stuyck, for wisely suggesting Python3 compatible updates to README.\n        * Daniel Griffith for multiple fabulous patches.\n        * Oscar Lesta for a valuable fix to stop ANSI chars being sent to non-tty\n          output.\n        * Roger Binns, for many suggestions, valuable feedback, & bug reports.\n        * Tim Golden for thought and much appreciated feedback on the initial idea.\n        * User 'Zearin' for updates to the README file.\n        * John Szakmeister for adding support for light colors\n        * Charles Merriam for adding documentation to demos\n        * Jurko for a fix on 64-bit Windows CPython2.5 w/o ctypes\n        * Florian Bruhin for a fix when stdout or stderr are None\n        * Thomas Weininger for fixing ValueError on Windows\n        * Remi Rampin for better Github integration and fixes to the README file\n        * Simeon Visser for closing a file handle using 'with' and updating classifiers\n          to include Python 3.3 and 3.4\n        * Andy Neff for fixing RESET of LIGHT_EX colors.\n        * Jonathan Hartley for the initial idea and implementation.\n        ",
        "keywords": [
          "color",
          "colour",
          "terminal",
          "text",
          "ansi",
          "windows",
          "crossplatform",
          "xplatform"
        ],
        "home_page": "https://github.com/tartley/colorama",
        "author": "Jonathan Hartley",
        "author_email": "tartley@tartley.com",
        "maintainer": "Arnon Yaari",
        "license": "BSD",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Environment :: Console",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: BSD License",
          "Operating System :: OS Independent",
          "Programming Language :: Python",
          "Programming Language :: Python :: 2",
          "Programming Language :: Python :: 2.7",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.5",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: Implementation :: CPython",
          "Programming Language :: Python :: Implementation :: PyPy",
          "Topic :: Terminals"
        ],
        "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"
      },
      "metadata_location": "/usr/lib/python3/dist-packages/colorama-0.4.3.egg-info"
    },
    {
      "metadata": {
        "metadata_version": "1.0",
        "name": "command-not-found",
        "version": "0.3",
        "platform": [
          "UNKNOWN"
        ],
        "summary": "UNKNOWN",
        "description": "UNKNOWN",
        "home_page": "UNKNOWN",
        "author": "UNKNOWN",
        "author_email": "UNKNOWN",
        "license": "UNKNOWN"
      },
      "metadata_location": null
    },
    {
      "metadata": {
        "metadata_version": "1.1",
        "name": "configobj",
        "version": "5.0.6",
        "platform": [
          "UNKNOWN"
        ],
        "summary": "Config file reading, writing and validation.",
        "description": "**ConfigObj** is a simple but powerful config file reader and writer: an *ini\n        file round tripper*. Its main feature is that it is very easy to use, with a\n        straightforward programmer's interface and a simple syntax for config files.\n        It has lots of other features though :\n        \n        * Nested sections (subsections), to any level\n        * List values\n        * Multiple line values\n        * Full Unicode support\n        * String interpolation (substitution)\n        * Integrated with a powerful validation system\n        \n            - including automatic type checking/conversion\n            - and allowing default values\n            - repeated sections\n        \n        * All comments in the file are preserved\n        * The order of keys/sections is preserved\n        * Powerful ``unrepr`` mode for storing/retrieving Python data-types\n        \n        | Release 5.0.6 improves error messages in certain edge cases\n        | Release 5.0.5 corrects a unicode-bug that still existed in writing files\n        | Release 5.0.4 corrects a unicode-bug that still existed in reading files after\n        | fixing lists of string in 5.0.3\n        | Release 5.0.3 corrects errors related to the incorrectly handling unicode\n        | encoding and writing out files\n        | Release 5.0.2 adds a specific error message when trying to install on\n        | Python versions older than 2.5\n        | Release 5.0.1 fixes a regression with unicode conversion not happening\n        | in certain cases PY2\n        | Release 5.0.0 updates the supported Python versions to 2.6, 2.7, 3.2, 3.3\n        | and is otherwise unchanged\n        | Release 4.7.2 fixes several bugs in 4.7.1\n        | Release 4.7.1 fixes a bug with the deprecated options keyword in\n        | 4.7.0.\n        | Release 4.7.0 improves performance adds features for validation and\n        | fixes some bugs.",
        "keywords": [
          "config",
          "ini",
          "dictionary",
          "application",
          "admin",
          "sysadmin",
          "configuration",
          "validation"
        ],
        "home_page": "https://github.com/DiffSK/configobj",
        "author": "Rob Dennis, Eli Courtwright (Michael Foord & Nicola Larosa original maintainers)",
        "author_email": "rdennis+configobj@gmail.com, eli@courtwright.org, fuzzyman@voidspace.co.uk, nico@tekNico.net",
        "license": "UNKNOWN",
        "classifier": [
          "Development Status :: 6 - Mature",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: BSD License",
          "Programming Language :: Python",
          "Programming Language :: Python :: 2",
          "Programming Language :: Python :: 2.6",
          "Programming Language :: Python :: 2.7",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.2",
          "Programming Language :: Python :: 3.3",
          "Operating System :: OS Independent",
          "Topic :: Software Development :: Libraries",
          "Topic :: Software Development :: Libraries :: Python Modules"
        ]
      },
      "metadata_location": "/usr/lib/python3/dist-packages/configobj-5.0.6.egg-info"
    },
    {
      "metadata": {
        "metadata_version": "1.2",
        "name": "constantly",
        "version": "15.1.0",
        "platform": [
          "UNKNOWN"
        ],
        "summary": "Symbolic constants in Python",
        "description": "Constantly\n        ==========\n        \n        A library that provides symbolic constant support.\n        It includes collections and constants with text, numeric, and bit flag values.\n        Originally ``twisted.python.constants`` from the `Twisted <https://twistedmatrix.com/>`_ project.\n        \n        \n        Tests\n        -----\n        \n        To run tests::\n        \n            $ tox\n        \n        This will run tests on Python 2.7, 3.3, 3.4, and PyPy, as well as doing coverage and pyflakes checks.\n        ",
        "keywords": [
          "constants",
          "enum",
          "twisted"
        ],
        "home_page": "https://github.com/twisted/constantly",
        "maintainer": "Twisted Matrix Labs Developers",
        "license": "MIT",
        "classifier": [
          "Intended Audience :: Developers",
          "License :: OSI Approved :: MIT License",
          "Operating System :: OS Independent",
          "Programming Language :: Python",
          "Programming Language :: Python :: 2.7",
          "Programming Language :: Python :: 3.3",
          "Programming Language :: Python :: 3.4",
          "Programming Language :: Python :: Implementation :: CPython",
          "Programming Language :: Python :: Implementation :: PyPy",
          "Topic :: Software Development :: Libraries :: Python Modules"
        ]
      },
      "metadata_location": "/usr/lib/python3/dist-packages/constantly-15.1.0.egg-info"
    },
    {
      "metadata": {
        "metadata_version": "1.2",
        "name": "dbus-python",
        "version": "1.2.16",
        "platform": [
          "UNKNOWN"
        ],
        "summary": "Python bindings for libdbus",
        "description": "=======================================\n        dbus-python_: Python bindings for D-Bus\n        =======================================\n        \n        .. _dbus-python: http://www.freedesktop.org/wiki/Software/DBusBindings#python\n        \n        dbus-python is the original Python binding for ``dbus``, the reference\n        implementation of the D-Bus protocol.\n        \n        Online documentation can be found at\n        <http://dbus.freedesktop.org/doc/dbus-python/>.\n        \n        Problems and alternatives\n        =========================\n        \n        dbus-python might not be the best D-Bus binding for you to use. dbus-python\n        does not follow the principle of \"In the face of ambiguity, refuse the\n        temptation to guess\", and can't be changed to not do so without seriously\n        breaking compatibility.\n        \n        In addition, it uses libdbus (which has known problems with multi-threaded\n        use) and attempts to be main-loop-agnostic (which means you have to select\n        a suitable main loop for your application).\n        \n        Alternative ways to get your Python code onto D-Bus include:\n        \n        * GDBus, part of the GIO module of `GLib`_, via GObject-Introspection and\n          `PyGI`_ (uses the GLib main loop and object model)\n        \n        * QtDBus, part of `Qt`_, via `PyQt`_ (uses the Qt main loop and object model)\n        \n        .. _GLib: http://developer.gnome.org/glib/\n        .. _PyGI: https://live.gnome.org/PyGObject\n        .. _Qt:   https://www.qt.io\n        .. _PyQT: http://www.riverbankcomputing.co.uk/software/pyqt/intro\n        ",
        "home_page": "http://www.freedesktop.org/wiki/Software/DBusBindings/#python",
        "download_url": "http://dbus.freedesktop.org/releases/dbus-python/",
        "maintainer": "The D-Bus maintainers",
        "maintainer_email": "dbus@lists.freedesktop.org",
        "license": "Expat (MIT/X11)",
        "classifier": [
          "Development Status :: 7 - Inactive",
          "License :: OSI Approved :: MIT License",
          "Programming Language :: C",
          "Programming Language :: Python :: 2",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: Implementation :: CPython",
          "Topic :: Software Development :: Object Brokering"
        ]
      },
      "metadata_location": "/usr/lib/python3/dist-packages/dbus_python-1.2.16.egg-info"
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "distro",
        "version": "1.4.0",
        "platform": [
          "All"
        ],
        "summary": "Distro - an OS platform information API",
        "description": "Distro - an OS platform information API\n        =======================================\n        \n        [![Build Status](https://travis-ci.org/nir0s/distro.svg?branch=master)](https://travis-ci.org/nir0s/distro)\n        [![Build status](https://ci.appveyor.com/api/projects/status/e812qjk1gf0f74r5/branch/master?svg=true)](https://ci.appveyor.com/project/nir0s/distro/branch/master)\n        [![PyPI version](http://img.shields.io/pypi/v/distro.svg)](https://pypi.python.org/pypi/distro)\n        [![Supported Python Versions](https://img.shields.io/pypi/pyversions/distro.svg)](https://img.shields.io/pypi/pyversions/distro.svg)\n        [![Requirements Status](https://requires.io/github/nir0s/distro/requirements.svg?branch=master)](https://requires.io/github/nir0s/distro/requirements/?branch=master)\n        [![Code Coverage](https://codecov.io/github/nir0s/distro/coverage.svg?branch=master)](https://codecov.io/github/nir0s/distro?branch=master)\n        [![Code Quality](https://landscape.io/github/nir0s/distro/master/landscape.svg?style=flat)](https://landscape.io/github/nir0s/distro)\n        [![Is Wheel](https://img.shields.io/pypi/wheel/distro.svg?style=flat)](https://pypi.python.org/pypi/distro)\n        [![Latest Github Release](https://readthedocs.org/projects/distro/badge/?version=stable)](http://distro.readthedocs.io/en/latest/)\n        [![Join the chat at https://gitter.im/nir0s/distro](https://badges.gitter.im/nir0s/distro.svg)](https://gitter.im/nir0s/distro?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n        \n        `distro` provides information about the\n        OS distribution it runs on, such as a reliable machine-readable ID, or\n        version information.\n        \n        It is the recommended replacement for Python's original\n        [`platform.linux_distribution`](https://docs.python.org/3.7/library/platform.html#platform.linux_distribution)\n        function (which will be removed in Python 3.8).\n        It also provides much more functionality which isn't necessarily Python bound,\n        like a command-line interface.\n        \n        Distro currently supports Linux and BSD based systems but [Windows and OS X support](https://github.com/nir0s/distro/issues/177) is also planned.\n        \n        For Python 2.6 support, see https://github.com/nir0s/distro/tree/python2.6-support\n        \n        ## Installation\n        \n        Installation of the latest released version from PyPI:\n        \n        ```shell\n        pip install distro\n        ```\n        \n        Installation of the latest development version:\n        \n        ```shell\n        pip install https://github.com/nir0s/distro/archive/master.tar.gz\n        ```\n        \n        \n        ## Usage\n        \n        ```bash\n        $ distro\n        Name: Antergos Linux\n        Version: 2015.10 (ISO-Rolling)\n        Codename: ISO-Rolling\n        \n        $ distro -j\n        {\n            \"codename\": \"ISO-Rolling\",\n            \"id\": \"antergos\",\n            \"like\": \"arch\",\n            \"version\": \"16.9\",\n            \"version_parts\": {\n                \"build_number\": \"\",\n                \"major\": \"16\",\n                \"minor\": \"9\"\n            }\n        }\n        \n        \n        $ python\n        >>> import distro\n        >>> distro.linux_distribution(full_distribution_name=False)\n        ('centos', '7.1.1503', 'Core')\n        ```\n        \n        \n        ## Documentation\n        \n        On top of the aforementioned API, several more functions are available. For a complete description of the\n        API, see the [latest API documentation](http://distro.readthedocs.org/en/latest/).\n        \n        ## Background\n        \n        An alternative implementation became necessary because Python 3.5 deprecated\n        this function, and Python 3.8 will remove it altogether.\n        Its predecessor function `platform.dist` was already deprecated since\n        Python 2.6 and will also be removed in Python 3.8.\n        Still, there are many cases in which access to that information is needed.\n        See [Python issue 1322](https://bugs.python.org/issue1322) for more\n        information.\n        \n        The `distro` package implements a robust and inclusive way of retrieving the\n        information about a distribution based on new standards and old methods,\n        namely from these data sources (from high to low precedence):\n        \n        * The os-release file `/etc/os-release`, if present.\n        * The output of the `lsb_release` command, if available.\n        * The distro release file (`/etc/*(-|_)(release|version)`), if present.\n        * The `uname` command for BSD based distrubtions.\n        \n        \n        ## Python and Distribution Support\n        \n        `distro` is supported and tested on Python 2.7, 3.4+ and PyPy and on\n        any distribution that provides one or more of the data sources\n        covered.\n        \n        This package is tested with test data that mimics the exact behavior of the data sources of [a number of Linux distributions](https://github.com/nir0s/distro/tree/master/tests/resources/distros).\n        \n        \n        ## Testing\n        \n        ```shell\n        git clone git@github.com:nir0s/distro.git\n        cd distro\n        pip install tox\n        tox\n        ```\n        \n        \n        ## Contributions\n        \n        Pull requests are always welcome to deal with specific distributions or just\n        for general merriment.\n        \n        See [CONTRIBUTIONS](https://github.com/nir0s/distro/blob/master/CONTRIBUTING.md) for contribution info.\n        \n        Reference implementations for supporting additional distributions and file\n        formats can be found here:\n        \n        * https://github.com/saltstack/salt/blob/develop/salt/grains/core.py#L1172\n        * https://github.com/chef/ohai/blob/master/lib/ohai/plugins/linux/platform.rb\n        * https://github.com/ansible/ansible/blob/devel/lib/ansible/module_utils/facts/system/distribution.py\n        * https://github.com/puppetlabs/facter/blob/master/lib/src/facts/linux/os_linux.cc\n        \n        ## Package manager distributions\n        \n        * https://src.fedoraproject.org/rpms/python-distro\n        * https://www.archlinux.org/packages/community/any/python-distro/\n        * https://launchpad.net/ubuntu/+source/python-distro\n        * https://packages.debian.org/sid/python-distro\n        * https://packages.gentoo.org/packages/dev-python/distro\n        * https://pkgs.org/download/python2-distro\n        * https://slackbuilds.org/repository/14.2/python/python-distro/\n        ",
        "description_content_type": "text/markdown",
        "home_page": "https://github.com/nir0s/distro",
        "author": "Nir Cohen",
        "author_email": "nir36g@gmail.com",
        "license": "Apache License, Version 2.0",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Intended Audience :: Developers",
          "Intended Audience :: System Administrators",
          "License :: OSI Approved :: Apache Software License",
          "Operating System :: POSIX :: Linux",
          "Operating System :: POSIX :: BSD",
          "Operating System :: POSIX :: BSD :: FreeBSD",
          "Operating System :: POSIX :: BSD :: NetBSD",
          "Operating System :: POSIX :: BSD :: OpenBSD",
          "Programming Language :: Python :: 2",
          "Programming Language :: Python :: 2.7",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.4",
          "Programming Language :: Python :: 3.5",
          "Programming Language :: Python :: 3.6",
          "Topic :: Software Development :: Libraries :: Python Modules",
          "Topic :: System :: Operating System"
        ]
      },
      "metadata_location": "/usr/lib/python3/dist-packages/distro-1.4.0.egg-info"
    },
    {
      "metadata": {
        "metadata_version": "1.0",
        "name": "distro-info",
        "version": "0.23ubuntu1",
        "platform": [
          "UNKNOWN"
        ],
        "summary": "UNKNOWN",
        "description": "UNKNOWN",
        "home_page": "UNKNOWN",
        "author": "UNKNOWN",
        "author_email": "UNKNOWN",
        "license": "UNKNOWN"
      },
      "metadata_location": "/usr/lib/python3/dist-packages/distro_info-0.23ubuntu1.egg-info"
    },
    {
      "metadata": {
        "metadata_version": "1.1",
        "name": "entrypoints",
        "version": "0.3",
        "summary": "Discover and load entry points from installed packages",
        "author": "Thomas Kluyver",
        "author_email": "thomas@kluyver.me.uk",
        "classifier": [
          "License :: OSI Approved :: MIT License"
        ]
      },
      "metadata_location": null
    },
    {
      "metadata": {
        "metadata_version": "1.1",
        "name": "httplib2",
        "version": "0.14.0",
        "platform": [
          "UNKNOWN"
        ],
        "summary": "A comprehensive HTTP client library.",
        "description": "\n        \n        A comprehensive HTTP client library, ``httplib2`` supports many features left out of other HTTP libraries.\n        \n        **HTTP and HTTPS**\n          HTTPS support is only available if the socket module was compiled with SSL support.\n        \n        \n        **Keep-Alive**\n          Supports HTTP 1.1 Keep-Alive, keeping the socket open and performing multiple requests over the same connection if possible.\n        \n        \n        **Authentication**\n          The following three types of HTTP Authentication are supported. These can be used over both HTTP and HTTPS.\n        \n          * Digest\n          * Basic\n          * WSSE\n        \n        **Caching**\n          The module can optionally operate with a private cache that understands the Cache-Control:\n          header and uses both the ETag and Last-Modified cache validators. Both file system\n          and memcached based caches are supported.\n        \n        \n        **All Methods**\n          The module can handle any HTTP request method, not just GET and POST.\n        \n        \n        **Redirects**\n          Automatically follows 3XX redirects on GETs.\n        \n        \n        **Compression**\n          Handles both 'deflate' and 'gzip' types of compression.\n        \n        \n        **Lost update support**\n          Automatically adds back ETags into PUT requests to resources we have already cached. This implements Section 3.2 of Detecting the Lost Update Problem Using Unreserved Checkout\n        \n        \n        **Unit Tested**\n          A large and growing set of unit tests.\n        ",
        "home_page": "https://github.com/httplib2/httplib2",
        "author": "Joe Gregorio",
        "author_email": "joe@bitworking.org",
        "license": "MIT",
        "classifier": [
          "Development Status :: 4 - Beta",
          "Environment :: Web Environment",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: MIT License",
          "Operating System :: OS Independent",
          "Programming Language :: Python",
          "Programming Language :: Python :: 2",
          "Programming Language :: Python :: 2.7",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.4",
          "Programming Language :: Python :: 3.5",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "Topic :: Internet :: WWW/HTTP",
          "Topic :: Software Development :: Libraries"
        ]
      },
      "metadata_location": "/usr/lib/python3/dist-packages/httplib2-0.14.0.egg-info"
    },
    {
      "metadata": {
        "metadata_version": "1.1",
        "name": "hyperlink",
        "version": "19.0.0",
        "platform": [
          "any"
        ],
        "summary": "A featureful, immutable, and correct URL for Python.",
        "description": "The humble, but powerful, URL runs everything around us. Chances\n        are you've used several just to read this text.\n        \n        Hyperlink is a featureful, pure-Python implementation of the URL, with\n        an emphasis on correctness. BSD licensed.\n        \n        See the docs at http://hyperlink.readthedocs.io.\n        ",
        "home_page": "https://github.com/python-hyper/hyperlink",
        "author": "Mahmoud Hashemi and Glyph Lefkowitz",
        "author_email": "mahmoud@hatnote.com",
        "license": "MIT",
        "classifier": [
          "Topic :: Utilities",
          "Intended Audience :: Developers",
          "Topic :: Software Development :: Libraries",
          "Development Status :: 5 - Production/Stable",
          "Programming Language :: Python :: 2.6",
          "Programming Language :: Python :: 2.7",
          "Programming Language :: Python :: 3.4",
          "Programming Language :: Python :: 3.5",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: Implementation :: PyPy"
        ]
      },
      "metadata_location": "/usr/lib/python3/dist-packages/hyperlink-19.0.0.egg-info"
    },
    {
      "metadata": {
        "metadata_version": "1.2",
        "name": "idna",
        "version": "2.8",
        "platform": [
          "UNKNOWN"
        ],
        "summary": "Internationalized Domain Names in Applications (IDNA)",
        "description": "Internationalized Domain Names in Applications (IDNA)\n        =====================================================\n        \n        Support for the Internationalised Domain Names in Applications\n        (IDNA) protocol as specified in `RFC 5891 <http://tools.ietf.org/html/rfc5891>`_.\n        This is the latest version of the protocol and is sometimes referred to as\n        “IDNA 2008”.\n        \n        This library also provides support for Unicode Technical Standard 46,\n        `Unicode IDNA Compatibility Processing <http://unicode.org/reports/tr46/>`_.\n        \n        This acts as a suitable replacement for the “encodings.idna” module that\n        comes with the Python standard library, but only supports the\n        old, deprecated IDNA specification (`RFC 3490 <http://tools.ietf.org/html/rfc3490>`_).\n        \n        Basic functions are simply executed:\n        \n        .. code-block:: pycon\n        \n            # Python 3\n            >>> import idna\n            >>> idna.encode('ドメイン.テスト')\n            b'xn--eckwd4c7c.xn--zckzah'\n            >>> print(idna.decode('xn--eckwd4c7c.xn--zckzah'))\n            ドメイン.テスト\n        \n            # Python 2\n            >>> import idna\n            >>> idna.encode(u'ドメイン.テスト')\n            'xn--eckwd4c7c.xn--zckzah'\n            >>> print idna.decode('xn--eckwd4c7c.xn--zckzah')\n            ドメイン.テスト\n        \n        Packages\n        --------\n        \n        The latest tagged release version is published in the PyPI repository:\n        \n        .. image:: https://badge.fury.io/py/idna.svg\n           :target: http://badge.fury.io/py/idna\n        \n        \n        Installation\n        ------------\n        \n        To install this library, you can use pip:\n        \n        .. code-block:: bash\n        \n            $ pip install idna\n        \n        Alternatively, you can install the package using the bundled setup script:\n        \n        .. code-block:: bash\n        \n            $ python setup.py install\n        \n        This library works with Python 2.7 and Python 3.4 or later.\n        \n        \n        Usage\n        -----\n        \n        For typical usage, the ``encode`` and ``decode`` functions will take a domain\n        name argument and perform a conversion to A-labels or U-labels respectively.\n        \n        .. code-block:: pycon\n        \n            # Python 3\n            >>> import idna\n            >>> idna.encode('ドメイン.テスト')\n            b'xn--eckwd4c7c.xn--zckzah'\n            >>> print(idna.decode('xn--eckwd4c7c.xn--zckzah'))\n            ドメイン.テスト\n        \n        You may use the codec encoding and decoding methods using the\n        ``idna.codec`` module:\n        \n        .. code-block:: pycon\n        \n            # Python 2\n            >>> import idna.codec\n            >>> print u'домена.испытание'.encode('idna')\n            xn--80ahd1agd.xn--80akhbyknj4f\n            >>> print 'xn--80ahd1agd.xn--80akhbyknj4f'.decode('idna')\n            домена.испытание\n        \n        Conversions can be applied at a per-label basis using the ``ulabel`` or ``alabel``\n        functions if necessary:\n        \n        .. code-block:: pycon\n        \n            # Python 2\n            >>> idna.alabel(u'测试')\n            'xn--0zwm56d'\n        \n        Compatibility Mapping (UTS #46)\n        +++++++++++++++++++++++++++++++\n        \n        As described in `RFC 5895 <http://tools.ietf.org/html/rfc5895>`_, the IDNA\n        specification no longer normalizes input from different potential ways a user\n        may input a domain name. This functionality, known as a “mapping”, is now\n        considered by the specification to be a local user-interface issue distinct\n        from IDNA conversion functionality.\n        \n        This library provides one such mapping, that was developed by the Unicode\n        Consortium. Known as `Unicode IDNA Compatibility Processing <http://unicode.org/reports/tr46/>`_,\n        it provides for both a regular mapping for typical applications, as well as\n        a transitional mapping to help migrate from older IDNA 2003 applications.\n        \n        For example, “Königsgäßchen” is not a permissible label as *LATIN CAPITAL\n        LETTER K* is not allowed (nor are capital letters in general). UTS 46 will\n        convert this into lower case prior to applying the IDNA conversion.\n        \n        .. code-block:: pycon\n        \n            # Python 3\n            >>> import idna\n            >>> idna.encode(u'Königsgäßchen')\n            ...\n            idna.core.InvalidCodepoint: Codepoint U+004B at position 1 of 'Königsgäßchen' not allowed\n            >>> idna.encode('Königsgäßchen', uts46=True)\n            b'xn--knigsgchen-b4a3dun'\n            >>> print(idna.decode('xn--knigsgchen-b4a3dun'))\n            königsgäßchen\n        \n        Transitional processing provides conversions to help transition from the older\n        2003 standard to the current standard. For example, in the original IDNA\n        specification, the *LATIN SMALL LETTER SHARP S* (ß) was converted into two\n        *LATIN SMALL LETTER S* (ss), whereas in the current IDNA specification this\n        conversion is not performed.\n        \n        .. code-block:: pycon\n        \n            # Python 2\n            >>> idna.encode(u'Königsgäßchen', uts46=True, transitional=True)\n            'xn--knigsgsschen-lcb0w'\n        \n        Implementors should use transitional processing with caution, only in rare\n        cases where conversion from legacy labels to current labels must be performed\n        (i.e. IDNA implementations that pre-date 2008). For typical applications\n        that just need to convert labels, transitional processing is unlikely to be\n        beneficial and could produce unexpected incompatible results.\n        \n        ``encodings.idna`` Compatibility\n        ++++++++++++++++++++++++++++++++\n        \n        Function calls from the Python built-in ``encodings.idna`` module are\n        mapped to their IDNA 2008 equivalents using the ``idna.compat`` module.\n        Simply substitute the ``import`` clause in your code to refer to the\n        new module name.\n        \n        Exceptions\n        ----------\n        \n        All errors raised during the conversion following the specification should\n        raise an exception derived from the ``idna.IDNAError`` base class.\n        \n        More specific exceptions that may be generated as ``idna.IDNABidiError``\n        when the error reflects an illegal combination of left-to-right and right-to-left\n        characters in a label; ``idna.InvalidCodepoint`` when a specific codepoint is\n        an illegal character in an IDN label (i.e. INVALID); and ``idna.InvalidCodepointContext``\n        when the codepoint is illegal based on its positional context (i.e. it is CONTEXTO\n        or CONTEXTJ but the contextual requirements are not satisfied.)\n        \n        Building and Diagnostics\n        ------------------------\n        \n        The IDNA and UTS 46 functionality relies upon pre-calculated lookup tables for\n        performance. These tables are derived from computing against eligibility criteria\n        in the respective standards. These tables are computed using the command-line\n        script ``tools/idna-data``.\n        \n        This tool will fetch relevant tables from the Unicode Consortium and perform the\n        required calculations to identify eligibility. It has three main modes:\n        \n        * ``idna-data make-libdata``. Generates ``idnadata.py`` and ``uts46data.py``,\n          the pre-calculated lookup tables using for IDNA and UTS 46 conversions. Implementors\n          who wish to track this library against a different Unicode version may use this tool\n          to manually generate a different version of the ``idnadata.py`` and ``uts46data.py``\n          files.\n        \n        * ``idna-data make-table``. Generate a table of the IDNA disposition\n          (e.g. PVALID, CONTEXTJ, CONTEXTO) in the format found in Appendix B.1 of RFC\n          5892 and the pre-computed tables published by `IANA <http://iana.org/>`_.\n        \n        * ``idna-data U+0061``. Prints debugging output on the various properties\n          associated with an individual Unicode codepoint (in this case, U+0061), that are\n          used to assess the IDNA and UTS 46 status of a codepoint. This is helpful in debugging\n          or analysis.\n        \n        The tool accepts a number of arguments, described using ``idna-data -h``. Most notably,\n        the ``--version`` argument allows the specification of the version of Unicode to use\n        in computing the table data. For example, ``idna-data --version 9.0.0 make-libdata``\n        will generate library data against Unicode 9.0.0.\n        \n        Note that this script requires Python 3, but all generated library data will work\n        in Python 2.7.\n        \n        \n        Testing\n        -------\n        \n        The library has a test suite based on each rule of the IDNA specification, as\n        well as tests that are provided as part of the Unicode Technical Standard 46,\n        `Unicode IDNA Compatibility Processing <http://unicode.org/reports/tr46/>`_.\n        \n        The tests are run automatically on each commit at Travis CI:\n        \n        .. image:: https://travis-ci.org/kjd/idna.svg?branch=master\n           :target: https://travis-ci.org/kjd/idna\n        ",
        "home_page": "https://github.com/kjd/idna",
        "author": "Kim Davies",
        "author_email": "kim@cynosure.com.au",
        "license": "BSD-like",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Intended Audience :: Developers",
          "Intended Audience :: System Administrators",
          "License :: OSI Approved :: BSD License",
          "Operating System :: OS Independent",
          "Programming Language :: Python",
          "Programming Language :: Python :: 2",
          "Programming Language :: Python :: 2.7",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.4",
          "Programming Language :: Python :: 3.5",
          "Programming Language :: Python :: 3.6",
          "Topic :: Internet :: Name Service (DNS)",
          "Topic :: Software Development :: Libraries :: Python Modules",
          "Topic :: Utilities"
        ],
        "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"
      },
      "metadata_location": "/usr/lib/python3/dist-packages/idna-2.8.egg-info"
    },
    {
      "metadata": {
        "metadata_version": "1.2",
        "name": "jsonpatch",
        "version": "1.22",
        "platform": [
          "UNKNOWN"
        ],
        "summary": "Apply JSON-Patches (RFC 6902) ",
        "description": "python-json-patch\n        =================\n        \n        [![PyPI version](https://img.shields.io/pypi/v/jsonpatch.svg)](https://pypi.python.org/pypi/jsonpatch/)\n        [![Supported Python versions](https://img.shields.io/pypi/pyversions/jsonpatch.svg)](https://pypi.python.org/pypi/jsonpatch/)\n        [![Build Status](https://travis-ci.org/stefankoegl/python-json-patch.png?branch=master)](https://travis-ci.org/stefankoegl/python-json-patch)\n        [![Coverage Status](https://coveralls.io/repos/stefankoegl/python-json-patch/badge.png?branch=master)](https://coveralls.io/r/stefankoegl/python-json-patch?branch=master)\n        \n        Applying JSON Patches in Python\n        -------------------------------\n        \n        Library to apply JSON Patches according to\n        [RFC 6902](http://tools.ietf.org/html/rfc6902)\n        \n        See source code for examples\n        \n        * Website: https://github.com/stefankoegl/python-json-patch\n        * Repository: https://github.com/stefankoegl/python-json-patch.git\n        * Documentation: https://python-json-patch.readthedocs.org/\n        * PyPI: https://pypi.python.org/pypi/jsonpatch\n        * Travis CI: https://travis-ci.org/stefankoegl/python-json-patch\n        * Coveralls: https://coveralls.io/r/stefankoegl/python-json-patch\n        \n        Running external tests\n        ----------------------\n        To run external tests (such as those from https://github.com/json-patch/json-patch-tests) use ext_test.py\n        \n            ./ext_tests.py ../json-patch-tests/tests.json\n        ",
        "home_page": "https://github.com/stefankoegl/python-json-patch",
        "author": "Stefan Kögl",
        "author_email": "stefan@skoegl.net",
        "license": "Modified BSD License",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Environment :: Console",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: BSD License",
          "Operating System :: OS Independent",
          "Programming Language :: Python",
          "Programming Language :: Python :: 2",
          "Programming Language :: Python :: 2.7",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.4",
          "Programming Language :: Python :: 3.5",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: Implementation :: CPython",
          "Programming Language :: Python :: Implementation :: PyPy",
          "Topic :: Software Development :: Libraries",
          "Topic :: Utilities"
        ],
        "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*",
        "project_url": [
          "Website, https://github.com/stefankoegl/python-json-patch",
          "Repository, https://github.com/stefankoegl/python-json-patch.git",
          "Documentation, https://python-json-patch.readthedocs.org/",
          "PyPI, https://pypi.org/pypi/jsonpatch",
          "Tests, https://travis-ci.org/stefankoegl/python-json-patch",
          "Test Coverage, https://coveralls.io/r/stefankoegl/python-json-patch"
        ]
      },
      "metadata_location": "/usr/lib/python3/dist-packages/jsonpatch-1.22.egg-info"
    },
    {
      "metadata": {
        "metadata_version": "1.2",
        "name": "jsonpointer",
        "version": "2.0",
        "platform": [
          "UNKNOWN"
        ],
        "summary": "Identify specific nodes in a JSON document (RFC 6901) ",
        "description": "python-json-pointer\n        ===================\n        \n        [![PyPI version](https://img.shields.io/pypi/v/jsonpointer.svg)](https://pypi.python.org/pypi/jsonpointer/)\n        [![Supported Python versions](https://img.shields.io/pypi/pyversions/jsonpointer.svg)](https://pypi.python.org/pypi/jsonpointer/)\n        [![Build Status](https://travis-ci.org/stefankoegl/python-json-pointer.png?branch=master)](https://travis-ci.org/stefankoegl/python-json-pointer)\n        [![Coverage Status](https://coveralls.io/repos/stefankoegl/python-json-pointer/badge.png?branch=master)](https://coveralls.io/r/stefankoegl/python-json-pointer?branch=master)\n        \n        \n        Resolve JSON Pointers in Python\n        -------------------------------\n        \n        Library to resolve JSON Pointers according to\n        [RFC 6901](http://tools.ietf.org/html/rfc6901)\n        \n        See source code for examples\n        * Website: https://github.com/stefankoegl/python-json-pointer\n        * Repository: https://github.com/stefankoegl/python-json-pointer.git\n        * Documentation: https://python-json-pointer.readthedocs.org/\n        * PyPI: https://pypi.python.org/pypi/jsonpointer\n        * Travis CI: https://travis-ci.org/stefankoegl/python-json-pointer\n        * Coveralls: https://coveralls.io/r/stefankoegl/python-json-pointer\n        ",
        "home_page": "https://github.com/stefankoegl/python-json-pointer",
        "author": "Stefan Kögl",
        "author_email": "stefan@skoegl.net",
        "license": "Modified BSD License",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Environment :: Console",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: BSD License",
          "Operating System :: OS Independent",
          "Programming Language :: Python",
          "Programming Language :: Python :: 2",
          "Programming Language :: Python :: 2.7",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.4",
          "Programming Language :: Python :: 3.5",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: Implementation :: CPython",
          "Programming Language :: Python :: Implementation :: PyPy",
          "Topic :: Software Development :: Libraries",
          "Topic :: Utilities"
        ],
        "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"
      },
      "metadata_location": "/usr/lib/python3/dist-packages/jsonpointer-2.0.egg-info"
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "jsonschema",
        "version": "3.2.0",
        "platform": [
          "UNKNOWN"
        ],
        "summary": "An implementation of JSON Schema validation for Python",
        "description": "==========\n        jsonschema\n        ==========\n        \n        |PyPI| |Pythons| |Travis| |AppVeyor| |Codecov| |ReadTheDocs|\n        \n        .. |PyPI| image:: https://img.shields.io/pypi/v/jsonschema.svg\n           :alt: PyPI version\n           :target: https://pypi.org/project/jsonschema/\n        \n        .. |Pythons| image:: https://img.shields.io/pypi/pyversions/jsonschema.svg\n           :alt: Supported Python versions\n           :target: https://pypi.org/project/jsonschema/\n        \n        .. |Travis| image:: https://travis-ci.com/Julian/jsonschema.svg?branch=master\n           :alt: Travis build status\n           :target: https://travis-ci.com/Julian/jsonschema\n        \n        .. |AppVeyor| image:: https://ci.appveyor.com/api/projects/status/adtt0aiaihy6muyn/branch/master?svg=true\n           :alt: AppVeyor build status\n           :target: https://ci.appveyor.com/project/Julian/jsonschema\n        \n        .. |Codecov| image:: https://codecov.io/gh/Julian/jsonschema/branch/master/graph/badge.svg\n           :alt: Codecov Code coverage\n           :target: https://codecov.io/gh/Julian/jsonschema\n        \n        .. |ReadTheDocs| image:: https://readthedocs.org/projects/python-jsonschema/badge/?version=stable&style=flat\n           :alt: ReadTheDocs status\n           :target: https://python-jsonschema.readthedocs.io/en/stable/\n        \n        \n        ``jsonschema`` is an implementation of `JSON Schema <https://json-schema.org>`_\n        for Python (supporting 2.7+ including Python 3).\n        \n        .. code-block:: python\n        \n            >>> from jsonschema import validate\n        \n            >>> # A sample schema, like what we'd get from json.load()\n            >>> schema = {\n            ...     \"type\" : \"object\",\n            ...     \"properties\" : {\n            ...         \"price\" : {\"type\" : \"number\"},\n            ...         \"name\" : {\"type\" : \"string\"},\n            ...     },\n            ... }\n        \n            >>> # If no exception is raised by validate(), the instance is valid.\n            >>> validate(instance={\"name\" : \"Eggs\", \"price\" : 34.99}, schema=schema)\n        \n            >>> validate(\n            ...     instance={\"name\" : \"Eggs\", \"price\" : \"Invalid\"}, schema=schema,\n            ... )                                   # doctest: +IGNORE_EXCEPTION_DETAIL\n            Traceback (most recent call last):\n                ...\n            ValidationError: 'Invalid' is not of type 'number'\n        \n        It can also be used from console:\n        \n        .. code-block:: bash\n        \n            $ jsonschema -i sample.json sample.schema\n        \n        Features\n        --------\n        \n        * Full support for\n          `Draft 7 <https://python-jsonschema.readthedocs.io/en/latest/validate/#jsonschema.Draft7Validator>`_,\n          `Draft 6 <https://python-jsonschema.readthedocs.io/en/latest/validate/#jsonschema.Draft6Validator>`_,\n          `Draft 4 <https://python-jsonschema.readthedocs.io/en/latest/validate/#jsonschema.Draft4Validator>`_\n          and\n          `Draft 3 <https://python-jsonschema.readthedocs.io/en/latest/validate/#jsonschema.Draft3Validator>`_\n        \n        * `Lazy validation <https://python-jsonschema.readthedocs.io/en/latest/validate/#jsonschema.IValidator.iter_errors>`_\n          that can iteratively report *all* validation errors.\n        \n        * `Programmatic querying <https://python-jsonschema.readthedocs.io/en/latest/errors/>`_\n          of which properties or items failed validation.\n        \n        \n        Installation\n        ------------\n        \n        ``jsonschema`` is available on `PyPI <https://pypi.org/project/jsonschema/>`_. You can install using `pip <https://pip.pypa.io/en/stable/>`_:\n        \n        .. code-block:: bash\n        \n            $ pip install jsonschema\n        \n        \n        Demo\n        ----\n        \n        Try ``jsonschema`` interactively in this online demo:\n        \n        .. image:: https://user-images.githubusercontent.com/1155573/56745335-8b158a00-6750-11e9-8776-83fa675939c4.png\n            :target: https://notebooks.ai/demo/gh/Julian/jsonschema\n            :alt: Open Live Demo\n        \n        \n        Online demo Notebook will look similar to this:\n        \n        \n        .. image:: https://user-images.githubusercontent.com/1155573/56820861-5c1c1880-6823-11e9-802a-ce01c5ec574f.gif\n            :alt: Open Live Demo\n            :width: 480 px\n        \n        \n        Release Notes\n        -------------\n        \n        v3.1 brings support for ECMA 262 dialect regular expressions\n        throughout schemas, as recommended by the specification. Big\n        thanks to @Zac-HD for authoring support in a new `js-regex\n        <https://pypi.org/project/js-regex/>`_ library.\n        \n        \n        Running the Test Suite\n        ----------------------\n        \n        If you have ``tox`` installed (perhaps via ``pip install tox`` or your\n        package manager), running ``tox`` in the directory of your source\n        checkout will run ``jsonschema``'s test suite on all of the versions\n        of Python ``jsonschema`` supports. If you don't have all of the\n        versions that ``jsonschema`` is tested under, you'll likely want to run\n        using ``tox``'s ``--skip-missing-interpreters`` option.\n        \n        Of course you're also free to just run the tests on a single version with your\n        favorite test runner. The tests live in the ``jsonschema.tests`` package.\n        \n        \n        Benchmarks\n        ----------\n        \n        ``jsonschema``'s benchmarks make use of `pyperf\n        <https://pyperf.readthedocs.io>`_.\n        \n        Running them can be done via ``tox -e perf``, or by invoking the ``pyperf``\n        commands externally (after ensuring that both it and ``jsonschema`` itself are\n        installed)::\n        \n            $ python -m pyperf jsonschema/benchmarks/test_suite.py --hist --output results.json\n        \n        To compare to a previous run, use::\n        \n            $ python -m pyperf compare_to --table reference.json results.json\n        \n        See the ``pyperf`` documentation for more details.\n        \n        \n        Community\n        ---------\n        \n        There's a `mailing list <https://groups.google.com/forum/#!forum/jsonschema>`_\n        for this implementation on Google Groups.\n        \n        Please join, and feel free to send questions there.\n        \n        \n        Contributing\n        ------------\n        \n        I'm Julian Berman.\n        \n        ``jsonschema`` is on `GitHub <https://github.com/Julian/jsonschema>`_.\n        \n        Get in touch, via GitHub or otherwise, if you've got something to contribute,\n        it'd be most welcome!\n        \n        You can also generally find me on Freenode (nick: ``tos9``) in various\n        channels, including ``#python``.\n        \n        If you feel overwhelmingly grateful, you can also woo me with beer money\n        via Google Pay with the email in my GitHub profile.\n        \n        And for companies who appreciate ``jsonschema`` and its continued support\n        and growth, ``jsonschema`` is also now supportable via `TideLift\n        <https://tidelift.com/subscription/pkg/pypi-jsonschema?utm_source=pypi-j\n        sonschema&utm_medium=referral&utm_campaign=readme>`_.\n        ",
        "home_page": "https://github.com/Julian/jsonschema",
        "author": "Julian Berman",
        "author_email": "Julian@GrayVines.com",
        "license": "UNKNOWN",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: MIT License",
          "Operating System :: OS Independent",
          "Programming Language :: Python",
          "Programming Language :: Python :: 2",
          "Programming Language :: Python :: 2.7",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.5",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: Implementation :: CPython",
          "Programming Language :: Python :: Implementation :: PyPy"
        ],
        "requires_dist": [
          "functools32 ; python_version < \"3\"",
          "importlib_metadata ; python_version < \"3.8\"",
          "idna ; extra == \"format\"",
          "jsonpointer>1.13 ; extra == \"format\"",
          "rfc3987 ; extra == \"format\"",
          "strict-rfc3339 ; extra == \"format\"",
          "webcolors ; extra == \"format\"",
          "idna ; extra == \"format_nongpl\"",
          "jsonpointer>1.13 ; extra == \"format_nongpl\"",
          "rfc3339-validator ; extra == \"format_nongpl\"",
          "rfc3986-validator>0.1.0 ; extra == \"format_nongpl\"",
          "webcolors ; extra == \"format_nongpl\""
        ],
        "project_url": [
          "Docs, https://python-jsonschema.readthedocs.io/en/latest/"
        ],
        "provides_extra": [
          "format",
          "format_nongpl"
        ]
      },
      "metadata_location": "/usr/lib/python3/dist-packages/jsonschema-3.2.0.egg-info"
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "keyring",
        "version": "18.0.1",
        "platform": [
          "UNKNOWN"
        ],
        "summary": "Store and access your passwords safely.",
        "description": ".. image:: https://img.shields.io/pypi/v/keyring.svg\n           :target: https://pypi.org/project/keyring\n        \n        .. image:: https://img.shields.io/pypi/pyversions/keyring.svg\n        \n        .. image:: https://img.shields.io/travis/jaraco/keyring/master.svg\n           :target: https://travis-ci.org/jaraco/keyring\n        \n        .. image:: https://img.shields.io/appveyor/ci/jaraco/keyring/master.svg\n           :target: https://ci.appveyor.com/project/jaraco/keyring/branch/master\n        \n        .. image:: https://readthedocs.org/projects/keyring/badge/?version=latest\n           :target: https://keyring.readthedocs.io/en/latest/?badge=latest\n        \n        .. image:: https://tidelift.com/badges/github/jaraco/keyring\n           :target: https://tidelift.com/subscription/pkg/pypi-keyring?utm_source=pypi-keyring&utm_medium=readme\n        \n        =======================================\n        Installing and Using Python Keyring Lib\n        =======================================\n        \n        .. contents:: **Table of Contents**\n        \n        ---------------------------\n        What is Python keyring lib?\n        ---------------------------\n        \n        The Python keyring lib provides an easy way to access the system keyring service\n        from python. It can be used in any application that needs safe password storage.\n        \n        The keyring library is licensed under both the `MIT license\n        <http://opensource.org/licenses/MIT>`_ and the PSF license.\n        \n        These recommended keyring backends are supported by the Python keyring lib:\n        \n        * macOS `Keychain\n          <https://en.wikipedia.org/wiki/Keychain_%28software%29>`_\n        * Freedesktop `Secret Service\n          <http://standards.freedesktop.org/secret-service/>`_ supports many DE including\n          GNOME (requires `secretstorage <https://pypi.python.org/pypi/secretstorage>`_)\n        * KDE4 & KDE5 `KWallet <https://en.wikipedia.org/wiki/KWallet>`_\n          (requires `dbus <https://pypi.python.org/pypi/dbus-python>`_)\n        * `Windows Credential Locker\n          <https://docs.microsoft.com/en-us/windows/uwp/security/credential-locker>`_\n        \n        Other keyring implementations are available through `Third-Party Backends`_.\n        \n        -------------------------\n        Installation Instructions\n        -------------------------\n        \n        Install from Index\n        ==================\n        \n        Install using your favorite installer. For example:\n        \n            $ pip install keyring\n        \n        Linux\n        -----\n        \n        On Linux, the KWallet backend relies on dbus-python_, which does not always\n        install correctly when using pip (compilation is needed). So we recommend\n        that dbus-python is installed as a system package. The same also applies to\n        the Secret Storage backend under Python 2 (under Python 3 a different D-Bus\n        implementation is used).\n        \n        .. _dbus-python: https://gitlab.freedesktop.org/dbus/dbus-python\n        \n        -------------\n        Using Keyring\n        -------------\n        \n        The basic usage of keyring is pretty simple: just call `keyring.set_password`\n        and `keyring.get_password`:\n        \n            >>> import keyring\n            >>> keyring.set_password(\"system\", \"username\", \"password\")\n            >>> keyring.get_password(\"system\", \"username\")\n            'password'\n        \n        Command-line Utility\n        ====================\n        \n        Keyring supplies a ``keyring`` command which is installed with the\n        package. After installing keyring in most environments, the\n        command should be available for setting, getting, and deleting\n        passwords. For more information on usage, invoke with no arguments\n        or with ``--help`` as so::\n        \n            $ keyring --help\n            $ keyring set system username\n            Password for 'username' in 'system':\n            $ keyring get system username\n            password\n        \n        The command-line functionality is also exposed as an executable\n        package, suitable for invoking from Python like so::\n        \n            $ python -m keyring --help\n            $ python -m keyring set system username\n            Password for 'username' in 'system':\n            $ python -m keyring get system username\n            password\n        \n        --------------------------\n        Configure your keyring lib\n        --------------------------\n        \n        The python keyring lib contains implementations for several backends. The\n        library will\n        automatically choose the keyring that is most suitable for your current\n        environment. You can also specify the keyring you like to be used in the\n        config file or by calling the ``set_keyring()`` function.\n        \n        Customize your keyring by config file\n        =====================================\n        \n        This section describes how to change your option in the config file.\n        \n        Config file path\n        ----------------\n        \n        The configuration of the lib is stored in a file named \"keyringrc.cfg\". This\n        file must be found in a platform-specific location. To determine\n        where the config file is stored, run the following::\n        \n            python -c \"import keyring.util.platform_; print(keyring.util.platform_.config_root())\"\n        \n        Some keyrings also store the keyring data in the file system. To determine\n        where the data files are stored, run this command::\n        \n            python -c \"import keyring.util.platform_; print(keyring.util.platform_.data_root())\"\n        \n        \n        Config file content\n        -------------------\n        \n        To specify a keyring backend, set the **default-keyring** option to the\n        full path of the class for that backend, such as\n        ``keyring.backends.OS_X.Keyring``.\n        \n        If **keyring-path** is indicated, keyring will add that path to the Python\n        module search path before loading the backend.\n        \n        For example, this config might be used to load the\n        ``SimpleKeyring`` from the ``simplekeyring`` module in\n        the ``./demo`` directory (not implemented)::\n        \n            [backend]\n            default-keyring=simplekeyring.SimpleKeyring\n            keyring-path=demo\n        \n        Third-Party Backends\n        ====================\n        \n        In addition to the backends provided by the core keyring package for\n        the most common and secure use cases, there\n        are additional keyring backend implementations available for other\n        use-cases. Simply install them to make them available:\n        \n        - `keyrings.cryptfile <https://pypi.org/project/keyrings.cryptfile>`_\n          - Encrypted text file storage.\n        - `keyring_jeepney <https://pypi.org/project/keyring_jeepney>`__ - a\n          pure Python backend using the secret service DBus API for desktop\n          Linux.\n        - `keyrings.alt <https://pypi.org/project/keyrings.alt>`_ - \"alternate\",\n          possibly-insecure backends, originally part of the core package, but\n          available for opt-in.\n        - `gsheet-keyring <https://pypi.org/project/gsheet-keyring>`_\n          - a backend that stores secrets in a Google Sheet. For use with\n          `ipython-secrets <https://pypi.org/project/ipython-secrets>`_.\n        - `bitwarden-keyring <https://pypi.org/project/bitwarden-keyring/0.1.0/>`_\n          - a backend that stores secrets in the `BitWarden <https://bitwarden.com/>`_\n          password manager.\n        \n        \n        Write your own keyring backend\n        ==============================\n        \n        The interface for the backend is defined by ``keyring.backend.KeyringBackend``.\n        Every backend should derive from that base class and define a ``priority``\n        attribute and three functions: ``get_password()``, ``set_password()``, and\n        ``delete_password()``. The ``get_credential()`` function may be defined if\n        desired.\n        \n        See the ``backend`` module for more detail on the interface of this class.\n        \n        Keyring employs entry points to allow any third-party package to implement\n        backends without any modification to the keyring itself. Those interested in\n        creating new backends are encouraged to create new, third-party packages\n        in the ``keyrings`` namespace, in a manner modeled by the `keyrings.alt\n        package <https://github.com/jaraco/keyrings.alt>`_. See the ``setup.py`` file\n        in that project for a hint on how to create the requisite entry points.\n        Backends that prove essential may be considered for inclusion in the core\n        library, although the ease of installing these third-party packages should\n        mean that extensions may be readily available.\n        \n        If you've created an extension for Keyring, please submit a pull request to\n        have your extension mentioned as an available extension.\n        \n        Set the keyring in runtime\n        ==========================\n        \n        Keyring additionally allows programmatic configuration of the\n        backend calling the api ``set_keyring()``. The indicated backend\n        will subsequently be used to store and retrieve passwords.\n        \n        Here's an example demonstrating how to invoke ``set_keyring``::\n        \n            # define a new keyring class which extends the KeyringBackend\n            import keyring.backend\n        \n            class TestKeyring(keyring.backend.KeyringBackend):\n                \"\"\"A test keyring which always outputs same password\n                \"\"\"\n                priority = 1\n        \n                def set_password(self, servicename, username, password):\n                    pass\n        \n                def get_password(self, servicename, username):\n                    return \"password from TestKeyring\"\n        \n                def delete_password(self, servicename, username, password):\n                    pass\n        \n            # set the keyring for keyring lib\n            keyring.set_keyring(TestKeyring())\n        \n            # invoke the keyring lib\n            try:\n                keyring.set_password(\"demo-service\", \"tarek\", \"passexample\")\n                print(\"password stored successfully\")\n            except keyring.errors.PasswordSetError:\n                print(\"failed to store password\")\n            print(\"password\", keyring.get_password(\"demo-service\", \"tarek\"))\n        \n        \n        Using Keyring on Ubuntu 16.04\n        =============================\n        \n        The following is a complete transcript for installing keyring in a\n        virtual environment on Ubuntu 16.04.  No config file was used.::\n        \n          $ sudo apt install python3-venv libdbus-glib-1-dev\n          $ cd /tmp\n          $ pyvenv py3\n          $ source py3/bin/activate\n          $ pip install -U pip\n          $ pip install secretstorage dbus-python\n          $ pip install keyring\n          $ python\n          >>> import keyring\n          >>> keyring.get_keyring()\n          <keyring.backends.SecretService.Keyring object at 0x7f9b9c971ba8>\n          >>> keyring.set_password(\"system\", \"username\", \"password\")\n          >>> keyring.get_password(\"system\", \"username\")\n          'password'\n        \n        \n        Using Keyring on headless Linux systems\n        =======================================\n        \n        It is possible to use the SecretService backend on Linux systems without\n        X11 server available (only D-Bus is required). To do that, you need the\n        following:\n        \n        * Install the `GNOME Keyring`_ daemon.\n        * Start a D-Bus session, e.g. run ``dbus-run-session -- sh`` and run\n          the following commands inside that shell.\n        * Run ``gnome-keyring-daemon`` with ``--unlock`` option. The description of\n          that option says:\n        \n              Read a password from stdin, and use it to unlock the login keyring\n              or create it if the login keyring does not exist.\n        \n          When that command is started, enter your password into stdin and\n          press Ctrl+D (end of data). After that the daemon will fork into\n          background (use ``--foreground`` option to prevent that).\n        * Now you can use the SecretService backend of Keyring. Remember to\n          run your application in the same D-Bus session as the daemon.\n        \n        .. _GNOME Keyring: https://wiki.gnome.org/Projects/GnomeKeyring\n        \n        -----------------------------------------------\n        Integrate the keyring lib with your application\n        -----------------------------------------------\n        \n        API interface\n        =============\n        \n        The keyring lib has a few functions:\n        \n        * ``get_keyring()``: Return the currently-loaded keyring implementation.\n        * ``get_password(service, username)``: Returns the password stored in the\n          active keyring. If the password does not exist, it will return None.\n        * ``get_credential(service, username)``: Return a credential object stored\n          in the active keyring. This object contains at least ``username`` and\n          ``password`` attributes for the specified service, where the returned\n          ``username`` may be different from the argument.\n        * ``set_password(service, username, password)``: Store the password in the\n          keyring.\n        * ``delete_password(service, username)``: Delete the password stored in\n          keyring. If the password does not exist, it will raise an exception.\n        \n        In all cases, the parameters (``service``, ``username``, ``password``)\n        should be Unicode text. On Python 2, these parameters are accepted as\n        simple ``str`` in the default encoding as they will be implicitly\n        decoded to text. Some backends may accept ``bytes`` for these parameters,\n        but such usage is discouraged.\n        \n        \n        Exceptions\n        ==========\n        \n        The keyring lib raises following exceptions:\n        \n        * ``keyring.errors.KeyringError``: Base Error class for all exceptions in keyring lib.\n        * ``keyring.errors.InitError``: Raised when the keyring can't be initialized.\n        * ``keyring.errors.PasswordSetError``: Raise when password can't be set in the keyring.\n        * ``keyring.errors.PasswordDeleteError``: Raised when the password can't be deleted in the keyring.\n        \n        ------------\n        Get involved\n        ------------\n        \n        Python keyring lib is an open community project and highly welcomes new\n        contributors.\n        \n        * Repository: https://github.com/jaraco/keyring/\n        * Bug Tracker: https://github.com/jaraco/keyring/issues/\n        * Mailing list: http://groups.google.com/group/python-keyring\n        \n        Security Contact\n        ================\n        \n        If you wish to report a security vulnerability, the public disclosure\n        of which may exacerbate the risk, please\n        `Contact Tidelift security <https://tidelift.com/security>`_,\n        which will coordinate the fix and disclosure privately.\n        \n        Making Releases\n        ===============\n        \n        This project makes use of automated releases via Travis-CI. The\n        simple workflow is to tag a commit and push it to Github. If it\n        passes tests on a late Python version, it will be automatically\n        deployed to PyPI.\n        \n        Other things to consider when making a release:\n        \n         - first ensure that tests pass (preferably on Windows and Linux)\n         - check that the changelog is current for the intended release\n        \n        Running Tests\n        =============\n        \n        Tests are `continuously run <https://travis-ci.org/#!/jaraco/keyring>`_ using\n        Travis-CI.\n        \n        To run the tests yourself, you'll want keyring installed to some environment\n        in which it can be tested. Recommended technique is described below.\n        \n        Using tox\n        ---------\n        \n        Keyring prefers use of `tox <https://pypi.org/project/tox>`_ to run tests.\n        Simply install and invoke ``tox``.\n        \n        This technique is the one used by the Travis-CI script.\n        \n        ----------\n        Background\n        ----------\n        \n        The project was based on Tarek Ziade's idea in `this post`_. Kang Zhang\n        initially carried it out as a `Google Summer of Code`_ project, and Tarek\n        mentored Kang on this project.\n        \n        .. _this post: http://tarekziade.wordpress.com/2009/03/27/pycon-hallway-session-1-a-keyring-library-for-python/\n        .. _Google Summer of Code: http://socghop.appspot.com/\n        \n        \n        .. image:: https://badges.gitter.im/jaraco/keyring.svg\n           :alt: Join the chat at https://gitter.im/jaraco/keyring\n           :target: https://gitter.im/jaraco/keyring?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge\n        ",
        "home_page": "https://github.com/jaraco/keyring",
        "author": "Kang Zhang",
        "author_email": "jobo.zh@gmail.com",
        "maintainer": "Jason R. Coombs",
        "maintainer_email": "jaraco@jaraco.com",
        "license": "UNKNOWN",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: MIT License",
          "License :: OSI Approved :: Python Software Foundation License",
          "License :: OSI Approved :: MIT License",
          "Programming Language :: Python :: 2.7",
          "Programming Language :: Python :: 3.3",
          "Programming Language :: Python :: 3.4",
          "Programming Language :: Python :: 3.5",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7"
        ],
        "requires_dist": [
          "secretstorage<3 ; (sys_platform == \"linux2\" or sys_platform == \"linux\") and python_version < \"3.5\"",
          "secretstorage ; sys_platform == \"linux\" and python_version >= \"3.5\"",
          "pywin32-ctypes!=0.1.0,!=0.1.1 ; sys_platform == \"win32\"",
          "jaraco.packaging>=3.2 ; extra == \"docs\"",
          "rst.linker>=1.9 ; extra == \"docs\"",
          "sphinx ; extra == \"docs\"",
          "pytest!=3.7.3,>=3.5 ; extra == \"testing\"",
          "pytest-checkdocs ; extra == \"testing\"",
          "pytest-flake8 ; extra == \"testing\""
        ],
        "requires_python": ">=2.7",
        "provides_extra": [
          "docs",
          "testing"
        ]
      },
      "metadata_location": "/usr/lib/python3/dist-packages/keyring-18.0.1.egg-info"
    },
    {
      "metadata": {
        "metadata_version": "1.0",
        "name": "language-selector",
        "version": "0.1",
        "platform": [
          "UNKNOWN"
        ],
        "summary": "UNKNOWN",
        "description": "UNKNOWN",
        "home_page": "UNKNOWN",
        "author": "UNKNOWN",
        "author_email": "UNKNOWN",
        "license": "UNKNOWN"
      },
      "metadata_location": "/usr/lib/python3/dist-packages/language_selector-0.1.egg-info"
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "launchpadlib",
        "version": "1.10.13",
        "platform": [
          "UNKNOWN"
        ],
        "summary": "Script Launchpad through its web services interfaces.  Officially supported.",
        "description": "..\n            This file is part of launchpadlib.\n        \n            launchpadlib is free software: you can redistribute it and/or modify it\n            under the terms of the GNU Lesser General Public License as published by\n            the Free Software Foundation, version 3 of the License.\n        \n            launchpadlib is distributed in the hope that it will be useful, but\n            WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n            or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public\n            License for more details.\n        \n            You should have received a copy of the GNU Lesser General Public License\n            along with launchpadlib.  If not, see <http://www.gnu.org/licenses/>.\n        \n        launchpadlib\n        ************\n        \n        See https://help.launchpad.net/API/launchpadlib .\n        \n        \n        =====================\n        NEWS for launchpadlib\n        =====================\n        \n        1.10.13 (2020-04-19)\n        ====================\n        - Fix test runs under sudo.\n        \n        1.10.12 (2020-04-17)\n        ====================\n        - Postpone keyring.errors import in the same way that we postpone importing\n          keyring itself.\n        \n        1.10.11 (2020-04-14)\n        ====================\n        - Don't store credentials or open a browser window when running under sudo.\n          [bug=1825014,1862948]\n        - Fall back to in-memory credentials store if no keyring backend is\n          available.  [bug=1864204]\n        \n        1.10.10 (2020-02-04)\n        ====================\n        - Fix AccessToken.from_string crash on Python 3.8.  [bug=1861873]\n        \n        1.10.9 (2019-11-28)\n        ===================\n        - Explicitly install version.txt; launchpadlib requires it.\n        \n        1.10.8 (2019-11-26)\n        ===================\n        - Squash a deprecation warning on Python >= 3.7 in\n          launchpadlib.testing.launchpad.\n        - Switch from buildout to tox.\n        - Weaken hosted-files test slightly to avoid problems with zope.publisher >=\n          4.2.2.\n        \n        1.10.7 (2019-05-22)\n        ===================\n        - Change 'dev' URLs from launchpad.dev to launchpad.test.\n        \n        1.10.6 (2018-03-08)\n        ===================\n        - Fix saving of credentials in python3 with gnome-keyring.  [bug=1685962]\n        \n        1.10.5 (2017-02-02)\n        ===================\n        - Fix AccessToken.from_string crash on Python 3.  [bug=1471927]\n        - Fix fallback if authorizing a token with a browser raises webbrowser.Error.\n        - Stop introduction.txt doctest from writing to $HOME.\n        \n        1.10.4 (2016-07-12)\n        ===================\n        - Fix _bad_oauth_token crash on Python 3.  [bug=1471894]\n        - Time out make_end_user_authorize_token after 15 minutes.\n        - Ignore PendingDeprecationWarning from lazr.restfulclient.  [bug=1473577]\n        - Ask forgiveness rather than permission when creating cache directories.\n        - Fix browser token authorization on OS X.  [bug=1516080]\n        \n        1.10.3 (2014-12-05)\n        ===================\n        - Port to Python3.\n        - Detect proxies from the environment by default.\n        \n        1.10.2 (2012-07-05)\n        ===================\n        - Typo in the doctest fix, discovered when trying to integrate with launchpad\n          itself. [bug=1020667]\n        \n        1.10.1 (2012-07-04)\n        ===================\n        - Fix a doctest in introduction.txt so that the test suite runs with\n          python-2.7 (note the doctests only run when running integrated with\n          launchpad's test suite itself). [bug=1020667]\n        \n        1.10.0 (2012-06-19)\n        ===================\n        - Add environment variable, LP_DISABLE_SSL_CERTIFICATE_VALIDATION, to\n          disable SSL certificate checks.  Most useful when testing against\n          development servers.\n        \n        1.9.12 (2011-12-05)\n        ===================\n        - Move keyring base64 encoding to KeyringCredential and be more\n          defensive about decoding.  [bug=900307]\n        \n        1.9.11 (2011-11-21)\n        ===================\n        - 1.9.10 was a bad release due to incomplete NEWS entries.\n        \n        - Add fake Launchpad web service for unit test.\n        \n        - Improve HACKING documentation.\n        \n        - Improve launchpadlib directory discovery on Windows.\n        \n        - Added script to delete spurious bugtasks or split a bugtask from a bug.\n        \n        - Properly handle Unicode passwords if returned by the keyring.\n        \n        - Base 64 encode serialized credentials before putting in keyring/wallet.\n        \n        1.9.10 (2011-11-21)\n        ===================\n        - Base 64 encode serialized credentials before putting in keyring/wallet.\n        \n        1.9.9 (2011-07-27)\n        ==================\n        \n        - Fix a failing test for lazr.restfulclient 0.12.0.\n        \n        1.9.8 (2011-02-28)\n        ==================\n        \n        - Detect the error Launchpad sends when it doesn't recognize an access\n          token, and get a new token.\n        \n        1.9.7 (2011-02-15)\n        ==================\n        \n        - Slightly tweaked the behavior of EDGE_SERVICE_ROOT, and improved tests.\n        \n        1.9.6 (2011-02-14)\n        ==================\n        \n        - Added EDGE_SERVICE_ROOT and the 'edge' alias back, though they both\n          operate on production behind the scenes. Using the 'edge' alias will\n          cause a deprecation warning.\n        \n        1.9.5 (2011-02-08)\n        ==================\n        \n        - Fixed a bug that prevented the deprecated get_token_and_login code\n          from working, and that required that users of get_token_and_login\n          get a new token on every usage.\n        \n        1.9.4 (2011-01-18)\n        ==================\n        \n        - Removed references to the 'edge' service root, which is being phased out.\n        \n        - Fixed a minor bug in the upload_release_tarball contrib script which\n          was causing tarballs to be uploaded with the wrong media type.\n        \n        - The XSLT stylesheet for converting the Launchpad WADL into HTML\n          documentation has been moved back into Launchpad.\n        \n        1.9.3 (2011-01-10)\n        ==================\n        \n        - The keyring package import is now delayed until the keyring needs to be\n          accessed.  This reduces launchapdlib users' exposure to unintended side\n          effects of importing keyring (KWallet authorization dialogs and the\n          registration of a SIGCHLD handler).\n        \n        1.9.2 (2011-01-07)\n        ==================\n        \n        - Added a missing import.\n        \n        1.9.1 (2011-01-06)\n        ==================\n        \n        - Corrected a test failure.\n        \n        1.9.0 (2011-01-05)\n        ==================\n        \n        - When an authorization token expires or becomes invalid, attempt to\n          acquire a new one, even in the middle of a session, rather than\n          crashing.\n        \n        - The HTML generated by wadl-to-refhtml.xsl now validates.\n        \n        - Most of the helper login methods have been deprecated. There are now\n          only two helper methods:\n        \n          * Launchpad.login_anonymously, for anonymous credential-free access.\n          * Launchpad.login_with, for programs that need a credential.\n        \n        \n        1.8.0 (2010-11-15)\n        ==================\n        \n        - Store authorization tokens in the Gnome keyring or KDE wallet, when\n          available. The credentials_file parameter of Launchpad.login_with() is now\n          ignored.\n        \n        - By default, Launchpad.login_with() now asks Launchpad for\n          desktop-wide integration. This removes the need for each individual\n          application to get its own OAuth token.\n        \n        1.7.0 (2010-09-23)\n        ==================\n        \n        - Removed \"fake Launchpad browser\" code that didn't work and was\n          misleading developers.\n        \n        - Added support for http://qastaging.launchpad.net by adding\n          astaging to the uris.\n        \n        1.6.5 (2010-08-23)\n        ==================\n        \n        - Make launchpadlib compatible with the latest lazr.restfulclient.\n        \n        1.6.4 (2010-08-18)\n        ==================\n        \n        - Test fixes.\n        \n        1.6.3 (2010-08-12)\n        ==================\n        \n        - Instead of making the end-user hit Enter after authorizing an\n          application to access their Launchpad account, launchpadlib will\n          automatically poll Launchpad until the user makes a decision.\n        \n        - launchpadlib now raises a more helpful exception when the end-user\n          explicitly denies access to a launchpadlib application.\n        \n        - Improved the XSLT stylesheet to reflect Launchpad's more complex\n          top-level structure. [bug=286941]\n        \n        - Test fixes. [bug=488448,616055]\n        \n        1.6.2 (2010-06-21)\n        ==================\n        \n        - Extended the optimization from version 1.6.1 to apply to Launchpad's\n          top-level collection of people.\n        \n        1.6.1 (2010-06-16)\n        ==================\n        \n        - Added an optimization that lets launchpadlib avoid making an HTTP\n          request in some situations.\n        \n        1.6.0 (2010-04-07)\n        ==================\n        \n        - Fixed a test to work against the latest version of Launchpad.\n        \n        1.5.8 (2010-03-25)\n        ==================\n        \n        - Use version 1.0 of the Launchpad web service by default.\n        \n        1.5.7 (2010-03-16)\n        ==================\n        \n        - Send a Referer header whenever making requests to the Launchpad\n          website (as opposed to the web service) to avoid falling afoul of\n          new cross-site-request-forgery countermeasures.\n        \n        1.5.6 (2010-03-04)\n        ==================\n        \n        - Fixed a minor bug when using login_with() to access a version of the\n          Launchpad web service other than the default.\n        \n        - Added a check to catch old client code that would cause newer\n          versions of launchpadlib to make nonsensical requests to\n          https://api.launchpad.dev/beta/beta/, and raise a helpful exception\n          telling the developer how to fix it.\n        \n        1.5.5\n        =====\n        \n        - Added the ability to access different versions of the Launchpad web\n          service.\n        \n        1.5.4 (2009-12-17)\n        ==================\n        \n        - Made it easy to get anonymous access to a Launchpad instance.\n        \n        - Made it easy to plug in different clients that take the user's\n          Launchpad login and password for purposes of authorizing a request\n          token. The most secure technique is still the default: to open the\n          user's web browser to the appropriate Launchpad page.\n        \n        - Introduced a command-line script bin/launchpad-credentials-console,\n          which takes the user's Launchpad login and password, and authorizes\n          a request token on their behalf.\n        \n        - Introduced a command-line script bin/launchpad-request-token, which\n          creates a request token on any Launchpad installation and dumps the\n          JSON description of that token to standard output.\n        \n        - Shorthand service names like 'edge' should now be respected\n          everywhere in launchpadlib.\n        \n        1.5.3 (2009-10-22)\n        ==================\n        \n        - Moved some more code from launchpadlib into the more generic\n          lazr.restfulclient.\n        \n        1.5.2 (2009-10-01)\n        ==================\n        \n        - Added a number of new sample scripts from elsewhere.\n        \n        - Added a reference to the production Launchpad instance.\n        \n        - Made it easier to specify a Launchpad instance to run against.\n        \n        1.5.1 (2009-07-16)\n        ==================\n        \n        - Added a sample script for uploading a release tarball to Launchpad.\n        \n        1.5.0 (2009-07-09)\n        ==================\n        \n        - Most of launchpadlib's code has been moved to the generic\n          lazr.restfulclient library. launchpadlib now contains only code\n          specific to Launchpad. There should be no changes in functionality.\n        \n        - Moved bootstrap.py into the top-level directory. Having it in a\n          subdirectory with a top-level symlink was breaking installation on\n          Windows.\n        \n        - The notice to the end-user (that we're opening their web\n          browser) is now better formatted.\n        \n        1.0.1 (2009-05-30)\n        ==================\n        \n        - Correct tests for new launchpad cache behavior in librarian\n        \n        - Remove build dependency on setuptools_bzr because it was causing bzr to be\n          downloaded during installation of the package, which was unnecessary and\n          annoying.\n        \n        1.0 (2009-03-24)\n        ================\n        \n        - Initial release on PyPI\n        ",
        "home_page": "https://help.launchpad.net/API/launchpadlib",
        "download_url": "https://launchpad.net/launchpadlib/+download",
        "author": "The Launchpad developers",
        "author_email": "launchpadlib@lists.launchpad.net",
        "maintainer": "LAZR Developers",
        "maintainer_email": "lazr-developers@lists.launchpad.net",
        "license": "LGPL v3",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: GNU Library or Lesser General Public License (LGPL)",
          "Operating System :: OS Independent",
          "Programming Language :: Python",
          "Programming Language :: Python :: 2",
          "Programming Language :: Python :: 2.7",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.5",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8"
        ],
        "requires_dist": [
          "httplib2",
          "keyring",
          "lazr.restfulclient>=0.9.19",
          "lazr.uri",
          "setuptools",
          "six",
          "testresources",
          "wadllib",
          "Sphinx ; extra == \"docs\"",
          "mock ; (python_version < \"3\") and extra == \"test\""
        ],
        "provides_extra": [
          "docs",
          "test"
        ]
      },
      "metadata_location": "/usr/lib/python3/dist-packages/launchpadlib-1.10.13.egg-info"
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "lazr.restfulclient",
        "version": "0.14.2",
        "platform": [
          "UNKNOWN"
        ],
        "summary": "A programmable client library that takes advantage of the commonalities among",
        "description": "..\n            This file is part of lazr.restfulclient.\n        \n            lazr.restfulclient is free software: you can redistribute it and/or modify it\n            under the terms of the GNU Lesser General Public License as published by\n            the Free Software Foundation, version 3 of the License.\n        \n            lazr.restfulclient is distributed in the hope that it will be useful, but\n            WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n            or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public\n            License for more details.\n        \n            You should have received a copy of the GNU Lesser General Public License\n            along with lazr.restfulclient.  If not, see <http://www.gnu.org/licenses/>.\n        \n        LAZR restfulclient\n        ******************\n        \n        A programmable client library that takes advantage of the commonalities among\n        lazr.restful web services to provide added functionality on top of wadllib.\n        \n        Please see https://dev.launchpad.net/LazrStyleGuide and\n        https://dev.launchpad.net/Hacking for how to develop in this\n        package.\n        \n        .. toctree::\n           :glob:\n        \n           toplevel\n           collections\n           entries\n           operations\n           hosted-files\n           caching\n           authorizer.standalone\n           retry.standalone\n           NEWS\n        \n        .. _Sphinx: http://sphinx.pocoo.org/\n        .. _Table of contents: http://sphinx.pocoo.org/concepts.html#the-toc-tree\n        \n        Importable\n        ==========\n        \n        The lazr.restfulclient package is importable, and has a version number.\n        \n            >>> import lazr.restfulclient\n            >>> print 'VERSION:', lazr.restfulclient.__version__\n            VERSION: ...\n        \n        ===========================\n        NEWS for lazr.restfulclient\n        ===========================\n        \n        0.14.2 (2018-11-17)\n        ===================\n        \n          - Fix compatibility with httplib2 0.12.0 for Python 3.  [bug=1803754]\n          - Really fix compatibility with httplib2 < 0.9.\n          - Fix compatibility with httplib2 0.9 for Python 3.\n          - Require httplib >= 0.7.7 for Python 3.\n        \n        0.14.1 (2018-11-16)\n        ===================\n        \n          - Add compatibility with httplib2 0.12.0.  [bug=1803558]\n        \n        0.14.0 (2018-05-08)\n        ===================\n        \n          - Switch from buildout to tox.\n          - Port from oauth to oauthlib.  Some tests still need to use oauth until\n            lazr.authentication is ported.  [bug=1672458]\n          - Use the distro module rather than platform.linux_distribution, since the\n            latter is deprecated in Python 3.5 and will be removed in 3.7.\n            [bug=1473577]\n        \n        0.13.5 (2017-09-04)\n        ===================\n        \n          - Fix bytes vs. unicode in json.loads calls.  [bug=1403524]\n          - Decode header before comparison.  [bug=1414075]\n          - Fix urllib unquote imports.  [bug=1414055]\n          - Fix urllib urlencode imports.  [bug=1425609]\n          - Tolerate httplib2 versions earlier than 0.9 again.\n          - Fix handling of 304 responses with an empty body on Python 3.\n            [bug=1714960]\n        \n        0.13.4 (2014-12-05)\n        ===================\n        \n          - Port to python3.\n          - Support proxy settings from environment by default.\n        \n        0.13.3 (2013-03-22)\n        ===================\n        \n          - Fall back to httplib2's default certificate path if the\n            Debian/Ubuntu one doesn't exist. The default bundle might work,\n            but a path that doesn't exist is never going to. New httplib2\n            bundles contain the required CA certs.\n        \n        0.13.2 (2012-12-06)\n        ===================\n        \n          - lazr.restfulclient is almost exclusively used with launchpad.net,\n            but httplib2's cert bundle doesn't include launchpad's CA. Therefore\n            with the default setup launchpadlib doesn't work unless cert checking\n            is disabled. This is mitigated by the fact that Ubuntu carries a patch\n            to httplib2 to make it use the system CA certs. This release makes that\n            the default approach in lazr.restfulclient so that launchpad.net can be\n            used by anyone with the Debian/Ubuntu CA certs path\n            (/etc/ssl/certs/ca-certificates.crt), regardless of whether they are\n            using Ubuntu's patched version of httplib2. Any platforms that don't have\n            that path remain broken.\n        \n        0.13.1 (2012-09-26)\n        ===================\n        \n          - Named POST operations may result in a resource moving to a new location.\n            Detect the redirect and reload the resource from its new URL.\n        \n        0.13.0 (2012-06-19)\n        ===================\n        \n          - Add environment variable, LP_DISABLE_SSL_CERTIFICATE_VALIDATION, to\n            disable SSL certificate checks.  Most useful when testing against\n            development servers.\n        \n        0.12.3 (2012-05-17)\n        ===================\n        \n          - Implement the mocked out authorizeRequest for the BasicHttpAuthorizer\n            object.\n        \n        0.12.2 (2012-04-16)\n        ===================\n        \n          - Fix ServiceRoot.load() so that it properly handles relative URLs\n            in a way that doesn't break subsequent API calls (bug 681767).\n        \n        0.12.1 (2012-03-28)\n        ===================\n        \n          - Made the cache safe for use by concurrent threads and processes.\n        \n        0.12.0 (2011-06-30)\n        ===================\n        \n          - Give a more useful AttributeError\n        \n        0.11.2 (2011-02-03)\n        ===================\n        \n         - The 'web_link' parameter now shows up in lp_attributes, not\n           lp_entries.\n        \n        0.11.1 (2010-11-04)\n        ===================\n        \n         - Restored compatibility with Python 2.4.\n        \n        0.11.0 (2010-10-28)\n        ===================\n        \n         - Make it possibly to specify an \"application name\" separate from the\n           OAuth consumer key. If present, the application name is used in the\n           User-Agent header; otherwise, the OAuth consumer key is used.\n        \n         - Add a \"system-wide consumer\" which can be used to authorize a\n           user's entire account to use a web service, rather than doing it\n           one application at a time.\n        \n        0.10.0 (2010-08-12)\n        ===================\n        \n         - Add compatibility with lazr.restful 0.11.0\n        \n        0.9.21 (2010-07-19)\n        ===================\n        \n         - Ensure that all JSON representations are converted to Unicode.\n        \n         - Restore the old behavior of CollectionWithKeyBasedLookup, which is\n           less efficient but easier to understand. That is, the following\n           code will work as it did in 0.9.17, performing the lookup\n           immediately and raising a KeyError if the object doesn't exist on\n           the server side.\n        \n            service.collection['key']\n        \n           The more efficient behavior (which doesn't perform the lookup until\n           you actually need the object) is still available, but you have to\n           write this code instead:\n        \n            service.collection('key')\n        \n         - Exceptional conditions will now raise an appropriate subclass of\n           HTTPError instead of always raising HTTPError.\n        \n         - Credential files are now created as being user-readable only. (In\n           launchpadlib, they were created using the default umask and then\n           made user-readable with chmod.)\n        \n        0.9.20 (2010-06-25)\n        ===================\n        \n         - It's now possible to pass a relative URL (relative to the versioned\n           service root) into load().\n        \n        0.9.19 (2010-06-21)\n        ===================\n        \n         - When the representation of a resource, as retrieved from the\n           server, is of a different type than expected, the server value now\n           takes precedence. This means that, in rare situations, a resource\n           may start out presumed to be of one type, and change its\n           capabilities once its representation is fetched from the server.\n        \n        0.9.18 (2010-06-16)\n        ===================\n        \n         - Made it possible to avoid fetching a representation of every single\n           object looked up from a CollectionWithKeyBasedLookup (by defining\n           .collection_of on the class), potentially improving script\n           performance.\n        \n        0.9.17 (2010-05-10)\n        ===================\n        \n         - Switched back to asking for compression using the standard\n           Accept-Encoding header. Using the TE header has never worked in a\n           real situation due to HTTP intermediaries.\n        \n        0.9.16 (2010-05-03)\n        ===================\n        \n         - If a server returns a 502 or 503 error code, lazr.restfulclient\n           will retry its request a configurable number of times in hopes that\n           the error is transient.\n        \n         - It's now possible to invoke lazr.restful destructor methods, with\n           the lp_delete() method.\n        \n        0.9.15 (2010-04-27)\n        ====================\n        \n         - Clients will no longer fetch a representation of a collection\n           before invoking a named operation on the collection.\n        \n        0.9.14 (2010-04-15)\n        ===================\n        \n         - Clients now send a useful and somewhat customizable User-Agent\n           string.\n        \n         - Added a workaround for a bug in httplib2.\n        \n         - Removed the software dependency on lazr.restful except when running\n           the full test suite. (The standalone_test test suite tests basic\n           functionality of lazr.restfulclient to make sure the code base\n           doesn't fundamentally depend on lazr.restful.)\n        \n        0.9.13 (2010-03-24)\n        ===================\n        \n        - Removed some no-longer-needed compatibility code for buggy\n          servers, and fixed the tests to work with the new release of simplejson.\n        \n        - The fix in 0.9.11 to avoid errors on eCryptfs filesystems wasn't\n          strict enough. The maximum filename length is now 143 characters.\n        \n        0.9.12 (2010-03-09)\n        ===================\n        \n        - Fixed a bug that prevented a unicode string from being used as a\n          cache filename.\n        \n        0.9.11 (2010-02-11)\n        ===================\n        \n        - If a lazr.restful web service publishes multiple versions, you can\n          now specify which version to use in a separate constructor argument,\n          rather than sticking it on to the end of the service root.\n        - Filenames in the cache will never be longer than 150 characters,\n          to avoid errors on eCryptfs filesystems.\n        - Added a proof-of-concept test for OAuth-signed anonymous access.\n        - Fixed comparisons of entries and hosted files with None.\n        \n        0.9.10 (2009-10-23)\n        ===================\n        \n        - lazr.restfulclient now requests the correct WADL media type.\n        - Made HTTPError strings more verbose.\n        - Implemented the equality operator for entry and hosted-file resources.\n        - Resume setting the 'credentials' attribute on ServerRoot to avoid\n          breaking compatibility with launchpadlib.\n        \n        0.9.9 (2009-10-07)\n        ==================\n        \n        - The WSGI authentication middleware has been moved from lazr.restful\n          to the new lazr.authentication library, and lazr.restfulclient now\n          uses the new library.\n        \n        0.9.8 (2009-10-06)\n        ==================\n        \n        - Added support for OAuth.\n        \n        0.9.7 (2009-09-30)\n        ==================\n        \n        - Added support for HTTP Basic Auth.\n        \n        0.9.6 (2009-09-16)\n        ==================\n        \n        - Made compatible with lazr.restful 0.9.6.\n        \n        0.9.5 (2009-08-28)\n        ==================\n        \n        - Removed debugging code.\n        \n        0.9.4 (2009-08-26)\n        ==================\n        \n        - Removed unnecessary build dependencies.\n        \n        - Updated tests for newer version of simplejson.\n        \n        - Made tests less fragile by cleaning up lazr.restful example filemanager\n          between tests.\n        \n        - normalized output of simplejson to unicode.\n        \n        0.9.3 (2009-08-05)\n        ==================\n        \n        Removed a sys.path hack from setup.py.\n        \n        0.9.2 (2009-07-16)\n        ==================\n        \n        - Fields that can contain binary data are no longer run through\n          simplejson.dumps().\n        \n        - For fields that can take on a limited set of values, you can now get\n          a list of possible values.\n        \n        0.9.1 (2009-07-13)\n        ==================\n        \n        - The client now knows to look for multipart/form-data representations\n          and will create them as appropriate. The upshot of this is that you\n          can now send binary data when invoking named operations that will\n          accept binary data.\n        \n        \n        0.9 (2009-04-29)\n        ================\n        \n        - Initial public release\n        ",
        "home_page": "https://launchpad.net/lazr.restfulclient",
        "download_url": "https://launchpad.net/lazr.restfulclient/+download",
        "maintainer": "LAZR Developers",
        "maintainer_email": "lazr-developers@lists.launchpad.net",
        "license": "LGPL v3",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: GNU Library or Lesser General Public License (LGPL)",
          "Operating System :: OS Independent",
          "Programming Language :: Python",
          "Programming Language :: Python :: 2",
          "Programming Language :: Python :: 3"
        ],
        "requires_dist": [
          "httplib2 ; python_version < \"3\"",
          "httplib2>=0.7.7 ; python_version >= \"3\"",
          "Sphinx ; extra == \"docs\"",
          "fixtures>=1.3.0 ; extra == \"test\"",
          "lazr.authentication ; extra == \"test\"",
          "lazr.restful>=0.11.0 ; extra == \"test\"",
          "oauth ; extra == \"test\"",
          "testtools ; extra == \"test\"",
          "wsgi_intercept ; extra == \"test\"",
          "zope.testrunner ; extra == \"test\"",
          "mock ; (python_version < \"3\") and extra == \"test\""
        ],
        "provides_extra": [
          "docs",
          "test"
        ]
      },
      "metadata_location": "/usr/lib/python3/dist-packages/lazr.restfulclient-0.14.2.egg-info"
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "lazr.uri",
        "version": "1.0.3",
        "platform": [
          "UNKNOWN"
        ],
        "summary": "A self-contained, easily reusable library for parsing, manipulating,",
        "description": "..\n            This file is part of lazr.uri.\n        \n            lazr.uri is free software: you can redistribute it and/or modify it\n            under the terms of the GNU Lesser General Public License as published by\n            the Free Software Foundation, version 3 of the License.\n        \n            lazr.uri is distributed in the hope that it will be useful, but\n            WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n            or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public\n            License for more details.\n        \n            You should have received a copy of the GNU Lesser General Public License\n            along with lazr.uri.  If not, see <http://www.gnu.org/licenses/>.\n        \n        lazr.uri\n        ********\n        \n        The lazr.uri package includes code for parsing and dealing with URIs.\n        \n            >>> import lazr.uri\n            >>> print('VERSION:', lazr.uri.__version__)\n            VERSION: ...\n        \n        =============\n        The URI class\n        =============\n        \n            >>> from lazr.uri import URI\n            >>> uri1 = URI('http://localhost/foo/bar?123')\n            >>> uri2 = URI('http://localhost/foo/bar/baz')\n            >>> uri1.contains(uri2)\n            True\n        \n        These next two are equivalent, so the answer should be True, even through\n        the \"outside\" one is shorter than the \"inside\" one.\n        \n            >>> uri1 = URI('http://localhost/foo/bar/')\n            >>> uri2 = URI('http://localhost/foo/bar')\n            >>> uri1.contains(uri2)\n            True\n        \n        The next two are exactly the same.  We consider a url to be inside itself.\n        \n            >>> uri1 = URI('http://localhost/foo/bar/')\n            >>> uri2 = URI('http://localhost/foo/bar/')\n            >>> uri1.contains(uri2)\n            True\n        \n        In the next case, the string of url2 starts with the string of url1.  But,\n        because url2 continues within the same path step, url2 is not inside url1.\n        \n            >>> uri1 = URI('http://localhost/foo/ba')\n            >>> uri2 = URI('http://localhost/foo/bar')\n            >>> uri1.contains(uri2)\n            False\n        \n        Here, url2 is url1 plus an extra path step.  So, url2 is inside url1.\n        \n            >>> uri1 = URI('http://localhost/foo/bar/')\n            >>> uri2 = URI('http://localhost/foo/bar/baz')\n            >>> uri1.contains(uri2)\n            True\n        \n        Once the URI is parsed, its parts are accessible.\n        \n            >>> uri = URI('https://fish.tree:8666/blee/blah')\n            >>> uri.scheme\n            'https'\n            >>> uri.host\n            'fish.tree'\n            >>> uri.port\n            '8666'\n            >>> uri.authority\n            'fish.tree:8666'\n            >>> uri.path\n            '/blee/blah'\n        \n            >>> uri = URI('https://localhost/blee/blah')\n            >>> uri.scheme\n            'https'\n            >>> uri.host\n            'localhost'\n            >>> uri.port is None\n            True\n            >>> uri.authority\n            'localhost'\n            >>> uri.path\n            '/blee/blah'\n        \n        The grammar from RFC 3986 does not allow for square brackets in the\n        query component, but Section 3.4 does say how such delimeter\n        characters should be handled if found in the component.\n        \n            >>> uri = URI('http://www.apple.com/store?delivery=[slow]#horse+cart')\n            >>> uri.scheme\n            'http'\n            >>> uri.host\n            'www.apple.com'\n            >>> uri.port is None\n            True\n            >>> uri.path\n            '/store'\n            >>> uri.query\n            'delivery=[slow]'\n            >>> uri.fragment\n            'horse+cart'\n        \n        ====================\n        Finding URIs in Text\n        ====================\n        \n        lazr.uri also knows how to retrieve a list of URIs from a block of\n        text.  This is intended for uses like finding bug tracker URIs or\n        similar.\n        \n        The find_uris_in_text() function returns an iterator that yields URI\n        objects for each URI found in the text.  Note that the returned URIs\n        have been canonicalised by the URI class:\n        \n          >>> from lazr.uri import find_uris_in_text\n          >>> text = '''\n          ... A list of URIs:\n          ...  * http://localhost/a/b\n          ...  * http://launchpad.net\n          ...  * MAILTO:joe@example.com\n          ...  * xmpp:fred@example.org\n          ...  * http://bazaar.launchpad.net/%7ename12/firefox/foo\n          ...  * http://somewhere.in/time?track=[02]#wasted-years\n          ... '''\n        \n          >>> for uri in find_uris_in_text(text):\n          ...     print(uri)\n          http://localhost/a/b\n          http://launchpad.net/\n          mailto:joe@example.com\n          xmpp:fred@example.org\n          http://bazaar.launchpad.net/~name12/firefox/foo\n          http://somewhere.in/time?track=[02]#wasted-years\n        \n        ===============\n        Other Documents\n        ===============\n        \n        .. toctree::\n           :glob:\n        \n           *\n           docs/*\n        \n        =================\n        NEWS for lazr.uri\n        =================\n        \n        1.0.3 (2012-01-18)\n        ==================\n        \n        - Add compatibility with Python 3 (Thomas Kluyver).\n        \n        1.0.1 (2009-06-01)\n        ==================\n        \n        - Eliminate dependency on setuptools_bzr so sdists do not bring bzr ini, among\n          others.\n        \n        1.0 (2009-03-23)\n        ================\n        \n        - Initial release on PyPI\n        ",
        "home_page": "https://launchpad.net/lazr.uri",
        "download_url": "https://launchpad.net/lazr.uri/+download",
        "maintainer": "LAZR Developers",
        "maintainer_email": "lazr-developers@lists.launchpad.net",
        "license": "LGPL v3",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: GNU Library or Lesser General Public License (LGPL)",
          "Operating System :: OS Independent",
          "Programming Language :: Python",
          "Programming Language :: Python :: 2",
          "Programming Language :: Python :: 3"
        ],
        "requires_dist": [
          "Sphinx ; extra == \"docs\"",
          "z3c.recipe.sphinxdoc ; extra == \"docs\""
        ],
        "provides_extra": [
          "docs"
        ]
      },
      "metadata_location": "/usr/lib/python3/dist-packages/lazr.uri-1.0.3.egg-info"
    },
    {
      "metadata": {
        "metadata_version": "1.1",
        "name": "more-itertools",
        "version": "4.2.0",
        "platform": [
          "UNKNOWN"
        ],
        "summary": "More routines for operating on iterables, beyond itertools",
        "description": "==============\n        More Itertools\n        ==============\n        \n        .. image:: https://coveralls.io/repos/github/erikrose/more-itertools/badge.svg?branch=master\n          :target: https://coveralls.io/github/erikrose/more-itertools?branch=master\n        \n        Python's ``itertools`` library is a gem - you can compose elegant solutions\n        for a variety of problems with the functions it provides. In ``more-itertools``\n        we collect additional building blocks, recipes, and routines for working with\n        Python iterables.\n        \n        Getting started\n        ===============\n        \n        To get started, install the library with `pip <https://pip.pypa.io/en/stable/>`_:\n        \n        .. code-block:: shell\n        \n            pip install more-itertools\n        \n        The recipes from the `itertools docs <https://docs.python.org/3/library/itertools.html#itertools-recipes>`_\n        are included in the top-level package:\n        \n        .. code-block:: python\n        \n            >>> from more_itertools import flatten\n            >>> iterable = [(0, 1), (2, 3)]\n            >>> list(flatten(iterable))\n            [0, 1, 2, 3]\n        \n        Several new recipes are available as well:\n        \n        .. code-block:: python\n        \n            >>> from more_itertools import chunked\n            >>> iterable = [0, 1, 2, 3, 4, 5, 6, 7, 8]\n            >>> list(chunked(iterable, 3))\n            [[0, 1, 2], [3, 4, 5], [6, 7, 8]]\n        \n            >>> from more_itertools import spy\n            >>> iterable = (x * x for x in range(1, 6))\n            >>> head, iterable = spy(iterable, n=3)\n            >>> list(head)\n            [1, 4, 9]\n            >>> list(iterable)\n            [1, 4, 9, 16, 25]\n        \n        \n        \n        For the full listing of functions, see the `API documentation <https://more-itertools.readthedocs.io/en/latest/api.html>`_.\n        \n        Development\n        ===========\n        \n        ``more-itertools`` is maintained by `@erikrose <https://github.com/erikrose>`_\n        and `@bbayles <https://github.com/bbayles>`_, with help from `many others <https://github.com/erikrose/more-itertools/graphs/contributors>`_.\n        If you have a problem or suggestion, please file a bug or pull request in this\n        repository. Thanks for contributing!\n        \n        \n        Version History\n        ===============\n        \n        \n        \n        4.2.0\n        -----\n        \n        * New itertools:\n            * map_reduce (thanks to pylang)\n            * prepend (from the `Python 3.7 docs <https://docs.python.org/3.7/library/itertools.html#itertools-recipes>`_)\n        \n        * Improvements to existing itertools:\n            * bucket now complies with PEP 479 (thanks to irmen)\n        \n        * Other changes:\n           * Python 3.7 is now supported (thanks to irmen)\n           * Python 3.3 is no longer supported\n           * The test suite no longer requires third-party modules to run\n           * The API docs now include links to source code\n        \n        4.1.0\n        -----\n        \n        * New itertools:\n            * split_at (thanks to michael-celani)\n            * circular_shifts (thanks to hiqua)\n            * make_decorator - see the blog post `Yo, I heard you like decorators <https://sites.google.com/site/bbayles/index/decorator_factory>`_\n              for a tour (thanks to pylang)\n            * always_reversible (thanks to michael-celani)\n            * nth_combination (from the `Python 3.7 docs <https://docs.python.org/3.7/library/itertools.html#itertools-recipes>`_)\n        \n        * Improvements to existing itertools:\n            * seekable now has an ``elements`` method to return cached items.\n            * The performance tradeoffs between roundrobin and\n              interleave_longest are now documented (thanks michael-celani,\n              pylang, and MSeifert04)\n        \n        4.0.1\n        -----\n        \n        * No code changes - this release fixes how the docs display on PyPI.\n        \n        4.0.0\n        -----\n        \n        * New itertools:\n            * consecutive_groups (Based on the example in the `Python 2.4 docs <https://docs.python.org/release/2.4.4/lib/itertools-example.html>`_)\n            * seekable (If you're looking for how to \"reset\" an iterator,\n              you're in luck!)\n            * exactly_n (thanks to michael-celani)\n            * run_length.encode and run_length.decode\n            * difference\n        \n        * Improvements to existing itertools:\n            * The number of items between filler elements in intersperse can\n              now be specified (thanks to pylang)\n            * distinct_permutations and peekable got some minor\n              adjustments (thanks to MSeifert04)\n            * always_iterable now returns an iterator object. It also now\n              allows different types to be considered iterable (thanks to jaraco)\n            * bucket can now limit the keys it stores in memory\n            * one now allows for custom exceptions (thanks to kalekundert)\n        \n        * Other changes:\n            * A few typos were fixed (thanks to EdwardBetts)\n            * All tests can now be run with ``python setup.py test``\n        \n        The major version update is due to the change in the return value of always_iterable.\n        It now always returns iterator objects:\n        \n        .. code-block:: python\n        \n            >>> from more_itertools import always_iterable\n            # Non-iterable objects are wrapped with iter(tuple(obj))\n            >>> always_iterable(12345)\n            <tuple_iterator object at 0x7fb24c9488d0>\n            >>> list(always_iterable(12345))\n            [12345]\n            # Iterable objects are wrapped with iter()\n            >>> always_iterable([1, 2, 3, 4, 5])\n            <list_iterator object at 0x7fb24c948c50>\n        \n        3.2.0\n        -----\n        \n        * New itertools:\n            * lstrip, rstrip, and strip\n              (thanks to MSeifert04 and pylang)\n            * islice_extended\n        * Improvements to existing itertools:\n            * Some bugs with slicing peekable-wrapped iterables were fixed\n        \n        3.1.0\n        -----\n        \n        * New itertools:\n            * numeric_range (Thanks to BebeSparkelSparkel and MSeifert04)\n            * count_cycle (Thanks to BebeSparkelSparkel)\n            * locate (Thanks to pylang and MSeifert04)\n        * Improvements to existing itertools:\n            * A few itertools are now slightly faster due to some function\n              optimizations. (Thanks to MSeifert04)\n        * The docs have been substantially revised with installation notes,\n          categories for library functions, links, and more. (Thanks to pylang)\n        \n        \n        3.0.0\n        -----\n        \n        * Removed itertools:\n            * ``context`` has been removed due to a design flaw - see below for\n              replacement options. (thanks to NeilGirdhar)\n        * Improvements to existing itertools:\n            * ``side_effect`` now supports ``before`` and ``after`` keyword\n              arguments. (Thanks to yardsale8)\n        * PyPy and PyPy3 are now supported.\n        \n        The major version change is due to the removal of the ``context`` function.\n        Replace it with standard ``with`` statement context management:\n        \n        .. code-block:: python\n        \n            # Don't use context() anymore\n            file_obj = StringIO()\n            consume(print(x, file=f) for f in context(file_obj) for x in u'123')\n        \n            # Use a with statement instead\n            file_obj = StringIO()\n            with file_obj as f:\n                consume(print(x, file=f) for x in u'123')\n        \n        2.6.0\n        -----\n        \n        * New itertools:\n            * ``adjacent`` and ``groupby_transform`` (Thanks to diazona)\n            * ``always_iterable`` (Thanks to jaraco)\n            * (Removed in 3.0.0) ``context`` (Thanks to yardsale8)\n            * ``divide`` (Thanks to mozbhearsum)\n        * Improvements to existing itertools:\n            * ``ilen`` is now slightly faster. (Thanks to wbolster)\n            * ``peekable`` can now prepend items to an iterable. (Thanks to diazona)\n        \n        2.5.0\n        -----\n        \n        * New itertools:\n            * ``distribute`` (Thanks to mozbhearsum and coady)\n            * ``sort_together`` (Thanks to clintval)\n            * ``stagger`` and ``zip_offset`` (Thanks to joshbode)\n            * ``padded``\n        * Improvements to existing itertools:\n            * ``peekable`` now handles negative indexes and slices with negative\n              components properly.\n            * ``intersperse`` is now slightly faster. (Thanks to pylang)\n            * ``windowed`` now accepts a ``step`` keyword argument.\n              (Thanks to pylang)\n        * Python 3.6 is now supported.\n        \n        2.4.1\n        -----\n        \n        * Move docs 100% to readthedocs.io.\n        \n        2.4\n        -----\n        \n        * New itertools:\n            * ``accumulate``, ``all_equal``, ``first_true``, ``partition``, and\n              ``tail`` from the itertools documentation.\n            * ``bucket`` (Thanks to Rosuav and cvrebert)\n            * ``collapse`` (Thanks to abarnet)\n            * ``interleave`` and ``interleave_longest`` (Thanks to abarnet)\n            * ``side_effect`` (Thanks to nvie)\n            * ``sliced`` (Thanks to j4mie and coady)\n            * ``split_before`` and ``split_after`` (Thanks to astronouth7303)\n            * ``spy`` (Thanks to themiurgo and mathieulongtin)\n        * Improvements to existing itertools:\n            * ``chunked`` is now simpler and more friendly to garbage collection.\n              (Contributed by coady, with thanks to piskvorky)\n            * ``collate`` now delegates to ``heapq.merge`` when possible.\n              (Thanks to kmike and julianpistorius)\n            * ``peekable``-wrapped iterables are now indexable and sliceable.\n              Iterating through ``peekable``-wrapped iterables is also faster.\n            * ``one`` and ``unique_to_each`` have been simplified.\n              (Thanks to coady)\n        \n        \n        2.3\n        -----\n        \n        * Added ``one`` from ``jaraco.util.itertools``. (Thanks, jaraco!)\n        * Added ``distinct_permutations`` and ``unique_to_each``. (Contributed by\n          bbayles)\n        * Added ``windowed``. (Contributed by bbayles, with thanks to buchanae,\n          jaraco, and abarnert)\n        * Simplified the implementation of ``chunked``. (Thanks, nvie!)\n        * Python 3.5 is now supported. Python 2.6 is no longer supported.\n        * Python 3 is now supported directly; there is no 2to3 step.\n        \n        2.2\n        -----\n        \n        * Added ``iterate`` and ``with_iter``. (Thanks, abarnert!)\n        \n        2.1\n        -----\n        \n        * Added (tested!) implementations of the recipes from the itertools\n          documentation. (Thanks, Chris Lonnen!)\n        * Added ``ilen``. (Thanks for the inspiration, Matt Basta!)\n        \n        2.0\n        -----\n        \n        * ``chunked`` now returns lists rather than tuples. After all, they're\n          homogeneous. This slightly backward-incompatible change is the reason for\n          the major version bump.\n        * Added ``@consumer``.\n        * Improved test machinery.\n        \n        1.1\n        -----\n        \n        * Added ``first`` function.\n        * Added Python 3 support.\n        * Added a default arg to ``peekable.peek()``.\n        * Noted how to easily test whether a peekable iterator is exhausted.\n        * Rewrote documentation.\n        \n        1.0\n        -----\n        \n        * Initial release, with ``collate``, ``peekable``, and ``chunked``. Could\n          really use better docs.",
        "keywords": [
          "itertools",
          "iterator",
          "iteration",
          "filter",
          "peek",
          "peekable",
          "collate",
          "chunk",
          "chunked"
        ],
        "home_page": "https://github.com/erikrose/more-itertools",
        "author": "Erik Rose",
        "author_email": "erikrose@grinchcentral.com",
        "license": "MIT",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Intended Audience :: Developers",
          "Natural Language :: English",
          "License :: OSI Approved :: MIT License",
          "Programming Language :: Python :: 2",
          "Programming Language :: Python :: 2.7",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.2",
          "Programming Language :: Python :: 3.3",
          "Programming Language :: Python :: 3.4",
          "Programming Language :: Python :: 3.5",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "Topic :: Software Development :: Libraries"
        ]
      },
      "metadata_location": "/usr/lib/python3/dist-packages/more_itertools-4.2.0.egg-info"
    },
    {
      "metadata": {
        "metadata_version": "1.1",
        "name": "netifaces",
        "version": "0.10.4",
        "platform": [
          "UNKNOWN"
        ],
        "summary": "Portable network interface information.",
        "description": "netifaces 0.10.4\n        ================\n        \n        .. image:: https://drone.io/bitbucket.org/al45tair/netifaces/status.png\n           :target: https://drone.io/bitbucket.org/al45tair/netifaces/latest\n           :alt: Build Status\n        \n        1. What is this?\n        ----------------\n        \n        It's been annoying me for some time that there's no easy way to get the\n        address(es) of the machine's network interfaces from Python.  There is\n        a good reason for this difficulty, which is that it is virtually impossible\n        to do so in a portable manner.  However, it seems to me that there should\n        be a package you can easy_install that will take care of working out the\n        details of doing so on the machine you're using, then you can get on with\n        writing Python code without concerning yourself with the nitty gritty of\n        system-dependent low-level networking APIs.\n        \n        This package attempts to solve that problem.\n        \n        2. How do I use it?\n        -------------------\n        \n        First you need to install it, which you can do by typing::\n        \n          tar xvzf netifaces-0.10.4.tar.gz\n          cd netifaces-0.10.4\n          python setup.py install\n        \n        Once that's done, you'll need to start Python and do something like the\n        following::\n        \n        >>> import netifaces\n        \n        Then if you enter\n        \n        >>> netifaces.interfaces()\n        ['lo0', 'gif0', 'stf0', 'en0', 'en1', 'fw0']\n        \n        you'll see the list of interface identifiers for your machine.\n        \n        You can ask for the addresses of a particular interface by doing\n        \n        >>> netifaces.ifaddresses('lo0')\n        {18: [{'addr': ''}], 2: [{'peer': '127.0.0.1', 'netmask': '255.0.0.0', 'addr': '127.0.0.1'}], 30: [{'peer': '::1', 'netmask': 'ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff', 'addr': '::1'}, {'peer': '', 'netmask': 'ffff:ffff:ffff:ffff::', 'addr': 'fe80::1%lo0'}]}\n        \n        Hmmmm.  That result looks a bit cryptic; let's break it apart and explain\n        what each piece means.  It returned a dictionary, so let's look there first::\n        \n          { 18: [...], 2: [...], 30: [...] }\n        \n        Each of the numbers refers to a particular address family.  In this case, we\n        have three address families listed; on my system, 18 is ``AF_LINK`` (which means\n        the link layer interface, e.g. Ethernet), 2 is ``AF_INET`` (normal Internet\n        addresses), and 30 is ``AF_INET6`` (IPv6).\n        \n        But wait!  Don't use these numbers in your code.  The numeric values here are\n        system dependent; fortunately, I thought of that when writing netifaces, so\n        the module declares a range of values that you might need.  e.g.\n        \n        >>> netifaces.AF_LINK\n        18\n        \n        Again, on your system, the number may be different.\n        \n        So, what we've established is that the dictionary that's returned has one\n        entry for each address family for which this interface has an address.  Let's\n        take a look at the ``AF_INET`` addresses now:\n        \n        >>> addrs = netifaces.ifaddresses('lo0')\n        >>> addrs[netifaces.AF_INET]\n        [{'peer': '127.0.0.1', 'netmask': '255.0.0.0', 'addr': '127.0.0.1'}]\n        \n        You might be wondering why this value is a list.  The reason is that it's\n        possible for an interface to have more than one address, even within the\n        same family.  I'll say that again: *you can have more than one address of\n        the same type associated with each interface*.\n        \n        *Asking for \"the\" address of a particular interface doesn't make sense.*\n        \n        Right, so, we can see that this particular interface only has one address,\n        and, because it's a loopback interface, it's point-to-point and therefore\n        has a *peer* address rather than a broadcast address.\n        \n        Let's look at a more interesting interface.\n        \n        >>> addrs = netifaces.ifaddresses('en0')\n        >>> addrs[netifaces.AF_INET]\n        [{'broadcast': '10.15.255.255', 'netmask': '255.240.0.0', 'addr': '10.0.1.4'}, {'broadcast': '192.168.0.255', 'addr': '192.168.0.47'}]\n        \n        This interface has two addresses (see, I told you...)  Both of them are\n        regular IPv4 addresses, although in one case the netmask has been changed\n        from its default.  The netmask *may not* appear on your system if it's set\n        to the default for the address range.\n        \n        Because this interface isn't point-to-point, it also has broadcast addresses.\n        \n        Now, say we want, instead of the IP addresses, to get the MAC address; that\n        is, the hardware address of the Ethernet adapter running this interface.  We\n        can do\n        \n        >>> addrs[netifaces.AF_LINK]\n        [{'addr': '00:12:34:56:78:9a'}]\n        \n        Note that this may not be available on platforms without getifaddrs(), unless\n        they happen to implement ``SIOCGIFHWADDR``.  Note also that you just get the\n        address; it's unlikely that you'll see anything else with an ``AF_LINK`` address.\n        Oh, and don't assume that all ``AF_LINK`` addresses are Ethernet; you might, for\n        instance, be on a Mac, in which case:\n        \n        >>> addrs = netifaces.ifaddresses('fw0')\n        >>> addrs[netifaces.AF_LINK]\n        [{'addr': '00:12:34:56:78:9a:bc:de'}]\n        \n        No, that isn't an exceptionally long Ethernet MAC address---it's a FireWire\n        address.\n        \n        As of version 0.10.0, you can also obtain a list of gateways on your\n        machine:\n        \n        >>> netifaces.gateways()\n        {2: [('10.0.1.1', 'en0', True), ('10.2.1.1', 'en1', False)], 30: [('fe80::1', 'en0', True)], 'default': { 2: ('10.0.1.1', 'en0'), 30: ('fe80::1', 'en0') }}\n        \n        This dictionary is keyed on address family---in this case, ``AF_INET``---and\n        each entry is a list of gateways as ``(address, interface, is_default)`` tuples.\n        Notice that here we have two separate gateways for IPv4 (``AF_INET``); some\n        operating systems support configurations like this and can either route packets\n        based on their source, or based on administratively configured routing tables.\n        \n        For convenience, we also allow you to index the dictionary with the special\n        value ``'default'``, which returns a dictionary mapping address families to the\n        default gateway in each case.  Thus you can get the default IPv4 gateway with\n        \n        >>> gws = netifaces.gateways()\n        >>> gws['default'][netifaces.AF_INET]\n        ('10.0.1.1', 'en0')\n        \n        Do note that there may be no default gateway for any given address family;\n        this is currently very common for IPv6 and much less common for IPv4 but it\n        can happen even for ``AF_INET``.\n        \n        BTW, if you're trying to configure your machine to have multiple gateways for\n        the same address family, it's a very good idea to check the documentation for\n        your operating system *very* carefully, as some systems become extremely\n        confused or route packets in a non-obvious manner.\n        \n        I'm very interested in hearing from anyone (on any platform) for whom the\n        ``gateways()`` method doesn't produce the expected results.  It's quite\n        complicated extracting this information from the operating system (whichever\n        operating system we're talking about), and so I expect there's at least one\n        system out there where this just won't work.\n        \n        3. This is great!  What platforms does it work on?\n        --------------------------------------------------\n        \n        It gets regular testing on OS X, Linux and Windows.  It has also been used\n        successfully on Solaris, and it's expected to work properly on other UNIX-like\n        systems as well.  If you are running something that is not supported, and\n        wish to contribute a patch, please use BitBucket to send a pull request.\n        \n        4. What license is this under?\n        ------------------------------\n        \n        It's an MIT-style license.  Here goes:\n        \n        Copyright (c) 2007-2014 Alastair Houghton\n        \n        Permission is hereby granted, free of charge, to any person obtaining a copy\n        of this software and associated documentation files (the \"Software\"), to deal\n        in the Software without restriction, including without limitation the rights\n        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n        copies of the Software, and to permit persons to whom the Software is\n        furnished to do so, subject to the following conditions:\n        \n        The above copyright notice and this permission notice shall be included in all\n        copies or substantial portions of the Software.\n        \n        THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n        SOFTWARE.\n        \n        5. Why the jump to 0.10.0?\n        --------------------------\n        \n        Because someone released a fork of netifaces with the version 0.9.0.\n        Hopefully skipping the version number should remove any confusion.  In \n        addition starting with 0.10.0 Python 3 is now supported and other \n        features/bugfixes have been included as well.  See the CHANGELOG for a\n        more complete list of changes.\n        ",
        "home_page": "https://bitbucket.org/al45tair/netifaces",
        "author": "Alastair Houghton",
        "author_email": "alastair@alastairs-place.net",
        "license": "MIT License",
        "classifier": [
          "Development Status :: 4 - Beta",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: MIT License",
          "Topic :: System :: Networking",
          "Programming Language :: Python",
          "Programming Language :: Python :: 2",
          "Programming Language :: Python :: 2.5",
          "Programming Language :: Python :: 2.6",
          "Programming Language :: Python :: 2.7",
          "Programming Language :: Python :: 3"
        ]
      },
      "metadata_location": "/usr/lib/python3/dist-packages/netifaces-0.10.4.egg-info"
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "oauthlib",
        "version": "3.1.0",
        "platform": [
          "any"
        ],
        "summary": "A generic, spec-compliant, thorough implementation of the OAuth request-signing logic",
        "description": "OAuthLib - Python Framework for OAuth1 & OAuth2\n        ===============================================\n        \n        *A generic, spec-compliant, thorough implementation of the OAuth request-signing\n        logic for Python 2.7 and 3.4+.*\n        \n        .. image:: https://travis-ci.org/oauthlib/oauthlib.svg?branch=master\n          :target: https://travis-ci.org/oauthlib/oauthlib\n          :alt: Travis\n        .. image:: https://coveralls.io/repos/oauthlib/oauthlib/badge.svg?branch=master\n          :target: https://coveralls.io/r/oauthlib/oauthlib\n          :alt: Coveralls\n        .. image:: https://img.shields.io/pypi/pyversions/oauthlib.svg\n          :target: https://pypi.org/project/oauthlib/\n          :alt: Download from PyPI\n        .. image:: https://img.shields.io/pypi/l/oauthlib.svg\n          :target: https://pypi.org/project/oauthlib/\n          :alt: License\n        .. image:: https://app.fossa.io/api/projects/git%2Bgithub.com%2Foauthlib%2Foauthlib.svg?type=shield\n           :target: https://app.fossa.io/projects/git%2Bgithub.com%2Foauthlib%2Foauthlib?ref=badge_shield\n           :alt: FOSSA Status\n        .. image:: https://img.shields.io/readthedocs/oauthlib.svg\n          :target: https://oauthlib.readthedocs.io/en/latest/index.html\n          :alt: Read the Docs\n        .. image:: https://badges.gitter.im/oauthlib/oauthlib.svg\n          :target: https://gitter.im/oauthlib/Lobby\n          :alt: Chat on Gitter\n        \n        OAuth often seems complicated and difficult-to-implement. There are several\n        prominent libraries for handling OAuth requests, but they all suffer from one or\n        both of the following:\n        \n        1. They predate the `OAuth 1.0 spec`_, AKA RFC 5849.\n        2. They predate the `OAuth 2.0 spec`_, AKA RFC 6749.\n        3. They assume the usage of a specific HTTP request library.\n        \n        .. _`OAuth 1.0 spec`: https://tools.ietf.org/html/rfc5849\n        .. _`OAuth 2.0 spec`: https://tools.ietf.org/html/rfc6749\n        \n        OAuthLib is a framework which implements the logic of OAuth1 or OAuth2 without\n        assuming a specific HTTP request object or web framework. Use it to graft OAuth\n        client support onto your favorite HTTP library, or provide support onto your\n        favourite web framework. If you're a maintainer of such a library, write a thin\n        veneer on top of OAuthLib and get OAuth support for very little effort.\n        \n        \n        Documentation\n        --------------\n        \n        Full documentation is available on `Read the Docs`_. All contributions are very\n        welcome! The documentation is still quite sparse, please open an issue for what\n        you'd like to know, or discuss it in our `Gitter community`_, or even better, send a\n        pull request!\n        \n        .. _`Gitter community`: https://gitter.im/oauthlib/Lobby\n        .. _`Read the Docs`: https://oauthlib.readthedocs.io/en/latest/index.html\n        \n        Interested in making OAuth requests?\n        ------------------------------------\n        \n        Then you might be more interested in using `requests`_ which has OAuthLib\n        powered OAuth support provided by the `requests-oauthlib`_ library.\n        \n        .. _`requests`: https://github.com/requests/requests\n        .. _`requests-oauthlib`: https://github.com/requests/requests-oauthlib\n        \n        Which web frameworks are supported?\n        -----------------------------------\n        \n        The following packages provide OAuth support using OAuthLib.\n        \n        - For Django there is `django-oauth-toolkit`_, which includes `Django REST framework`_ support.\n        - For Flask there is `flask-oauthlib`_ and `Flask-Dance`_.\n        - For Pyramid there is `pyramid-oauthlib`_.\n        - For Bottle there is `bottle-oauthlib`_.\n        \n        If you have written an OAuthLib package that supports your favorite framework,\n        please open a Pull Request, updating the documentation.\n        \n        .. _`django-oauth-toolkit`: https://github.com/evonove/django-oauth-toolkit\n        .. _`flask-oauthlib`: https://github.com/lepture/flask-oauthlib\n        .. _`Django REST framework`: http://django-rest-framework.org\n        .. _`Flask-Dance`: https://github.com/singingwolfboy/flask-dance\n        .. _`pyramid-oauthlib`: https://github.com/tilgovi/pyramid-oauthlib\n        .. _`bottle-oauthlib`: https://github.com/thomsonreuters/bottle-oauthlib\n        \n        Using OAuthLib? Please get in touch!\n        ------------------------------------\n        Patching OAuth support onto an http request framework? Creating an OAuth\n        provider extension for a web framework? Simply using OAuthLib to Get Things Done\n        or to learn?\n        \n        No matter which we'd love to hear from you in our `Gitter community`_ or if you have\n        anything in particular you would like to have, change or comment on don't\n        hesitate for a second to send a pull request or open an issue. We might be quite\n        busy and therefore slow to reply but we love feedback!\n        \n        Chances are you have run into something annoying that you wish there was\n        documentation for, if you wish to gain eternal fame and glory, and a drink if we\n        have the pleasure to run into eachother, please send a docs pull request =)\n        \n        .. _`Gitter community`: https://gitter.im/oauthlib/Lobby\n        \n        License\n        -------\n        \n        OAuthLib is yours to use and abuse according to the terms of the BSD license.\n        Check the LICENSE file for full details.\n        \n        Credits\n        -------\n        \n        OAuthLib has been started and maintained several years by Idan Gazit and other\n        amazing `AUTHORS`_. Thanks to their wonderful work, the open-source `community`_\n        creation has been possible and the project can stay active and reactive to users\n        requests.\n        \n        \n        .. _`AUTHORS`: https://github.com/oauthlib/oauthlib/blob/master/AUTHORS\n        .. _`community`: https://github.com/oauthlib/\n        \n        Changelog\n        ---------\n        \n        *OAuthLib is in active development, with the core of both OAuth1 and OAuth2\n        completed, for providers as well as clients.* See `supported features`_ for\n        details.\n        \n        .. _`supported features`: https://oauthlib.readthedocs.io/en/latest/feature_matrix.html\n        \n        For a full changelog see ``CHANGELOG.rst``.\n        ",
        "home_page": "https://github.com/oauthlib/oauthlib",
        "author": "The OAuthlib Community",
        "author_email": "idan@gazit.me",
        "maintainer": "Ib Lundgren",
        "maintainer_email": "ib.lundgren@gmail.com",
        "license": "BSD",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Environment :: Web Environment",
          "Intended Audience :: Developers",
          "License :: OSI Approved",
          "License :: OSI Approved :: BSD License",
          "Operating System :: MacOS",
          "Operating System :: POSIX",
          "Operating System :: POSIX :: Linux",
          "Programming Language :: Python",
          "Programming Language :: Python :: 2",
          "Programming Language :: Python :: 2.7",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.4",
          "Programming Language :: Python :: 3.5",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: Implementation",
          "Programming Language :: Python :: Implementation :: CPython",
          "Programming Language :: Python :: Implementation :: PyPy",
          "Topic :: Software Development :: Libraries :: Python Modules"
        ],
        "requires_dist": [
          "cryptography ; extra == \"rsa\"",
          "blinker ; extra == \"signals\"",
          "cryptography ; extra == \"signedtoken\"",
          "pyjwt>=1.0.0 ; extra == \"signedtoken\""
        ],
        "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*",
        "provides_extra": [
          "rsa",
          "signals",
          "signedtoken"
        ]
      },
      "metadata_location": "/usr/lib/python3/dist-packages/oauthlib-3.1.0.egg-info"
    },
    {
      "metadata": {
        "metadata_version": "1.1",
        "name": "pexpect",
        "version": "4.6.0",
        "platform": [
          "UNIX"
        ],
        "summary": "Pexpect allows easy control of interactive console applications.",
        "description": "\n        Pexpect is a pure Python module for spawning child applications; controlling\n        them; and responding to expected patterns in their output. Pexpect works like\n        Don Libes' Expect. Pexpect allows your script to spawn a child application and\n        control it as if a human were typing commands.\n        \n        Pexpect can be used for automating interactive applications such as ssh, ftp,\n        passwd, telnet, etc. It can be used to a automate setup scripts for duplicating\n        software package installations on different servers. It can be used for\n        automated software testing. Pexpect is in the spirit of Don Libes' Expect, but\n        Pexpect is pure Python.\n        \n        The main features of Pexpect require the pty module in the Python standard\n        library, which is only available on Unix-like systems. Some features—waiting\n        for patterns from file descriptors or subprocesses—are also available on\n        Windows.\n        ",
        "home_page": "https://pexpect.readthedocs.io/",
        "author": "Noah Spurrier; Thomas Kluyver; Jeff Quast",
        "author_email": "noah@noah.org, thomas@kluyver.me.uk, contact@jeffquast.com",
        "license": "ISC license",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Environment :: Console",
          "Intended Audience :: Developers",
          "Intended Audience :: System Administrators",
          "License :: OSI Approved :: ISC License (ISCL)",
          "Operating System :: POSIX",
          "Operating System :: MacOS :: MacOS X",
          "Programming Language :: Python",
          "Programming Language :: Python :: 2.7",
          "Programming Language :: Python :: 3",
          "Topic :: Software Development",
          "Topic :: Software Development :: Libraries :: Python Modules",
          "Topic :: Software Development :: Quality Assurance",
          "Topic :: Software Development :: Testing",
          "Topic :: System",
          "Topic :: System :: Archiving :: Packaging",
          "Topic :: System :: Installation/Setup",
          "Topic :: System :: Shells",
          "Topic :: System :: Software Distribution",
          "Topic :: Terminals"
        ]
      },
      "metadata_location": null
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "pyOpenSSL",
        "version": "19.0.0",
        "platform": [
          "UNKNOWN"
        ],
        "summary": "Python wrapper module around the OpenSSL library",
        "description": "========================================================\n        pyOpenSSL -- A Python wrapper around the OpenSSL library\n        ========================================================\n        \n        .. image:: https://readthedocs.org/projects/pyopenssl/badge/?version=stable\n           :target: https://pyopenssl.org/en/stable/\n           :alt: Stable Docs\n        \n        .. image:: https://travis-ci.org/pyca/pyopenssl.svg?branch=master\n           :target: https://travis-ci.org/pyca/pyopenssl\n           :alt: Build status\n        \n        .. image:: https://codecov.io/github/pyca/pyopenssl/branch/master/graph/badge.svg\n           :target: https://codecov.io/github/pyca/pyopenssl\n           :alt: Test coverage\n        \n        **Note:** The Python Cryptographic Authority **strongly suggests** the use of `pyca/cryptography`_\n        where possible. If you are using pyOpenSSL for anything other than making a TLS connection \n        **you should move to cryptography and drop your pyOpenSSL dependency**.\n        \n        High-level wrapper around a subset of the OpenSSL library. Includes\n        \n        * ``SSL.Connection`` objects, wrapping the methods of Python's portable sockets\n        * Callbacks written in Python\n        * Extensive error-handling mechanism, mirroring OpenSSL's error codes\n        \n        ... and much more.\n        \n        You can find more information in the documentation_.\n        Development takes place on GitHub_.\n        \n        \n        Discussion\n        ==========\n        \n        If you run into bugs, you can file them in our `issue tracker`_.\n        \n        We maintain a cryptography-dev_ mailing list for both user and development discussions.\n        \n        You can also join ``#cryptography-dev`` on Freenode to ask questions or get involved.\n        \n        \n        .. _documentation: https://pyopenssl.org/\n        .. _`issue tracker`: https://github.com/pyca/pyopenssl/issues\n        .. _cryptography-dev: https://mail.python.org/mailman/listinfo/cryptography-dev\n        .. _GitHub: https://github.com/pyca/pyopenssl\n        .. _`pyca/cryptography`: https://github.com/pyca/cryptography\n        \n        \n        Release Information\n        ===================\n        \n        19.0.0 (2019-01-21)\n        -------------------\n        \n        \n        Backward-incompatible changes:\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n        \n        - ``X509Store.add_cert`` no longer raises an error if you add a duplicate cert.\n          `#787 <https://github.com/pyca/pyopenssl/pull/787>`_\n        \n        \n        Deprecations:\n        ^^^^^^^^^^^^^\n        \n        *none*\n        \n        \n        Changes:\n        ^^^^^^^^\n        \n        - pyOpenSSL now works with OpenSSL 1.1.1.\n          `#805 <https://github.com/pyca/pyopenssl/pull/805>`_\n        - pyOpenSSL now handles NUL bytes in ``X509Name.get_components()``\n          `#804 <https://github.com/pyca/pyopenssl/pull/804>`_\n        \n        \n        `Full changelog <https://pyopenssl.org/en/stable/changelog.html>`_.\n        \n        ",
        "home_page": "https://pyopenssl.org/",
        "author": "The pyOpenSSL developers",
        "author_email": "cryptography-dev@python.org",
        "maintainer": "Hynek Schlawack",
        "maintainer_email": "hs@ox.cx",
        "license": "Apache License, Version 2.0",
        "classifier": [
          "Development Status :: 6 - Mature",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: Apache Software License",
          "Operating System :: MacOS :: MacOS X",
          "Operating System :: Microsoft :: Windows",
          "Operating System :: POSIX",
          "Programming Language :: Python :: 2",
          "Programming Language :: Python :: 2.7",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.4",
          "Programming Language :: Python :: 3.5",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: Implementation :: CPython",
          "Programming Language :: Python :: Implementation :: PyPy",
          "Topic :: Security :: Cryptography",
          "Topic :: Software Development :: Libraries :: Python Modules",
          "Topic :: System :: Networking"
        ],
        "requires_dist": [
          "sphinx ; extra == \"docs\"",
          "sphinx_rtd_theme ; extra == \"docs\"",
          "flaky ; extra == \"test\"",
          "pretend ; extra == \"test\"",
          "pytest>=3.0.1 ; extra == \"test\""
        ],
        "provides_extra": [
          "docs",
          "test"
        ]
      },
      "metadata_location": "/usr/lib/python3/dist-packages/pyOpenSSL-19.0.0.egg-info"
    },
    {
      "metadata": {
        "metadata_version": "1.2",
        "name": "pyasn1",
        "version": "0.4.2",
        "platform": [
          "any"
        ],
        "summary": "ASN.1 types and codecs",
        "description": "Pure-Python implementation of ASN.1 types and DER/BER/CER codecs (X.208)",
        "home_page": "https://github.com/etingof/pyasn1",
        "author": "Ilya Etingof",
        "author_email": "etingof@gmail.com",
        "maintainer": "Ilya Etingof <etingof@gmail.com>",
        "license": "BSD",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Environment :: Console",
          "Intended Audience :: Developers",
          "Intended Audience :: Education",
          "Intended Audience :: Information Technology",
          "Intended Audience :: System Administrators",
          "Intended Audience :: Telecommunications Industry",
          "License :: OSI Approved :: BSD License",
          "Natural Language :: English",
          "Operating System :: OS Independent",
          "Programming Language :: Python :: 2",
          "Programming Language :: Python :: 2.4",
          "Programming Language :: Python :: 2.5",
          "Programming Language :: Python :: 2.6",
          "Programming Language :: Python :: 2.7",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.2",
          "Programming Language :: Python :: 3.3",
          "Programming Language :: Python :: 3.4",
          "Programming Language :: Python :: 3.5",
          "Programming Language :: Python :: 3.6",
          "Topic :: Communications",
          "Topic :: Software Development :: Libraries :: Python Modules"
        ]
      },
      "metadata_location": "/usr/lib/python3/dist-packages/pyasn1-0.4.2.egg-info"
    },
    {
      "metadata": {
        "metadata_version": "1.1",
        "name": "pyasn1-modules",
        "version": "0.2.1",
        "platform": [
          "any"
        ],
        "summary": "A collection of ASN.1-based protocols modules.",
        "description": "A collection of ASN.1 modules expressed in form of pyasn1 classes. Includes protocols PDUs definition (SNMP, LDAP etc.) and various data structures (X.509, PKCS etc.).",
        "home_page": "https://github.com/etingof/pyasn1-modules",
        "author": "Ilya Etingof <etingof@gmail.com>",
        "author_email": "etingof@gmail.com",
        "license": "BSD",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Environment :: Console",
          "Intended Audience :: Developers",
          "Intended Audience :: Education",
          "Intended Audience :: Information Technology",
          "Intended Audience :: System Administrators",
          "Intended Audience :: Telecommunications Industry",
          "License :: OSI Approved :: BSD License",
          "Natural Language :: English",
          "Operating System :: OS Independent",
          "Programming Language :: Python :: 2",
          "Programming Language :: Python :: 2.4",
          "Programming Language :: Python :: 2.5",
          "Programming Language :: Python :: 2.6",
          "Programming Language :: Python :: 2.7",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.2",
          "Programming Language :: Python :: 3.3",
          "Programming Language :: Python :: 3.4",
          "Programming Language :: Python :: 3.5",
          "Programming Language :: Python :: 3.6",
          "Topic :: Communications",
          "Topic :: System :: Monitoring",
          "Topic :: System :: Networking :: Monitoring",
          "Topic :: Software Development :: Libraries :: Python Modules"
        ]
      },
      "metadata_location": null
    },
    {
      "metadata": {
        "metadata_version": "1.1",
        "name": "pymacaroons",
        "version": "0.13.0",
        "platform": [
          "UNKNOWN"
        ],
        "summary": "Macaroon library for Python",
        "description": "\n        \n        PyMacaroons\n        ===========\n        \n        PyMacaroons is a Python implementation of Macaroons. *They're better than cookies!*\n        \n        Installation\n        ------------\n        \n        Install PyMacaroons by running:\n        \n            pip install pymacaroons\n        \n        Contribute\n        ----------\n        \n        - `Issue Tracker`_\n        - `Source Code`_\n        \n        .. _Issue Tracker: https://github.com/ecordell/pymacaroons/issues\n        .. _Source Code: https://github.com/ecordell/pymacaroons\n        \n        License\n        -------\n        \n        The project is licensed under the MIT license.\n        \n        \n        ",
        "home_page": "https://github.com/ecordell/pymacaroons",
        "author": "Evan Cordell",
        "author_email": "cordell.evan@gmail.com",
        "license": "MIT",
        "classifier": [
          "Development Status :: 4 - Beta",
          "Environment :: Web Environment",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: MIT License",
          "Operating System :: OS Independent",
          "Programming Language :: Python",
          "Programming Language :: Python :: 2",
          "Programming Language :: Python :: 2.6",
          "Programming Language :: Python :: 2.7",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.3",
          "Programming Language :: Python :: 3.4",
          "Programming Language :: Python :: Implementation :: CPython",
          "Programming Language :: Python :: Implementation :: PyPy",
          "Topic :: Internet :: WWW/HTTP",
          "Topic :: Security :: Cryptography",
          "Topic :: Security"
        ]
      },
      "metadata_location": "/usr/lib/python3/dist-packages/pymacaroons-0.13.0.egg-info"
    },
    {
      "metadata": {
        "metadata_version": "1.1",
        "name": "pyrsistent",
        "version": "0.15.5",
        "platform": [
          "UNKNOWN"
        ],
        "summary": "Persistent/Functional/Immutable data structures",
        "description": "Pyrsistent\n        ==========\n        .. image:: https://travis-ci.org/tobgu/pyrsistent.png?branch=master\n            :target: https://travis-ci.org/tobgu/pyrsistent\n        \n        .. image:: https://badge.fury.io/py/pyrsistent.svg\n            :target: https://badge.fury.io/py/pyrsistent\n        \n        .. image:: https://coveralls.io/repos/tobgu/pyrsistent/badge.svg?branch=master&service=github\n            :target: https://coveralls.io/github/tobgu/pyrsistent?branch=master\n        \n        \n        .. _Pyrthon: https://www.github.com/tobgu/pyrthon/\n        \n        Pyrsistent is a number of persistent collections (by some referred to as functional data structures). Persistent in \n        the sense that they are immutable.\n        \n        All methods on a data structure that would normally mutate it instead return a new copy of the structure containing the\n        requested updates. The original structure is left untouched.\n        \n        This will simplify the reasoning about what a program does since no hidden side effects ever can take place to these\n        data structures. You can rest assured that the object you hold a reference to will remain the same throughout its\n        lifetime and need not worry that somewhere five stack levels below you in the darkest corner of your application\n        someone has decided to remove that element that you expected to be there.\n        \n        Pyrsistent is influenced by persistent data structures such as those found in the standard library of Clojure. The\n        data structures are designed to share common elements through path copying.\n        It aims at taking these concepts and make them as pythonic as possible so that they can be easily integrated into any python\n        program without hassle.\n        \n        If you want to go all in on persistent data structures and use literal syntax to define them in your code rather\n        than function calls check out Pyrthon_.\n        \n        Examples\n        --------\n        .. _Sequence: collections_\n        .. _Hashable: collections_\n        .. _Mapping: collections_\n        .. _Mappings: collections_\n        .. _Set: collections_\n        .. _collections: https://docs.python.org/3/library/collections.abc.html\n        .. _documentation: http://pyrsistent.readthedocs.org/\n        \n        The collection types and key features currently implemented are:\n        \n        * PVector_, similar to a python list\n        * PMap_, similar to dict\n        * PSet_, similar to set\n        * PRecord_, a PMap on steroids with fixed fields, optional type and invariant checking and much more\n        * PClass_, a Python class fixed fields, optional type and invariant checking and much more\n        * `Checked collections`_, PVector, PMap and PSet with optional type and invariance checks and more\n        * PBag, similar to collections.Counter\n        * PList, a classic singly linked list\n        * PDeque, similar to collections.deque\n        * Immutable object type (immutable) built on the named tuple\n        * freeze_ and thaw_ functions to convert between pythons standard collections and pyrsistent collections.\n        * Flexible transformations_ of arbitrarily complex structures built from PMaps and PVectors.\n        \n        Below are examples of common usage patterns for some of the structures and features. More information and\n        full documentation for all data structures is available in the documentation_.\n        \n        .. _PVector:\n        \n        PVector\n        ~~~~~~~\n        With full support for the Sequence_ protocol PVector is meant as a drop in replacement to the built in list from a readers\n        point of view. Write operations of course differ since no in place mutation is done but naming should be in line\n        with corresponding operations on the built in list.\n        \n        Support for the Hashable_ protocol also means that it can be used as key in Mappings_.\n        \n        Appends are amortized O(1). Random access and insert is log32(n) where n is the size of the vector.\n        \n        .. code:: python\n        \n            >>> from pyrsistent import v, pvector\n        \n            # No mutation of vectors once created, instead they\n            # are \"evolved\" leaving the original untouched\n            >>> v1 = v(1, 2, 3)\n            >>> v2 = v1.append(4)\n            >>> v3 = v2.set(1, 5)\n            >>> v1\n            pvector([1, 2, 3])\n            >>> v2\n            pvector([1, 2, 3, 4])\n            >>> v3\n            pvector([1, 5, 3, 4])\n        \n            # Random access and slicing\n            >>> v3[1]\n            5\n            >>> v3[1:3]\n            pvector([5, 3])\n        \n            # Iteration\n            >>> list(x + 1 for x in v3)\n            [2, 6, 4, 5]\n            >>> pvector(2 * x for x in range(3))\n            pvector([0, 2, 4])\n        \n        .. _PMap:\n        \n        PMap\n        ~~~~\n        With full support for the Mapping_ protocol PMap is meant as a drop in replacement to the built in dict from a readers point\n        of view. Support for the Hashable_ protocol also means that it can be used as key in other Mappings_.\n        \n        Random access and insert is log32(n) where n is the size of the map.\n        \n        .. code:: python\n        \n            >>> from pyrsistent import m, pmap, v\n        \n            # No mutation of maps once created, instead they are\n            # \"evolved\" leaving the original untouched\n            >>> m1 = m(a=1, b=2)\n            >>> m2 = m1.set('c', 3)\n            >>> m3 = m2.set('a', 5)\n            >>> m1\n            pmap({'a': 1, 'b': 2})\n            >>> m2\n            pmap({'a': 1, 'c': 3, 'b': 2})\n            >>> m3\n            pmap({'a': 5, 'c': 3, 'b': 2})\n            >>> m3['a']\n            5\n        \n            # Evolution of nested persistent structures\n            >>> m4 = m(a=5, b=6, c=v(1, 2))\n            >>> m4.transform(('c', 1), 17)\n            pmap({'a': 5, 'c': pvector([1, 17]), 'b': 6})\n            >>> m5 = m(a=1, b=2)\n        \n            # Evolve by merging with other mappings\n            >>> m5.update(m(a=2, c=3), {'a': 17, 'd': 35})\n            pmap({'a': 17, 'c': 3, 'b': 2, 'd': 35})\n            >>> pmap({'x': 1, 'y': 2}) + pmap({'y': 3, 'z': 4})\n            pmap({'y': 3, 'x': 1, 'z': 4})\n        \n            # Dict-like methods to convert to list and iterate\n            >>> m3.items()\n            pvector([('a', 5), ('c', 3), ('b', 2)])\n            >>> list(m3)\n            ['a', 'c', 'b']\n        \n        .. _PSet:\n        \n        PSet\n        ~~~~\n        With full support for the Set_ protocol PSet is meant as a drop in replacement to the built in set from a readers point\n        of view. Support for the Hashable_ protocol also means that it can be used as key in Mappings_.\n        \n        Random access and insert is log32(n) where n is the size of the set.\n        \n        .. code:: python\n        \n            >>> from pyrsistent import s\n        \n            # No mutation of sets once created, you know the story...\n            >>> s1 = s(1, 2, 3, 2)\n            >>> s2 = s1.add(4)\n            >>> s3 = s1.remove(1)\n            >>> s1\n            pset([1, 2, 3])\n            >>> s2\n            pset([1, 2, 3, 4])\n            >>> s3\n            pset([2, 3])\n        \n            # Full support for set operations\n            >>> s1 | s(3, 4, 5)\n            pset([1, 2, 3, 4, 5])\n            >>> s1 & s(3, 4, 5)\n            pset([3])\n            >>> s1 < s2\n            True\n            >>> s1 < s(3, 4, 5)\n            False\n        \n        .. _PRecord:\n        \n        PRecord\n        ~~~~~~~\n        A PRecord is a PMap with a fixed set of specified fields. Records are declared as python classes inheriting\n        from PRecord. Because it is a PMap it has full support for all Mapping methods such as iteration and element\n        access using subscript notation.\n        \n        .. code:: python\n        \n            >>> from pyrsistent import PRecord, field\n            >>> class ARecord(PRecord):\n            ...     x = field()\n            ...\n            >>> r = ARecord(x=3)\n            >>> r\n            ARecord(x=3)\n            >>> r.x\n            3\n            >>> r.set(x=2)\n            ARecord(x=2)\n            >>> r.set(y=2)\n            Traceback (most recent call last):\n            AttributeError: 'y' is not among the specified fields for ARecord\n        \n        Type information\n        ****************\n        It is possible to add type information to the record to enforce type checks. Multiple allowed types can be specified\n        by providing an iterable of types.\n        \n        .. code:: python\n        \n            >>> class BRecord(PRecord):\n            ...     x = field(type=int)\n            ...     y = field(type=(int, type(None)))\n            ...\n            >>> BRecord(x=3, y=None)\n            BRecord(y=None, x=3)\n            >>> BRecord(x=3.0)\n            Traceback (most recent call last):\n            PTypeError: Invalid type for field BRecord.x, was float\n        \n        \n        Custom types (classes) that are iterable should be wrapped in a tuple to prevent their\n        members being added to the set of valid types.  Although Enums in particular are now \n        supported without wrapping, see #83 for more information.\n        \n        Mandatory fields\n        ****************\n        Fields are not mandatory by default but can be specified as such. If fields are missing an\n        *InvariantException* will be thrown which contains information about the missing fields.\n        \n        .. code:: python\n        \n            >>> from pyrsistent import InvariantException\n            >>> class CRecord(PRecord):\n            ...     x = field(mandatory=True)\n            ...\n            >>> r = CRecord(x=3)\n            >>> try:\n            ...    r.discard('x')\n            ... except InvariantException as e:\n            ...    print(e.missing_fields)\n            ...\n            ('CRecord.x',)\n        \n        Invariants\n        **********\n        It is possible to add invariants that must hold when evolving the record. Invariants can be\n        specified on both field and record level. If invariants fail an *InvariantException* will be\n        thrown which contains information about the failing invariants. An invariant function should\n        return a tuple consisting of a boolean that tells if the invariant holds or not and an object\n        describing the invariant. This object can later be used to identify which invariant that failed.\n        \n        The global invariant function is only executed if all field invariants hold.\n        \n        Global invariants are inherited to subclasses.\n        \n        .. code:: python\n        \n            >>> class RestrictedVector(PRecord):\n            ...     __invariant__ = lambda r: (r.y >= r.x, 'x larger than y')\n            ...     x = field(invariant=lambda x: (x > 0, 'x negative'))\n            ...     y = field(invariant=lambda y: (y > 0, 'y negative'))\n            ...\n            >>> r = RestrictedVector(y=3, x=2)\n            >>> try:\n            ...    r.set(x=-1, y=-2)\n            ... except InvariantException as e:\n            ...    print(e.invariant_errors)\n            ...\n            ('y negative', 'x negative')\n            >>> try:\n            ...    r.set(x=2, y=1)\n            ... except InvariantException as e:\n            ...    print(e.invariant_errors)\n            ...\n            ('x larger than y',)\n        \n        Invariants may also contain multiple assertions. For those cases the invariant function should\n        return a tuple of invariant tuples as described above. This structure is reflected in the\n        invariant_errors attribute of the exception which will contain tuples with data from all failed\n        invariants. Eg:\n        \n        .. code:: python\n        \n            >>> class EvenX(PRecord):\n            ...     x = field(invariant=lambda x: ((x > 0, 'x negative'), (x % 2 == 0, 'x odd')))\n            ...\n            >>> try:\n            ...    EvenX(x=-1)\n            ... except InvariantException as e:\n            ...    print(e.invariant_errors)\n            ...\n            (('x negative', 'x odd'),)\n        \n        \n        Factories\n        *********\n        It's possible to specify factory functions for fields. The factory function receives whatever\n        is supplied as field value and the actual returned by the factory is assigned to the field\n        given that any type and invariant checks hold.\n        PRecords have a default factory specified as a static function on the class, create(). It takes\n        a *Mapping* as argument and returns an instance of the specific record.\n        If a record has fields of type PRecord the create() method of that record will\n        be called to create the \"sub record\" if no factory has explicitly been specified to override\n        this behaviour.\n        \n        .. code:: python\n        \n            >>> class DRecord(PRecord):\n            ...     x = field(factory=int)\n            ...\n            >>> class ERecord(PRecord):\n            ...     d = field(type=DRecord)\n            ...\n            >>> ERecord.create({'d': {'x': '1'}})\n            ERecord(d=DRecord(x=1))\n        \n        Collection fields\n        *****************\n        It is also possible to have fields with ``pyrsistent`` collections.\n        \n        .. code:: python\n        \n           >>> from pyrsistent import pset_field, pmap_field, pvector_field\n           >>> class MultiRecord(PRecord):\n           ...     set_of_ints = pset_field(int)\n           ...     map_int_to_str = pmap_field(int, str)\n           ...     vector_of_strs = pvector_field(str)\n           ...\n        \t\n        Serialization\n        *************\n        PRecords support serialization back to dicts. Default serialization will take keys and values\n        \"as is\" and output them into a dict. It is possible to specify custom serialization functions\n        to take care of fields that require special treatment.\n        \n        .. code:: python\n        \n            >>> from datetime import date\n            >>> class Person(PRecord):\n            ...     name = field(type=unicode)\n            ...     birth_date = field(type=date,\n            ...                        serializer=lambda format, d: d.strftime(format['date']))\n            ...\n            >>> john = Person(name=u'John', birth_date=date(1985, 10, 21))\n            >>> john.serialize({'date': '%Y-%m-%d'})\n            {'birth_date': '1985-10-21', 'name': u'John'}\n        \n        \n        .. _instar: https://github.com/boxed/instar/\n        \n        .. _PClass:\n        \n        PClass\n        ~~~~~~\n        A PClass is a python class with a fixed set of specified fields. PClasses are declared as python classes inheriting\n        from PClass. It is defined the same way that PRecords are and behaves like a PRecord in all aspects except that it\n        is not a PMap and hence not a collection but rather a plain Python object.\n        \n        .. code:: python\n        \n            >>> from pyrsistent import PClass, field\n            >>> class AClass(PClass):\n            ...     x = field()\n            ...\n            >>> a = AClass(x=3)\n            >>> a\n            AClass(x=3)\n            >>> a.x\n            3\n        \n        \n        Checked collections\n        ~~~~~~~~~~~~~~~~~~~\n        Checked collections currently come in three flavors: CheckedPVector, CheckedPMap and CheckedPSet.\n        \n        .. code:: python\n        \n            >>> from pyrsistent import CheckedPVector, CheckedPMap, CheckedPSet, thaw\n            >>> class Positives(CheckedPSet):\n            ...     __type__ = (long, int)\n            ...     __invariant__ = lambda n: (n >= 0, 'Negative')\n            ...\n            >>> class Lottery(PRecord):\n            ...     name = field(type=str)\n            ...     numbers = field(type=Positives, invariant=lambda p: (len(p) > 0, 'No numbers'))\n            ...\n            >>> class Lotteries(CheckedPVector):\n            ...     __type__ = Lottery\n            ...\n            >>> class LotteriesByDate(CheckedPMap):\n            ...     __key_type__ = date\n            ...     __value_type__ = Lotteries\n            ...\n            >>> lotteries = LotteriesByDate.create({date(2015, 2, 15): [{'name': 'SuperLotto', 'numbers': {1, 2, 3}},\n            ...                                                         {'name': 'MegaLotto',  'numbers': {4, 5, 6}}],\n            ...                                     date(2015, 2, 16): [{'name': 'SuperLotto', 'numbers': {3, 2, 1}},\n            ...                                                         {'name': 'MegaLotto',  'numbers': {6, 5, 4}}]})\n            >>> lotteries\n            LotteriesByDate({datetime.date(2015, 2, 15): Lotteries([Lottery(numbers=Positives([1, 2, 3]), name='SuperLotto'), Lottery(numbers=Positives([4, 5, 6]), name='MegaLotto')]), datetime.date(2015, 2, 16): Lotteries([Lottery(numbers=Positives([1, 2, 3]), name='SuperLotto'), Lottery(numbers=Positives([4, 5, 6]), name='MegaLotto')])})\n        \n            # The checked versions support all operations that the corresponding\n            # unchecked types do\n            >>> lottery_0215 = lotteries[date(2015, 2, 15)]\n            >>> lottery_0215.transform([0, 'name'], 'SuperDuperLotto')\n            Lotteries([Lottery(numbers=Positives([1, 2, 3]), name='SuperDuperLotto'), Lottery(numbers=Positives([4, 5, 6]), name='MegaLotto')])\n        \n            # But also makes asserts that types and invariants hold\n            >>> lottery_0215.transform([0, 'name'], 999)\n            Traceback (most recent call last):\n            PTypeError: Invalid type for field Lottery.name, was int\n        \n            >>> lottery_0215.transform([0, 'numbers'], set())\n            Traceback (most recent call last):\n            InvariantException: Field invariant failed\n        \n            # They can be converted back to python built ins with either thaw()\n            # or serialize() (which provides possibilities to customize serialization)\n            >>> thaw(lottery_0215)\n            [{'numbers': set([1, 2, 3]), 'name': 'SuperLotto'}, {'numbers': set([4, 5, 6]), 'name': 'MegaLotto'}]\n            >>> lottery_0215.serialize()\n            [{'numbers': set([1, 2, 3]), 'name': 'SuperLotto'}, {'numbers': set([4, 5, 6]), 'name': 'MegaLotto'}]\n        \n        .. _transformations:\n        \n        Transformations\n        ~~~~~~~~~~~~~~~\n        Transformations are inspired by the cool library instar_ for Clojure. They let you evolve PMaps and PVectors\n        with arbitrarily deep/complex nesting using simple syntax and flexible matching syntax.\n        \n        The first argument to transformation is the path that points out the value to transform. The\n        second is the transformation to perform. If the transformation is callable it will be applied\n        to the value(s) matching the path. The path may also contain callables. In that case they are\n        treated as matchers. If the matcher returns True for a specific key it is considered for transformation.\n        \n        .. code:: python\n        \n            # Basic examples\n            >>> from pyrsistent import inc, freeze, thaw, rex, ny, discard\n            >>> v1 = freeze([1, 2, 3, 4, 5])\n            >>> v1.transform([2], inc)\n            pvector([1, 2, 4, 4, 5])\n            >>> v1.transform([lambda ix: 0 < ix < 4], 8)\n            pvector([1, 8, 8, 8, 5])\n            >>> v1.transform([lambda ix, v: ix == 0 or v == 5], 0)\n            pvector([0, 2, 3, 4, 0])\n        \n            # The (a)ny matcher can be used to match anything\n            >>> v1.transform([ny], 8)\n            pvector([8, 8, 8, 8, 8])\n        \n            # Regular expressions can be used for matching\n            >>> scores = freeze({'John': 12, 'Joseph': 34, 'Sara': 23})\n            >>> scores.transform([rex('^Jo')], 0)\n            pmap({'Joseph': 0, 'Sara': 23, 'John': 0})\n        \n            # Transformations can be done on arbitrarily deep structures\n            >>> news_paper = freeze({'articles': [{'author': 'Sara', 'content': 'A short article'},\n            ...                                   {'author': 'Steve', 'content': 'A slightly longer article'}],\n            ...                      'weather': {'temperature': '11C', 'wind': '5m/s'}})\n            >>> short_news = news_paper.transform(['articles', ny, 'content'], lambda c: c[:25] + '...' if len(c) > 25 else c)\n            >>> very_short_news = news_paper.transform(['articles', ny, 'content'], lambda c: c[:15] + '...' if len(c) > 15 else c)\n            >>> very_short_news.articles[0].content\n            'A short article'\n            >>> very_short_news.articles[1].content\n            'A slightly long...'\n        \n            # When nothing has been transformed the original data structure is kept\n            >>> short_news is news_paper\n            True\n            >>> very_short_news is news_paper\n            False\n            >>> very_short_news.articles[0] is news_paper.articles[0]\n            True\n        \n            # There is a special transformation that can be used to discard elements. Also\n            # multiple transformations can be applied in one call\n            >>> thaw(news_paper.transform(['weather'], discard, ['articles', ny, 'content'], discard))\n            {'articles': [{'author': 'Sara'}, {'author': 'Steve'}]}\n        \n        Evolvers\n        ~~~~~~~~\n        PVector, PMap and PSet all have support for a concept dubbed *evolvers*. An evolver acts like a mutable\n        view of the underlying persistent data structure with \"transaction like\" semantics. No updates of the original\n        data structure is ever performed, it is still fully immutable.\n        \n        The evolvers have a very limited API by design to discourage excessive, and inappropriate, usage as that would\n        take us down the mutable road. In principle only basic mutation and element access functions are supported.\n        Check out the documentation_ of each data structure for specific examples.\n        \n        Examples of when you may want to use an evolver instead of working directly with the data structure include:\n        \n        * Multiple updates are done to the same data structure and the intermediate results are of no\n          interest. In this case using an evolver may be a more efficient and easier to work with.\n        * You need to pass a vector into a legacy function or a function that you have no control\n          over which performs in place mutations. In this case pass an evolver instance\n          instead and then create a new pvector from the evolver once the function returns.\n        \n        .. code:: python\n        \n            >>> from pyrsistent import v\n        \n            # In place mutation as when working with the built in counterpart\n            >>> v1 = v(1, 2, 3)\n            >>> e = v1.evolver()\n            >>> e[1] = 22\n            >>> e = e.append(4)\n            >>> e = e.extend([5, 6])\n            >>> e[5] += 1\n            >>> len(e)\n            6\n        \n            # The evolver is considered *dirty* when it contains changes compared to the underlying vector\n            >>> e.is_dirty()\n            True\n        \n            # But the underlying pvector still remains untouched\n            >>> v1\n            pvector([1, 2, 3])\n        \n            # Once satisfied with the updates you can produce a new pvector containing the updates.\n            # The new pvector will share data with the original pvector in the same way that would have\n            # been done if only using operations on the pvector.\n            >>> v2 = e.persistent()\n            >>> v2\n            pvector([1, 22, 3, 4, 5, 7])\n        \n            # The evolver is now no longer considered *dirty* as it contains no differences compared to the\n            # pvector just produced.\n            >>> e.is_dirty()\n            False\n        \n            # You may continue to work with the same evolver without affecting the content of v2\n            >>> e[0] = 11\n        \n            # Or create a new evolver from v2. The two evolvers can be updated independently but will both\n            # share data with v2 where possible.\n            >>> e2 = v2.evolver()\n            >>> e2[0] = 1111\n            >>> e.persistent()\n            pvector([11, 22, 3, 4, 5, 7])\n            >>> e2.persistent()\n            pvector([1111, 22, 3, 4, 5, 7])\n        \n        .. _freeze:\n        .. _thaw:\n        \n        freeze and thaw\n        ~~~~~~~~~~~~~~~\n        These functions are great when your cozy immutable world has to interact with the evil mutable world outside.\n        \n        .. code:: python\n        \n            >>> from pyrsistent import freeze, thaw, v, m\n            >>> freeze([1, {'a': 3}])\n            pvector([1, pmap({'a': 3})])\n            >>> thaw(v(1, m(a=3)))\n            [1, {'a': 3}]\n        \n        Compatibility\n        -------------\n        \n        Pyrsistent is developed and tested on Python 2.7, 3.5, 3.6, 3.7 and PyPy (Python 2 and 3 compatible). It will most\n        likely work on all other versions >= 3.4 but no guarantees are given. :)\n        \n        Compatibility issues\n        ~~~~~~~~~~~~~~~~~~~~\n        \n        .. _27: https://github.com/tobgu/pyrsistent/issues/27\n        \n        There is currently one known compatibility issue when comparing built in sets and frozensets to PSets as discussed in 27_.\n        It affects python 2 versions < 2.7.8 and python 3 versions < 3.4.0 and is due to a bug described in\n        http://bugs.python.org/issue8743.\n        \n        Comparisons will fail or be incorrect when using the set/frozenset as left hand side of the comparison. As a workaround\n        you need to either upgrade Python to a more recent version, avoid comparing sets/frozensets with PSets or always make\n        sure to convert both sides of the comparison to the same type before performing the comparison.\n        \n        Performance\n        -----------\n        \n        Pyrsistent is developed with performance in mind. Still, while some operations are nearly on par with their built in, \n        mutable, counterparts in terms of speed, other operations are slower. In the cases where attempts at\n        optimizations have been done, speed has generally been valued over space.\n        \n        Pyrsistent comes with two API compatible flavors of PVector (on which PMap and PSet are based), one pure Python \n        implementation and one implemented as a C extension. The latter generally being 2 - 20 times faster than the former.\n        The C extension will be used automatically when possible.\n        \n        The pure python implementation is fully PyPy compatible. Running it under PyPy speeds operations up considerably if \n        the structures are used heavily (if JITed), for some cases the performance is almost on par with the built in counterparts.\n        \n        Type hints\n        ----------\n        \n        PEP 561 style type hints for use with mypy and various editors are available for most types and functions in pyrsistent.\n        \n        Type classes for annotating your own code with pyrsistent types are also available under pyrsistent.typing.\n        \n        Installation\n        ------------\n        \n        pip install pyrsistent\n        \n        Documentation\n        -------------\n        \n        Available at http://pyrsistent.readthedocs.org/\n        \n        Brief presentation available at http://slides.com/tobiasgustafsson/immutability-and-python/\n        \n        Contributors\n        ------------\n        \n        Tobias Gustafsson https://github.com/tobgu\n        \n        Christopher Armstrong https://github.com/radix\n        \n        Anders Hovmöller https://github.com/boxed\n        \n        Itamar Turner-Trauring https://github.com/itamarst\n        \n        Jonathan Lange https://github.com/jml\n        \n        Richard Futrell https://github.com/Futrell\n        \n        Jakob Hollenstein https://github.com/jkbjh\n        \n        David Honour https://github.com/foolswood\n        \n        David R. MacIver https://github.com/DRMacIver\n        \n        Marcus Ewert https://github.com/sarum90\n        \n        Jean-Paul Calderone https://github.com/exarkun\n        \n        Douglas Treadwell https://github.com/douglas-treadwell\n        \n        Travis Parker https://github.com/teepark\n        \n        Julian Berman https://github.com/Julian\n        \n        Dennis Tomas https://github.com/dtomas\n        \n        Neil Vyas https://github.com/neilvyas\n        \n        doozr https://github.com/doozr\n        \n        Kamil Galuszka https://github.com/galuszkak\n        \n        Tsuyoshi Hombashi https://github.com/thombashi\n        \n        nattofriends https://github.com/nattofriends\n        \n        agberk https://github.com/agberk\n        \n        Waleed Khan https://github.com/arxanas\n        \n        Jean-Louis Fuchs https://github.com/ganwell\n        \n        Carlos Corbacho https://github.com/ccorbacho\n        \n        Felix Yan https://github.com/felixonmars\n        \n        benrg https://github.com/benrg\n        \n        Jere Lahelma https://github.com/je-l\n        \n        Max Taggart https://github.com/MaxTaggart\n        \n        Vincent Philippon https://github.com/vphilippon\n        \n        Semen Zhydenko https://github.com/ss18\n        \n        Till Varoquaux  https://github.com/till-varoquaux\n        \n        Contributing\n        ------------\n        \n        Want to contribute? That's great! If you experience problems please log them on GitHub. If you want to contribute code,\n        please fork the repository and submit a pull request.\n        \n        Run tests\n        ~~~~~~~~~\n        .. _tox: https://tox.readthedocs.io/en/latest/\n        \n        Tests can be executed using tox_.\n        \n        Install tox: ``pip install tox``\n        \n        Run test for Python 2.7: ``tox -epy27``\n        \n        Release\n        ~~~~~~~\n        * Update CHANGES.txt\n        * Update README with any new contributors and potential info needed.\n        * Update _pyrsistent_version.py\n        * python setup.py sdist upload\n        * Commit and tag with new version: git add -u . && git commit -m 'Prepare version vX.Y.Z' && git tag -a vX.Y.Z -m 'vX.Y.Z'\n        * Push commit and tags: git push && git push --tags\n        \n        Project status\n        --------------\n        Pyrsistent can be considered stable and mature (who knows, there may even be a 1.0 some day :-)). The project is\n        maintained, bugs fixed, PRs reviewed and merged and new releases made. I currently do not have time for development\n        of new features or functionality which I don't have use for myself. I'm more than happy to take PRs for new\n        functionality though!\n        \n        There are a bunch of issues marked with ``enhancement`` and ``help wanted`` that contain requests for new functionality\n        that would be nice to include. The level of difficulty and extend of the issues varies, please reach out to me if you're\n        interested in working on any of them.\n        \n        If you feel that you have a grand master plan for where you would like Pyrsistent to go and have the time to put into\n        it please don't hesitate to discuss this with me and submit PRs for it. If all goes well I'd be more than happy to add\n        additional maintainers to the project!\n        ",
        "home_page": "http://github.com/tobgu/pyrsistent/",
        "author": "Tobias Gustafsson",
        "author_email": "tobias.l.gustafsson@gmail.com",
        "license": "MIT",
        "classifier": [
          "Intended Audience :: Developers",
          "License :: OSI Approved :: MIT License",
          "Operating System :: OS Independent",
          "Programming Language :: Python :: 2.7",
          "Programming Language :: Python :: 3.5",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: Implementation :: PyPy"
        ]
      },
      "metadata_location": "/usr/lib/python3/dist-packages/pyrsistent-0.15.5.egg-info"
    },
    {
      "metadata": {
        "metadata_version": "1.1",
        "name": "pyserial",
        "version": "3.4",
        "platform": [
          "any"
        ],
        "summary": "Python Serial Port Extension",
        "description": "Python Serial Port Extension for Win32, OSX, Linux, BSD, Jython, IronPython\n        \n        Stable:\n        \n        - Documentation: http://pythonhosted.org/pyserial/\n        - Download Page: https://pypi.python.org/pypi/pyserial\n        \n        Latest:\n        \n        - Documentation: http://pyserial.readthedocs.io/en/latest/\n        - Project Homepage: https://github.com/pyserial/pyserial\n        ",
        "home_page": "https://github.com/pyserial/pyserial",
        "author": "Chris Liechti",
        "author_email": "cliechti@gmx.net",
        "license": "BSD",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Intended Audience :: Developers",
          "Intended Audience :: End Users/Desktop",
          "License :: OSI Approved :: BSD License",
          "Natural Language :: English",
          "Operating System :: POSIX",
          "Operating System :: Microsoft :: Windows",
          "Operating System :: MacOS :: MacOS X",
          "Programming Language :: Python",
          "Programming Language :: Python :: 2",
          "Programming Language :: Python :: 2.7",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.2",
          "Programming Language :: Python :: 3.3",
          "Programming Language :: Python :: 3.4",
          "Programming Language :: Python :: 3.5",
          "Programming Language :: Python :: 3.6",
          "Topic :: Communications",
          "Topic :: Software Development :: Libraries",
          "Topic :: Software Development :: Libraries :: Python Modules",
          "Topic :: Terminals :: Serial"
        ]
      },
      "metadata_location": "/usr/lib/python3/dist-packages/pyserial-3.4.egg-info"
    },
    {
      "metadata": {
        "metadata_version": "1.0",
        "name": "python-apt",
        "version": "2.0.0+ubuntu0.20.4.8",
        "platform": [
          "posix"
        ],
        "summary": "Python bindings for APT",
        "description": "UNKNOWN",
        "home_page": "UNKNOWN",
        "author": "APT Development Team",
        "author_email": "deity@lists.debian.org",
        "license": "GNU GPL"
      },
      "metadata_location": "/usr/lib/python3/dist-packages/python_apt-2.0.0+ubuntu0.20.4.8.egg-info"
    },
    {
      "metadata": {
        "metadata_version": "1.2",
        "name": "python-debian",
        "version": "0.1.36ubuntu1",
        "platform": [
          "UNKNOWN"
        ],
        "summary": "Debian package related modules",
        "description": "UNKNOWN",
        "home_page": "https://salsa.debian.org/python-debian-team/python-debian",
        "maintainer": "Debian python-debian Maintainers",
        "maintainer_email": "pkg-python-debian-maint@lists.alioth.debian.org",
        "license": "UNKNOWN"
      },
      "metadata_location": "/usr/lib/python3/dist-packages/python_debian-0.1.36ubuntu1.egg-info"
    },
    {
      "metadata": {
        "metadata_version": "1.1",
        "name": "requests-unixsocket",
        "version": "0.2.0",
        "platform": [
          "UNKNOWN"
        ],
        "summary": "Use requests to talk HTTP via a UNIX domain socket",
        "description": "requests-unixsocket\n        ===================\n        \n        .. image:: https://badge.fury.io/py/requests-unixsocket.svg\n            :target: https://badge.fury.io/py/requests-unixsocket\n            :alt: Latest Version on PyPI\n            \n        .. image:: https://travis-ci.org/msabramo/requests-unixsocket.svg?branch=master\n            :target: https://travis-ci.org/msabramo/requests-unixsocket\n        \n        Use `requests <http://docs.python-requests.org/>`_ to talk HTTP via a UNIX domain socket\n        \n        Usage\n        -----\n        \n        Explicit\n        ++++++++\n        \n        You can use it by instantiating a special ``Session`` object:\n        \n        .. code-block:: python\n        \n            import json\n        \n            import requests_unixsocket\n        \n            session = requests_unixsocket.Session()\n        \n            r = session.get('http+unix://%2Fvar%2Frun%2Fdocker.sock/info')\n            registry_config = r.json()['RegistryConfig']\n            print(json.dumps(registry_config, indent=4))\n        \n        \n        Implicit (monkeypatching)\n        +++++++++++++++++++++++++\n        \n        Monkeypatching allows you to use the functionality in this module, while making\n        minimal changes to your code. Note that in the above example we had to\n        instantiate a special ``requests_unixsocket.Session`` object and call the\n        ``get`` method on that object. Calling ``requests.get(url)`` (the easiest way\n        to use requests and probably very common), would not work. But we can make it\n        work by doing monkeypatching.\n        \n        You can monkeypatch globally:\n        \n        .. code-block:: python\n        \n            import requests_unixsocket\n        \n            requests_unixsocket.monkeypatch()\n        \n            r = requests.get('http+unix://%2Fvar%2Frun%2Fdocker.sock/info')\n            assert r.status_code == 200\n        \n        or you can do it temporarily using a context manager:\n        \n        .. code-block:: python\n        \n            import requests_unixsocket\n        \n            with requests_unixsocket.monkeypatch():\n                r = requests.get('http+unix://%2Fvar%2Frun%2Fdocker.sock/info')\n                assert r.status_code == 200\n        \n        \n        Abstract namespace sockets\n        ++++++++++++++++++++++++++\n        \n        To connect to an `abstract namespace\n        socket <https://utcc.utoronto.ca/~cks/space/blog/python/AbstractUnixSocketsAndPeercred>`_\n        (Linux only), prefix the name with a NULL byte (i.e.: `\\0`) - e.g.:\n        \n        .. code-block:: python\n        \n            import requests_unixsocket\n        \n            session = requests_unixsocket.Session()\n            res = session.get('http+unix://\\0test_socket/get')\n            print(res.text)\n        \n        For an example program that illustrates this, see\n        ``examples/abstract_namespace.py`` in the git repo. Since abstract namespace\n        sockets are specific to Linux, the program will only work on Linux.\n        \n        \n        See also\n        --------\n        \n        - https://github.com/httpie/httpie-unixsocket - a plugin for `HTTPie <https://httpie.org/>`_ that allows you to interact with UNIX domain sockets\n        \n        ",
        "home_page": "https://github.com/msabramo/requests-unixsocket",
        "author": "Marc Abramowitz",
        "author_email": "marc@marc-abramowitz.com",
        "license": "Apache-2",
        "classifier": [
          "Development Status :: 3 - Alpha",
          "Intended Audience :: Developers",
          "Intended Audience :: Information Technology",
          "License :: OSI Approved :: Apache Software License",
          "Operating System :: OS Independent",
          "Programming Language :: Python",
          "Programming Language :: Python :: 2",
          "Programming Language :: Python :: 2.7",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.3",
          "Programming Language :: Python :: 3.4",
          "Programming Language :: Python :: 3.5",
          "Programming Language :: Python :: 3.6"
        ]
      },
      "metadata_location": "/usr/lib/python3/dist-packages/requests_unixsocket-0.2.0.egg-info"
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "service-identity",
        "version": "18.1.0",
        "platform": [
          "UNKNOWN"
        ],
        "summary": "Service identity verification for pyOpenSSL & cryptography.",
        "description": "=============================\n        Service Identity Verification\n        =============================\n        \n        .. image:: https://readthedocs.org/projects/service-identity/badge/?version=stable\n           :target: https://service-identity.readthedocs.io/en/stable/?badge=stable\n           :alt: Documentation Status\n        \n        .. image:: https://travis-ci.org/pyca/service_identity.svg?branch=master\n           :target: https://travis-ci.org/pyca/service_identity\n           :alt: CI status\n        \n        .. image:: https://codecov.io/github/pyca/service_identity/branch/master/graph/badge.svg\n           :target: https://codecov.io/github/pyca/service_identity\n           :alt: Test Coverage\n        \n        .. image:: https://img.shields.io/badge/code%20style-black-000000.svg\n           :target: https://github.com/ambv/black\n           :alt: Code style: black\n        \n        .. image:: https://www.irccloud.com/invite-svg?channel=%23cryptography-dev&amp;hostname=irc.freenode.net&amp;port=6697&amp;ssl=1\n            :target: https://www.irccloud.com/invite?channel=%23cryptography-dev&amp;hostname=irc.freenode.net&amp;port=6697&amp;ssl=1\n        \n        .. begin\n        \n        Use this package if:\n        \n        - you use pyOpenSSL_ and don’t want to be MITM_\\ ed or\n        - if you want to verify that a `PyCA cryptography`_ certificate is valid for a certain hostname or IP address.\n        \n        ``service_identity`` aspires to give you all the tools you need for verifying whether a certificate is valid for the intended purposes.\n        \n        In the simplest case, this means *host name verification*.\n        However, ``service_identity`` implements `RFC 6125`_ fully and plans to add other relevant RFCs too.\n        \n        ``service_identity``\\ ’s documentation lives at `Read the Docs <https://service-identity.readthedocs.io/>`_, the code on `GitHub <https://github.com/pyca/service_identity>`_.\n        \n        \n        .. _Twisted: https://twistedmatrix.com/\n        .. _pyOpenSSL: https://pypi.org/project/pyOpenSSL/\n        .. _MITM: https://en.wikipedia.org/wiki/Man-in-the-middle_attack\n        .. _RFC 6125: https://www.rfc-editor.org/info/rfc6125\n        .. _PyCA cryptography: https://cryptography.io/\n        \n        \n        Release Information\n        ===================\n        \n        18.1.0 (2018-12-05)\n        -------------------\n        \n        Changes:\n        ^^^^^^^^\n        \n        - pyOpenSSL is optional now if you use ``service_identity.cryptography.*`` only.\n        - Added support for ``iPAddress`` ``subjectAltName``\\ s.\n          You can now verify whether a connection or a certificate is valid for an IP address using ``service_identity.pyopenssl.verify_ip_address()`` and ``service_identity.cryptography.verify_certificate_ip_address()``.\n          `#12 <https://github.com/pyca/service_identity/pull/12>`_\n        \n        `Full changelog <https://service-identity.readthedocs.io/en/stable/changelog.html>`_.\n        \n        Authors\n        =======\n        \n        ``service_identity`` is written and maintained by `Hynek Schlawack <https://hynek.me/>`_.\n        \n        The development is kindly supported by `Variomedia AG <https://www.variomedia.de/>`_.\n        \n        Other contributors can be found in `GitHub's overview <https://github.com/pyca/service_identity/graphs/contributors>`_.\n        ",
        "keywords": [
          "cryptography",
          "openssl",
          "pyopenssl"
        ],
        "home_page": "https://service-identity.readthedocs.io/",
        "author": "Hynek Schlawack",
        "author_email": "hs@ox.cx",
        "maintainer": "Hynek Schlawack",
        "maintainer_email": "hs@ox.cx",
        "license": "MIT",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: MIT License",
          "Natural Language :: English",
          "Operating System :: MacOS :: MacOS X",
          "Operating System :: Microsoft :: Windows",
          "Operating System :: POSIX :: BSD",
          "Operating System :: POSIX :: Linux",
          "Operating System :: POSIX",
          "Programming Language :: Python :: 2",
          "Programming Language :: Python :: 2.7",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.4",
          "Programming Language :: Python :: 3.5",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: Implementation :: CPython",
          "Programming Language :: Python :: Implementation :: PyPy",
          "Programming Language :: Python",
          "Topic :: Security :: Cryptography",
          "Topic :: Software Development :: Libraries :: Python Modules"
        ],
        "requires_dist": [
          "ipaddress ; python_version < \"3.3\"",
          "coverage>=4.2.0 ; extra == \"dev\"",
          "idna ; extra == \"dev\"",
          "pyOpenSSL ; extra == \"dev\"",
          "pytest ; extra == \"dev\"",
          "sphinx ; extra == \"dev\"",
          "sphinx ; extra == \"docs\"",
          "idna ; extra == \"idna\"",
          "coverage>=4.2.0 ; extra == \"tests\"",
          "pytest ; extra == \"tests\""
        ],
        "provides_extra": [
          "dev",
          "docs",
          "idna",
          "tests"
        ]
      },
      "metadata_location": "/usr/lib/python3/dist-packages/service_identity-18.1.0.egg-info"
    },
    {
      "metadata": {
        "metadata_version": "1.1",
        "name": "simplejson",
        "version": "3.16.0",
        "platform": [
          "any"
        ],
        "summary": "Simple, fast, extensible JSON encoder/decoder for Python",
        "description": "simplejson\n        ----------\n        \n        .. image:: https://travis-ci.org/simplejson/simplejson.svg?branch=master\n            :target: https://travis-ci.org/simplejson/simplejson\n        \n        simplejson is a simple, fast, complete, correct and extensible\n        JSON <http://json.org> encoder and decoder for Python 2.5+\n        and Python 3.3+.  It is pure Python code with no dependencies,\n        but includes an optional C extension for a serious speed boost.\n        \n        The latest documentation for simplejson can be read online here:\n        https://simplejson.readthedocs.io/\n        \n        simplejson is the externally maintained development version of the\n        json library included with Python 2.6 and Python 3.0, but maintains\n        backwards compatibility with Python 2.5.\n        \n        The encoder can be specialized to provide serialization in any kind of\n        situation, without any special support by the objects to be serialized\n        (somewhat like pickle). This is best done with the ``default`` kwarg\n        to dumps.\n        \n        The decoder can handle incoming JSON strings of any specified encoding\n        (UTF-8 by default). It can also be specialized to post-process JSON\n        objects with the ``object_hook`` or ``object_pairs_hook`` kwargs. This\n        is particularly useful for implementing protocols such as JSON-RPC\n        that have a richer type system than JSON itself.\n        \n        For those of you that have legacy systems to maintain, there is a\n        very old fork of simplejson in the `python2.2`_ branch that supports\n        Python 2.2. This is based off of a very old version of simplejson,\n        is not maintained, and should only be used as a last resort.\n        \n        .. _python2.2: https://github.com/simplejson/simplejson/tree/python2.2\n        ",
        "home_page": "https://github.com/simplejson/simplejson",
        "author": "Bob Ippolito",
        "author_email": "bob@redivi.com",
        "license": "MIT License",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: MIT License",
          "License :: OSI Approved :: Academic Free License (AFL)",
          "Programming Language :: Python",
          "Programming Language :: Python :: 2",
          "Programming Language :: Python :: 2.5",
          "Programming Language :: Python :: 2.6",
          "Programming Language :: Python :: 2.7",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.3",
          "Programming Language :: Python :: 3.4",
          "Programming Language :: Python :: 3.5",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: Implementation :: CPython",
          "Programming Language :: Python :: Implementation :: PyPy",
          "Topic :: Software Development :: Libraries :: Python Modules"
        ]
      },
      "metadata_location": null
    },
    {
      "metadata": {
        "metadata_version": "1.2",
        "name": "six",
        "version": "1.14.0",
        "platform": [
          "UNKNOWN"
        ],
        "summary": "Python 2 and 3 compatibility utilities",
        "description": ".. image:: https://img.shields.io/pypi/v/six.svg\n           :target: https://pypi.org/project/six/\n           :alt: six on PyPI\n        \n        .. image:: https://travis-ci.org/benjaminp/six.svg?branch=master\n           :target: https://travis-ci.org/benjaminp/six\n           :alt: six on TravisCI\n        \n        .. image:: https://readthedocs.org/projects/six/badge/?version=latest\n           :target: https://six.readthedocs.io/\n           :alt: six's documentation on Read the Docs\n        \n        .. image:: https://img.shields.io/badge/license-MIT-green.svg\n           :target: https://github.com/benjaminp/six/blob/master/LICENSE\n           :alt: MIT License badge\n        \n        Six is a Python 2 and 3 compatibility library.  It provides utility functions\n        for smoothing over the differences between the Python versions with the goal of\n        writing Python code that is compatible on both Python versions.  See the\n        documentation for more information on what is provided.\n        \n        Six supports Python 2.7 and 3.3+.  It is contained in only one Python\n        file, so it can be easily copied into your project. (The copyright and license\n        notice must be retained.)\n        \n        Online documentation is at https://six.readthedocs.io/.\n        \n        Bugs can be reported to https://github.com/benjaminp/six.  The code can also\n        be found there.\n        ",
        "home_page": "https://github.com/benjaminp/six",
        "author": "Benjamin Peterson",
        "author_email": "benjamin@python.org",
        "license": "MIT",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Programming Language :: Python :: 2",
          "Programming Language :: Python :: 3",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: MIT License",
          "Topic :: Software Development :: Libraries",
          "Topic :: Utilities"
        ],
        "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*"
      },
      "metadata_location": "/usr/lib/python3/dist-packages/six-1.14.0.egg-info"
    },
    {
      "metadata": {
        "metadata_version": "1.1",
        "name": "sos",
        "version": "4.3",
        "platform": [
          "UNKNOWN"
        ],
        "summary": "A set of tools to gather troubleshooting information from a system.",
        "description": "UNKNOWN",
        "home_page": "https://github.com/sosreport/sos",
        "author": "Jake Hunsaker",
        "author_email": "jhunsake@redhat.com",
        "license": "GPLv2+"
      },
      "metadata_location": null
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "ssh-import-id",
        "version": "5.10",
        "platform": [
          "any"
        ],
        "summary": "Authorize SSH public keys from trusted online identities",
        "description": "UNKNOWN",
        "description_content_type": "markdown",
        "keywords": [
          "ssh",
          "public",
          "key"
        ],
        "home_page": "https://launchpad.net/ssh-import-id",
        "author": "Dustin Kirkland, Casey Marshall",
        "author_email": "dustin.kirkland@gmail.com, casey.marshall@gmail.com",
        "license": "GPLv3"
      },
      "metadata_location": "/usr/lib/python3/dist-packages/ssh_import_id-5.10.egg-info"
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "supervisor",
        "version": "4.1.0",
        "platform": [
          "UNKNOWN"
        ],
        "summary": "A system for controlling process state under UNIX",
        "description": "Supervisor\n        ==========\n        \n        Supervisor is a client/server system that allows its users to\n        control a number of processes on UNIX-like operating systems.\n        \n        Supported Platforms\n        -------------------\n        \n        Supervisor has been tested and is known to run on Linux (Ubuntu), Mac OS X\n        (10.4, 10.5, 10.6), and Solaris (10 for Intel) and FreeBSD 6.1.  It will\n        likely work fine on most UNIX systems.\n        \n        Supervisor will not run at all under any version of Windows.\n        \n        Supervisor is intended to work on Python 3 version 3.4 or later\n        and on Python 2 version 2.7.\n        \n        Documentation\n        -------------\n        \n        You can view the current Supervisor documentation online `in HTML format\n        <http://supervisord.org/>`_ .  This is where you should go for detailed\n        installation and configuration documentation.\n        \n        Reporting Bugs and Viewing the Source Repository\n        ------------------------------------------------\n        \n        Please report bugs in the `GitHub issue tracker\n        <https://github.com/Supervisor/supervisor/issues>`_.\n        \n        You can view the source repository for supervisor via\n        `https://github.com/Supervisor/supervisor\n        <https://github.com/Supervisor/supervisor>`_.\n        \n        Contributing\n        ------------\n        \n        We'll review contributions from the community in\n        `pull requests <https://help.github.com/articles/using-pull-requests>`_\n        on GitHub.\n        \n        \n        4.1.0 (2019-10-19)\n        ------------------\n        \n        - Fixed a bug on Python 3 only where logging to syslog did not work and\n          would log the exception ``TypeError: a bytes-like object is required, not 'str'``\n          to the main ``supervisord`` log file.  Patch by Vinay Sajip and Josh Staley.\n        \n        - Fixed a Python 3.8 compatibility issue caused by the removal of\n          ``cgi.escape()``.  Patch by Mattia Procopio.\n        \n        - The ``meld3`` package is no longer a dependency.  A version of ``meld3``\n          is now included within the ``supervisor`` package itself.\n        \n        4.0.4 (2019-07-15)\n        ------------------\n        \n        - Fixed a bug where ``supervisorctl tail <name> stdout`` would actually tail\n          ``stderr``.  Note that ``tail <name>`` without the explicit ``stdout``\n          correctly tailed ``stdout``.  The bug existed since 3.0a3 (released in\n          2007).  Patch by Arseny Hofman.\n        \n        - Improved the warning message added in 4.0.3 so it is now emitted for\n          both ``tail`` and ``tail -f``.  Patch by Vinay Sajip.\n        \n        - CVE-2019-12105.  Documentation addition only, no code changes.  This CVE\n          states that ``inet_http_server`` does not use authentication by default\n          (`details <https://github.com/Supervisor/supervisor/issues/1245>`_).  Note that\n          ``inet_http_server`` is not enabled by default, and is also not enabled\n          in the example configuration output by ``echo_supervisord_conf``.  The\n          behavior of the ``inet_http_server`` options have been correctly documented,\n          and have not changed, since the feature was introduced in 2006.  A new\n          `warning message <https://github.com/Supervisor/supervisor/commit/4e334d9cf2a1daff685893e35e72398437df3dcb>`_\n          was added to the documentation.\n        \n        4.0.3 (2019-05-22)\n        ------------------\n        \n        - Fixed an issue on Python 2 where running ``supervisorctl tail -f <name>``\n          would fail with the message\n          ``Cannot connect, error: <type 'exceptions.UnicodeEncodeError'>`` where it\n          may have worked on Supervisor 3.x.  The issue was introduced in Supervisor\n          4.0.0 due to new bytes/strings conversions necessary to add Python 3 support.\n          For ``supervisorctl`` to correctly display logs with Unicode characters, the\n          terminal encoding specified by the environment must support it.  If not, the\n          ``UnicodeEncodeError`` may still occur on either Python 2 or 3.  A new\n          warning message is now printed if a problematic terminal encoding is\n          detected.  Patch by Vinay Sajip.\n        \n        4.0.2 (2019-04-17)\n        ------------------\n        \n        - Fixed a bug where inline comments in the config file were not parsed\n          correctly such that the comments were included as part of the values.\n          This only occurred on Python 2, and only where the environment had an\n          extra ``configparser`` module installed.  The bug was introduced in\n          Supervisor 4.0.0 because of Python 2/3 compatibility code that expected\n          a Python 2 environment to only have a ``ConfigParser`` module.\n        \n        4.0.1 (2019-04-10)\n        ------------------\n        \n        - Fixed an issue on Python 3 where an ``OSError: [Errno 29] Illegal seek``\n          would occur if ``logfile`` in the ``[supervisord]`` section was set to\n          a special file like ``/dev/stdout`` that was not seekable, even if\n          ``logfile_maxbytes = 0`` was set to disable rotation.  The issue only\n          affected the main log and not child logs.  Patch by Martin Falatic.\n        \n        4.0.0 (2019-04-05)\n        ------------------\n        \n        - Support for Python 3 has been added.  On Python 3, Supervisor requires\n          Python 3.4 or later.  Many thanks to Vinay Sajip, Scott Maxwell, Palm Kevin,\n          Tres Seaver, Marc Abramowitz, Son Nguyen, Shane Hathaway, Evan Andrews,\n          and Ethan Hann who all made major contributions to the Python 3 porting\n          effort.  Thanks also to all contributors who submitted issue reports and\n          patches towards this effort.\n        \n        - Support for Python 2.4, 2.5, and 2.6 has been dropped.  On Python 2,\n          Supervisor now requires Python 2.7.\n        \n        - The ``supervisor`` package is no longer a namespace package.\n        \n        - The behavior of the config file expansion ``%(here)s`` has changed.  In\n          previous versions, a bug caused ``%(here)s`` to always expand to the\n          directory of the root config file.  Now, when ``%(here)s`` is used inside\n          a file included via ``[include]``, it will expand to the directory of\n          that file.  Thanks to Alex Eftimie and Zoltan Toth-Czifra for the patches.\n        \n        - The default value for the config file setting ``exitcodes=``, the expected\n          exit codes of a program, has changed.  In previous versions, it was ``0,2``.\n          This caused issues with Golang programs where ``panic()`` causes the exit\n          code to be ``2``.  The default value for ``exitcodes`` is now ``0``.\n        \n        - An undocumented feature where multiple ``supervisorctl`` commands could be\n          combined on a single line separated by semicolons has been removed.\n        \n        - ``supervisorctl`` will now set its exit code to a non-zero value when an\n          error condition occurs.  Previous versions did not set the exit code for\n          most error conditions so it was almost always 0.  Patch by Luke Weber.\n        \n        - Added new ``stdout_syslog`` and ``stderr_syslog`` options to the config\n          file.  These are boolean options that indicate whether process output will\n          be sent to syslog.  Supervisor can now log to both files and syslog at the\n          same time.  Specifying a log filename of ``syslog`` is still supported\n          but deprecated.  Patch by Jason R. Coombs.\n        \n        3.4.0 (2019-04-05)\n        ------------------\n        \n        - FastCGI programs (``[fcgi-program:x]`` sections) can now be used in\n          groups (``[group:x]``).  Patch by Florian Apolloner.\n        \n        - Added a new ``socket_backlog`` option to the ``[fcgi-program:x]`` section\n          to set the listen(2) socket backlog.  Patch by Nenad Merdanovic.\n        \n        - Fixed a bug where ``SupervisorTransport`` (the XML-RPC transport used with\n          Unix domain sockets) did not close the connection when ``close()`` was\n          called on it.  Patch by Jérome Perrin.\n        \n        - Fixed a bug where ``supervisorctl start <name>`` could hang for a long time\n          if the system clock rolled back.  Patch by Joe LeVeque.\n        \n        3.3.5 (2018-12-22)\n        ------------------\n        \n        - Fixed a race condition where ``supervisord`` would cancel a shutdown\n          already in progress if it received ``SIGHUP``.  Now, ``supervisord`` will\n          ignore ``SIGHUP`` if shutdown is already in progress.  Patch by Livanh.\n        \n        - Fixed a bug where searching for a relative command ignored changes to\n          ``PATH`` made in ``environment=``.  Based on a patch by dongweiming.\n        \n        - ``childutils.ProcessCommunicationsProtocol`` now does an explicit\n          ``flush()`` after writing to ``stdout``.\n        \n        - A more descriptive error message is now emitted if a name in the config\n          file contains a disallowed character.  Patch by Rick van Hattem.\n        \n        3.3.4 (2018-02-15)\n        ------------------\n        \n        - Fixed a bug where rereading the configuration would not detect changes to\n          eventlisteners.  Patch by Michael Ihde.\n        \n        - Fixed a bug where the warning ``Supervisord is running as root and it is\n          searching for its config file`` may have been incorrectly shown by\n          ``supervisorctl`` if its executable name was changed.\n        \n        - Fixed a bug where ``supervisord`` would continue starting up if the\n          ``[supervisord]`` section of the config file specified ``user=`` but\n          ``setuid()`` to that user failed.  It will now exit immediately if it\n          cannot drop privileges.\n        \n        - Fixed a bug in the web interface where redirect URLs did not have a slash\n          between the host and query string, which caused issues when proxying with\n          Nginx.  Patch by Luke Weber.\n        \n        - When ``supervisord`` successfully drops privileges during startup, it is now\n          logged at the ``INFO`` level instead of ``CRIT``.\n        \n        - The HTTP server now returns a Content-Type header specifying UTF-8 encoding.\n          This may fix display issues in some browsers.  Patch by Katenkka.\n        \n        3.3.3 (2017-07-24)\n        ------------------\n        \n        - Fixed CVE-2017-11610.  A vulnerability was found where an authenticated\n          client can send a malicious XML-RPC request to ``supervisord`` that will\n          run arbitrary shell commands on the server.  The commands will be run as\n          the same user as ``supervisord``.  Depending on how ``supervisord`` has been\n          configured, this may be root.  See\n          https://github.com/Supervisor/supervisor/issues/964 for details.\n        \n        3.3.2 (2017-06-03)\n        ------------------\n        \n        - Fixed a bug introduced in 3.3.0 where the ``supervisorctl reload`` command\n          would crash ``supervisord`` with the error ``OSError: [Errno 9] Bad file\n          descriptor`` if the ``kqueue`` poller was used.  Patch by Jared Suttles.\n        \n        - Fixed a bug introduced in 3.3.0 where ``supervisord`` could get stuck in a\n          polling loop after the web interface was used, causing high CPU usage.\n          Patch by Jared Suttles.\n        \n        - Fixed a bug where if ``supervisord`` attempted to start but aborted due to\n          another running instance of ``supervisord`` with the same config, the\n          pidfile of the running instance would be deleted.  Patch by coldnight.\n        \n        - Fixed a bug where ``supervisorctl fg`` would swallow most XML-RPC faults.\n          ``fg`` now prints the fault and exits.\n        \n        - Parsing the config file will now fail with an error message if a process\n          or group name contains a forward slash character (``/``) since it would\n          break the URLs used by the web interface.\n        \n        - ``supervisorctl reload`` now shows an error message if an argument is\n          given.  Patch by Joel Krauska.\n        \n        - ``supervisorctl`` commands ``avail``, ``reread``, and ``version`` now show\n          an error message if an argument is given.\n        \n        3.3.1 (2016-08-02)\n        ------------------\n        \n        - Fixed an issue where ``supervisord`` could hang when responding to HTTP\n          requests (including ``supervisorctl`` commands) if the system time was set\n          back after ``supervisord`` was started.\n        \n        - Zope ``trackrefs``, a debugging tool that was included in the ``tests``\n          directory but hadn't been used for years, has been removed.\n        \n        3.3.0 (2016-05-14)\n        ------------------\n        \n        - ``supervisord`` will now use ``kqueue``, ``poll``, or ``select`` to monitor\n          its file descriptors, in that order, depending on what is available on the\n          system.  Previous versions used ``select`` only and would crash with the error\n          ``ValueError: filedescriptor out of range in select()`` when running a large\n          number of subprocesses (whatever number resulted in enough file descriptors\n          to exceed the fixed-size file descriptor table used by ``select``, which is\n          typically 1024).  Patch by Igor Sobreira.\n        \n        - ``/etc/supervisor/supervisord.conf`` has been added to the config file search\n          paths.  Many versions of Supervisor packaged for Debian and Ubuntu have\n          included a patch that added this path.  This difference was reported in a\n          number of tickets as a source of confusion and upgrade difficulties, so the\n          path has been added.  Patch by Kelvin Wong.\n        \n        - Glob patterns in the ``[include]`` section now support the\n          ``host_node_name`` expansion.  Patch by Paul Lockaby.\n        \n        - Files included via the ``[include]`` section are now logged at the ``INFO``\n          level instead of ``WARN``.  Patch by Daniel Hahler.\n        \n        3.2.4 (2017-07-24)\n        ------------------\n        \n        - Backported from Supervisor 3.3.3:  Fixed CVE-2017-11610.  A vulnerability\n          was found where an authenticated client can send a malicious XML-RPC request\n          to ``supervisord`` that will run arbitrary shell commands on the server.\n          The commands will be run as the same user as ``supervisord``.  Depending on\n          how ``supervisord`` has been configured, this may be root.  See\n          https://github.com/Supervisor/supervisor/issues/964 for details.\n        \n        3.2.3 (2016-03-19)\n        ------------------\n        \n        - 400 Bad Request is now returned if an XML-RPC request is received with\n          invalid body data.  In previous versions, 500 Internal Server Error\n          was returned.\n        \n        3.2.2 (2016-03-04)\n        ------------------\n        \n        - Parsing the config file will now fail with an error message if an\n          ``inet_http_server`` or ``unix_http_server`` section contains a ``username=``\n          but no ``password=``.  In previous versions, ``supervisord`` would start with\n          this invalid configuration but the HTTP server would always return a 500\n          Internal Server Error.  Thanks to Chris Ergatides for reporting this issue.\n        \n        3.2.1 (2016-02-06)\n        ------------------\n        \n        - Fixed a server exception ``OverflowError: int exceeds XML-RPC limits`` that\n          made ``supervisorctl status`` unusable if the system time was far into the\n          future.  The XML-RPC API returns timestamps as XML-RPC integers, but\n          timestamps will exceed the maximum value of an XML-RPC integer in January\n          2038 (\"Year 2038 Problem\").  For now, timestamps exceeding the maximum\n          integer will be capped at the maximum to avoid the exception and retain\n          compatibility with existing API clients.  In a future version of the API,\n          the return type for timestamps will be changed.\n        \n        3.2.0 (2015-11-30)\n        ------------------\n        \n        - Files included via the ``[include]`` section are read in sorted order.  In\n          past versions, the order was undefined.  Patch by Ionel Cristian Mărieș.\n        \n        - ``supervisorctl start`` and ``supervisorctl stop`` now complete more quickly\n          when handling many processes.  Thanks to Chris McDonough for this patch.\n          See: https://github.com/Supervisor/supervisor/issues/131\n        \n        - Environment variables are now expanded for all config file options.\n          Patch by Dexter Tad-y.\n        \n        - Added ``signalProcess``, ``signalProcessGroup``, and ``signalAllProcesses``\n          XML-RPC methods to supervisor RPC interface.  Thanks to Casey Callendrello,\n          Marc Abramowitz, and Moriyoshi Koizumi for the patches.\n        \n        - Added ``signal`` command to supervisorctl.  Thanks to Moriyoshi Koizumi and\n          Marc Abramowitz for the patches.\n        \n        - Errors caused by bad values in a config file now show the config section\n          to make debugging easier.  Patch by Marc Abramowitz.\n        \n        - Setting ``redirect_stderr=true`` in an ``[eventlistener:x]`` section is now\n          disallowed because any messages written to ``stderr`` would interfere\n          with the eventlistener protocol on ``stdout``.\n        \n        - Fixed a bug where spawning a process could cause ``supervisord`` to crash\n          if an ``IOError`` occurred while setting up logging.  One way this could\n          happen is if a log filename was accidentally set to a directory instead\n          of a file.  Thanks to Grzegorz Nosek for reporting this issue.\n        \n        - Fixed a bug introduced in 3.1.0 where ``supervisord`` could crash when\n          attempting to display a resource limit error.\n        \n        - Fixed a bug where ``supervisord`` could crash with the message\n          ``Assertion failed for processname: RUNNING not in STARTING`` if a time\n          change caused the last start time of the process to be in the future.\n          Thanks to Róbert Nagy, Sergey Leschenko, and samhair for the patches.\n        \n        - A warning is now logged if an eventlistener enters the UNKNOWN state,\n          which usually indicates a bug in the eventlistener.  Thanks to Steve\n          Winton and detailyang for reporting issues that led to this change.\n        \n        - Errors from the web interface are now logged at the ``ERROR`` level.\n          Previously, they were logged at the ``TRACE`` level and easily\n          missed.  Thanks to Thomas Güttler for reporting this issue.\n        \n        - Fixed ``DeprecationWarning: Parameters to load are deprecated. Call\n          .resolve and .require separately.`` on setuptools >= 11.3.\n        \n        - If ``redirect_stderr=true`` and ``stderr_logfile=auto``, no stderr log\n          file will be created.  In previous versions, an empty stderr log file\n          would be created.  Thanks to Łukasz Kożuchowski for the initial patch.\n        \n        - Fixed an issue in Medusa that would cause ``supervisorctl tail -f`` to\n          disconnect if many other ``supervisorctl`` commands were run in parallel.\n          Patch by Stefan Friesel.\n        \n        3.1.4 (2017-07-24)\n        ------------------\n        \n        - Backported from Supervisor 3.3.3:  Fixed CVE-2017-11610.  A vulnerability\n          was found where an authenticated client can send a malicious XML-RPC request\n          to ``supervisord`` that will run arbitrary shell commands on the server.\n          The commands will be run as the same user as ``supervisord``.  Depending on\n          how ``supervisord`` has been configured, this may be root.  See\n          https://github.com/Supervisor/supervisor/issues/964 for details.\n        \n        3.1.3 (2014-10-28)\n        ------------------\n        \n        - Fixed an XML-RPC bug where the ElementTree-based parser handled strings\n          like ``<value><string>hello</string></value>`` but not strings like\n          ``<value>hello</value>``, which are valid in the XML-RPC spec.  This\n          fixes compatibility with the Apache XML-RPC client for Java and\n          possibly other clients.\n        \n        3.1.2 (2014-09-07)\n        ------------------\n        \n        - Fixed a bug where ``tail group:*`` in ``supervisorctl`` would show a 500\n          Internal Server Error rather than a BAD_NAME fault.\n        \n        - Fixed a bug where the web interface would show a 500 Internal Server Error\n          instead of an error message for some process start faults.\n        \n        - Removed medusa files not used by Supervisor.\n        \n        3.1.1 (2014-08-11)\n        ------------------\n        \n        - Fixed a bug where ``supervisorctl tail -f name`` output would stop if log\n          rotation occurred while tailing.\n        \n        - Prevent a crash when a greater number of file descriptors were attempted to\n          be opened than permitted by the environment when starting a bunch of\n          programs.  Now, instead a spawn error is logged.\n        \n        - Compute \"channel delay\" properly, fixing symptoms where a supervisorctl\n          start command would hang for a very long time when a process (or many\n          processes) are spewing to their stdout or stderr.  See comments attached to\n          https://github.com/Supervisor/supervisor/pull/263 .\n        \n        - Added ``docs/conf.py``, ``docs/Makefile``, and ``supervisor/scripts/*.py``\n          to the release package.\n        \n        3.1.0 (2014-07-29)\n        ------------------\n        \n        - The output of the ``start``, ``stop``, ``restart``, and ``clear`` commands\n          in ``supervisorctl`` has been changed to be consistent with the ``status``\n          command.  Previously, the ``status`` command would show a process like\n          ``foo:foo_01`` but starting that process would show ``foo_01: started``\n          (note the group prefix ``foo:`` was missing).  Now, starting the process\n          will show ``foo:foo_01: started``.  Suggested by Chris Wood.\n        \n        - The ``status`` command in ``supervisorctl`` now supports group name\n          syntax: ``status group:*``.\n        \n        - The process column in the table output by the ``status`` command in\n          ``supervisorctl`` now expands to fit the widest name.\n        \n        - The ``update`` command in ``supervisorctl`` now accepts optional group\n          names.  When group names are specified, only those groups will be\n          updated.  Patch by Gary M. Josack.\n        \n        - Tab completion in ``supervisorctl`` has been improved and now works for\n          more cases.  Thanks to Mathieu Longtin and Marc Abramowitz for the patches.\n        \n        - Attempting to start or stop a process group in ``supervisorctl`` with the\n          ``group:*`` syntax will now show the same error message as the ``process``\n          syntax if the name does not exist.  Previously, it would show a Python\n          exception.  Patch by George Ang.\n        \n        - Added new ``PROCESS_GROUP_ADDED`` and ``PROCESS_GROUP_REMOVED`` events.\n          These events are fired when process groups are added or removed from\n          Supervisor's runtime configuration when using the ``add`` and ``remove``\n          commands in ``supervisorctl``.  Patch by Brent Tubbs.\n        \n        - Stopping a process in the backoff state now changes it to the stopped\n          state.  Previously, an attempt to stop a process in backoff would be\n          ignored.  Patch by Pascal Varet.\n        \n        - The ``directory`` option is now expanded separately for each process in\n          a homogeneous process group.  This allows each process to have its own\n          working directory.  Patch by Perttu Ranta-aho.\n        \n        - Removed ``setuptools`` from the ``requires`` list in ``setup.py`` because\n          it caused installation issues on some systems.\n        \n        - Fixed a bug in Medusa where the HTTP Basic authorizer would cause an\n          exception if the password contained a colon.  Thanks to Thomas Güttler\n          for reporting this issue.\n        \n        - Fixed an XML-RPC bug where calling supervisor.clearProcessLogs() with a\n          name like ``group:*`` would cause a 500 Internal Server Error rather than\n          returning a BAD_NAME fault.\n        \n        - Fixed a hang that could occur in ``supervisord`` if log rotation is used\n          and an outside program deletes an active log file.  Patch by Magnus Lycka.\n        \n        - A warning is now logged if a glob pattern in an ``[include]`` section does\n          not match any files.  Patch by Daniel Hahler.\n        \n        3.0.1 (2017-07-24)\n        ------------------\n        \n        - Backported from Supervisor 3.3.3:  Fixed CVE-2017-11610.  A vulnerability\n          was found where an authenticated client can send a malicious XML-RPC request\n          to ``supervisord`` that will run arbitrary shell commands on the server.\n          The commands will be run as the same user as ``supervisord``.  Depending on\n          how ``supervisord`` has been configured, this may be root.  See\n          https://github.com/Supervisor/supervisor/issues/964 for details.\n        \n        3.0 (2013-07-30)\n        ----------------\n        \n        - Parsing the config file will now fail with an error message if a process\n          or group name contains characters that are not compatible with the\n          eventlistener protocol.\n        \n        - Fixed a bug where the ``tail -f`` command in ``supervisorctl`` would fail\n          if the combined length of the username and password was over 56 characters.\n        \n        - Reading the config file now gives a separate error message when the config\n          file exists but can't be read.  Previously, any error reading the file\n          would be reported as \"could not find config file\".  Patch by Jens Rantil.\n        \n        - Fixed an XML-RPC bug where array elements after the first would be ignored\n          when using the ElementTree-based XML parser.  Patch by Zev Benjamin.\n        \n        - Fixed the usage message output by ``supervisorctl`` to show the correct\n          default config file path.  Patch by Alek Storm.\n        \n        3.0b2 (2013-05-28)\n        ------------------\n        \n        - The behavior of the program option ``user`` has changed.  In all previous\n          versions, if ``supervisord`` failed to switch to the user, a warning would\n          be sent to the stderr log but the child process would still be spawned.\n          This means that a mistake in the config file could result in a child\n          process being unintentionally spawned as root.  Now, ``supervisord`` will\n          not spawn the child unless it was able to successfully switch to the user.\n          Thanks to Igor Partola for reporting this issue.\n        \n        - If a user specified in the config file does not exist on the system,\n          ``supervisord`` will now print an error and refuse to start.\n        \n        - Reverted a change to logging introduced in 3.0b1 that was intended to allow\n          multiple processes to log to the same file with the rotating log handler.\n          The implementation caused supervisord to crash during reload and to leak\n          file handles.  Also, since log rotation options are given on a per-program\n          basis, impossible configurations could be created (conflicting rotation\n          options for the same file).  Given this and that supervisord now has syslog\n          support, it was decided to remove this feature.  A warning was added to the\n          documentation that two processes may not log to the same file.\n        \n        - Fixed a bug where parsing ``command=`` could cause supervisord to crash if\n          shlex.split() fails, such as a bad quoting.  Patch by Scott Wilson.\n        \n        - It is now possible to use ``supervisorctl`` on a machine with no\n          ``supervisord.conf`` file by supplying the connection information in\n          command line options.  Patch by Jens Rantil.\n        \n        - Fixed a bug where supervisord would crash if the syslog handler was used\n          and supervisord received SIGUSR2 (log reopen request).\n        \n        - Fixed an XML-RPC bug where calling supervisor.getProcessInfo() with a bad\n          name would cause a 500 Internal Server Error rather than the returning\n          a BAD_NAME fault.\n        \n        - Added a favicon to the web interface.  Patch by Caio Ariede.\n        \n        - Fixed a test failure due to incorrect handling of daylight savings time\n          in the childutils tests.  Patch by Ildar Hizbulin.\n        \n        - Fixed a number of pyflakes warnings for unused variables, imports, and\n          dead code.  Patch by Philippe Ombredanne.\n        \n        3.0b1 (2012-09-10)\n        ------------------\n        \n        - Fixed a bug where parsing ``environment=`` did not verify that key/value\n          pairs were correctly separated.  Patch by Martijn Pieters.\n        \n        - Fixed a bug in the HTTP server code that could cause unnecessary delays\n          when sending large responses.  Patch by Philip Zeyliger.\n        \n        - When supervisord starts up as root, if the ``-c`` flag was not provided, a\n          warning is now emitted to the console.  Rationale: supervisord looks in the\n          current working directory for a ``supervisord.conf`` file; someone might\n          trick the root user into starting supervisord while cd'ed into a directory\n          that has a rogue ``supervisord.conf``.\n        \n        - A warning was added to the documentation about the security implications of\n          starting supervisord without the ``-c`` flag.\n        \n        - Add a boolean program option ``stopasgroup``, defaulting to false.\n          When true, the flag causes supervisor to send the stop signal to the\n          whole process group.  This is useful for programs, such as Flask in debug\n          mode, that do not propagate stop signals to their children, leaving them\n          orphaned.\n        \n        - Python 2.3 is no longer supported.  The last version that supported Python\n          2.3 is Supervisor 3.0a12.\n        \n        - Removed the unused \"supervisor_rpc\" entry point from setup.py.\n        \n        - Fixed a bug in the rotating log handler that would cause unexpected\n          results when two processes were set to log to the same file.  Patch\n          by Whit Morriss.\n        \n        - Fixed a bug in config file reloading where each reload could leak memory\n          because a list of warning messages would be appended but never cleared.\n          Patch by Philip Zeyliger.\n        \n        - Added a new Syslog log handler.  Thanks to Denis Bilenko, Nathan L. Smith,\n          and Jason R. Coombs, who each contributed to the patch.\n        \n        - Put all change history into a single file (CHANGES.txt).\n        \n        3.0a12 (2011-12-06)\n        -------------------\n        \n        - Released to replace a broken 3.0a11 package where non-Python files were\n          not included in the package.\n        \n        3.0a11 (2011-12-06)\n        -------------------\n        \n        - Added a new file, ``PLUGINS.rst``, with a listing of third-party plugins\n          for Supervisor.  Contributed by Jens Rantil.\n        \n        - The ``pid`` command in supervisorctl can now be used to retrieve the PIDs\n          of child processes.  See ``help pid``.  Patch by Gregory Wisniewski.\n        \n        - Added a new ``host_node_name`` expansion that will be expanded to the\n          value returned by Python's ``platform.node`` (see\n          http://docs.python.org/library/platform.html#platform.node).\n          Patch by Joseph Kondel.\n        \n        - Fixed a bug in the web interface where pages over 64K would be truncated.\n          Thanks to Drew Perttula and Timothy Jones for reporting this.\n        \n        - Renamed ``README.txt`` to ``README.rst`` so GitHub renders the file as\n          ReStructuredText.\n        \n        - The XML-RPC server is now compatible with clients that do not send empty\n          <params> when there are no parameters for the method call.  Thanks to\n          Johannes Becker for reporting this.\n        \n        - Fixed ``supervisorctl --help`` output to show the correct program name.\n        \n        - The behavior of the configuration options ``minfds`` and ``minprocs`` has\n          changed.  Previously, if a hard limit was less than ``minfds`` or\n          ``minprocs``, supervisord would unconditionally abort with an error.  Now,\n          supervisord will attempt to raise the hard limit.  This may succeed if\n          supervisord is run as root, otherwise the error is printed as before.\n          Patch by Benoit Sigoure.\n        \n        - Add a boolean program option ``killasgroup``, defaulting to false,\n          if true when resorting to send SIGKILL to stop/terminate the process\n          send it to its whole process group instead to take care of possible\n          children as well and not leave them behind.  Patch by Samuele Pedroni.\n        \n        - Environment variables may now be used in the configuration file\n          for options that support string expansion.  Patch by Aleksey Sivokon.\n        \n        - Fixed a race condition where supervisord might not act on a signal sent\n          to it.  Thanks to Adar Dembo for reporting the issue and supplying the\n          initial patch.\n        \n        - Updated the output of ``echo_supervisord_conf`` to fix typos and\n          improve comments.  Thanks to Jens Rantil for noticing these.\n        \n        - Fixed a possible 500 Server Error from the web interface.  This was\n          observed when using Supervisor on a domain socket behind Nginx, where\n          Supervisor would raise an exception because REMOTE_ADDR was not set.\n          Patch by David Bennett.\n        \n        3.0a10 (2011-03-30)\n        -------------------\n        \n        - Fixed the stylesheet of the web interface so the footer line won't overlap\n          a long process list.  Thanks to Derek DeVries for the patch.\n        \n        - Allow rpc interface plugins to register new events types.\n        \n        - Bug fix for FCGI sockets not getting cleaned up when the ``reload`` command\n          is issued from supervisorctl.  Also, the default behavior has changed for\n          FCGI sockets.  They are now closed whenever the number of running processes\n          in a group hits zero.  Previously, the sockets were kept open unless a\n          group-level stop command was issued.\n        \n        - Better error message when HTTP server cannot reverse-resolve a hostname to\n          an IP address.  Previous behavior: show a socket error.  Current behavior:\n          spit out a suggestion to stdout.\n        \n        - Environment variables set via ``environment=`` value within\n          ``[supervisord]`` section had no effect.  Thanks to Wyatt Baldwin\n          for a patch.\n        \n        - Fix bug where stopping process would cause process output that happened\n          after the stop request was issued to be lost.  See\n          https://github.com/Supervisor/supervisor/issues/11.\n        \n        - Moved 2.X change log entries into ``HISTORY.txt``.\n        \n        - Converted ``CHANGES.txt`` and ``README.txt`` into proper ReStructuredText\n          and included them in the ``long_description`` in ``setup.py``.\n        \n        - Added a tox.ini to the package (run via ``tox`` in the package dir).  Tests\n          supervisor on multiple Python versions.\n        \n        3.0a9 (2010-08-13)\n        ------------------\n        \n        - Use rich comparison methods rather than __cmp__ to sort process configs and\n          process group configs to better straddle Python versions.  (thanks to\n          Jonathan Riboux for identifying the problem and supplying an initial\n          patch).\n        \n        - Fixed test_supervisorctl.test_maintail_dashf test for Python 2.7.  (thanks\n          to Jonathan Riboux for identifying the problem and supplying an initial\n          patch).\n        \n        - Fixed the way that supervisor.datatypes.url computes a \"good\" URL\n          for compatibility with Python 2.7 and Python >= 2.6.5.  URLs with\n          bogus \"schemes://\" will now be accepted as a version-straddling\n          compromise (before they were rejected before supervisor would\n          start).  (thanks to Jonathan Riboux for identifying the problem\n          and supplying an initial patch).\n        \n        - Add a ``-v`` / ``--version`` option to supervisord: Print the\n          supervisord version number out to stdout and exit.  (Roger Hoover)\n        \n        - Import iterparse from xml.etree when available (eg: Python 2.6).  Patch\n          by Sidnei da Silva.\n        \n        - Fixed the url to the supervisor-users mailing list.  Patch by\n          Sidnei da Silva\n        \n        - When parsing \"environment=\" in the config file, changes introduced in\n          3.0a8 prevented Supervisor from parsing some characters commonly\n          found in paths unless quoting was used as in this example::\n        \n            environment=HOME='/home/auser'\n        \n          Supervisor once again allows the above line to be written as::\n        \n            environment=HOME=/home/auser\n        \n          Alphanumeric characters, \"_\", \"/\", \".\", \"+\", \"-\", \"(\", \")\", and \":\" can all\n          be used as a value without quoting. If any other characters are needed in\n          the value, please quote it as in the first example above.  Thanks to Paul\n          Heideman for reporting this issue.\n        \n        - Supervisor will now look for its config file in locations relative to the\n          executable path, allowing it to be used more easily in virtual\n          environments.  If sys.argv[0] is ``/path/to/venv/bin/supervisorctl``,\n          supervisor will now look for it's config file in\n          ``/path/to/venv/etc/supervisord.conf`` and\n          ``/path/to/venv/supervisord.conf`` in addition to the other standard\n          locations.  Patch by Chris Rossi.\n        \n        3.0a8 (2010-01-20)\n        ------------------\n        \n        - Don't cleanup file descriptors on first supervisord invocation:\n          this is a lame workaround for Snow Leopard systems that use\n          libdispatch and are receiving \"Illegal instruction\" messages at\n          supervisord startup time.  Restarting supervisord via\n          \"supervisorctl restart\" may still cause a crash on these systems.\n        \n        - Got rid of Medusa hashbang headers in various files to ease RPM\n          packaging.\n        \n        - Allow umask to be 000 (patch contributed by Rowan Nairn).\n        \n        - Fixed a bug introduced in 3.0a7 where supervisorctl wouldn't ask\n          for a username/password combination properly from a\n          password-protected supervisord if it wasn't filled in within the\n          \"[supervisorctl]\" section username/password values.  It now\n          properly asks for a username and password.\n        \n        - Fixed a bug introduced in 3.0a7 where setup.py would not detect the\n          Python version correctly.  Patch by Daniele Paolella.\n        \n        - Fixed a bug introduced in 3.0a7 where parsing a string of key/value\n          pairs failed on Python 2.3 due to use of regular expression syntax\n          introduced in Python 2.4.\n        \n        - Removed the test suite for the ``memmon`` console script, which was\n          moved to the Superlance package in 3.0a7.\n        \n        - Added release dates to CHANGES.txt.\n        \n        - Reloading the config for an fcgi process group did not close the fcgi\n          socket - now, the socket is closed whenever the group is stopped as a unit\n          (including during config update). However, if you stop all the processes\n          in a group individually, the socket will remain open to allow for graceful\n          restarts of FCGI daemons.  (Roger Hoover)\n        \n        - Rereading the config did not pick up changes to the socket parameter in a\n          fcgi-program section.  (Roger Hoover)\n        \n        - Made a more friendly exception message when a FCGI socket cannot be\n          created.  (Roger Hoover)\n        \n        - Fixed a bug where the --serverurl option of supervisorctl would not\n          accept a URL with a \"unix\" scheme.  (Jason Kirtland)\n        \n        - Running the tests now requires the \"mock\" package.  This dependency has\n          been added to \"tests_require\" in setup.py.  (Roger Hoover)\n        \n        - Added support for setting the ownership and permissions for an FCGI socket.\n          This is done using new \"socket_owner\" and \"socket_mode\" options in an\n          [fcgi-program:x] section.  See the manual for details.  (Roger Hoover)\n        \n        - Fixed a bug where the FCGI socket reference count was not getting\n          decremented on spawn error.  (Roger Hoover)\n        \n        - Fixed a Python 2.6 deprecation warning on use of the \"sha\" module.\n        \n        - Updated ez_setup.py to one that knows about setuptools 0.6c11.\n        \n        - Running \"supervisorctl shutdown\" no longer dumps a Python backtrace\n          when it can't connect to supervisord on the expected socket.  Thanks\n          to Benjamin Smith for reporting this.\n        \n        - Removed use of collections.deque in our bundled version of asynchat\n          because it broke compatibility with Python 2.3.\n        \n        - The sample configuration output by \"echo_supervisord_conf\" now correctly\n          shows the default for \"autorestart\" as \"unexpected\".  Thanks to\n          William Dode for noticing it showed the wrong value.\n        \n        3.0a7 (2009-05-24)\n        ------------------\n        \n        - We now bundle our own patched version of Medusa contributed by Jason\n          Kirtland to allow Supervisor to run on Python 2.6.  This was done\n          because Python 2.6 introduced backwards incompatible changes to\n          asyncore and asynchat in the stdlib.\n        \n        - The console script ``memmon``, introduced in Supervisor 3.0a4, has\n          been moved to Superlance (http://pypi.python.org/pypi/superlance).\n          The Superlance package contains other useful monitoring tools designed\n          to run under Supervisor.\n        \n        - Supervisorctl now correctly interprets all of the error codes that can\n          be returned when starting a process.  Patch by Francesc Alted.\n        \n        - New ``stdout_events_enabled`` and ``stderr_events_enabled`` config options\n          have been added to the ``[program:x]``, ``[fcgi-program:x]``, and\n          ``[eventlistener:x]`` sections.  These enable the emitting of new\n          PROCESS_LOG events for a program.  If unspecified, the default is False.\n        \n          If enabled for a subprocess, and data is received from the stdout or\n          stderr of the subprocess while not in the special capture mode used by\n          PROCESS_COMMUNICATION, an event will be emitted.\n        \n          Event listeners can subscribe to either PROCESS_LOG_STDOUT or\n          PROCESS_LOG_STDERR individually, or PROCESS_LOG for both.\n        \n        - Values for subprocess environment variables specified with environment=\n          in supervisord.conf can now be optionally quoted, allowing them to\n          contain commas.  Patch by Tim Godfrey.\n        \n        - Added a new event type, REMOTE_COMMUNICATION, that is emitted by a new\n          RPC method, supervisor.sendRemoteCommEvent().\n        \n        - Patch for bug #268 (KeyError on ``here`` expansion for\n          stdout/stderr_logfile) from David E. Kindred.\n        \n        - Add ``reread``, ``update``, and ``avail`` commands based on Anders\n          Quist's ``online_config_reload.diff`` patch.  This patch extends\n          the \"add\" and \"drop\" commands with automagical behavior::\n        \n            In supervisorctl:\n        \n              supervisor> status\n              bar                              RUNNING    pid 14864, uptime 18:03:42\n              baz                              RUNNING    pid 23260, uptime 0:10:16\n              foo                              RUNNING    pid 14866, uptime 18:03:42\n              gazonk                           RUNNING    pid 23261, uptime 0:10:16\n              supervisor> avail\n              bar                              in use    auto      999:999\n              baz                              in use    auto      999:999\n              foo                              in use    auto      999:999\n              gazonk                           in use    auto      999:999\n              quux                             avail     auto      999:999\n        \n            Now we add this to our conf:\n        \n              [group:zegroup]\n              programs=baz,gazonk\n        \n            Then we reread conf:\n        \n              supervisor> reread\n              baz: disappeared\n              gazonk: disappeared\n              quux: available\n              zegroup: available\n              supervisor> avail\n              bar                              in use    auto      999:999\n              foo                              in use    auto      999:999\n              quux                             avail     auto      999:999\n              zegroup:baz                      avail     auto      999:999\n              zegroup:gazonk                   avail     auto      999:999\n              supervisor> status\n              bar                              RUNNING    pid 14864, uptime 18:04:18\n              baz                              RUNNING    pid 23260, uptime 0:10:52\n              foo                              RUNNING    pid 14866, uptime 18:04:18\n              gazonk                           RUNNING    pid 23261, uptime 0:10:52\n        \n            The magic make-it-so command:\n        \n              supervisor> update\n              baz: stopped\n              baz: removed process group\n              gazonk: stopped\n              gazonk: removed process group\n              zegroup: added process group\n              quux: added process group\n              supervisor> status\n              bar                              RUNNING    pid 14864, uptime 18:04:43\n              foo                              RUNNING    pid 14866, uptime 18:04:43\n              quux                             RUNNING    pid 23561, uptime 0:00:02\n              zegroup:baz                      RUNNING    pid 23559, uptime 0:00:02\n              zegroup:gazonk                   RUNNING    pid 23560, uptime 0:00:02\n              supervisor> avail\n              bar                              in use    auto      999:999\n              foo                              in use    auto      999:999\n              quux                             in use    auto      999:999\n              zegroup:baz                      in use    auto      999:999\n              zegroup:gazonk                   in use    auto      999:999\n        \n        - Fix bug with symptom \"KeyError: 'process_name'\" when using a logfile name\n          including documented``process_name`` Python string expansions.\n        \n        - Tab completions in the supervisorctl shell, and a foreground mode for\n          Supervisor, implemented as a part of GSoC.  The supervisorctl program now\n          has a ``fg`` command, which makes it possible to supply inputs to a\n          process, and see its output/error stream in real time.\n        \n        - Process config reloading implemented by Anders Quist.  The\n          supervisorctl program now has the commands \"add\" and \"drop\".\n          \"add <programname>\" adds the process group implied by <programname>\n          in the config file.  \"drop <programname>\" removes the process\n          group from the running configuration (it must already be stopped).\n          This makes it possible to add processes to and remove processes from\n          a running supervisord without restarting the supervisord process.\n        \n        - Fixed a bug where opening the HTTP servers would fail silently\n          for socket errors other than errno.EADDRINUSE.\n        \n        - Thanks to Dave Peticolas, using \"reload\" against a supervisord\n          that is running in the background no longer causes supervisord\n          to crash.\n        \n        - Configuration options for logfiles now accept mixed case reserved\n          words (e.g. \"AUTO\" or \"auto\") for consistency with other options.\n        \n        - childutils.eventdata was buggy, it could not deal with carriage returns\n          in data.  See http://www.plope.com/software/collector/257.  Thanks\n          to Ian Bicking.\n        \n        - Per-process exitcodes= configuration now will not accept exit\n          codes that are not 8-bit unsigned integers (supervisord will not\n          start when one of the exit codes is outside the range of 0 - 255).\n        \n        - Per-process ``directory`` value can now contain expandable values like\n          ``%(here)s``. (See http://www.plope.com/software/collector/262).\n        \n        - Accepted patch from Roger Hoover to allow for a new sort of\n          process group: \"fcgi-program\".  Adding one of these to your\n          supervisord.conf allows you to control fastcgi programs.  FastCGI\n          programs cannot belong to heterogenous groups.\n        \n          The configuration for FastCGI programs is the same as regular programs\n          except an additional \"socket\" parameter.  Substitution happens on the\n          socket parameter with the ``here`` and ``program_name`` variables::\n        \n           [fcgi-program:fcgi_test]\n           ;socket=tcp://localhost:8002\n           socket=unix:///path/to/fcgi/socket\n        \n        - Supervisorctl now supports a plugin model for supervisorctl\n          commands.\n        \n        - Added the ability to retrieve supervisord's own pid through\n          supervisor.getPID() on the XML-RPC interface or a new\n          \"pid\" command on supervisorctl.\n        \n        3.0a6 (2008-04-07)\n        ------------------\n        \n        - The RotatingFileLogger had a race condition in its doRollover\n          method whereby a file might not actually exist despite a call to\n          os.path.exists on the line above a place where we try to remove\n          it.  We catch the exception now and ignore the missing file.\n        \n        3.0a5 (2008-03-13)\n        ------------------\n        \n        - Supervisorctl now supports persistent readline history.  To\n          enable, add \"history_file = <pathname>\" to the ``[supervisorctl]``\n          section in your supervisord.conf file.\n        \n        - Multiple commands may now be issued on one supervisorctl command\n          line, e.g. \"restart prog; tail -f prog\".  Separate commands with a\n          single semicolon; they will be executed in order as you would\n          expect.\n        \n        3.0a4 (2008-01-30)\n        ------------------\n        \n        - 3.0a3 broke Python 2.3 backwards compatibility.\n        \n        - On Debian Sarge, one user reported that a call to\n          options.mktempfile would fail with an \"[Errno 9] Bad file\n          descriptor\" at supervisord startup time.  I was unable to\n          reproduce this, but we found a workaround that seemed to work for\n          him and it's included in this release.  See\n          http://www.plope.com/software/collector/252 for more information.\n          Thanks to William Dode.\n        \n        - The fault ``ALREADY_TERMINATED`` has been removed.  It was only raised by\n          supervisor.sendProcessStdin().  That method now returns ``NOT_RUNNING``\n          for parity with the other methods. (Mike Naberezny)\n        \n        - The fault TIMED_OUT has been removed.  It was not used.\n        \n        - Supervisor now depends on meld3 0.6.4, which does not compile its\n          C extensions by default, so there is no more need to faff around\n          with NO_MELD3_EXTENSION_MODULES during installation if you don't\n          have a C compiler or the Python development libraries on your\n          system.\n        \n        - Instead of making a user root around for the sample.conf file,\n          provide a convenience command \"echo_supervisord_conf\", which he can\n          use to echo the sample.conf to his terminal (and redirect to a file\n          appropriately).  This is a new user convenience (especially one who\n          has no Python experience).\n        \n        - Added ``numprocs_start`` config option to ``[program:x]`` and\n          ``[eventlistener:x]`` sections.  This is an offset used to compute\n          the first integer that ``numprocs`` will begin to start from.\n          Contributed by Antonio Beamud Montero.\n        \n        - Added capability for ``[include]`` config section to config format.\n          This section must contain a single key \"files\", which must name a\n          space-separated list of file globs that will be included in\n          supervisor's configuration.  Contributed by Ian Bicking.\n        \n        - Invoking the ``reload`` supervisorctl command could trigger a bug in\n          supervisord which caused it to crash.  See\n          http://www.plope.com/software/collector/253 .  Thanks to William Dode for\n          a bug report.\n        \n        - The ``pidproxy`` script was made into a console script.\n        \n        - The ``password`` value in both the ``[inet_http_server]`` and\n          ``[unix_http_server]`` sections can now optionally be specified as a SHA\n          hexdigest instead of as cleartext.  Values prefixed with ``{SHA}`` will be\n          considered SHA hex digests.  To encrypt a password to a form suitable for\n          pasting into the configuration file using Python, do, e.g.::\n        \n             >>> import sha\n             >>> '{SHA}' + sha.new('thepassword').hexdigest()\n             '{SHA}82ab876d1387bfafe46cc1c8a2ef074eae50cb1d'\n        \n        - The subtypes of the events PROCESS_STATE_CHANGE (and\n          PROCESS_STATE_CHANGE itself) have been removed, replaced with a\n          simpler set of PROCESS_STATE subscribable event types.\n        \n          The new event types are:\n        \n            PROCESS_STATE_STOPPED\n            PROCESS_STATE_EXITED\n            PROCESS_STATE_STARTING\n            PROCESS_STATE_STOPPING\n            PROCESS_STATE_BACKOFF\n            PROCESS_STATE_FATAL\n            PROCESS_STATE_RUNNING\n            PROCESS_STATE_UNKNOWN\n            PROCESS_STATE # abstract\n        \n          PROCESS_STATE_STARTING replaces:\n        \n            PROCESS_STATE_CHANGE_STARTING_FROM_STOPPED\n            PROCESS_STATE_CHANGE_STARTING_FROM_BACKOFF\n            PROCESS_STATE_CHANGE_STARTING_FROM_EXITED\n            PROCESS_STATE_CHANGE_STARTING_FROM_FATAL\n        \n          PROCESS_STATE_RUNNING replaces\n          PROCESS_STATE_CHANGE_RUNNING_FROM_STARTED\n        \n          PROCESS_STATE_BACKOFF replaces\n          PROCESS_STATE_CHANGE_BACKOFF_FROM_STARTING\n        \n          PROCESS_STATE_STOPPING replaces:\n        \n            PROCESS_STATE_CHANGE_STOPPING_FROM_RUNNING\n            PROCESS_STATE_CHANGE_STOPPING_FROM_STARTING\n        \n          PROCESS_STATE_EXITED replaces\n          PROCESS_STATE_CHANGE_EXITED_FROM_RUNNING\n        \n          PROCESS_STATE_STOPPED replaces\n          PROCESS_STATE_CHANGE_STOPPED_FROM_STOPPING\n        \n          PROCESS_STATE_FATAL replaces\n          PROCESS_STATE_CHANGE_FATAL_FROM_BACKOFF\n        \n          PROCESS_STATE_UNKNOWN replaces PROCESS_STATE_CHANGE_TO_UNKNOWN\n        \n          PROCESS_STATE replaces PROCESS_STATE_CHANGE\n        \n          The PROCESS_STATE_CHANGE_EXITED_OR_STOPPED abstract event is gone.\n        \n          All process state changes have at least \"processname\",\n          \"groupname\", and \"from_state\" (the name of the previous state) in\n          their serializations.\n        \n          PROCESS_STATE_EXITED additionally has \"expected\" (1 or 0) and \"pid\"\n          (the process id) in its serialization.\n        \n          PROCESS_STATE_RUNNING, PROCESS_STATE_STOPPING,\n          PROCESS_STATE_STOPPED additionally have \"pid\" in their\n          serializations.\n        \n          PROCESS_STATE_STARTING and PROCESS_STATE_BACKOFF have \"tries\" in\n          their serialization (initially \"0\", bumped +1 each time a start\n          retry happens).\n        \n        - Remove documentation from README.txt, point people to\n          http://supervisord.org/manual/ .\n        \n        - The eventlistener request/response protocol has changed.  OK/FAIL\n          must now be wrapped in a RESULT envelope so we can use it for more\n          specialized communications.\n        \n          Previously, to signify success, an event listener would write the string\n          ``OK\\n`` to its stdout.  To signify that the event was seen but couldn't\n          be handled by the listener and should be rebuffered, an event listener\n          would write the string ``FAIL\\n`` to its stdout.\n        \n          In the new protocol, the listener must write the string::\n        \n            RESULT {resultlen}\\n{result}\n        \n          For example, to signify OK::\n        \n            RESULT 2\\nOK\n        \n          To signify FAIL::\n        \n            RESULT 4\\nFAIL\n        \n          See the scripts/sample_eventlistener.py script for an example.\n        \n        - To provide a hook point for custom results returned from event\n          handlers (see above) the [eventlistener:x] configuration sections\n          now accept a \"result_handler=\" parameter,\n          e.g. \"result_handler=supervisor.dispatchers:default_handler\" (the\n          default) or \"handler=mypackage:myhandler\".  The keys are pkgutil\n          \"entry point\" specifications (importable Python function names).\n          Result handlers must be callables which accept two arguments: one\n          named \"event\" which represents the event, and the other named\n          \"result\", which represents the listener's result.  A result\n          handler either executes successfully or raises an exception.  If\n          it raises a supervisor.dispatchers.RejectEvent exception, the\n          event will be rebuffered, and the eventhandler will be placed back\n          into the ACKNOWLEDGED state.  If it raises any other exception,\n          the event handler will be placed in the UNKNOWN state.  If it does\n          not raise any exception, the event is considered successfully\n          processed.  A result handler's return value is ignored.  Writing a\n          result handler is a \"in case of emergency break glass\" sort of\n          thing, it is not something to be used for arbitrary business code.\n          In particular, handlers *must not block* for any appreciable\n          amount of time.\n        \n          The standard eventlistener result handler\n          (supervisor.dispatchers:default_handler) does nothing if it receives an\n          \"OK\" and will raise a supervisor.dispatchers.RejectEvent exception if it\n          receives any other value.\n        \n        - Supervisord now emits TICK events, which happen every N seconds.\n          Three types of TICK events are available: TICK_5 (every five\n          seconds), TICK_60 (every minute), TICK_3600 (every hour).  Event\n          listeners may subscribe to one of these types of events to perform\n          every-so-often processing.  TICK events are subtypes of the EVENT\n          type.\n        \n        - Get rid of OSX platform-specific memory monitor and replace with\n          memmon.py, which works on both Linux and Mac OS.  This script is\n          now a console script named \"memmon\".\n        \n        - Allow \"web handler\" (the handler which receives http requests from\n          browsers visiting the web UI of supervisor) to deal with POST requests.\n        \n        - RPC interface methods stopProcess(), stopProcessGroup(), and\n          stopAllProcesses() now take an optional \"wait\" argument that defaults\n          to True for parity with the start methods.\n        \n        3.0a3 (2007-10-02)\n        ------------------\n        \n        - Supervisorctl now reports a better error message when the main supervisor\n          XML-RPC namespace is not registered.  Thanks to Mike Orr for reporting\n          this. (Mike Naberezny)\n        \n        - Create ``scripts`` directory within supervisor package, move\n          ``pidproxy.py`` there, and place sample event listener and comm event\n          programs within the directory.\n        \n        - When an event notification is buffered (either because a listener rejected\n          it or because all listeners were busy when we attempted to send it\n          originally), we now rebuffer it in a way that will result in it being\n          retried earlier than it used to be.\n        \n        - When a listener process exits (unexpectedly) before transitioning from the\n          BUSY state, rebuffer the event that was being processed.\n        \n        - supervisorctl ``tail`` command now accepts a trailing specifier: ``stderr``\n          or ``stdout``, which respectively, allow a user to tail the stderr or\n          stdout of the named process.  When this specifier is not provided, tail\n          defaults to stdout.\n        \n        - supervisor ``clear`` command now clears both stderr and stdout logs for the\n          given process.\n        \n        - When a process encounters a spawn error as a result of a failed execve or\n          when it cannot setuid to a given uid, it now puts this info into the\n          process' stderr log rather than its stdout log.\n        \n        - The event listener protocol header now contains the ``server`` identifier,\n          the ``pool`` that the event emanated from, and the ``poolserial`` as well\n          as the values it previously contained (version, event name, serial, and\n          length).  The server identifier is taken from the config file options value\n          ``identifier``, the ``pool`` value is the name of the listener pool that\n          this event emanates from, and the ``poolserial`` is a serial number\n          assigned to the event local to the pool that is processing it.\n        \n        - The event listener protocol header is now a sequence of key-value\n          pairs rather than a list of positional values.  Previously, a\n          representative header looked like::\n        \n            SUPERVISOR3.0 PROCESS_COMMUNICATION_STDOUT 30 22\\n\n        \n          Now it looks like::\n        \n            ver:3.0 server:supervisor serial:21 ...\n        \n        - Specific event payload serializations have changed.  All event\n          types that deal with processes now include the pid of the process\n          that the event is describing.  In event serialization \"header\"\n          values, we've removed the space between the header name and the\n          value and headers are now separated by a space instead of a line\n          feed.  The names of keys in all event types have had underscores\n          removed.\n        \n        - Abandon the use of the Python stdlib ``logging`` module for speed\n          and cleanliness purposes.  We've rolled our own.\n        \n        - Fix crash on start if AUTO logging is used with a max_bytes of\n          zero for a process.\n        \n        - Improve process communication event performance.\n        \n        - The process config parameters ``stdout_capturefile`` and\n          ``stderr_capturefile`` are no longer valid.  They have been replaced with\n          the ``stdout_capture_maxbytes`` and ``stderr_capture_maxbytes`` parameters,\n          which are meant to be suffix-multiplied integers.  They both default to\n          zero.  When they are zero, process communication event capturing is not\n          performed.  When either is nonzero, the value represents the maximum number\n          of bytes that will be captured between process event start and end tags.\n          This change was to support the fact that we no longer keep capture data in\n          a separate file, we just use a FIFO in RAM to maintain capture info.  For\n          users whom don't care about process communication events, or whom haven't\n          changed the defaults for ``stdout_capturefile`` or ``stderr_capturefile``,\n          they needn't do anything to their configurations to deal with this change.\n        \n        - Log message levels have been normalized.  In particular, process\n          stdin/stdout is now logged at ``debug`` level rather than at ``trace``\n          level (``trace`` level is now reserved for output useful typically for\n          debugging supervisor itself).  See \"Supervisor Log Levels\" in the\n          documentation for more info.\n        \n        - When an event is rebuffered (because all listeners are busy or a\n          listener rejected the event), the rebuffered event is now inserted\n          in the head of the listener event queue.  This doesn't guarantee\n          event emission in natural ordering, because if a listener rejects\n          an event or dies while it's processing an event, it can take an\n          arbitrary amount of time for the event to be rebuffered, and other\n          events may be processed in the meantime.  But if pool listeners\n          never reject an event or don't die while processing an event, this\n          guarantees that events will be emitted in the order that they were\n          received because if all listeners are busy, the rebuffered event\n          will be tried again \"first\" on the next go-around.\n        \n        - Removed EVENT_BUFFER_OVERFLOW event type.\n        \n        - The supervisorctl xmlrpc proxy can now communicate with\n          supervisord using a persistent HTTP connection.\n        \n        - A new module \"supervisor.childutils\" was added.  This module\n          provides utilities for Python scripts which act as children of\n          supervisord.  Most notably, it contains an API method\n          \"getRPCInterface\" allows you to obtain an xmlrpclib ServerProxy\n          that is willing to communicate with the parent supervisor.  It\n          also contains utility functions that allow for parsing of\n          supervisor event listener protocol headers.  A pair of scripts\n          (loop_eventgen.py and loop_listener.py) were added to the script\n          directory that serve as examples about how to use the childutils\n          module.\n        \n        - A new envvar is added to child process environments:\n          SUPERVISOR_SERVER_URL.  This contains the server URL for the\n          supervisord running the child.\n        \n        - An ``OK`` URL was added at ``/ok.html`` which just returns the string\n          ``OK`` (can be used for up checks or speed checks via plain-old-HTTP).\n        \n        - An additional command-line option ``--profile_options`` is accepted\n          by the supervisord script for developer use::\n        \n            supervisord -n -c sample.conf --profile_options=cumulative,calls\n        \n          The values are sort_stats options that can be passed to the\n          standard Python profiler's PStats sort_stats method.\n        \n          When you exit supervisor, it will print Python profiling output to\n          stdout.\n        \n        - If cElementTree is installed in the Python used to invoke\n          supervisor, an alternate (faster, by about 2X) XML parser will be\n          used to parse XML-RPC request bodies.  cElementTree was added as\n          an \"extras_require\" option in setup.py.\n        \n        - Added the ability to start, stop, and restart process groups to\n          supervisorctl.  To start a group, use ``start groupname:*``.  To start\n          multiple groups, use ``start groupname1:* groupname2:*``.  Equivalent\n          commands work for \"stop\" and \"restart\". You can mix and match short\n          processnames, fullly-specified group:process names, and groupsplats on the\n          same line for any of these commands.\n        \n        - Added ``directory`` option to process config.  If you set this\n          option, supervisor will chdir to this directory before executing\n          the child program (and thus it will be the child's cwd).\n        \n        - Added ``umask`` option to process config.  If you set this option,\n          supervisor will set the umask of the child program.  (Thanks to\n          Ian Bicking for the suggestion).\n        \n        - A pair of scripts ``osx_memmon_eventgen.py`` and `osx_memmon_listener.py``\n          have been added to the scripts directory.  If they are used together as\n          described in their comments, processes which are consuming \"too much\"\n          memory will be restarted.  The ``eventgen`` script only works on OSX (my\n          main development platform) but it should be trivially generalizable to\n          other operating systems.\n        \n        - The long form ``--configuration`` (-c) command line option for\n          supervisord was broken.  Reported by Mike Orr.  (Mike Naberezny)\n        \n        - New log level: BLAT (blather).  We log all\n          supervisor-internal-related debugging info here.  Thanks to Mike\n          Orr for the suggestion.\n        \n        - We now allow supervisor to listen on both a UNIX domain socket and an inet\n          socket instead of making them mutually exclusive.  As a result, the options\n          \"http_port\", \"http_username\", \"http_password\", \"sockchmod\" and \"sockchown\"\n          are no longer part of the ``[supervisord]`` section configuration. These\n          have been supplanted by two other sections: ``[unix_http_server]`` and\n          ``[inet_http_server]``.  You'll need to insert one or the other (depending\n          on whether you want to listen on a UNIX domain socket or a TCP socket\n          respectively) or both into your supervisord.conf file.  These sections have\n          their own options (where applicable) for port, username, password, chmod,\n          and chown.  See README.txt for more information about these sections.\n        \n        - All supervisord command-line options related to \"http_port\",\n          \"http_username\", \"http_password\", \"sockchmod\" and \"sockchown\" have\n          been removed (see above point for rationale).\n        \n        - The option that *used* to be ``sockchown`` within the ``[supervisord]``\n          section (and is now named ``chown`` within the ``[unix_http_server]``\n          section) used to accept a dot-separated user.group value.  The separator\n          now must be a colon \":\", e.g. \"user:group\".  Unices allow for dots in\n          usernames, so this change is a bugfix.  Thanks to Ian Bicking for the bug\n          report.\n        \n        - If a '-c' option is not specified on the command line, both supervisord and\n          supervisorctl will search for one in the paths ``./supervisord.conf`` ,\n          ``./etc/supervisord.conf`` (relative to the current working dir when\n          supervisord or supervisorctl is invoked) or in ``/etc/supervisord.conf``\n          (the old default path).  These paths are searched in order, and supervisord\n          and supervisorctl will use the first one found.  If none are found,\n          supervisor will fail to start.\n        \n        - The Python string expression ``%(here)s`` (referring to the directory in\n          which the the configuration file was found) can be used within the\n          following sections/options within the config file::\n        \n              unix_http_server:file\n              supervisor:directory\n              supervisor:logfile\n              supervisor:pidfile\n              supervisor:childlogdir\n              supervisor:environment\n              program:environment\n              program:stdout_logfile\n              program:stderr_logfile\n              program:process_name\n              program:command\n        \n        - The ``--environment`` aka ``-b`` option was removed from the list of\n          available command-line switches to supervisord (use \"A=1 B=2\n          bin/supervisord\" instead).\n        \n        - If the socket filename (the tail-end of the unix:// URL) was\n          longer than 64 characters, supervisorctl would fail with an\n          encoding error at startup.\n        \n        - The ``identifier`` command-line argument was not functional.\n        \n        - Fixed http://www.plope.com/software/collector/215 (bad error\n          message in supervisorctl when program command not found on PATH).\n        \n        - Some child processes may not have been shut down properly at\n          supervisor shutdown time.\n        \n        - Move to ZPL-derived (but not ZPL) license available from\n          http://www.repoze.org/LICENSE.txt; it's slightly less restrictive\n          than the ZPL (no servicemark clause).\n        \n        - Spurious errors related to unclosed files (\"bad file descriptor\",\n          typically) were evident at supervisord \"reload\" time (when using\n          the \"reload\" command from supervisorctl).\n        \n        - We no longer bundle ez_setup to bootstrap setuptools installation.\n        \n        3.0a2 (2007-08-24)\n        ------------------\n        \n        - Fixed the README.txt example for defining the supervisor RPC\n          interface in the configuration file.  Thanks to Drew Perttula.\n        \n        - Fixed a bug where process communication events would not have the\n          proper payload if the payload data was very short.\n        \n        - when supervisord attempted to kill a process with SIGKILL after\n          the process was not killed within \"stopwaitsecs\" using a \"normal\"\n          kill signal, supervisord would crash with an improper\n          AssertionError.  Thanks to Calvin Hendryx-Parker.\n        \n        - On Linux, Supervisor would consume too much CPU in an effective\n          \"busywait\" between the time a subprocess exited and the time at\n          which supervisor was notified of its exit status.  Thanks to Drew\n          Perttula.\n        \n        - RPC interface behavior change: if the RPC method\n          \"sendProcessStdin\" is called against a process that has closed its\n          stdin file descriptor (e.g. it has done the equivalent of\n          \"sys.stdin.close(); os.close(0)\"), we return a NO_FILE fault\n          instead of accepting the data.\n        \n        - Changed the semantics of the process configuration ``autorestart``\n          parameter with respect to processes which move between the RUNNING and\n          EXITED state.  ``autorestart`` was previously a boolean.  Now it's a\n          trinary, accepting one of ``false``, ``unexpected``, or ``true``.  If it's\n          ``false``, a process will never be automatically restarted from the EXITED\n          state.  If it's ``unexpected``, a process that enters the EXITED state will\n          be automatically restarted if it exited with an exit code that was not\n          named in the process config's ``exitcodes`` list.  If it's ``true``, a\n          process that enters the EXITED state will be automatically restarted\n          unconditionally.  The default is now ``unexpected`` (it was previously\n          ``true``).  The readdition of this feature is a reversion of the behavior\n          change note in the changelog notes for 3.0a1 that asserted we never cared\n          about the process' exit status when determining whether to restart it or\n          not.\n        \n        - setup.py develop (and presumably setup.py install) would fail under Python\n          2.3.3, because setuptools attempted to import ``splituser`` from urllib2,\n          and it didn't exist.\n        \n        - It's now possible to use ``setup.py install`` and ``setup.py develop`` on\n          systems which do not have a C compiler if you set the environment variable\n          \"NO_MELD3_EXTENSION_MODULES=1\" in the shell in which you invoke these\n          commands (versions of meld3 > 0.6.1 respect this envvar and do not try to\n          compile optional C extensions when it's set).\n        \n        - The test suite would fail on Python versions <= 2.3.3 because\n          the \"assertTrue\" and \"assertFalse\" methods of unittest.TestCase\n          didn't exist in those versions.\n        \n        - The ``supervisorctl`` and ``supervisord`` wrapper scripts were disused in\n          favor of using setuptools' ``console_scripts`` entry point settings.\n        \n        - Documentation files and the sample configuration file are put into\n          the generated supervisor egg's ``doc`` directory.\n        \n        - Using the web interface would cause fairly dramatic memory\n          leakage.  We now require a version of meld3 that does not appear\n          to leak memory from its C extensions (0.6.3).\n        \n        3.0a1 (2007-08-16)\n        ------------------\n        \n        - Default config file comment documented 10 secs as default for ``startsecs``\n          value in process config, in reality it was 1 sec.  Thanks to Christoph\n          Zwerschke.\n        \n        - Make note of subprocess environment behavior in README.txt.\n          Thanks to Christoph Zwerschke.\n        \n        - New \"strip_ansi\" config file option attempts to strip ANSI escape\n          sequences from logs for smaller/more readable logs (submitted by\n          Mike Naberezny).\n        \n        - The XML-RPC method supervisor.getVersion() has been renamed for\n          clarity to supervisor.getAPIVersion().  The old name is aliased\n          for compatibility but is deprecated and will be removed in a\n          future version (Mike Naberezny).\n        \n        - Improved web interface styling (Mike Naberezny, Derek DeVries)\n        \n        - The XML-RPC method supervisor.startProcess() now checks that\n          the file exists and is executable (Mike Naberezny).\n        \n        - Two environment variables, \"SUPERVISOR_PROCESS_NAME\" and\n          \"SUPERVISOR_PROCESS_GROUP\" are set in the environment of child\n          processes, representing the name of the process and group in\n          supervisor's configuration.\n        \n        - Process state map change: a process may now move directly from the\n          STARTING state to the STOPPING state (as a result of a stop\n          request).\n        \n        - Behavior change: if ``autorestart`` is true, even if a process exits with\n          an \"expected\" exit code, it will still be restarted.  In the immediately\n          prior release of supervisor, this was true anyway, and no one complained,\n          so we're going to consider that the \"officially correct\" behavior from now\n          on.\n        \n        - Supervisor now logs subprocess stdout and stderr independently.\n          The old program config keys \"logfile\", \"logfile_backups\" and\n          \"logfile_maxbytes\" are superseded by \"stdout_logfile\",\n          \"stdout_logfile_backups\", and \"stdout_logfile_maxbytes\".  Added\n          keys include \"stderr_logfile\", \"stderr_logfile_backups\", and\n          \"stderr_logfile_maxbytes\".  An additional \"redirect_stderr\" key is\n          used to cause program stderr output to be sent to its stdout\n          channel.  The keys \"log_stderr\" and \"log_stdout\" have been\n          removed.\n        \n        - ``[program:x]`` config file sections now represent \"homgeneous process\n          groups\" instead of single processes.  A \"numprocs\" key in the section\n          represents the number of processes that are in the group.  A \"process_name\"\n          key in the section allows composition of the each process' name within the\n          homogeneous group.\n        \n        - A new kind of config file section, ``[group:x]`` now exists, allowing users\n          to group heterogeneous processes together into a process group that can be\n          controlled as a unit from a client.\n        \n        - Supervisord now emits \"events\" at certain points in its normal\n          operation.  These events include supervisor state change events,\n          process state change events, and \"process communication events\".\n        \n        - A new kind of config file section ``[eventlistener:x]`` now exists.  Each\n          section represents an \"event listener pool\", which is a special kind of\n          homogeneous process group.  Each process in the pool is meant to receive\n          supervisor \"events\" via its stdin and perform some notification (e.g. send\n          a mail, log, make an http request, etc.)\n        \n        - Supervisord can now capture data between special tokens in\n          subprocess stdout/stderr output and emit a \"process communications\n          event\" as a result.\n        \n        - Supervisor's XML-RPC interface may be extended arbitrarily by programmers.\n          Additional top-level namespace XML-RPC interfaces can be added using the\n          ``[rpcinterface:foo]`` declaration in the configuration file.\n        \n        - New ``supervisor``-namespace XML-RPC methods have been added:\n          getAPIVersion (returns the XML-RPC API version, the older\n          \"getVersion\" is now deprecated), \"startProcessGroup\" (starts all\n          processes in a supervisor process group), \"stopProcessGroup\"\n          (stops all processes in a supervisor process group), and\n          \"sendProcessStdin\" (sends data to a process' stdin file\n          descriptor).\n        \n        - ``supervisor``-namespace XML-RPC methods which previously accepted\n          ony a process name as \"name\" (startProcess, stopProcess,\n          getProcessInfo, readProcessLog, tailProcessLog, and\n          clearProcessLog) now accept a \"name\" which may contain both the\n          process name and the process group name in the form\n          ``groupname:procname``.  For backwards compatibility purposes,\n          \"simple\" names will also be accepted but will be expanded\n          internally (e.g. if \"foo\" is sent as a name, it will be expanded\n          to \"foo:foo\", representing the foo process within the foo process\n          group).\n        \n        - 2.X versions of supervisorctl will work against supervisor 3.0\n          servers in a degraded fashion, but 3.X versions of supervisorctl\n          will not work at all against supervisor 2.X servers.\n        \n        2.2b1 (2007-03-31)\n        ------------------\n        \n        - Individual program configuration sections can now specify an\n          environment.\n        \n        - Added a 'version' command to supervisorctl.  This returns the\n          version of the supervisor2 package which the remote supervisord\n          process is using.\n        \n        2.1 (2007-03-17)\n        ----------------\n        \n        - When supervisord was invoked more than once, and its configuration\n          was set up to use a UNIX domain socket as the HTTP server, the\n          socket file would be erased in error.  The symptom of this was\n          that a subsequent invocation of supervisorctl could not find the\n          socket file, so the process could not be controlled (it and all of\n          its subprocesses would need to be killed by hand).\n        \n        - Close subprocess file descriptors properly when a subprocess exits\n          or otherwise dies.  This should result in fewer \"too many open\n          files to spawn foo\" messages when supervisor is left up for long\n          periods of time.\n        \n        - When a process was not killable with a \"normal\" signal at shutdown\n          time, too many \"INFO: waiting for x to die\" messages would be sent\n          to the log until we ended up killing the process with a SIGKILL.\n          Now a maximum of one every three seconds is sent up until SIGKILL\n          time.  Thanks to Ian Bicking.\n        \n        - Add an assertion: we never want to try to marshal None to XML-RPC\n          callers.  Issue 223 in the collector from vgatto indicates that\n          somehow a supervisor XML-RPC method is returning None (which\n          should never happen), but I cannot identify how.  Maybe the\n          assertion will give us more clues if it happens again.\n        \n        - Supervisor would crash when run under Python 2.5 because the\n          xmlrpclib.Transport class in Python 2.5 changed in a\n          backward-incompatible way.  Thanks to Eric Westra for the bug\n          report and a fix.\n        \n        - Tests now pass under Python 2.5.\n        \n        - Better supervisorctl reporting on stop requests that have a FAILED\n          status.\n        \n        - Removed duplicated code (readLog/readMainLog), thanks to Mike\n          Naberezny.\n        \n        - Added tailProcessLog command to the XML-RPC API.  It provides a\n          more efficient way to tail logs than readProcessLog().  Use\n          readProcessLog() to read chunks and tailProcessLog() to tail.\n          (thanks to Mike Naberezny).\n        \n        2.1b1 (2006-08-30)\n        ------------------\n        \n        - \"supervisord -h\" and \"supervisorctl -h\" did not work (traceback\n          instead of showing help view (thanks to Damjan from Macedonia for\n          the bug report).\n        \n        - Processes which started successfully after failing to start\n          initially are no longer reported in BACKOFF state once they are\n          started successfully (thanks to Damjan from Macdonia for the bug\n          report).\n        \n        - Add new 'maintail' command to supervisorctl shell, which allows\n          you to tail the 'main' supervisor log.  This uses a new\n          readMainLog xmlrpc API.\n        \n        - Various process-state-transition related changes, all internal.\n          README.txt updated with new state transition map.\n        \n        - startProcess and startAllProcesses xmlrpc APIs changed: instead of\n          accepting a timeout integer, these accept a wait boolean (timeout\n          is implied by process' \"startsecs\" configuration).  If wait is\n          False, do not wait for startsecs.\n        \n        Known issues:\n        \n        - Code does not match state transition map.  Processes which are\n          configured as autorestarting which start \"successfully\" but\n          subsequently die after 'startsecs' go through the transitions\n          RUNNING -> BACKOFF -> STARTING instead of the correct transitions\n          RUNNING -> EXITED -> STARTING.  This has no real negative effect,\n          but should be fixed for correctness.\n        \n        2.0 (2006-08-30)\n        ----------------\n        \n        - pidfile written in daemon mode had incorrect pid.\n        \n        - supervisorctl: tail (non -f) did not pass through proper error\n          messages when supplied by the server.\n        \n        - Log signal name used to kill processes at debug level.\n        \n        - supervisorctl \"tail -f\" didn't work with supervisorctl sections\n          configured with an absolute unix:// URL\n        \n        - New \"environment\" config file option allows you to add environment\n          variable values to supervisord environment from config file.\n        \n        2.0b1 (2006-07-12)\n        ------------------\n        \n        - Fundamental rewrite based on 1.0.7, use distutils (only) for\n          installation, use ConfigParser rather than ZConfig, use HTTP for\n          wire protocol, web interface, less lies in supervisorctl.\n        \n        1.0.7 (2006-07-11)\n        ------------------\n        \n        - Don't log a waitpid error if the error value is \"no children\".\n        \n        - Use select() against child file descriptor pipes and bump up select\n          timeout appropriately.\n        \n        1.0.6 (2005-11-20)\n        ------------------\n        \n        - Various tweaks to make run more effectively on Mac OS X\n          (including fixing tests to run there, no more \"error reading\n          from fd XXX\" in logtail output, reduced disk/CPU usage as a\n          result of not writing to log file unnecessarily on Mac OS).\n        \n        1.0.5 (2004-07-29)\n        ------------------\n        \n        - Short description: In previous releases, managed programs that\n          created voluminous stdout/stderr output could run more slowly\n          than usual when invoked under supervisor, now they do not.\n        \n          Long description: The supervisord manages child output by\n          polling pipes related to child process stderr/stdout.  Polling\n          operations are performed in the mainloop, which also performs a\n          'select' on the filedescriptor(s) related to client/server\n          operations.  In prior releases, the select timeout was set to 2\n          seconds.  This release changes the timeout to 1/10th of a second\n          in order to keep up with client stdout/stderr output.\n        \n          Gory description: On Linux, at least, there is a pipe buffer\n          size fixed by the kernel of somewhere between 512 - 4096 bytes;\n          when a child process writes enough data to fill the pipe buffer,\n          it will block on further stdout/stderr output until supervisord\n          comes along and clears out the buffer by reading bytes from the\n          pipe within the mainloop.  We now clear these buffers much more\n          quickly than we did before due to the increased frequency of\n          buffer reads in the mainloop; the timeout value of 1/10th of a\n          second seems to be fast enough to clear out the buffers of child\n          process pipes when managing programs on even a very fast system\n          while still enabling the supervisord process to be in a sleeping\n          state for most of the time.\n        \n        1.0.4 or \"Alpha 4\" (2004-06-30)\n        -------------------------------\n        \n        - Forgot to update version tag in configure.py, so the supervisor version\n          in a3 is listed as \"1.0.1\", where it should be \"1.0.3\".  a4 will be\n          listed as \"1.0.4'.\n        \n        - Instead of preventing a process from starting if setuid() can't\n          be called (if supervisord is run as nonroot, for example), just log\n          the error and proceed.\n        \n        1.0.3 or \"Alpha 3\" (2004-05-26)\n        -------------------------------\n        \n        - The daemon could chew up a lot of CPU time trying to select()\n          on real files (I didn't know select() failed to block when a file\n          is at EOF).  Fixed by polling instead of using select().\n        \n        - Processes could \"leak\" and become zombies due to a bug in\n          reaping dead children.\n        \n        - supervisord now defaults to daemonizing itself.\n        \n        - 'daemon' config file option and -d/--daemon command-line option\n          removed from supervisord acceptable options.  In place of these\n          options, we now have a 'nodaemon' config file option and a\n          -n/--nodaemon command-line option.\n        \n        - logtail now works.\n        \n        - pidproxy changed slightly to reap children synchronously.\n        \n        - in alpha2 changelist, supervisord was reported to have a\n          \"noauth\" command-line option.  This was not accurate.  The way\n          to turn off auth on the server is to disinclude the \"passwdfile\"\n          config file option from the server config file.  The client\n          however does indeed still have a noauth option, which prevents\n          it from ever attempting to send authentication credentials to\n          servers.\n        \n        - ZPL license added for ZConfig to LICENSE.txt\n        \n        1.0.2 or \"Alpha 2\" (Unreleased)\n        -------------------------------\n        \n        - supervisorctl and supervisord no longer need to run on the same machine\n          due to the addition of internet socket support.\n        \n        - supervisorctl and supervisord no longer share a common configuration\n          file format.\n        \n        - supervisorctl now uses a persistent connection to supervisord\n          (as opposed to creating a fresh connection for each command).\n        \n        - SRP (Secure Remote Password) authentication is now a supported form\n          of access control for supervisord.  In supervisorctl interactive mode,\n          by default, users will be asked for credentials when attempting to\n          talk to a supervisord that requires SRP authentication.\n        \n        - supervisord has a new command-line option and configuration file\n          option for specifying \"noauth\" mode, which signifies that it\n          should not require authentication from clients.\n        \n        - supervisorctl has a new command-line option and configuration\n          option for specifying \"noauth\" mode, which signifies that it\n          should never attempt to send authentication info to servers.\n        \n        - supervisorctl has new commands: open: opens a connection to a new\n          supervisord; close: closes the current connection.\n        \n        - supervisorctl's \"logtail\" command now retrieves log data from\n          supervisord's log file remotely (as opposed to reading it\n          directly from a common filesystem).  It also no longer emulates\n          \"tail -f\", it just returns <n> lines of the server's log file.\n        \n        - The supervisord/supervisorctl wire protocol now has protocol versioning\n          and is documented in \"protocol.txt\".\n        \n        - \"configfile\" command-line override -C changed to -c\n        \n        - top-level section name for supervisor schema changed to 'supervisord'\n          from 'supervisor'\n        \n        - Added 'pidproxy' shim program.\n        \n        Known issues in alpha 2:\n        \n        - If supervisorctl loses a connection to a supervisord or if the\n          remote supervisord crashes or shuts down unexpectedly, it is\n          possible that any supervisorctl talking to it will \"hang\"\n          indefinitely waiting for data.  Pressing Ctrl-C will allow you\n          to restart supervisorctl.\n        \n        - Only one supervisorctl process may talk to a given supervisord\n          process at a time.  If two supervisorctl processes attempt to talk\n          to the same supervisord process, one will \"win\" and the other will\n          be disconnected.\n        \n        - Sometimes if a pidproxy is used to start a program, the pidproxy\n          program itself will \"leak\".\n        \n        1.0.0 or \"Alpha 1\" (Unreleased)\n        -------------------------------\n        \n        Initial release.\n        ",
        "home_page": "http://supervisord.org/",
        "author": "Chris McDonough",
        "author_email": "chrism@plope.com",
        "license": "BSD-derived (http://www.repoze.org/LICENSE.txt)",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Environment :: No Input/Output (Daemon)",
          "Intended Audience :: System Administrators",
          "Natural Language :: English",
          "Operating System :: POSIX",
          "Topic :: System :: Boot",
          "Topic :: System :: Monitoring",
          "Topic :: System :: Systems Administration",
          "Programming Language :: Python",
          "Programming Language :: Python :: 2",
          "Programming Language :: Python :: 2.7",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.4",
          "Programming Language :: Python :: 3.5",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7"
        ],
        "requires_dist": [
          "pytest ; extra == \"testing\"",
          "pytest-cov ; extra == \"testing\""
        ],
        "provides_extra": [
          "testing"
        ]
      },
      "metadata_location": "/usr/lib/python3/dist-packages/supervisor-4.1.0.egg-info"
    },
    {
      "metadata": {
        "metadata_version": "1.1",
        "name": "systemd-python",
        "version": "234",
        "platform": [
          "UNKNOWN"
        ],
        "summary": "Python interface for libsystemd",
        "description": "UNKNOWN",
        "home_page": "https://github.com/systemd/python-systemd",
        "author": "systemd developers",
        "author_email": "systemd-devel@lists.freedesktop.org",
        "license": "LGPLv2+",
        "classifier": [
          "Programming Language :: Python :: 2",
          "Programming Language :: Python :: 3",
          "Topic :: Software Development :: Libraries :: Python Modules",
          "Topic :: System :: Logging",
          "License :: OSI Approved :: GNU Lesser General Public License v2 or later (LGPLv2+)"
        ]
      },
      "metadata_location": null
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "ubuntu-advantage-tools",
        "version": "27.10",
        "platform": [
          "UNKNOWN"
        ],
        "summary": "Manage Ubuntu Advantage support entitlements",
        "description": "UNKNOWN",
        "home_page": "https://ubuntu.com/support",
        "author": "Ubuntu Server Team",
        "author_email": "ubuntu-server@lists.ubuntu.com",
        "license": "GPLv3",
        "requires_dist": [
          "flake8 ; extra == \"test\"",
          "mock ; extra == \"test\"",
          "pycodestyle ; extra == \"test\"",
          "pytest ; extra == \"test\"",
          "pytest-cov ; extra == \"test\""
        ],
        "provides_extra": [
          "test"
        ]
      },
      "metadata_location": "/usr/lib/python3/dist-packages/ubuntu_advantage_tools-27.10.egg-info"
    },
    {
      "metadata": {
        "metadata_version": "1.2",
        "name": "ubuntu-drivers-common",
        "version": "0.0.0",
        "platform": [
          "UNKNOWN"
        ],
        "summary": "Detect and install additional Ubuntu driver packages",
        "description": "UNKNOWN",
        "home_page": "http://www.albertomilone.com",
        "author": "Alberto Milone",
        "author_email": "albertomilone@alice.it",
        "maintainer": "Alberto Milone",
        "maintainer_email": "albertomilone@alice.it",
        "license": "gpl"
      },
      "metadata_location": "/usr/lib/python3/dist-packages/ubuntu_drivers_common-0.0.0.egg-info"
    },
    {
      "metadata": {
        "metadata_version": "1.0",
        "name": "ufw",
        "version": "0.36",
        "platform": [
          "UNKNOWN"
        ],
        "summary": "front-end for Linux firewalling",
        "description": "front-end for Linux firewalling",
        "home_page": "https://launchpad.net/ufw",
        "author": "Jamie Strandboge",
        "author_email": "jamie@canonical.com",
        "license": "GPL-3"
      },
      "metadata_location": null
    },
    {
      "metadata": {
        "metadata_version": "1.0",
        "name": "unattended-upgrades",
        "version": "0.1",
        "platform": [
          "UNKNOWN"
        ],
        "summary": "UNKNOWN",
        "description": "UNKNOWN",
        "home_page": "UNKNOWN",
        "author": "UNKNOWN",
        "author_email": "UNKNOWN",
        "license": "UNKNOWN"
      },
      "metadata_location": "/usr/lib/python3/dist-packages/unattended_upgrades-0.1.egg-info"
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "urllib3",
        "version": "1.25.8",
        "platform": [
          "UNKNOWN"
        ],
        "summary": "HTTP library with thread-safe connection pooling, file post, and more.",
        "description": "urllib3\n        =======\n        \n        urllib3 is a powerful, *sanity-friendly* HTTP client for Python. Much of the\n        Python ecosystem already uses urllib3 and you should too.\n        urllib3 brings many critical features that are missing from the Python\n        standard libraries:\n        \n        - Thread safety.\n        - Connection pooling.\n        - Client-side SSL/TLS verification.\n        - File uploads with multipart encoding.\n        - Helpers for retrying requests and dealing with HTTP redirects.\n        - Support for gzip, deflate, and brotli encoding.\n        - Proxy support for HTTP and SOCKS.\n        - 100% test coverage.\n        \n        urllib3 is powerful and easy to use::\n        \n            >>> import urllib3\n            >>> http = urllib3.PoolManager()\n            >>> r = http.request('GET', 'http://httpbin.org/robots.txt')\n            >>> r.status\n            200\n            >>> r.data\n            'User-agent: *\\nDisallow: /deny\\n'\n        \n        \n        Installing\n        ----------\n        \n        urllib3 can be installed with `pip <https://pip.pypa.io>`_::\n        \n            $ pip install urllib3\n        \n        Alternatively, you can grab the latest source code from `GitHub <https://github.com/urllib3/urllib3>`_::\n        \n            $ git clone git://github.com/urllib3/urllib3.git\n            $ python setup.py install\n        \n        \n        Documentation\n        -------------\n        \n        urllib3 has usage and reference documentation at `urllib3.readthedocs.io <https://urllib3.readthedocs.io>`_.\n        \n        \n        Contributing\n        ------------\n        \n        urllib3 happily accepts contributions. Please see our\n        `contributing documentation <https://urllib3.readthedocs.io/en/latest/contributing.html>`_\n        for some tips on getting started.\n        \n        \n        Security Disclosures\n        --------------------\n        \n        To report a security vulnerability, please use the\n        `Tidelift security contact <https://tidelift.com/security>`_.\n        Tidelift will coordinate the fix and disclosure with maintainers.\n        \n        Maintainers\n        -----------\n        \n        - `@sethmlarson <https://github.com/sethmlarson>`_ (Seth M. Larson)\n        - `@pquentin <https://github.com/pquentin>`_ (Quentin Pradet)\n        - `@theacodes <https://github.com/theacodes>`_ (Thea Flowers)\n        - `@haikuginger <https://github.com/haikuginger>`_ (Jess Shapiro)\n        - `@lukasa <https://github.com/lukasa>`_ (Cory Benfield)\n        - `@sigmavirus24 <https://github.com/sigmavirus24>`_ (Ian Stapleton Cordasco)\n        - `@shazow <https://github.com/shazow>`_ (Andrey Petrov)\n        \n        👋\n        \n        \n        Sponsorship\n        -----------\n        \n        .. |tideliftlogo| image:: https://nedbatchelder.com/pix/Tidelift_Logos_RGB_Tidelift_Shorthand_On-White_small.png\n           :width: 75\n           :alt: Tidelift\n        \n        .. list-table::\n           :widths: 10 100\n        \n           * - |tideliftlogo|\n             - Professional support for urllib3 is available as part of the `Tidelift\n               Subscription`_.  Tidelift gives software development teams a single source for\n               purchasing and maintaining their software, with professional grade assurances\n               from the experts who know it best, while seamlessly integrating with existing\n               tools.\n        \n        .. _Tidelift Subscription: https://tidelift.com/subscription/pkg/pypi-urllib3?utm_source=pypi-urllib3&utm_medium=referral&utm_campaign=readme\n        \n        If your company benefits from this library, please consider `sponsoring its\n        development <https://urllib3.readthedocs.io/en/latest/contributing.html#sponsorship-project-grants>`_.\n        \n        Sponsors include:\n        \n        - Abbott (2018-2019), sponsored `@sethmlarson <https://github.com/sethmlarson>`_'s work on urllib3.\n        - Google Cloud Platform (2018-2019), sponsored `@theacodes <https://github.com/theacodes>`_'s work on urllib3.\n        - Akamai (2017-2018), sponsored `@haikuginger <https://github.com/haikuginger>`_'s work on urllib3\n        - Hewlett Packard Enterprise (2016-2017), sponsored `@Lukasa’s <https://github.com/Lukasa>`_ work on urllib3.\n        \n        \n        Changes\n        =======\n        \n        1.25.8 (2020-01-20)\n        -------------------\n        \n        * Drop support for EOL Python 3.4 (Pull #1774)\n        \n        * Optimize _encode_invalid_chars (Pull #1787)\n        \n        \n        1.25.7 (2019-11-11)\n        -------------------\n        \n        * Preserve ``chunked`` parameter on retries (Pull #1715, Pull #1734)\n        \n        * Allow unset ``SERVER_SOFTWARE`` in App Engine (Pull #1704, Issue #1470)\n        \n        * Fix issue where URL fragment was sent within the request target. (Pull #1732)\n        \n        * Fix issue where an empty query section in a URL would fail to parse. (Pull #1732)\n        \n        * Remove TLS 1.3 support in SecureTransport due to Apple removing support (Pull #1703)\n        \n        \n        1.25.6 (2019-09-24)\n        -------------------\n        \n        * Fix issue where tilde (``~``) characters were incorrectly\n          percent-encoded in the path. (Pull #1692)\n        \n        \n        1.25.5 (2019-09-19)\n        -------------------\n        \n        * Add mitigation for BPO-37428 affecting Python <3.7.4 and OpenSSL 1.1.1+ which\n          caused certificate verification to be enabled when using ``cert_reqs=CERT_NONE``.\n          (Issue #1682)\n        \n        \n        1.25.4 (2019-09-19)\n        -------------------\n        \n        * Propagate Retry-After header settings to subsequent retries. (Pull #1607)\n        \n        * Fix edge case where Retry-After header was still respected even when\n          explicitly opted out of. (Pull #1607)\n        \n        * Remove dependency on ``rfc3986`` for URL parsing.\n        \n        * Fix issue where URLs containing invalid characters within ``Url.auth`` would\n          raise an exception instead of percent-encoding those characters.\n        \n        * Add support for ``HTTPResponse.auto_close = False`` which makes HTTP responses\n          work well with BufferedReaders and other ``io`` module features. (Pull #1652)\n        \n        * Percent-encode invalid characters in URL for ``HTTPConnectionPool.request()`` (Pull #1673)\n        \n        \n        1.25.3 (2019-05-23)\n        -------------------\n        \n        * Change ``HTTPSConnection`` to load system CA certificates\n          when ``ca_certs``, ``ca_cert_dir``, and ``ssl_context`` are\n          unspecified. (Pull #1608, Issue #1603)\n        \n        * Upgrade bundled rfc3986 to v1.3.2. (Pull #1609, Issue #1605)\n        \n        \n        1.25.2 (2019-04-28)\n        -------------------\n        \n        * Change ``is_ipaddress`` to not detect IPvFuture addresses. (Pull #1583)\n        \n        * Change ``parse_url`` to percent-encode invalid characters within the\n          path, query, and target components. (Pull #1586)\n        \n        \n        1.25.1 (2019-04-24)\n        -------------------\n        \n        * Add support for Google's ``Brotli`` package. (Pull #1572, Pull #1579)\n        \n        * Upgrade bundled rfc3986 to v1.3.1 (Pull #1578)\n        \n        \n        1.25 (2019-04-22)\n        -----------------\n        \n        * Require and validate certificates by default when using HTTPS (Pull #1507)\n        \n        * Upgraded ``urllib3.utils.parse_url()`` to be RFC 3986 compliant. (Pull #1487)\n        \n        * Added support for ``key_password`` for ``HTTPSConnectionPool`` to use\n          encrypted ``key_file`` without creating your own ``SSLContext`` object. (Pull #1489)\n        \n        * Add TLSv1.3 support to CPython, pyOpenSSL, and SecureTransport ``SSLContext``\n          implementations. (Pull #1496)\n        \n        * Switched the default multipart header encoder from RFC 2231 to HTML 5 working draft. (Issue #303, PR #1492)\n        \n        * Fixed issue where OpenSSL would block if an encrypted client private key was\n          given and no password was given. Instead an ``SSLError`` is raised. (Pull #1489)\n        \n        * Added support for Brotli content encoding. It is enabled automatically if\n          ``brotlipy`` package is installed which can be requested with\n          ``urllib3[brotli]`` extra. (Pull #1532)\n        \n        * Drop ciphers using DSS key exchange from default TLS cipher suites.\n          Improve default ciphers when using SecureTransport. (Pull #1496)\n        \n        * Implemented a more efficient ``HTTPResponse.__iter__()`` method. (Issue #1483)\n        \n        1.24.3 (2019-05-01)\n        -------------------\n        \n        * Apply fix for CVE-2019-9740. (Pull #1591)\n        \n        1.24.2 (2019-04-17)\n        -------------------\n        \n        * Don't load system certificates by default when any other ``ca_certs``, ``ca_certs_dir`` or\n          ``ssl_context`` parameters are specified.\n        \n        * Remove Authorization header regardless of case when redirecting to cross-site. (Issue #1510)\n        \n        * Add support for IPv6 addresses in subjectAltName section of certificates. (Issue #1269)\n        \n        \n        1.24.1 (2018-11-02)\n        -------------------\n        \n        * Remove quadratic behavior within ``GzipDecoder.decompress()`` (Issue #1467)\n        \n        * Restored functionality of ``ciphers`` parameter for ``create_urllib3_context()``. (Issue #1462)\n        \n        \n        1.24 (2018-10-16)\n        -----------------\n        \n        * Allow key_server_hostname to be specified when initializing a PoolManager to allow custom SNI to be overridden. (Pull #1449)\n        \n        * Test against Python 3.7 on AppVeyor. (Pull #1453)\n        \n        * Early-out ipv6 checks when running on App Engine. (Pull #1450)\n        \n        * Change ambiguous description of backoff_factor (Pull #1436)\n        \n        * Add ability to handle multiple Content-Encodings (Issue #1441 and Pull #1442)\n        \n        * Skip DNS names that can't be idna-decoded when using pyOpenSSL (Issue #1405).\n        \n        * Add a server_hostname parameter to HTTPSConnection which allows for\n          overriding the SNI hostname sent in the handshake. (Pull #1397)\n        \n        * Drop support for EOL Python 2.6 (Pull #1429 and Pull #1430)\n        \n        * Fixed bug where responses with header Content-Type: message/* erroneously\n          raised HeaderParsingError, resulting in a warning being logged. (Pull #1439)\n        \n        * Move urllib3 to src/urllib3 (Pull #1409)\n        \n        \n        1.23 (2018-06-04)\n        -----------------\n        \n        * Allow providing a list of headers to strip from requests when redirecting\n          to a different host. Defaults to the ``Authorization`` header. Different\n          headers can be set via ``Retry.remove_headers_on_redirect``. (Issue #1316)\n        \n        * Fix ``util.selectors._fileobj_to_fd`` to accept ``long`` (Issue #1247).\n        \n        * Dropped Python 3.3 support. (Pull #1242)\n        \n        * Put the connection back in the pool when calling stream() or read_chunked() on\n          a chunked HEAD response. (Issue #1234)\n        \n        * Fixed pyOpenSSL-specific ssl client authentication issue when clients\n          attempted to auth via certificate + chain (Issue #1060)\n        \n        * Add the port to the connectionpool connect print (Pull #1251)\n        \n        * Don't use the ``uuid`` module to create multipart data boundaries. (Pull #1380)\n        \n        * ``read_chunked()`` on a closed response returns no chunks. (Issue #1088)\n        \n        * Add Python 2.6 support to ``contrib.securetransport`` (Pull #1359)\n        \n        * Added support for auth info in url for SOCKS proxy (Pull #1363)\n        \n        \n        1.22 (2017-07-20)\n        -----------------\n        \n        * Fixed missing brackets in ``HTTP CONNECT`` when connecting to IPv6 address via\n          IPv6 proxy. (Issue #1222)\n        \n        * Made the connection pool retry on ``SSLError``.  The original ``SSLError``\n          is available on ``MaxRetryError.reason``. (Issue #1112)\n        \n        * Drain and release connection before recursing on retry/redirect.  Fixes\n          deadlocks with a blocking connectionpool. (Issue #1167)\n        \n        * Fixed compatibility for cookiejar. (Issue #1229)\n        \n        * pyopenssl: Use vendored version of ``six``. (Issue #1231)\n        \n        \n        1.21.1 (2017-05-02)\n        -------------------\n        \n        * Fixed SecureTransport issue that would cause long delays in response body\n          delivery. (Pull #1154)\n        \n        * Fixed regression in 1.21 that threw exceptions when users passed the\n          ``socket_options`` flag to the ``PoolManager``.  (Issue #1165)\n        \n        * Fixed regression in 1.21 that threw exceptions when users passed the\n          ``assert_hostname`` or ``assert_fingerprint`` flag to the ``PoolManager``.\n          (Pull #1157)\n        \n        \n        1.21 (2017-04-25)\n        -----------------\n        \n        * Improved performance of certain selector system calls on Python 3.5 and\n          later. (Pull #1095)\n        \n        * Resolved issue where the PyOpenSSL backend would not wrap SysCallError\n          exceptions appropriately when sending data. (Pull #1125)\n        \n        * Selectors now detects a monkey-patched select module after import for modules\n          that patch the select module like eventlet, greenlet. (Pull #1128)\n        \n        * Reduced memory consumption when streaming zlib-compressed responses\n          (as opposed to raw deflate streams). (Pull #1129)\n        \n        * Connection pools now use the entire request context when constructing the\n          pool key. (Pull #1016)\n        \n        * ``PoolManager.connection_from_*`` methods now accept a new keyword argument,\n          ``pool_kwargs``, which are merged with the existing ``connection_pool_kw``.\n          (Pull #1016)\n        \n        * Add retry counter for ``status_forcelist``. (Issue #1147)\n        \n        * Added ``contrib`` module for using SecureTransport on macOS:\n          ``urllib3.contrib.securetransport``.  (Pull #1122)\n        \n        * urllib3 now only normalizes the case of ``http://`` and ``https://`` schemes:\n          for schemes it does not recognise, it assumes they are case-sensitive and\n          leaves them unchanged.\n          (Issue #1080)\n        \n        \n        1.20 (2017-01-19)\n        -----------------\n        \n        * Added support for waiting for I/O using selectors other than select,\n          improving urllib3's behaviour with large numbers of concurrent connections.\n          (Pull #1001)\n        \n        * Updated the date for the system clock check. (Issue #1005)\n        \n        * ConnectionPools now correctly consider hostnames to be case-insensitive.\n          (Issue #1032)\n        \n        * Outdated versions of PyOpenSSL now cause the PyOpenSSL contrib module\n          to fail when it is injected, rather than at first use. (Pull #1063)\n        \n        * Outdated versions of cryptography now cause the PyOpenSSL contrib module\n          to fail when it is injected, rather than at first use. (Issue #1044)\n        \n        * Automatically attempt to rewind a file-like body object when a request is\n          retried or redirected. (Pull #1039)\n        \n        * Fix some bugs that occur when modules incautiously patch the queue module.\n          (Pull #1061)\n        \n        * Prevent retries from occurring on read timeouts for which the request method\n          was not in the method whitelist. (Issue #1059)\n        \n        * Changed the PyOpenSSL contrib module to lazily load idna to avoid\n          unnecessarily bloating the memory of programs that don't need it. (Pull\n          #1076)\n        \n        * Add support for IPv6 literals with zone identifiers. (Pull #1013)\n        \n        * Added support for socks5h:// and socks4a:// schemes when working with SOCKS\n          proxies, and controlled remote DNS appropriately. (Issue #1035)\n        \n        \n        1.19.1 (2016-11-16)\n        -------------------\n        \n        * Fixed AppEngine import that didn't function on Python 3.5. (Pull #1025)\n        \n        \n        1.19 (2016-11-03)\n        -----------------\n        \n        * urllib3 now respects Retry-After headers on 413, 429, and 503 responses when\n          using the default retry logic. (Pull #955)\n        \n        * Remove markers from setup.py to assist ancient setuptools versions. (Issue\n          #986)\n        \n        * Disallow superscripts and other integerish things in URL ports. (Issue #989)\n        \n        * Allow urllib3's HTTPResponse.stream() method to continue to work with\n          non-httplib underlying FPs. (Pull #990)\n        \n        * Empty filenames in multipart headers are now emitted as such, rather than\n          being suppressed. (Issue #1015)\n        \n        * Prefer user-supplied Host headers on chunked uploads. (Issue #1009)\n        \n        \n        1.18.1 (2016-10-27)\n        -------------------\n        \n        * CVE-2016-9015. Users who are using urllib3 version 1.17 or 1.18 along with\n          PyOpenSSL injection and OpenSSL 1.1.0 *must* upgrade to this version. This\n          release fixes a vulnerability whereby urllib3 in the above configuration\n          would silently fail to validate TLS certificates due to erroneously setting\n          invalid flags in OpenSSL's ``SSL_CTX_set_verify`` function. These erroneous\n          flags do not cause a problem in OpenSSL versions before 1.1.0, which\n          interprets the presence of any flag as requesting certificate validation.\n        \n          There is no PR for this patch, as it was prepared for simultaneous disclosure\n          and release. The master branch received the same fix in PR #1010.\n        \n        \n        1.18 (2016-09-26)\n        -----------------\n        \n        * Fixed incorrect message for IncompleteRead exception. (PR #973)\n        \n        * Accept ``iPAddress`` subject alternative name fields in TLS certificates.\n          (Issue #258)\n        \n        * Fixed consistency of ``HTTPResponse.closed`` between Python 2 and 3.\n          (Issue #977)\n        \n        * Fixed handling of wildcard certificates when using PyOpenSSL. (Issue #979)\n        \n        \n        1.17 (2016-09-06)\n        -----------------\n        \n        * Accept ``SSLContext`` objects for use in SSL/TLS negotiation. (Issue #835)\n        \n        * ConnectionPool debug log now includes scheme, host, and port. (Issue #897)\n        \n        * Substantially refactored documentation. (Issue #887)\n        \n        * Used URLFetch default timeout on AppEngine, rather than hardcoding our own.\n          (Issue #858)\n        \n        * Normalize the scheme and host in the URL parser (Issue #833)\n        \n        * ``HTTPResponse`` contains the last ``Retry`` object, which now also\n          contains retries history. (Issue #848)\n        \n        * Timeout can no longer be set as boolean, and must be greater than zero.\n          (PR #924)\n        \n        * Removed pyasn1 and ndg-httpsclient from dependencies used for PyOpenSSL. We\n          now use cryptography and idna, both of which are already dependencies of\n          PyOpenSSL. (PR #930)\n        \n        * Fixed infinite loop in ``stream`` when amt=None. (Issue #928)\n        \n        * Try to use the operating system's certificates when we are using an\n          ``SSLContext``. (PR #941)\n        \n        * Updated cipher suite list to allow ChaCha20+Poly1305. AES-GCM is preferred to\n          ChaCha20, but ChaCha20 is then preferred to everything else. (PR #947)\n        \n        * Updated cipher suite list to remove 3DES-based cipher suites. (PR #958)\n        \n        * Removed the cipher suite fallback to allow HIGH ciphers. (PR #958)\n        \n        * Implemented ``length_remaining`` to determine remaining content\n          to be read. (PR #949)\n        \n        * Implemented ``enforce_content_length`` to enable exceptions when\n          incomplete data chunks are received. (PR #949)\n        \n        * Dropped connection start, dropped connection reset, redirect, forced retry,\n          and new HTTPS connection log levels to DEBUG, from INFO. (PR #967)\n        \n        \n        1.16 (2016-06-11)\n        -----------------\n        \n        * Disable IPv6 DNS when IPv6 connections are not possible. (Issue #840)\n        \n        * Provide ``key_fn_by_scheme`` pool keying mechanism that can be\n          overridden. (Issue #830)\n        \n        * Normalize scheme and host to lowercase for pool keys, and include\n          ``source_address``. (Issue #830)\n        \n        * Cleaner exception chain in Python 3 for ``_make_request``.\n          (Issue #861)\n        \n        * Fixed installing ``urllib3[socks]`` extra. (Issue #864)\n        \n        * Fixed signature of ``ConnectionPool.close`` so it can actually safely be\n          called by subclasses. (Issue #873)\n        \n        * Retain ``release_conn`` state across retries. (Issues #651, #866)\n        \n        * Add customizable ``HTTPConnectionPool.ResponseCls``, which defaults to\n          ``HTTPResponse`` but can be replaced with a subclass. (Issue #879)\n        \n        \n        1.15.1 (2016-04-11)\n        -------------------\n        \n        * Fix packaging to include backports module. (Issue #841)\n        \n        \n        1.15 (2016-04-06)\n        -----------------\n        \n        * Added Retry(raise_on_status=False). (Issue #720)\n        \n        * Always use setuptools, no more distutils fallback. (Issue #785)\n        \n        * Dropped support for Python 3.2. (Issue #786)\n        \n        * Chunked transfer encoding when requesting with ``chunked=True``.\n          (Issue #790)\n        \n        * Fixed regression with IPv6 port parsing. (Issue #801)\n        \n        * Append SNIMissingWarning messages to allow users to specify it in\n          the PYTHONWARNINGS environment variable. (Issue #816)\n        \n        * Handle unicode headers in Py2. (Issue #818)\n        \n        * Log certificate when there is a hostname mismatch. (Issue #820)\n        \n        * Preserve order of request/response headers. (Issue #821)\n        \n        \n        1.14 (2015-12-29)\n        -----------------\n        \n        * contrib: SOCKS proxy support! (Issue #762)\n        \n        * Fixed AppEngine handling of transfer-encoding header and bug\n          in Timeout defaults checking. (Issue #763)\n        \n        \n        1.13.1 (2015-12-18)\n        -------------------\n        \n        * Fixed regression in IPv6 + SSL for match_hostname. (Issue #761)\n        \n        \n        1.13 (2015-12-14)\n        -----------------\n        \n        * Fixed ``pip install urllib3[secure]`` on modern pip. (Issue #706)\n        \n        * pyopenssl: Fixed SSL3_WRITE_PENDING error. (Issue #717)\n        \n        * pyopenssl: Support for TLSv1.1 and TLSv1.2. (Issue #696)\n        \n        * Close connections more defensively on exception. (Issue #734)\n        \n        * Adjusted ``read_chunked`` to handle gzipped, chunk-encoded bodies without\n          repeatedly flushing the decoder, to function better on Jython. (Issue #743)\n        \n        * Accept ``ca_cert_dir`` for SSL-related PoolManager configuration. (Issue #758)\n        \n        \n        1.12 (2015-09-03)\n        -----------------\n        \n        * Rely on ``six`` for importing ``httplib`` to work around\n          conflicts with other Python 3 shims. (Issue #688)\n        \n        * Add support for directories of certificate authorities, as supported by\n          OpenSSL. (Issue #701)\n        \n        * New exception: ``NewConnectionError``, raised when we fail to establish\n          a new connection, usually ``ECONNREFUSED`` socket error.\n        \n        \n        1.11 (2015-07-21)\n        -----------------\n        \n        * When ``ca_certs`` is given, ``cert_reqs`` defaults to\n          ``'CERT_REQUIRED'``. (Issue #650)\n        \n        * ``pip install urllib3[secure]`` will install Certifi and\n          PyOpenSSL as dependencies. (Issue #678)\n        \n        * Made ``HTTPHeaderDict`` usable as a ``headers`` input value\n          (Issues #632, #679)\n        \n        * Added `urllib3.contrib.appengine <https://urllib3.readthedocs.io/en/latest/contrib.html#google-app-engine>`_\n          which has an ``AppEngineManager`` for using ``URLFetch`` in a\n          Google AppEngine environment. (Issue #664)\n        \n        * Dev: Added test suite for AppEngine. (Issue #631)\n        \n        * Fix performance regression when using PyOpenSSL. (Issue #626)\n        \n        * Passing incorrect scheme (e.g. ``foo://``) will raise\n          ``ValueError`` instead of ``AssertionError`` (backwards\n          compatible for now, but please migrate). (Issue #640)\n        \n        * Fix pools not getting replenished when an error occurs during a\n          request using ``release_conn=False``. (Issue #644)\n        \n        * Fix pool-default headers not applying for url-encoded requests\n          like GET. (Issue #657)\n        \n        * log.warning in Python 3 when headers are skipped due to parsing\n          errors. (Issue #642)\n        \n        * Close and discard connections if an error occurs during read.\n          (Issue #660)\n        \n        * Fix host parsing for IPv6 proxies. (Issue #668)\n        \n        * Separate warning type SubjectAltNameWarning, now issued once\n          per host. (Issue #671)\n        \n        * Fix ``httplib.IncompleteRead`` not getting converted to\n          ``ProtocolError`` when using ``HTTPResponse.stream()``\n          (Issue #674)\n        \n        1.10.4 (2015-05-03)\n        -------------------\n        \n        * Migrate tests to Tornado 4. (Issue #594)\n        \n        * Append default warning configuration rather than overwrite.\n          (Issue #603)\n        \n        * Fix streaming decoding regression. (Issue #595)\n        \n        * Fix chunked requests losing state across keep-alive connections.\n          (Issue #599)\n        \n        * Fix hanging when chunked HEAD response has no body. (Issue #605)\n        \n        \n        1.10.3 (2015-04-21)\n        -------------------\n        \n        * Emit ``InsecurePlatformWarning`` when SSLContext object is missing.\n          (Issue #558)\n        \n        * Fix regression of duplicate header keys being discarded.\n          (Issue #563)\n        \n        * ``Response.stream()`` returns a generator for chunked responses.\n          (Issue #560)\n        \n        * Set upper-bound timeout when waiting for a socket in PyOpenSSL.\n          (Issue #585)\n        \n        * Work on platforms without `ssl` module for plain HTTP requests.\n          (Issue #587)\n        \n        * Stop relying on the stdlib's default cipher list. (Issue #588)\n        \n        \n        1.10.2 (2015-02-25)\n        -------------------\n        \n        * Fix file descriptor leakage on retries. (Issue #548)\n        \n        * Removed RC4 from default cipher list. (Issue #551)\n        \n        * Header performance improvements. (Issue #544)\n        \n        * Fix PoolManager not obeying redirect retry settings. (Issue #553)\n        \n        \n        1.10.1 (2015-02-10)\n        -------------------\n        \n        * Pools can be used as context managers. (Issue #545)\n        \n        * Don't re-use connections which experienced an SSLError. (Issue #529)\n        \n        * Don't fail when gzip decoding an empty stream. (Issue #535)\n        \n        * Add sha256 support for fingerprint verification. (Issue #540)\n        \n        * Fixed handling of header values containing commas. (Issue #533)\n        \n        \n        1.10 (2014-12-14)\n        -----------------\n        \n        * Disabled SSLv3. (Issue #473)\n        \n        * Add ``Url.url`` property to return the composed url string. (Issue #394)\n        \n        * Fixed PyOpenSSL + gevent ``WantWriteError``. (Issue #412)\n        \n        * ``MaxRetryError.reason`` will always be an exception, not string.\n          (Issue #481)\n        \n        * Fixed SSL-related timeouts not being detected as timeouts. (Issue #492)\n        \n        * Py3: Use ``ssl.create_default_context()`` when available. (Issue #473)\n        \n        * Emit ``InsecureRequestWarning`` for *every* insecure HTTPS request.\n          (Issue #496)\n        \n        * Emit ``SecurityWarning`` when certificate has no ``subjectAltName``.\n          (Issue #499)\n        \n        * Close and discard sockets which experienced SSL-related errors.\n          (Issue #501)\n        \n        * Handle ``body`` param in ``.request(...)``. (Issue #513)\n        \n        * Respect timeout with HTTPS proxy. (Issue #505)\n        \n        * PyOpenSSL: Handle ZeroReturnError exception. (Issue #520)\n        \n        \n        1.9.1 (2014-09-13)\n        ------------------\n        \n        * Apply socket arguments before binding. (Issue #427)\n        \n        * More careful checks if fp-like object is closed. (Issue #435)\n        \n        * Fixed packaging issues of some development-related files not\n          getting included. (Issue #440)\n        \n        * Allow performing *only* fingerprint verification. (Issue #444)\n        \n        * Emit ``SecurityWarning`` if system clock is waaay off. (Issue #445)\n        \n        * Fixed PyOpenSSL compatibility with PyPy. (Issue #450)\n        \n        * Fixed ``BrokenPipeError`` and ``ConnectionError`` handling in Py3.\n          (Issue #443)\n        \n        \n        \n        1.9 (2014-07-04)\n        ----------------\n        \n        * Shuffled around development-related files. If you're maintaining a distro\n          package of urllib3, you may need to tweak things. (Issue #415)\n        \n        * Unverified HTTPS requests will trigger a warning on the first request. See\n          our new `security documentation\n          <https://urllib3.readthedocs.io/en/latest/security.html>`_ for details.\n          (Issue #426)\n        \n        * New retry logic and ``urllib3.util.retry.Retry`` configuration object.\n          (Issue #326)\n        \n        * All raised exceptions should now wrapped in a\n          ``urllib3.exceptions.HTTPException``-extending exception. (Issue #326)\n        \n        * All errors during a retry-enabled request should be wrapped in\n          ``urllib3.exceptions.MaxRetryError``, including timeout-related exceptions\n          which were previously exempt. Underlying error is accessible from the\n          ``.reason`` property. (Issue #326)\n        \n        * ``urllib3.exceptions.ConnectionError`` renamed to\n          ``urllib3.exceptions.ProtocolError``. (Issue #326)\n        \n        * Errors during response read (such as IncompleteRead) are now wrapped in\n          ``urllib3.exceptions.ProtocolError``. (Issue #418)\n        \n        * Requesting an empty host will raise ``urllib3.exceptions.LocationValueError``.\n          (Issue #417)\n        \n        * Catch read timeouts over SSL connections as\n          ``urllib3.exceptions.ReadTimeoutError``. (Issue #419)\n        \n        * Apply socket arguments before connecting. (Issue #427)\n        \n        \n        1.8.3 (2014-06-23)\n        ------------------\n        \n        * Fix TLS verification when using a proxy in Python 3.4.1. (Issue #385)\n        \n        * Add ``disable_cache`` option to ``urllib3.util.make_headers``. (Issue #393)\n        \n        * Wrap ``socket.timeout`` exception with\n          ``urllib3.exceptions.ReadTimeoutError``. (Issue #399)\n        \n        * Fixed proxy-related bug where connections were being reused incorrectly.\n          (Issues #366, #369)\n        \n        * Added ``socket_options`` keyword parameter which allows to define\n          ``setsockopt`` configuration of new sockets. (Issue #397)\n        \n        * Removed ``HTTPConnection.tcp_nodelay`` in favor of\n          ``HTTPConnection.default_socket_options``. (Issue #397)\n        \n        * Fixed ``TypeError`` bug in Python 2.6.4. (Issue #411)\n        \n        \n        1.8.2 (2014-04-17)\n        ------------------\n        \n        * Fix ``urllib3.util`` not being included in the package.\n        \n        \n        1.8.1 (2014-04-17)\n        ------------------\n        \n        * Fix AppEngine bug of HTTPS requests going out as HTTP. (Issue #356)\n        \n        * Don't install ``dummyserver`` into ``site-packages`` as it's only needed\n          for the test suite. (Issue #362)\n        \n        * Added support for specifying ``source_address``. (Issue #352)\n        \n        \n        1.8 (2014-03-04)\n        ----------------\n        \n        * Improved url parsing in ``urllib3.util.parse_url`` (properly parse '@' in\n          username, and blank ports like 'hostname:').\n        \n        * New ``urllib3.connection`` module which contains all the HTTPConnection\n          objects.\n        \n        * Several ``urllib3.util.Timeout``-related fixes. Also changed constructor\n          signature to a more sensible order. [Backwards incompatible]\n          (Issues #252, #262, #263)\n        \n        * Use ``backports.ssl_match_hostname`` if it's installed. (Issue #274)\n        \n        * Added ``.tell()`` method to ``urllib3.response.HTTPResponse`` which\n          returns the number of bytes read so far. (Issue #277)\n        \n        * Support for platforms without threading. (Issue #289)\n        \n        * Expand default-port comparison in ``HTTPConnectionPool.is_same_host``\n          to allow a pool with no specified port to be considered equal to to an\n          HTTP/HTTPS url with port 80/443 explicitly provided. (Issue #305)\n        \n        * Improved default SSL/TLS settings to avoid vulnerabilities.\n          (Issue #309)\n        \n        * Fixed ``urllib3.poolmanager.ProxyManager`` not retrying on connect errors.\n          (Issue #310)\n        \n        * Disable Nagle's Algorithm on the socket for non-proxies. A subset of requests\n          will send the entire HTTP request ~200 milliseconds faster; however, some of\n          the resulting TCP packets will be smaller. (Issue #254)\n        \n        * Increased maximum number of SubjectAltNames in ``urllib3.contrib.pyopenssl``\n          from the default 64 to 1024 in a single certificate. (Issue #318)\n        \n        * Headers are now passed and stored as a custom\n          ``urllib3.collections_.HTTPHeaderDict`` object rather than a plain ``dict``.\n          (Issue #329, #333)\n        \n        * Headers no longer lose their case on Python 3. (Issue #236)\n        \n        * ``urllib3.contrib.pyopenssl`` now uses the operating system's default CA\n          certificates on inject. (Issue #332)\n        \n        * Requests with ``retries=False`` will immediately raise any exceptions without\n          wrapping them in ``MaxRetryError``. (Issue #348)\n        \n        * Fixed open socket leak with SSL-related failures. (Issue #344, #348)\n        \n        \n        1.7.1 (2013-09-25)\n        ------------------\n        \n        * Added granular timeout support with new ``urllib3.util.Timeout`` class.\n          (Issue #231)\n        \n        * Fixed Python 3.4 support. (Issue #238)\n        \n        \n        1.7 (2013-08-14)\n        ----------------\n        \n        * More exceptions are now pickle-able, with tests. (Issue #174)\n        \n        * Fixed redirecting with relative URLs in Location header. (Issue #178)\n        \n        * Support for relative urls in ``Location: ...`` header. (Issue #179)\n        \n        * ``urllib3.response.HTTPResponse`` now inherits from ``io.IOBase`` for bonus\n          file-like functionality. (Issue #187)\n        \n        * Passing ``assert_hostname=False`` when creating a HTTPSConnectionPool will\n          skip hostname verification for SSL connections. (Issue #194)\n        \n        * New method ``urllib3.response.HTTPResponse.stream(...)`` which acts as a\n          generator wrapped around ``.read(...)``. (Issue #198)\n        \n        * IPv6 url parsing enforces brackets around the hostname. (Issue #199)\n        \n        * Fixed thread race condition in\n          ``urllib3.poolmanager.PoolManager.connection_from_host(...)`` (Issue #204)\n        \n        * ``ProxyManager`` requests now include non-default port in ``Host: ...``\n          header. (Issue #217)\n        \n        * Added HTTPS proxy support in ``ProxyManager``. (Issue #170 #139)\n        \n        * New ``RequestField`` object can be passed to the ``fields=...`` param which\n          can specify headers. (Issue #220)\n        \n        * Raise ``urllib3.exceptions.ProxyError`` when connecting to proxy fails.\n          (Issue #221)\n        \n        * Use international headers when posting file names. (Issue #119)\n        \n        * Improved IPv6 support. (Issue #203)\n        \n        \n        1.6 (2013-04-25)\n        ----------------\n        \n        * Contrib: Optional SNI support for Py2 using PyOpenSSL. (Issue #156)\n        \n        * ``ProxyManager`` automatically adds ``Host: ...`` header if not given.\n        \n        * Improved SSL-related code. ``cert_req`` now optionally takes a string like\n          \"REQUIRED\" or \"NONE\". Same with ``ssl_version`` takes strings like \"SSLv23\"\n          The string values reflect the suffix of the respective constant variable.\n          (Issue #130)\n        \n        * Vendored ``socksipy`` now based on Anorov's fork which handles unexpectedly\n          closed proxy connections and larger read buffers. (Issue #135)\n        \n        * Ensure the connection is closed if no data is received, fixes connection leak\n          on some platforms. (Issue #133)\n        \n        * Added SNI support for SSL/TLS connections on Py32+. (Issue #89)\n        \n        * Tests fixed to be compatible with Py26 again. (Issue #125)\n        \n        * Added ability to choose SSL version by passing an ``ssl.PROTOCOL_*`` constant\n          to the ``ssl_version`` parameter of ``HTTPSConnectionPool``. (Issue #109)\n        \n        * Allow an explicit content type to be specified when encoding file fields.\n          (Issue #126)\n        \n        * Exceptions are now pickleable, with tests. (Issue #101)\n        \n        * Fixed default headers not getting passed in some cases. (Issue #99)\n        \n        * Treat \"content-encoding\" header value as case-insensitive, per RFC 2616\n          Section 3.5. (Issue #110)\n        \n        * \"Connection Refused\" SocketErrors will get retried rather than raised.\n          (Issue #92)\n        \n        * Updated vendored ``six``, no longer overrides the global ``six`` module\n          namespace. (Issue #113)\n        \n        * ``urllib3.exceptions.MaxRetryError`` contains a ``reason`` property holding\n          the exception that prompted the final retry. If ``reason is None`` then it\n          was due to a redirect. (Issue #92, #114)\n        \n        * Fixed ``PoolManager.urlopen()`` from not redirecting more than once.\n          (Issue #149)\n        \n        * Don't assume ``Content-Type: text/plain`` for multi-part encoding parameters\n          that are not files. (Issue #111)\n        \n        * Pass `strict` param down to ``httplib.HTTPConnection``. (Issue #122)\n        \n        * Added mechanism to verify SSL certificates by fingerprint (md5, sha1) or\n          against an arbitrary hostname (when connecting by IP or for misconfigured\n          servers). (Issue #140)\n        \n        * Streaming decompression support. (Issue #159)\n        \n        \n        1.5 (2012-08-02)\n        ----------------\n        \n        * Added ``urllib3.add_stderr_logger()`` for quickly enabling STDERR debug\n          logging in urllib3.\n        \n        * Native full URL parsing (including auth, path, query, fragment) available in\n          ``urllib3.util.parse_url(url)``.\n        \n        * Built-in redirect will switch method to 'GET' if status code is 303.\n          (Issue #11)\n        \n        * ``urllib3.PoolManager`` strips the scheme and host before sending the request\n          uri. (Issue #8)\n        \n        * New ``urllib3.exceptions.DecodeError`` exception for when automatic decoding,\n          based on the Content-Type header, fails.\n        \n        * Fixed bug with pool depletion and leaking connections (Issue #76). Added\n          explicit connection closing on pool eviction. Added\n          ``urllib3.PoolManager.clear()``.\n        \n        * 99% -> 100% unit test coverage.\n        \n        \n        1.4 (2012-06-16)\n        ----------------\n        \n        * Minor AppEngine-related fixes.\n        \n        * Switched from ``mimetools.choose_boundary`` to ``uuid.uuid4()``.\n        \n        * Improved url parsing. (Issue #73)\n        \n        * IPv6 url support. (Issue #72)\n        \n        \n        1.3 (2012-03-25)\n        ----------------\n        \n        * Removed pre-1.0 deprecated API.\n        \n        * Refactored helpers into a ``urllib3.util`` submodule.\n        \n        * Fixed multipart encoding to support list-of-tuples for keys with multiple\n          values. (Issue #48)\n        \n        * Fixed multiple Set-Cookie headers in response not getting merged properly in\n          Python 3. (Issue #53)\n        \n        * AppEngine support with Py27. (Issue #61)\n        \n        * Minor ``encode_multipart_formdata`` fixes related to Python 3 strings vs\n          bytes.\n        \n        \n        1.2.2 (2012-02-06)\n        ------------------\n        \n        * Fixed packaging bug of not shipping ``test-requirements.txt``. (Issue #47)\n        \n        \n        1.2.1 (2012-02-05)\n        ------------------\n        \n        * Fixed another bug related to when ``ssl`` module is not available. (Issue #41)\n        \n        * Location parsing errors now raise ``urllib3.exceptions.LocationParseError``\n          which inherits from ``ValueError``.\n        \n        \n        1.2 (2012-01-29)\n        ----------------\n        \n        * Added Python 3 support (tested on 3.2.2)\n        \n        * Dropped Python 2.5 support (tested on 2.6.7, 2.7.2)\n        \n        * Use ``select.poll`` instead of ``select.select`` for platforms that support\n          it.\n        \n        * Use ``Queue.LifoQueue`` instead of ``Queue.Queue`` for more aggressive\n          connection reusing. Configurable by overriding ``ConnectionPool.QueueCls``.\n        \n        * Fixed ``ImportError`` during install when ``ssl`` module is not available.\n          (Issue #41)\n        \n        * Fixed ``PoolManager`` redirects between schemes (such as HTTP -> HTTPS) not\n          completing properly. (Issue #28, uncovered by Issue #10 in v1.1)\n        \n        * Ported ``dummyserver`` to use ``tornado`` instead of ``webob`` +\n          ``eventlet``. Removed extraneous unsupported dummyserver testing backends.\n          Added socket-level tests.\n        \n        * More tests. Achievement Unlocked: 99% Coverage.\n        \n        \n        1.1 (2012-01-07)\n        ----------------\n        \n        * Refactored ``dummyserver`` to its own root namespace module (used for\n          testing).\n        \n        * Added hostname verification for ``VerifiedHTTPSConnection`` by vendoring in\n          Py32's ``ssl_match_hostname``. (Issue #25)\n        \n        * Fixed cross-host HTTP redirects when using ``PoolManager``. (Issue #10)\n        \n        * Fixed ``decode_content`` being ignored when set through ``urlopen``. (Issue\n          #27)\n        \n        * Fixed timeout-related bugs. (Issues #17, #23)\n        \n        \n        1.0.2 (2011-11-04)\n        ------------------\n        \n        * Fixed typo in ``VerifiedHTTPSConnection`` which would only present as a bug if\n          you're using the object manually. (Thanks pyos)\n        \n        * Made RecentlyUsedContainer (and consequently PoolManager) more thread-safe by\n          wrapping the access log in a mutex. (Thanks @christer)\n        \n        * Made RecentlyUsedContainer more dict-like (corrected ``__delitem__`` and\n          ``__getitem__`` behaviour), with tests. Shouldn't affect core urllib3 code.\n        \n        \n        1.0.1 (2011-10-10)\n        ------------------\n        \n        * Fixed a bug where the same connection would get returned into the pool twice,\n          causing extraneous \"HttpConnectionPool is full\" log warnings.\n        \n        \n        1.0 (2011-10-08)\n        ----------------\n        \n        * Added ``PoolManager`` with LRU expiration of connections (tested and\n          documented).\n        * Added ``ProxyManager`` (needs tests, docs, and confirmation that it works\n          with HTTPS proxies).\n        * Added optional partial-read support for responses when\n          ``preload_content=False``. You can now make requests and just read the headers\n          without loading the content.\n        * Made response decoding optional (default on, same as before).\n        * Added optional explicit boundary string for ``encode_multipart_formdata``.\n        * Convenience request methods are now inherited from ``RequestMethods``. Old\n          helpers like ``get_url`` and ``post_url`` should be abandoned in favour of\n          the new ``request(method, url, ...)``.\n        * Refactored code to be even more decoupled, reusable, and extendable.\n        * License header added to ``.py`` files.\n        * Embiggened the documentation: Lots of Sphinx-friendly docstrings in the code\n          and docs in ``docs/`` and on https://urllib3.readthedocs.io/.\n        * Embettered all the things!\n        * Started writing this file.\n        \n        \n        0.4.1 (2011-07-17)\n        ------------------\n        \n        * Minor bug fixes, code cleanup.\n        \n        \n        0.4 (2011-03-01)\n        ----------------\n        \n        * Better unicode support.\n        * Added ``VerifiedHTTPSConnection``.\n        * Added ``NTLMConnectionPool`` in contrib.\n        * Minor improvements.\n        \n        \n        0.3.1 (2010-07-13)\n        ------------------\n        \n        * Added ``assert_host_name`` optional parameter. Now compatible with proxies.\n        \n        \n        0.3 (2009-12-10)\n        ----------------\n        \n        * Added HTTPS support.\n        * Minor bug fixes.\n        * Refactored, broken backwards compatibility with 0.2.\n        * API to be treated as stable from this version forward.\n        \n        \n        0.2 (2008-11-17)\n        ----------------\n        \n        * Added unit tests.\n        * Bug fixes.\n        \n        \n        0.1 (2008-11-16)\n        ----------------\n        \n        * First release.\n        ",
        "keywords": [
          "urllib",
          "httplib",
          "threadsafe",
          "filepost",
          "http",
          "https",
          "ssl",
          "pooling"
        ],
        "home_page": "https://urllib3.readthedocs.io/",
        "author": "Andrey Petrov",
        "author_email": "andrey.petrov@shazow.net",
        "license": "MIT",
        "classifier": [
          "Environment :: Web Environment",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: MIT License",
          "Operating System :: OS Independent",
          "Programming Language :: Python",
          "Programming Language :: Python :: 2",
          "Programming Language :: Python :: 2.7",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.5",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: Implementation :: CPython",
          "Programming Language :: Python :: Implementation :: PyPy",
          "Topic :: Internet :: WWW/HTTP",
          "Topic :: Software Development :: Libraries"
        ],
        "requires_dist": [
          "brotlipy>=0.6.0 ; extra == \"brotli\"",
          "certifi ; extra == \"secure\"",
          "cryptography>=1.3.4 ; extra == \"secure\"",
          "idna>=2.0.0 ; extra == \"secure\"",
          "pyOpenSSL>=0.14 ; extra == \"secure\"",
          "ipaddress ; (python_version == \"2.7\") and extra == \"secure\"",
          "PySocks!=1.5.7,<2.0,>=1.5.6 ; extra == \"socks\""
        ],
        "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4",
        "project_url": [
          "Documentation, https://urllib3.readthedocs.io/",
          "Code, https://github.com/urllib3/urllib3",
          "Issue tracker, https://github.com/urllib3/urllib3/issues"
        ],
        "provides_extra": [
          "brotli",
          "secure",
          "socks"
        ]
      },
      "metadata_location": "/usr/lib/python3/dist-packages/urllib3-1.25.8.egg-info"
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "wadllib",
        "version": "1.3.3",
        "platform": [
          "UNKNOWN"
        ],
        "summary": "Navigate HTTP resources using WADL files as guides.",
        "description": "..\n           Copyright (C) 2008-2013 Canonical Ltd.\n        \n           This file is part of wadllib.\n        \n           wadllib is free software: you can redistribute it and/or modify it under\n           the terms of the GNU Lesser General Public License as published by the\n           Free Software Foundation, version 3 of the License.\n        \n           wadllib is distributed in the hope that it will be useful, but WITHOUT ANY\n           WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n           FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for\n           more details.\n        \n           You should have received a copy of the GNU Lesser General Public License\n           along with wadllib. If not, see <http://www.gnu.org/licenses/>.\n        \n        wadllib\n        *******\n        \n        An Application object represents a web service described by a WADL\n        file.\n        \n           >>> import os\n           >>> import sys\n           >>> import pkg_resources\n           >>> from wadllib.application import Application\n        \n        The first argument to the Application constructor is the URL at which\n        the WADL file was found. The second argument may be raw WADL markup.\n        \n           >>> wadl_string = pkg_resources.resource_string(\n           ...     'wadllib.tests.data', 'launchpad-wadl.xml')\n           >>> wadl = Application(\"http://api.launchpad.dev/beta/\", wadl_string)\n        \n        Or the second argument may be an open filehandle containing the markup.\n        \n           >>> cleanups = []\n           >>> def application_for(filename, url=\"http://www.example.com/\"):\n           ...    wadl_stream = pkg_resources.resource_stream(\n           ...    'wadllib.tests.data', filename)\n           ...    cleanups.append(wadl_stream)\n           ...    return Application(url, wadl_stream)\n           >>> wadl = application_for(\"launchpad-wadl.xml\",\n           ...                        \"http://api.launchpad.dev/beta/\")\n        \n        \n        Link navigation\n        ===============\n        \n        The preferred technique for finding a resource is to start at one of\n        the resources defined in the WADL file, and follow links. This code\n        retrieves the definition of the root resource.\n        \n           >>> service_root = wadl.get_resource_by_path('')\n           >>> service_root.url\n           'http://api.launchpad.dev/beta/'\n           >>> service_root.type_url\n           '#service-root'\n        \n        The service root resource supports GET.\n        \n           >>> get_method = service_root.get_method('get')\n           >>> get_method.id\n           'service-root-get'\n        \n           >>> get_method = service_root.get_method('GET')\n           >>> get_method.id\n           'service-root-get'\n        \n        If we want to invoke this method, we send a GET request to the service\n        root URL.\n        \n           >>> get_method.name\n           'get'\n           >>> get_method.build_request_url()\n           'http://api.launchpad.dev/beta/'\n        \n        The WADL description of a resource knows which representations are\n        available for that resource. In this case, the server root resource\n        has a a JSON representation, and it defines parameters like\n        'people_collection_link', a link to a list of people in Launchpad. We\n        should be able to use the get_parameter() method to get the WADL\n        definition of the 'people_collection_link' parameter and find out more\n        about it--for instance, is it a link to another resource?\n        \n           >>> def test_raises(exc_class, method, *args, **kwargs):\n           ...     try:\n           ...         method(*args, **kwargs)\n           ...     except Exception:\n           ...         # Contortion to support Python < 2.6 and >= 3 simultaneously.\n           ...         e = sys.exc_info()[1]\n           ...         if isinstance(e, exc_class):\n           ...             print(e)\n           ...             return\n           ...         raise\n           ...     raise Exception(\"Expected exception %s not raised\" % exc_class)\n        \n           >>> from wadllib.application import NoBoundRepresentationError\n           >>> link_name = 'people_collection_link'\n           >>> test_raises(\n           ...     NoBoundRepresentationError, service_root.get_parameter, link_name)\n           Resource is not bound to any representation, and no media media type was specified.\n        \n        Oops. The code has no way to know whether 'people_collection_link' is\n        a parameter of the JSON representation or some other kind of\n        representation. We can pass a media type to get_parameter and let it\n        know which representation the parameter lives in.\n        \n           >>> link_parameter = service_root.get_parameter(\n           ...     link_name, 'application/json')\n           >>> test_raises(NoBoundRepresentationError, link_parameter.get_value)\n           Resource is not bound to any representation.\n        \n        Oops again. The parameter is available, but it has no value, because\n        there's no actual data associated with the resource. The browser can\n        look up the description of the GET method to make an actual GET\n        request to the service root, and bind the resulting representation to\n        the WADL description of the service root.\n        \n        You can't bind just any representation to a WADL resource description.\n        It has to be of a media type understood by the WADL description.\n        \n           >>> from wadllib.application import UnsupportedMediaTypeError\n           >>> test_raises(\n           ...     UnsupportedMediaTypeError, service_root.bind,\n           ...     '<html>Some HTML</html>', 'text/html')\n           This resource doesn't define a representation for media type text/html\n        \n        The WADL description of the service root resource has a JSON\n        representation. Here it is.\n        \n           >>> json_representation = service_root.get_representation_definition(\n           ...     'application/json')\n           >>> json_representation.media_type\n           'application/json'\n        \n        We already have a WADL representation of the service root resource, so\n        let's try binding it to that JSON representation. We use test JSON\n        data from a file to simulate the result of a GET request to the\n        service root.\n        \n           >>> def get_testdata(filename):\n           ...     return pkg_resources.resource_string(\n           ...         'wadllib.tests.data', filename + '.json')\n        \n           >>> def bind_to_testdata(resource, filename):\n           ...     return resource.bind(get_testdata(filename), 'application/json')\n        \n        The return value is a new Resource object that's \"bound\" to that JSON\n        test data.\n        \n           >>> bound_service_root = bind_to_testdata(service_root, 'root')\n           >>> sorted([param.name for param in bound_service_root.parameters()])\n           ['bugs_collection_link', 'people_collection_link']\n           >>> sorted(bound_service_root.parameter_names())\n           ['bugs_collection_link', 'people_collection_link']\n           >>> [method.id for method in bound_service_root.method_iter]\n           ['service-root-get']\n        \n        Now the bound resource object has a JSON representation, and now\n        'people_collection_link' makes sense. We can follow the\n        'people_collection_link' to a new Resource object.\n        \n           >>> link_parameter = bound_service_root.get_parameter(link_name)\n           >>> link_parameter.style\n           'plain'\n           >>> print(link_parameter.get_value())\n           http://api.launchpad.dev/beta/people\n           >>> personset_resource = link_parameter.linked_resource\n           >>> personset_resource.__class__\n           <class 'wadllib.application.Resource'>\n           >>> print(personset_resource.url)\n           http://api.launchpad.dev/beta/people\n           >>> personset_resource.type_url\n           'http://api.launchpad.dev/beta/#people'\n        \n        This new resource is a collection of people.\n        \n           >>> personset_resource.id\n           'people'\n        \n        The \"collection of people\" resource supports a standard GET request as\n        well as a special GET and an overloaded POST. The get_method() method\n        is used to retrieve WADL definitions of the possible HTTP requests you\n        might make. Here's how to get the WADL definition of the standard GET\n        request.\n        \n           >>> get_method = personset_resource.get_method('get')\n           >>> get_method.id\n           'people-get'\n        \n        The method name passed into get_method() is treated case-insensitively.\n        \n           >>> personset_resource.get_method('GET').id\n           'people-get'\n        \n        To invoke the special GET request, the client sets the 'ws.op' query\n        parameter to the fixed string 'findPerson'.\n        \n           >>> find_method = personset_resource.get_method(\n           ...     query_params={'ws.op' : 'findPerson'})\n           >>> find_method.id\n           'people-findPerson'\n        \n        Given an end-user's values for the non-fixed parameters, it's possible\n        to get the URL that should be used to invoke the method.\n        \n           >>> print(find_method.build_request_url(text='foo'))\n           http://api.launchpad.dev/beta/people?text=foo&ws.op=findPerson\n        \n           >>> print(find_method.build_request_url(\n           ...     {'ws.op' : 'findPerson', 'text' : 'bar'}))\n           http://api.launchpad.dev/beta/people?text=bar&ws.op=findPerson\n        \n        An error occurs if the end-user gives an incorrect value for a fixed\n        parameter value, or omits a required parameter.\n        \n           >>> find_method.build_request_url()\n           Traceback (most recent call last):\n           ...\n           ValueError: No value for required parameter 'text'\n        \n           >>> find_method.build_request_url(\n           ...     {'ws.op' : 'findAPerson', 'text' : 'foo'})\n           ... # doctest: +ELLIPSIS, +NORMALIZE_WHITESPACE\n           Traceback (most recent call last):\n           ...\n           ValueError: Value 'findAPerson' for parameter 'ws.op' conflicts\n           with fixed value 'findPerson'\n        \n        To invoke the overloaded POST request, the client sets the 'ws.op'\n        query variable to the fixed string 'newTeam':\n        \n           >>> create_team_method = personset_resource.get_method(\n           ...     'post', representation_params={'ws.op' : 'newTeam'})\n           >>> create_team_method.id\n           'people-newTeam'\n        \n        findMethod() returns None when there's no WADL method matching the\n        name or the fixed parameters.\n        \n           >>> print(personset_resource.get_method('nosuchmethod'))\n           None\n        \n           >>> print(personset_resource.get_method(\n           ...     'post', query_params={'ws_op' : 'nosuchparam'}))\n           None\n        \n        Let's say the browser makes a GET request to the person set resource\n        and gets back a representation. We can bind that representation to our\n        description of the person set resource.\n        \n           >>> bound_personset = bind_to_testdata(personset_resource, 'personset')\n           >>> bound_personset.get_parameter(\"start\").get_value()\n           0\n           >>> bound_personset.get_parameter(\"total_size\").get_value()\n           63\n        \n        We can keep following links indefinitely, so long as we bind to a\n        representation to each resource as we get it, and use the\n        representation to find the next link.\n        \n           >>> next_page_link = bound_personset.get_parameter(\"next_collection_link\")\n           >>> print(next_page_link.get_value())\n           http://api.launchpad.dev/beta/people?ws.start=5&ws.size=5\n           >>> page_two = next_page_link.linked_resource\n           >>> bound_page_two = bind_to_testdata(page_two, 'personset-page2')\n           >>> print(bound_page_two.url)\n           http://api.launchpad.dev/beta/people?ws.start=5&ws.size=5\n           >>> bound_page_two.get_parameter(\"start\").get_value()\n           5\n           >>> print(bound_page_two.get_parameter(\"next_collection_link\").get_value())\n           http://api.launchpad.dev/beta/people?ws.start=10&ws.size=5\n        \n        Let's say the browser makes a POST request that invokes the 'newTeam'\n        named operation. The response will include a number of HTTP headers,\n        including 'Location', which points the way to the newly created team.\n        \n           >>> headers = { 'Location' : 'http://api.launchpad.dev/~newteam' }\n           >>> response = create_team_method.response.bind(headers)\n           >>> location_parameter = response.get_parameter('Location')\n           >>> location_parameter.get_value()\n           'http://api.launchpad.dev/~newteam'\n           >>> new_team = location_parameter.linked_resource\n           >>> new_team.url\n           'http://api.launchpad.dev/~newteam'\n           >>> new_team.type_url\n           'http://api.launchpad.dev/beta/#team'\n        \n        Examining links\n        ---------------\n        \n        The 'linked_resource' property of a parameter lets you follow a link\n        to another object. The 'link' property of a parameter lets you examine\n        links before following them.\n        \n            >>> import json\n            >>> links_wadl = application_for('links-wadl.xml')\n            >>> service_root = links_wadl.get_resource_by_path('')\n            >>> representation = json.dumps(\n            ...     {'scalar_value': 'foo',\n            ...      'known_link': 'http://known/',\n            ...      'unknown_link': 'http://unknown/'})\n            >>> bound_root = service_root.bind(representation)\n        \n            >>> print(bound_root.get_parameter(\"scalar_value\").link)\n            None\n        \n            >>> known_resource = bound_root.get_parameter(\"known_link\")\n            >>> unknown_resource = bound_root.get_parameter(\"unknown_link\")\n        \n            >>> print(known_resource.link.can_follow)\n            True\n            >>> print(unknown_resource.link.can_follow)\n            False\n        \n        A link whose type is unknown is a link to a resource not described by\n        WADL. Following this link using .linked_resource or .link.follow will\n        cause a wadllib error. You'll need to follow the link using a general\n        HTTP library or some other tool.\n        \n            >>> known_resource.link.follow\n            <wadllib.application.Resource object ...>\n            >>> known_resource.linked_resource\n            <wadllib.application.Resource object ...>\n        \n            >>> from wadllib.application import WADLError\n            >>> test_raises(WADLError, getattr, unknown_resource.link, 'follow')\n            Cannot follow a link when the target has no WADL\n            description. Try using a general HTTP client instead.\n        \n            >>> test_raises(WADLError, getattr, unknown_resource, 'linked_resource')\n            Cannot follow a link when the target has no WADL\n            description. Try using a general HTTP client instead.\n        \n        Creating a Resource from a representation definition\n        ====================================================\n        \n        Although every representation is a representation of some HTTP\n        resource, an HTTP resource doesn't necessarily correspond directly to\n        a WADL <resource> or <resource_type> tag. Sometimes a representation\n        is defined within a WADL <method> tag.\n        \n           >>> find_method = personset_resource.get_method(\n           ...     query_params={'ws.op' : 'find'})\n           >>> find_method.id\n           'people-find'\n        \n           >>> representation_definition = (\n           ...     find_method.response.get_representation_definition(\n           ...     'application/json'))\n        \n        There may be no WADL <resource> or <resource_type> tag for the\n        representation defined here. That's why wadllib makes it possible to\n        instantiate an anonymous Resource object using only the representation\n        definition.\n        \n           >>> from wadllib.application import Resource\n           >>> anonymous_resource = Resource(\n           ...     wadl, \"http://foo/\", representation_definition.tag)\n        \n        We can bind this resource to a representation, as long as we\n        explicitly pass in the representation definition.\n        \n           >>> anonymous_resource = anonymous_resource.bind(\n           ...     get_testdata('personset'), 'application/json',\n           ...     representation_definition=representation_definition)\n        \n        Once the resource is bound to a representation, we can get its\n        parameter values.\n        \n           >>> print(anonymous_resource.get_parameter(\n           ...     'total_size', 'application/json').get_value())\n           63\n        \n        Resource instantiation\n        ======================\n        \n        If you happen to have the URL to an object lying around, and you know\n        its type, you can construct a Resource object directly instead of\n        by following links.\n        \n           >>> from wadllib.application import Resource\n           >>> limi_person = Resource(wadl, \"http://api.launchpad.dev/beta/~limi\",\n           ...     \"http://api.launchpad.dev/beta/#person\")\n           >>> sorted([method.id for method in limi_person.method_iter])[:3]\n           ['person-acceptInvitationToBeMemberOf', 'person-addMember', 'person-declineInvitationToBeMemberOf']\n        \n           >>> bound_limi = bind_to_testdata(limi_person, 'person-limi')\n           >>> sorted(bound_limi.parameter_names())[:3]\n           ['admins_collection_link', 'confirmed_email_addresses_collection_link',\n            'date_created']\n           >>> languages_link = bound_limi.get_parameter(\"languages_collection_link\")\n           >>> print(languages_link.get_value())\n           http://api.launchpad.dev/beta/~limi/languages\n        \n        You can bind a Resource to a representation when you create it.\n        \n           >>> limi_data = get_testdata('person-limi')\n           >>> bound_limi = Resource(\n           ...     wadl, \"http://api.launchpad.dev/beta/~limi\",\n           ...     \"http://api.launchpad.dev/beta/#person\", limi_data,\n           ...     \"application/json\")\n           >>> print(bound_limi.get_parameter(\n           ...     \"languages_collection_link\").get_value())\n           http://api.launchpad.dev/beta/~limi/languages\n        \n        By default the representation is treated as a string and processed\n        according to the media type you pass into the Resource constructor. If\n        you've already processed the representation, pass in False for the\n        'representation_needs_processing' argument.\n        \n           >>> from wadllib import _make_unicode\n           >>> processed_limi_data = json.loads(_make_unicode(limi_data))\n           >>> bound_limi = Resource(wadl, \"http://api.launchpad.dev/beta/~limi\",\n           ...     \"http://api.launchpad.dev/beta/#person\", processed_limi_data,\n           ...     \"application/json\", False)\n           >>> print(bound_limi.get_parameter(\n           ...     \"languages_collection_link\").get_value())\n           http://api.launchpad.dev/beta/~limi/languages\n        \n        Most of the time, the representation of a resource is of the type\n        you'd get by sending a standard GET to that resource. If that's not\n        the case, you can specify a RepresentationDefinition as the\n        'representation_definition' argument to bind() or the Resource\n        constructor, to show what the representation really looks like. Here's\n        an example.\n        \n        There's a method on a person resource such as bound_limi that's\n        identified by a distinctive query argument: ws.op=getMembersByStatus.\n        \n           >>> method = bound_limi.get_method(\n           ...     query_params={'ws.op' : 'findPathToTeam'})\n        \n        Invoke this method with a GET request and you'll get back a page from\n        a list of people.\n        \n           >>> people_page_repr_definition = (\n           ...     method.response.get_representation_definition('application/json'))\n           >>> people_page_repr_definition.tag.attrib['href']\n           'http://api.launchpad.dev/beta/#person-page'\n        \n        As it happens, we have a page from a list of people to use as test data.\n        \n           >>> people_page_repr = get_testdata('personset')\n        \n        If we bind the resource to the result of the method invocation as\n        happened above, we don't be able to access any of the parameters we'd\n        expect. wadllib will think the representation is of type\n        'person-full', the default GET type for bound_limi.\n        \n           >>> bad_people_page = bound_limi.bind(people_page_repr)\n           >>> print(bad_people_page.get_parameter('total_size'))\n           None\n        \n        Since we don't actually have a 'person-full' representation, we won't\n        be able to get values for the parameters of that kind of\n        representation.\n        \n           >>> bad_people_page.get_parameter('name').get_value()\n           Traceback (most recent call last):\n           ...\n           KeyError: 'name'\n        \n        So that's a dead end. *But*, if we pass the correct representation\n        type into bind(), we can access the parameters associated with a\n        'person-page' representation.\n        \n           >>> people_page = bound_limi.bind(\n           ...     people_page_repr,\n           ...     representation_definition=people_page_repr_definition)\n           >>> people_page.get_parameter('total_size').get_value()\n           63\n        \n        If you invoke the method and ask for a media type other than JSON, you\n        won't get anything.\n        \n           >>> print(method.response.get_representation_definition('text/html'))\n           None\n        \n        Data type conversion\n        --------------------\n        \n        The values of date and dateTime parameters are automatically converted to\n        Python datetime objects.\n        \n           >>> data_type_wadl = application_for('data-types-wadl.xml')\n           >>> service_root = data_type_wadl.get_resource_by_path('')\n        \n           >>> representation = json.dumps(\n           ...     {'a_date': '2007-10-20',\n           ...      'a_datetime': '2005-06-06T08:59:51.619713+00:00'})\n           >>> bound_root = service_root.bind(representation, 'application/json')\n        \n           >>> bound_root.get_parameter('a_date').get_value()\n           datetime.datetime(2007, 10, 20, 0, 0)\n           >>> bound_root.get_parameter('a_datetime').get_value()\n           datetime.datetime(2005, 6, 6, 8, ...)\n        \n        A 'date' field can include a timestamp, and a 'datetime' field can\n        omit one. wadllib will turn both into datetime objects.\n        \n           >>> representation = json.dumps(\n           ...     {'a_date': '2005-06-06T08:59:51.619713+00:00',\n           ...      'a_datetime': '2007-10-20'})\n           >>> bound_root = service_root.bind(representation, 'application/json')\n        \n           >>> bound_root.get_parameter('a_datetime').get_value()\n           datetime.datetime(2007, 10, 20, 0, 0)\n           >>> bound_root.get_parameter('a_date').get_value()\n           datetime.datetime(2005, 6, 6, 8, ...)\n        \n        If a date or dateTime parameter has a null value, you get None. If the\n        value is a string that can't be parsed to a datetime object, you get a\n        ValueError.\n        \n           >>> representation = json.dumps(\n           ...     {'a_date': 'foo', 'a_datetime': None})\n           >>> bound_root = service_root.bind(representation, 'application/json')\n           >>> bound_root.get_parameter('a_date').get_value()\n           Traceback (most recent call last):\n           ...\n           ValueError: foo\n           >>> print(bound_root.get_parameter('a_datetime').get_value())\n           None\n        \n        Representation creation\n        =======================\n        \n        You must provide a representation when invoking certain methods. The\n        representation() method helps you build one without knowing the\n        details of how a representation is put together.\n        \n           >>> create_team_method.build_representation(\n           ...     display_name='Joe Bloggs', name='joebloggs')\n           ('application/x-www-form-urlencoded', 'display_name=Joe+Bloggs&name=joebloggs&ws.op=newTeam')\n        \n        The return value of build_representation is a 2-tuple containing the\n        media type of the built representation, and the string representation\n        itself. Along with the resource's URL, this is all you need to send\n        the representation to a web server.\n        \n           >>> bound_limi.get_method('patch').build_representation(name='limi2')\n           ('application/json', '{\"name\": \"limi2\"}')\n        \n        Representations may require values for certain parameters.\n        \n           >>> create_team_method.build_representation()\n           Traceback (most recent call last):\n           ...\n           ValueError: No value for required parameter 'display_name'\n        \n           >>> bound_limi.get_method('put').build_representation(name='limi2')\n           Traceback (most recent call last):\n           ...\n           ValueError: No value for required parameter 'mugshot_link'\n        \n        Some representations may safely include binary data.\n        \n           >>> binary_stream = pkg_resources.resource_stream(\n           ...     'wadllib.tests.data', 'multipart-binary-wadl.xml')\n           >>> cleanups.append(binary_stream)\n           >>> binary_wadl = Application(\n           ...     \"http://www.example.com/\", binary_stream)\n           >>> service_root = binary_wadl.get_resource_by_path('')\n        \n        Define a helper that processes the representation the same way\n        zope.publisher would.\n        \n           >>> import cgi\n           >>> import io\n           >>> def assert_message_parts(media_type, doc, expected):\n           ...     if sys.version_info[0] == 3 and sys.version_info[1] < 3:\n           ...         # We can't do much due to https://bugs.python.org/issue18013.\n           ...         for value in expected:\n           ...             if not isinstance(value, bytes):\n           ...                 value = value.encode('UTF-8')\n           ...             assert value in doc\n           ...         return\n           ...     environ = {\n           ...         'REQUEST_METHOD': 'POST',\n           ...         'CONTENT_TYPE': media_type,\n           ...         'CONTENT_LENGTH': str(len(doc)),\n           ...         }\n           ...     kwargs = (\n           ...         {'encoding': 'UTF-8'} if sys.version_info[0] >= 3 else {})\n           ...     fs = cgi.FieldStorage(\n           ...         fp=io.BytesIO(doc), environ=environ, keep_blank_values=1,\n           ...         **kwargs)\n           ...     values = []\n           ...     def append_values(fields):\n           ...         for field in fields:\n           ...             if field.list:\n           ...                 append_values(field.list)\n           ...             else:\n           ...                 values.append(field.value)\n           ...     append_values(fs.list)\n           ...     assert values == expected, (\n           ...         'Expected %s, got %s' % (expected, values))\n        \n           >>> method = service_root.get_method('post', 'multipart/form-data')\n           >>> media_type, doc = method.build_representation(\n           ...     text_field=\"text\", binary_field=b\"\\x01\\x02\\r\\x81\\r\")\n           >>> print(media_type)\n           multipart/form-data; boundary=...\n           >>> assert_message_parts(media_type, doc, ['text', b'\\x01\\x02\\r\\x81\\r'])\n        \n           >>> method = service_root.get_method('post', 'multipart/form-data')\n           >>> media_type, doc = method.build_representation(\n           ...     text_field=\"text\\n\", binary_field=b\"\\x01\\x02\\r\\x81\\n\\r\")\n           >>> print(media_type)\n           multipart/form-data; boundary=...\n           >>> assert_message_parts(\n           ...     media_type, doc, ['text\\r\\n', b'\\x01\\x02\\r\\x81\\n\\r'])\n        \n           >>> method = service_root.get_method('post', 'multipart/form-data')\n           >>> media_type, doc = method.build_representation(\n           ...     text_field=\"text\\r\\nmore\\r\\n\",\n           ...     binary_field=b\"\\x01\\x02\\r\\n\\x81\\r\\x82\\n\")\n           >>> print(media_type)\n           multipart/form-data; boundary=...\n           >>> assert_message_parts(\n           ...     media_type, doc, ['text\\r\\nmore\\r\\n', b'\\x01\\x02\\r\\n\\x81\\r\\x82\\n'])\n        \n           >>> method = service_root.get_method('post', 'text/unknown')\n           >>> method.build_representation(field=\"value\")\n           Traceback (most recent call last):\n           ...\n           ValueError: Unsupported media type: 'text/unknown'\n        \n        Options\n        =======\n        \n        Some parameters take values from a predefined list of options.\n        \n           >>> option_wadl = application_for('options-wadl.xml')\n           >>> definitions = option_wadl.representation_definitions\n           >>> service_root = option_wadl.get_resource_by_path('')\n           >>> definition = definitions['service-root-json']\n           >>> param = definition.params(service_root)[0]\n           >>> print(param.name)\n           has_options\n           >>> sorted([option.value for option in param.options])\n           ['Value 1', 'Value 2']\n        \n        Such parameters cannot take values that are not in the list.\n        \n           >>> definition.validate_param_values(\n           ...     [param], {'has_options': 'Value 1'})\n           {'has_options': 'Value 1'}\n        \n           >>> definition.validate_param_values(\n           ...     [param], {'has_options': 'Invalid value'})\n           Traceback (most recent call last):\n           ...\n           ValueError: Invalid value 'Invalid value' for parameter\n           'has_options': valid values are: \"Value 1\", \"Value 2\"\n        \n        \n        Error conditions\n        ================\n        \n        You'll get None if you try to look up a nonexistent resource.\n        \n           >>> print(wadl.get_resource_by_path('nosuchresource'))\n           None\n        \n        You'll get an exception if you try to look up a nonexistent resource\n        type.\n        \n           >>> print(wadl.get_resource_type('#nosuchtype'))\n           Traceback (most recent call last):\n           KeyError: 'No such XML ID: \"#nosuchtype\"'\n        \n        You'll get None if you try to look up a method whose parameters don't\n        match any defined method.\n        \n           >>> print(bound_limi.get_method(\n           ...     'post', representation_params={ 'foo' : 'bar' }))\n           None\n        \n        .. cleanup\n           >>> for stream in cleanups:\n           ...    stream.close()\n        \n        \n        .. toctree::\n           :glob:\n        \n           *\n           docs/*\n        \n        ================\n        NEWS for wadllib\n        ================\n        \n        1.3.3 (2018-07-20)\n        ==================\n        \n        - Drop support for Python < 2.6.\n        - Add tox testing support.\n        - Implement a subset of MIME multipart/form-data encoding locally rather\n          than using the standard library's email module, which doesn't have good\n          handling of binary parts and corrupts bytes in them that look like line\n          endings in various ways depending on the Python version.  [bug=1729754]\n        \n        1.3.2 (2013-02-25)\n        ==================\n        \n        - Impose sort order to avoid test failures due to hash randomization.\n          LP: #1132125\n        - Be sure to close streams opened by pkg_resources.resource_stream() to avoid\n          test suite complaints.\n        \n        \n        1.3.1 (2012-03-22)\n        ==================\n        \n        - Correct the double pass through _from_string causing datetime issues\n        \n        \n        1.3.0 (2012-01-27)\n        ==================\n        \n        - Add Python 3 compatibility\n        \n        - Add the ability to inspect links before following them.\n        \n        - Ensure that the sample data is packaged.\n        \n        1.2.0 (2011-02-03)\n        ==================\n        \n        - It's now possible to examine a link before following it, to see\n          whether it has a WADL description or whether it needs to be fetched\n          with a general HTTP client.\n        \n        - It's now possible to iterate over a resource's Parameter objects\n          with the .parameters() method.\n        \n        1.1.8 (2010-10-27)\n        ==================\n        \n        - This revision contains no code changes, but the build system was\n          changed (yet again).  This time to include the version.txt file\n          used by setup.py.\n        \n        1.1.7 (2010-10-26)\n        ==================\n        \n        - This revision contains no code changes, but the build system was\n          changed (again) to include the sample data used in tests.\n        \n        1.1.6 (2010-10-21)\n        ==================\n        \n        - This revision contains no code changes, but the build system was\n          changed to include the sample data used in tests.\n        \n        1.1.5 (2010-05-04)\n        ==================\n        \n        - Fixed a bug (Launchpad bug 274074) that prevented the lookup of\n          parameter values in resources associated directly with a\n          representation definition (rather than a resource type with a\n          representation definition). Bug fix provided by James Westby.\n        \n        1.1.4 (2009-09-15)\n        ==================\n        \n        - Fixed a bug that crashed wadllib unless all parameters of a\n          multipart representation were provided.\n        \n        1.1.3 (2009-08-26)\n        ==================\n        \n        - Remove unnecessary build dependencies.\n        \n        - Add missing dependencies to setup file.\n        \n        - Remove sys.path hack from setup.py.\n        \n        1.1.2 (2009-08-20)\n        ==================\n        \n        - Consistently handle different versions of simplejson.\n        \n        1.1.1 (2009-07-14)\n        ==================\n        \n        - Make wadllib aware of the <option> tags that go beneath <param> tags.\n        \n        1.1 (2009-07-09)\n        ================\n        \n        - Make wadllib capable of recognizing and generating\n          multipart/form-data representations, including representations that\n          incorporate binary parameters.\n        \n        \n        1.0 (2009-03-23)\n        ================\n        \n        - Initial release on PyPI\n        ",
        "home_page": "https://launchpad.net/wadllib",
        "download_url": "https://launchpad.net/wadllib/+download",
        "maintainer": "LAZR Developers",
        "maintainer_email": "lazr-developers@lists.launchpad.net",
        "license": "LGPL v3",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: GNU Library or Lesser General Public License (LGPL)",
          "Operating System :: OS Independent",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3"
        ],
        "requires_dist": [
          "Sphinx ; extra == \"docs\"",
          "z3c.recipe.sphinxdoc ; extra == \"docs\""
        ],
        "provides_extra": [
          "docs"
        ]
      },
      "metadata_location": "/usr/lib/python3/dist-packages/wadllib-1.3.3.egg-info"
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "wheel",
        "version": "0.34.2",
        "platform": [
          "UNKNOWN"
        ],
        "summary": "A built-package format for Python",
        "description": "wheel\n        =====\n        \n        This library is the reference implementation of the Python wheel packaging\n        standard, as defined in `PEP 427`_.\n        \n        It has two different roles:\n        \n        #. A setuptools_ extension for building wheels that provides the\n           ``bdist_wheel`` setuptools command\n        #. A command line tool for working with wheel files\n        \n        It should be noted that wheel is **not** intended to be used as a library, and\n        as such there is no stable, public API.\n        \n        .. _PEP 427: https://www.python.org/dev/peps/pep-0427/\n        .. _setuptools: https://pypi.org/project/setuptools/\n        \n        Documentation\n        -------------\n        \n        The documentation_ can be found on Read The Docs.\n        \n        .. _documentation: https://wheel.readthedocs.io/\n        \n        Code of Conduct\n        ---------------\n        \n        Everyone interacting in the wheel project's codebases, issue trackers, chat\n        rooms, and mailing lists is expected to follow the `PyPA Code of Conduct`_.\n        \n        .. _PyPA Code of Conduct: https://www.pypa.io/en/latest/code-of-conduct/\n        ",
        "keywords": [
          "wheel",
          "packaging"
        ],
        "home_page": "https://github.com/pypa/wheel",
        "author": "Daniel Holth",
        "author_email": "dholth@fastmail.fm",
        "maintainer": "Alex Grönholm",
        "maintainer_email": "alex.gronholm@nextday.fi",
        "license": "MIT",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Intended Audience :: Developers",
          "Topic :: System :: Archiving :: Packaging",
          "License :: OSI Approved :: MIT License",
          "Programming Language :: Python",
          "Programming Language :: Python :: 2",
          "Programming Language :: Python :: 2.7",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.5",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8"
        ],
        "requires_dist": [
          "pytest-cov ; extra == \"test\"",
          "pytest>=3.0.0 ; extra == \"test\""
        ],
        "requires_python": "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,>=2.7",
        "project_url": [
          "Documentation, https://wheel.readthedocs.io/",
          "Changelog, https://wheel.readthedocs.io/en/stable/news.html",
          "Issue Tracker, https://github.com/pypa/wheel/issues"
        ],
        "provides_extra": [
          "test"
        ]
      },
      "metadata_location": "/usr/lib/python3/dist-packages/wheel-0.34.2.egg-info"
    },
    {
      "metadata": {
        "metadata_version": "1.0",
        "name": "xkit",
        "version": "0.0.0",
        "platform": [
          "UNKNOWN"
        ],
        "summary": "library for the manipulation of the xorg.conf",
        "description": "UNKNOWN",
        "home_page": "https://launchpad.net/x-kit",
        "author": "Alberto Milone",
        "author_email": "albertomilone@alice.it",
        "license": "GPL v2 or later"
      },
      "metadata_location": null
    },
    {
      "metadata": {
        "metadata_version": "2.1",
        "name": "zope.interface",
        "version": "4.7.1",
        "platform": [
          "UNKNOWN"
        ],
        "summary": "Interfaces for Python",
        "description": "``zope.interface``\n        ==================\n        \n        .. image:: https://img.shields.io/pypi/v/zope.interface.svg\n            :target: https://pypi.python.org/pypi/zope.interface/\n            :alt: Latest Version\n        \n        .. image:: https://img.shields.io/pypi/pyversions/zope.interface.svg\n                :target: https://pypi.org/project/zope.interface/\n                :alt: Supported Python versions\n        \n        .. image:: https://travis-ci.org/zopefoundation/zope.interface.svg?branch=master\n                :target: https://travis-ci.org/zopefoundation/zope.interface\n        \n        .. image:: https://readthedocs.org/projects/zopeinterface/badge/?version=latest\n                :target: https://zopeinterface.readthedocs.io/en/latest/\n                :alt: Documentation Status\n        \n        This package is intended to be independently reusable in any Python\n        project. It is maintained by the `Zope Toolkit project\n        <https://zopetoolkit.readthedocs.io/>`_.\n        \n        This package provides an implementation of \"object interfaces\" for Python.\n        Interfaces are a mechanism for labeling objects as conforming to a given\n        API or contract. So, this package can be considered as implementation of\n        the `Design By Contract`_ methodology support in Python.\n        \n        .. _Design By Contract: http://en.wikipedia.org/wiki/Design_by_contract\n        \n        For detailed documentation, please see https://zopeinterface.readthedocs.io/en/latest/\n        \n        Changes\n        =======\n        \n        4.7.1 (2019-11-11)\n        ------------------\n        \n        - Use Python 3 syntax in the documentation.  See `issue 119\n          <https://github.com/zopefoundation/zope.interface/issue/119>`_.\n        \n        \n        4.7.0 (2019-11-11)\n        ------------------\n        \n        - Drop support for Python 3.4.\n        \n        - Fix ``queryTaggedValue``, ``getTaggedValue``, ``getTaggedValueTags``\n          subclass inheritance. See `PR 144\n          <https://github.com/zopefoundation/zope.interface/pull/144>`_.\n        \n        - Add support for Python 3.8.\n        \n        \n        4.6.0 (2018-10-23)\n        ------------------\n        \n        - Add support for Python 3.7\n        \n        - Fix ``verifyObject`` for class objects with staticmethods on\n          Python 3. See `issue 126\n          <https://github.com/zopefoundation/zope.interface/issues/126>`_.\n        \n        \n        4.5.0 (2018-04-19)\n        ------------------\n        \n        - Drop support for 3.3, avoid accidental dependence breakage via setup.py.\n          See `PR 110 <https://github.com/zopefoundation/zope.interface/pull/110>`_.\n        - Allow registering and unregistering instance methods as listeners.\n          See `issue 12 <https://github.com/zopefoundation/zope.interface/issues/12>`_\n          and `PR 102 <https://github.com/zopefoundation/zope.interface/pull/102>`_.\n        - Synchronize and simplify zope/__init__.py. See `issue 114\n          <https://github.com/zopefoundation/zope.interface/issues/114>`_\n        \n        \n        4.4.3 (2017-09-22)\n        ------------------\n        \n        - Avoid exceptions when the ``__annotations__`` attribute is added to\n          interface definitions with Python 3.x type hints. See `issue 98\n          <https://github.com/zopefoundation/zope.interface/issues/98>`_.\n        - Fix the possibility of a rare crash in the C extension when\n          deallocating items. See `issue 100\n          <https://github.com/zopefoundation/zope.interface/issues/100>`_.\n        \n        \n        4.4.2 (2017-06-14)\n        ------------------\n        \n        - Fix a regression storing\n          ``zope.component.persistentregistry.PersistentRegistry`` instances.\n          See `issue 85 <https://github.com/zopefoundation/zope.interface/issues/85>`_.\n        \n        - Fix a regression that could lead to the utility registration cache\n          of ``Components`` getting out of sync. See `issue 93\n          <https://github.com/zopefoundation/zope.interface/issues/93>`_.\n        \n        4.4.1 (2017-05-13)\n        ------------------\n        \n        - Simplify the caching of utility-registration data. In addition to\n          simplification, avoids spurious test failures when checking for\n          leaks in tests with persistent registries. See `pull 84\n          <https://github.com/zopefoundation/zope.interface/pull/84>`_.\n        \n        - Raise ``ValueError`` when non-text names are passed to adapter registry\n          methods:  prevents corruption of lookup caches.\n        \n        4.4.0 (2017-04-21)\n        ------------------\n        \n        - Avoid a warning from the C compiler.\n          (https://github.com/zopefoundation/zope.interface/issues/71)\n        \n        - Add support for Python 3.6.\n        \n        4.3.3 (2016-12-13)\n        ------------------\n        \n        - Correct typos and ReST formatting errors in documentation.\n        \n        - Add API documentation for the adapter registry.\n        \n        - Ensure that the ``LICENSE.txt`` file is included in built wheels.\n        \n        - Fix C optimizations broken on Py3k.  See the Python bug at:\n          http://bugs.python.org/issue15657\n          (https://github.com/zopefoundation/zope.interface/issues/60)\n        \n        \n        4.3.2 (2016-09-05)\n        ------------------\n        \n        - Fix equality testing of ``implementedBy`` objects and proxies.\n          (https://github.com/zopefoundation/zope.interface/issues/55)\n        \n        \n        4.3.1 (2016-08-31)\n        ------------------\n        \n        - Support Components subclasses that are not hashable.\n          (https://github.com/zopefoundation/zope.interface/issues/53)\n        \n        \n        4.3.0 (2016-08-31)\n        ------------------\n        \n        - Add the ability to sort the objects returned by ``implementedBy``.\n          This is compatible with the way interface classes sort so they can\n          be used together in ordered containers like BTrees.\n          (https://github.com/zopefoundation/zope.interface/issues/42)\n        \n        - Make ``setuptools`` a hard dependency of ``setup.py``.\n          (https://github.com/zopefoundation/zope.interface/issues/13)\n        \n        - Change a linear algorithm (O(n)) in ``Components.registerUtility`` and\n          ``Components.unregisterUtility`` into a dictionary lookup (O(1)) for\n          hashable components. This substantially improves the time taken to\n          manipulate utilities in large registries at the cost of some\n          additional memory usage. (https://github.com/zopefoundation/zope.interface/issues/46)\n        \n        \n        4.2.0 (2016-06-10)\n        ------------------\n        \n        - Add support for Python 3.5\n        \n        - Drop support for Python 2.6 and 3.2.\n        \n        \n        4.1.3 (2015-10-05)\n        ------------------\n        \n        - Fix installation without a C compiler on Python 3.5\n          (https://github.com/zopefoundation/zope.interface/issues/24).\n        \n        \n        4.1.2 (2014-12-27)\n        ------------------\n        \n        - Add support for PyPy3.\n        \n        - Remove unittest assertions deprecated in Python3.x.\n        \n        - Add ``zope.interface.document.asReStructuredText``, which formats the\n          generated text for an interface using ReST double-backtick markers.\n        \n        \n        4.1.1 (2014-03-19)\n        ------------------\n        \n        - Add support for Python 3.4.\n        \n        \n        4.1.0 (2014-02-05)\n        ------------------\n        \n        - Update ``boostrap.py`` to version 2.2.\n        \n        - Add ``@named(name)`` declaration, that specifies the component name, so it\n          does not have to be passed in during registration.\n        \n        \n        4.0.5 (2013-02-28)\n        ------------------\n        \n        - Fix a bug where a decorated method caused false positive failures on\n          ``verifyClass()``.\n        \n        \n        4.0.4 (2013-02-21)\n        ------------------\n        \n        - Fix a bug that was revealed by porting zope.traversing. During a loop, the\n          loop body modified a weakref dict causing a ``RuntimeError`` error.\n        \n        4.0.3 (2012-12-31)\n        ------------------\n        \n        - Fleshed out PyPI Trove classifiers.\n        \n        4.0.2 (2012-11-21)\n        ------------------\n        \n        - Add support for Python 3.3.\n        \n        - Restored ability to install the package in the absence of ``setuptools``.\n        \n        - LP #1055223:  Fix test which depended on dictionary order and failed randomly\n          in Python 3.3.\n        \n        4.0.1 (2012-05-22)\n        ------------------\n        \n        - Drop explicit ``DeprecationWarnings`` for \"class advice\" APIS (these\n          APIs are still deprecated under Python 2.x, and still raise an exception\n          under Python 3.x, but no longer cause a warning to be emitted under\n          Python 2.x).\n        \n        4.0.0 (2012-05-16)\n        ------------------\n        \n        - Automated build of Sphinx HTML docs and running doctest snippets via tox.\n        \n        - Deprecate the \"class advice\" APIs from ``zope.interface.declarations``:\n          ``implements``, ``implementsOnly``, and ``classProvides``.  In their place,\n          prefer the equivalent class decorators: ``@implementer``,\n          ``@implementer_only``, and ``@provider``.  Code which uses the deprecated\n          APIs will not work as expected under Py3k.\n        \n        - Remove use of '2to3' and associated fixers when installing under Py3k.\n          The code is now in a \"compatible subset\" which supports Python 2.6, 2.7,\n          and 3.2, including PyPy 1.8 (the version compatible with the 2.7 language\n          spec).\n        \n        - Drop explicit support for Python 2.4 / 2.5 / 3.1.\n        \n        - Add support for PyPy.\n        \n        - Add support for continuous integration using ``tox`` and ``jenkins``.\n        \n        - Add 'setup.py dev' alias (runs ``setup.py develop`` plus installs\n          ``nose`` and ``coverage``).\n        \n        - Add 'setup.py docs' alias (installs ``Sphinx`` and dependencies).\n        \n        - Replace all unittest coverage previously accomplished via doctests with\n          unittests.  The doctests have been moved into a ``docs`` section, managed\n          as a Sphinx collection.\n        \n        - LP #910987:  Ensure that the semantics of the ``lookup`` method of\n          ``zope.interface.adapter.LookupBase`` are the same in both the C and\n          Python implementations.\n        \n        - LP #900906:  Avoid exceptions due to tne new ``__qualname__`` attribute\n          added in Python 3.3 (see PEP 3155 for rationale).  Thanks to Antoine\n          Pitrou for the patch.\n        \n        3.8.0 (2011-09-22)\n        ------------------\n        \n        - New module ``zope.interface.registry``.  This is code moved from\n          ``zope.component.registry`` which implements a basic nonperistent component\n          registry as ``zope.interface.registry.Components``.  This class was moved\n          from ``zope.component`` to make porting systems (such as Pyramid) that rely\n          only on a basic component registry to Python 3 possible without needing to\n          port the entirety of the ``zope.component`` package.  Backwards\n          compatibility import shims have been left behind in ``zope.component``, so\n          this change will not break any existing code.\n        \n        - New ``tests_require`` dependency: ``zope.event`` to test events sent by\n          Components implementation.  The ``zope.interface`` package does not have a\n          hard dependency on ``zope.event``, but if ``zope.event`` is importable, it\n          will send component registration events when methods of an instance of\n          ``zope.interface.registry.Components`` are called.\n        \n        - New interfaces added to support ``zope.interface.registry.Components``\n          addition: ``ComponentLookupError``, ``Invalid``, ``IObjectEvent``,\n          ``ObjectEvent``, ``IComponentLookup``, ``IRegistration``,\n          ``IUtilityRegistration``, ``IAdapterRegistration``,\n          ``ISubscriptionAdapterRegistration``, ``IHandlerRegistration``,\n          ``IRegistrationEvent``, ``RegistrationEvent``, ``IRegistered``,\n          ``Registered``, ``IUnregistered``, ``Unregistered``,\n          ``IComponentRegistry``, and ``IComponents``.\n        \n        - No longer Python 2.4 compatible (tested under 2.5, 2.6, 2.7, and 3.2).\n        \n        3.7.0 (2011-08-13)\n        ------------------\n        \n        - Move changes from 3.6.2 - 3.6.5 to a new 3.7.x release line.\n        \n        3.6.7 (2011-08-20)\n        ------------------\n        \n        - Fix sporadic failures on x86-64 platforms in tests of rich comparisons\n          of interfaces.\n        \n        3.6.6 (2011-08-13)\n        ------------------\n        \n        - LP #570942:  Now correctly compare interfaces  from different modules but\n          with the same names.\n        \n          N.B.: This is a less intrusive / destabilizing fix than the one applied in\n          3.6.3:  we only fix the underlying cmp-alike function, rather than adding\n          the other \"rich comparison\" functions.\n        \n        - Revert to software as released with 3.6.1 for \"stable\" 3.6 release branch.\n        \n        3.6.5 (2011-08-11)\n        ------------------\n        \n        - LP #811792:  work around buggy behavior in some subclasses of\n          ``zope.interface.interface.InterfaceClass``, which invoke ``__hash__``\n          before initializing ``__module__`` and ``__name__``.  The workaround\n          returns a fixed constant hash in such cases, and issues a ``UserWarning``.\n        \n        - LP #804832:  Under PyPy, ``zope.interface`` should not build its C\n          extension.  Also, prevent attempting to build it under Jython.\n        \n        - Add a tox.ini for easier xplatform testing.\n        \n        - Fix testing deprecation warnings issued when tested under Py3K.\n        \n        3.6.4 (2011-07-04)\n        ------------------\n        \n        - LP 804951:  InterfaceClass instances were unhashable under Python 3.x.\n        \n        3.6.3 (2011-05-26)\n        ------------------\n        \n        - LP #570942:  Now correctly compare interfaces  from different modules but\n          with the same names.\n        \n        3.6.2 (2011-05-17)\n        ------------------\n        \n        - Moved detailed documentation out-of-line from PyPI page, linking instead to\n          http://docs.zope.org/zope.interface .\n        \n        - Fixes for small issues when running tests under Python 3.2 using\n          ``zope.testrunner``.\n        \n        - LP # 675064:  Specify return value type for C optimizations module init\n          under Python 3:  undeclared value caused warnings, and segfaults on some\n          64 bit architectures.\n        \n        - setup.py now raises RuntimeError if you don't have Distutils installed when\n          running under Python 3.\n        \n        3.6.1 (2010-05-03)\n        ------------------\n        \n        - A non-ASCII character in the changelog made 3.6.0 uninstallable on\n          Python 3 systems with another default encoding than UTF-8.\n        \n        - Fix compiler warnings under GCC 4.3.3.\n        \n        3.6.0 (2010-04-29)\n        ------------------\n        \n        - LP #185974:  Clear the cache used by ``Specificaton.get`` inside\n          ``Specification.changed``.  Thanks to Jacob Holm for the patch.\n        \n        - Add support for Python 3.1. Contributors:\n        \n            Lennart Regebro\n            Martin v Loewis\n            Thomas Lotze\n            Wolfgang Schnerring\n        \n          The 3.1 support is completely backwards compatible. However, the implements\n          syntax used under Python 2.X does not work under 3.X, since it depends on\n          how metaclasses are implemented and this has changed. Instead it now supports\n          a decorator syntax (also under Python 2.X)::\n        \n            class Foo:\n                implements(IFoo)\n                ...\n        \n          can now also be written::\n        \n            @implementer(IFoo):\n            class Foo:\n                ...\n        \n          There are 2to3 fixers available to do this change automatically in the\n          zope.fixers package.\n        \n        - Python 2.3 is no longer supported.\n        \n        \n        3.5.4 (2009-12-23)\n        ------------------\n        \n        - Use the standard Python doctest module instead of zope.testing.doctest, which\n          has been deprecated.\n        \n        \n        3.5.3 (2009-12-08)\n        ------------------\n        \n        - Fix an edge case: make providedBy() work when a class has '__provides__' in\n          its __slots__ (see http://thread.gmane.org/gmane.comp.web.zope.devel/22490)\n        \n        \n        3.5.2 (2009-07-01)\n        ------------------\n        \n        - BaseAdapterRegistry.unregister, unsubscribe: Remove empty portions of\n          the data structures when something is removed.  This avoids leaving\n          references to global objects (interfaces) that may be slated for\n          removal from the calling application.\n        \n        \n        3.5.1 (2009-03-18)\n        ------------------\n        \n        - verifyObject: use getattr instead of hasattr to test for object attributes\n          in order to let exceptions other than AttributeError raised by properties\n          propagate to the caller\n        \n        - Add Sphinx-based documentation building to the package buildout\n          configuration. Use the ``bin/docs`` command after buildout.\n        \n        - Improve package description a bit. Unify changelog entries formatting.\n        \n        - Change package's mailing list address to zope-dev at zope.org as\n          zope3-dev at zope.org is now retired.\n        \n        \n        3.5.0 (2008-10-26)\n        ------------------\n        \n        - Fix declaration of _zope_interface_coptimizations, it's not a top level\n          package.\n        \n        - Add a DocTestSuite for odd.py module, so their tests are run.\n        \n        - Allow to bootstrap on Jython.\n        \n        - Fix https://bugs.launchpad.net/zope3/3.3/+bug/98388: ISpecification\n          was missing a declaration for __iro__.\n        \n        - Add optional code optimizations support, which allows the building\n          of C code optimizations to fail (Jython).\n        \n        - Replace `_flatten` with a non-recursive implementation, effectively making\n          it 3x faster.\n        \n        \n        3.4.1 (2007-10-02)\n        ------------------\n        \n        - Fix a setup bug that prevented installation from source on systems\n          without setuptools.\n        \n        \n        3.4.0 (2007-07-19)\n        ------------------\n        \n        - Final release for 3.4.0.\n        \n        \n        3.4.0b3 (2007-05-22)\n        --------------------\n        \n        \n        - When checking whether an object is already registered, use identity\n          comparison, to allow adding registering with picky custom comparison methods.\n        \n        \n        3.3.0.1 (2007-01-03)\n        --------------------\n        \n        - Made a reference to OverflowWarning, which disappeared in Python\n          2.5, conditional.\n        \n        \n        3.3.0 (2007/01/03)\n        ------------------\n        \n        New Features\n        ++++++++++++\n        \n        - Refactor the adapter-lookup algorithim to make it much simpler and faster.\n        \n          Also, implement more of the adapter-lookup logic in C, making\n          debugging of application code easier, since there is less\n          infrastructre code to step through.\n        \n        - Treat objects without interface declarations as if they\n          declared that they provide ``zope.interface.Interface``.\n        \n        - Add a number of richer new adapter-registration interfaces\n          that provide greater control and introspection.\n        \n        - Add a new interface decorator to zope.interface that allows the\n          setting of tagged values on an interface at definition time (see\n          zope.interface.taggedValue).\n        \n        Bug Fixes\n        +++++++++\n        \n        - A bug in multi-adapter lookup sometimes caused incorrect adapters to\n          be returned.\n        \n        \n        3.2.0.2 (2006-04-15)\n        --------------------\n        \n        - Fix packaging bug:  'package_dir' must be a *relative* path.\n        \n        \n        3.2.0.1 (2006-04-14)\n        --------------------\n        \n        - Packaging change:  suppress inclusion of 'setup.cfg' in 'sdist' builds.\n        \n        \n        3.2.0 (2006-01-05)\n        ------------------\n        \n        - Corresponds to the verison of the zope.interface package shipped as part of\n          the Zope 3.2.0 release.\n        \n        \n        3.1.0 (2005-10-03)\n        ------------------\n        \n        - Corresponds to the verison of the zope.interface package shipped as part of\n          the Zope 3.1.0 release.\n        \n        - Made attribute resolution order consistent with component lookup order,\n          i.e. new-style class MRO semantics.\n        \n        - Deprecate 'isImplementedBy' and 'isImplementedByInstancesOf' APIs in\n          favor of 'implementedBy' and 'providedBy'.\n        \n        \n        3.0.1 (2005-07-27)\n        ------------------\n        \n        - Corresponds to the verison of the zope.interface package shipped as part of\n          the Zope X3.0.1 release.\n        \n        - Fix a bug reported by James Knight, which caused adapter registries\n          to fail occasionally to reflect declaration changes.\n        \n        \n        3.0.0 (2004-11-07)\n        ------------------\n        \n        - Corresponds to the verison of the zope.interface package shipped as part of\n          the Zope X3.0.0 release.\n        ",
        "keywords": [
          "interface",
          "components",
          "plugins"
        ],
        "home_page": "https://github.com/zopefoundation/zope.interface",
        "author": "Zope Foundation and Contributors",
        "author_email": "zope-dev@zope.org",
        "license": "ZPL 2.1",
        "classifier": [
          "Development Status :: 5 - Production/Stable",
          "Intended Audience :: Developers",
          "License :: OSI Approved :: Zope Public License",
          "Operating System :: OS Independent",
          "Programming Language :: Python",
          "Programming Language :: Python :: 2",
          "Programming Language :: Python :: 2.7",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.5",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: Implementation :: CPython",
          "Programming Language :: Python :: Implementation :: PyPy",
          "Framework :: Zope :: 3",
          "Topic :: Software Development :: Libraries :: Python Modules"
        ],
        "requires_dist": [
          "Sphinx ; extra == \"docs\"",
          "repoze.sphinx.autointerface ; extra == \"docs\"",
          "zope.event ; extra == \"test\"",
          "coverage ; extra == \"testing\"",
          "nose ; extra == \"testing\"",
          "zope.event ; extra == \"testing\""
        ],
        "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*",
        "provides_extra": [
          "docs",
          "test",
          "testing"
        ]
      },
      "metadata_location": "/usr/lib/python3/dist-packages/zope.interface-4.7.1.egg-info"
    }
  ],
  "environment": {
    "implementation_name": "cpython",
    "implementation_version": "3.8.10",
    "os_name": "posix",
    "platform_machine": "x86_64",
    "platform_release": "5.15.90.1-microsoft-standard-WSL2",
    "platform_system": "Linux",
    "platform_version": "#1 SMP Fri Jan 27 02:56:13 UTC 2023",
    "python_full_version": "3.8.10",
    "platform_python_implementation": "CPython",
    "python_version": "3.8",
    "sys_platform": "linux"
  }
}
